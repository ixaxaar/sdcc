/* Generated file, DO NOT Edit!  */
/* To Make changes to rules edit */
/* <port>/peeph.def instead.     */
"replace {\n"
"	pula\n"
"	psha\n"
"	lda	%1\n"
"} by {\n"
"	; Peephole 1a	- removed redundant pula/psha\n"
"	lda	%1\n"
"}\n"
"\n"
"replace {\n"
"	pula\n"
"	psha\n"
"	lda	%1,s\n"
"} by {\n"
"	; Peephole 1b	- removed redundant pula/psha\n"
"	lda	%1,s\n"
"}\n"
"\n"
"replace {\n"
"	pula\n"
"	psha\n"
"	clra\n"
"} by {\n"
"	; Peephole 1c	- removed redundant pula/psha\n"
"	clra\n"
"}\n"
"\n"
"\n"
"replace {\n"
"	bcs	%1\n"
"	jmp	%5\n"
"%1:\n"
"} by {\n"
"	; Peephole 2a	- eliminated jmp\n"
"	bcc	%5\n"
"%1:\n"
"} if labelInRange(%5), labelRefCountChange(%1 -1)\n"
"\n"
"replace {\n"
"	bcc	%1\n"
"	jmp	%5\n"
"%1:\n"
"} by {\n"
"	; Peephole 2b	- eliminated jmp\n"
"	bcs	%5\n"
"%1:\n"
"} if labelInRange(%5), labelRefCountChange(%1 -1)\n"
"\n"
"replace {\n"
"	beq	%1\n"
"	jmp	%5\n"
"%1:\n"
"} by {\n"
"	; Peephole 2c	- eliminated jmp\n"
"	bne	%5\n"
"%1:\n"
"} if labelInRange(%5), labelRefCountChange(%1 -1)\n"
"\n"
"replace {\n"
"	bne	%1\n"
"	jmp	%5\n"
"%1:\n"
"} by {\n"
"	; Peephole 2d	- eliminated jmp\n"
"	beq	%5\n"
"%1:\n"
"} if labelInRange(%5), labelRefCountChange(%1 -1)\n"
"\n"
"replace {\n"
"	brclr	%3,%2,%1\n"
"	jmp	%5\n"
"%1:\n"
"} by {\n"
"	; Peephole 2e	- eliminated jmp\n"
"	brset	%3,%2,%5\n"
"%1:\n"
"} if labelInRange(%5), labelRefCountChange(%1 -1)\n"
"\n"
"replace {\n"
"	brset	%3,%2,%1\n"
"	jmp	%5\n"
"%1:\n"
"} by {\n"
"	; Peephole 2f	- eliminated jmp\n"
"	brclr	%3,%2,%5\n"
"%1:\n"
"} if labelInRange(%5), labelRefCountChange(%1 -1)\n"
"\n"
"replace {\n"
"	bls	%1\n"
"	jmp	%5\n"
"%1:\n"
"} by {\n"
"	; Peephole 2g	- eliminated jmp\n"
"	bhi	%5\n"
"%1:\n"
"} if labelInRange(%5), labelRefCountChange(%1 -1)\n"
"\n"
"replace {\n"
"	bhi	%1\n"
"	jmp	%5\n"
"%1:\n"
"} by {\n"
"	; Peephole 2h	- eliminated jmp\n"
"	bls	%5\n"
"%1:\n"
"} if labelInRange(%5), labelRefCountChange(%1 -1)\n"
"\n"
"replace {\n"
"	ble	%1\n"
"	jmp	%5\n"
"%1:\n"
"} by {\n"
"	; Peephole 2i	- eliminated jmp\n"
"	bgt	%5\n"
"%1:\n"
"} if labelInRange(%5), labelRefCountChange(%1 -1)\n"
"\n"
"replace {\n"
"	bgt	%1\n"
"	jmp	%5\n"
"%1:\n"
"} by {\n"
"	; Peephole 2j	- eliminated jmp\n"
"	ble	%5\n"
"%1:\n"
"} if labelInRange(%5), labelRefCountChange(%1 -1)\n"
"\n"
"replace {\n"
"	bge	%1\n"
"	jmp	%5\n"
"%1:\n"
"} by {\n"
"	; Peephole 2k	- eliminated jmp\n"
"	blt	%5\n"
"%1:\n"
"} if labelInRange(%5), labelRefCountChange(%1 -1)\n"
"\n"
"replace {\n"
"	blt	%1\n"
"	jmp	%5\n"
"%1:\n"
"} by {\n"
"	; Peephole 2l	- eliminated jmp\n"
"	bge	%5\n"
"%1:\n"
"} if labelInRange(%5), labelRefCountChange(%1 -1)\n"
"\n"
"replace {\n"
"	bmi     %1\n"
"	jmp     %5\n"
"%1:\n"
"} by {\n"
"	; Peephole 2m   - eliminated jmp\n"
"	bpl     %5\n"
"%1:\n"
"} if labelInRange(%5), labelRefCountChange(%1 -1)\n"
"\n"
"replace {\n"
"	bpl     %1\n"
"	jmp     %5\n"
"%1:\n"
"} by {\n"
"	; Peephole 2n   - eliminated jmp\n"
"	bmi     %5\n"
"%1:\n"
"} if labelInRange(%5), labelRefCountChange(%1 -1)\n"
"\n"
"replace restart {\n"
"	jmp	%5\n"
"} by {\n"
"	; Peephole 3	- shortened jmp to bra\n"
"	bra	%5\n"
"} if labelInRange(%5)\n"
"\n"
"replace {\n"
"	lda	%1\n"
"	tsta\n"
"} by {\n"
"	; Peephole 4a	- eliminated redundant tsta\n"
"	lda	%1\n"
"}\n"
"\n"
"replace {\n"
"	lda	%1,s\n"
"	tsta\n"
"} by {\n"
"	; Peephole 4b	- eliminated redundant tsta\n"
"	lda	%1,s\n"
"}\n"
"\n"
"replace {\n"
"	ldx	%1\n"
"	tstx\n"
"} by {\n"
"	; Peephole 4c	- eliminated redundant tstx\n"
"	ldx	%1\n"
"}\n"
"\n"
"replace {\n"
"	ldx	%1,s\n"
"	tstx\n"
"} by {\n"
"	; Peephole 4d	- eliminated redundant tstx\n"
"	ldx	%1,s\n"
"}\n"
"\n"
"\n"
"replace {\n"
"	jmp	%5\n"
"} by {\n"
"	; Peephole 6a  - replaced jmp to rts with rts\n"
"	rts\n"
"} if optimizeReturn(), labelIsReturnOnly(%5), labelRefCountChange(%5 -1)\n"
"\n"
"replace {\n"
"	bra	%5\n"
"} by {\n"
"	; Peephole 6b  - replaced jmp to rts with rts\n"
"	rts\n"
"} if optimizeReturn(), labelIsReturnOnly(%5), labelRefCountChange(%5 -1)\n"
"\n"
"replace restart {\n"
"	psha\n"
"	lda	%1\n"
"	sta	1,s\n"
"} by {\n"
"	; Peephole 7  - optimized stack allocation\n"
"	lda	%1\n"
"	psha\n"
"}\n"
"\n"
"\n"
"\n"
"\n"
"replace {\n"
"        bne     %1\n"
"%1:\n"
"} by {\n"
"        ; Peephole 9a   - eliminated branch\n"
"%1:\n"
"} if labelRefCountChange(%1 -1)\n"
"\n"
"replace {\n"
"        beq     %1\n"
"%1:\n"
"} by {\n"
"        ; Peephole 9b   - eliminated branch\n"
"%1:\n"
"} if labelRefCountChange(%1 -1)\n"
"\n"
"replace restart {\n"
"        bra     %1\n"
"%1:\n"
"} by {\n"
"        ; Peephole 9c   - eliminated branch\n"
"%1:\n"
"} if labelRefCountChange(%1 -1)\n"
"\n"
"replace restart {\n"
"	bra     %1\n"
"%2:\n"
"%1:\n"
"} by {\n"
"	; Peephole 9d   - eliminated branch\n"
"%2:\n"
"%1:\n"
"} if labelRefCountChange(%1 -1)\n"
"\n"
"replace {\n"
"	cmp	#%2\n"
"	beq	%1\n"
"} by {\n"
"	; Peephole 10a   - combined cmp/beq\n"
"	cbeqa	#%2,%1\n"
"}\n"
"\n"
"replace {\n"
"	cmp	*%2\n"
"	beq	%1\n"
"} by {\n"
"	; Peephole 10b   - combined cmp/beq\n"
"	cbeq	*%2,%1\n"
"}\n"
"\n"
"replace {\n"
"	cmp	%2,s\n"
"	beq	%1\n"
"} by {\n"
"	; Peephole 10c   - combined cmp/beq\n"
"	cbeq	%2,s,%1\n"
"}\n"
"\n"
"replace {\n"
"        deca\n"
"        bne     %1\n"
"} by {\n"
"        ; Peephole 11a   - combined deca/bne\n"
"        dbnza   %1\n"
"}\n"
"\n"
"replace {\n"
"        decx\n"
"        bne     %1\n"
"} by {\n"
"        ; Peephole 11b   - combined decx/bne\n"
"        dbnzx   %1\n"
"}\n"
"\n"
"replace {\n"
"        dec     *%2\n"
"        bne     %1\n"
"} by {\n"
"        ; Peephole 10c   - combined dec/bne\n"
"        dbnz    *%2,%1\n"
"}\n"
"\n"
"replace {\n"
"        dec     %2,s\n"
"        bne     %1\n"
"} by {\n"
"        ; Peephole 10d   - combined dec/bne\n"
"        dbnz    %2,s,%1\n"
"}\n"
"\n"
"replace restart {\n"
"%1:\n"
"} by {\n"
"	; Peephole 500    removed redundant label %1\n"
"} if labelRefCount(%1 0)\n"
"\n"
"replace restart {\n"
"	jsr	%1\n"
"	rts\n"
"} by {\n"
"	; Peephole 501 did tail call optimization.\n"
"	jmp	%1\n"
"} if optimizeReturn()\n"
"\n"
