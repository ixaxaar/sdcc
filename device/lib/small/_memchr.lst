                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:27:50 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _memchr
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _memchr_PARM_3
                                     13 	.globl _memchr_PARM_2
                                     14 	.globl _memchr
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram 
                                     36 ;--------------------------------------------------------
                                     37 	.area	OSEG    (OVR,DATA)
      000000                         38 _memchr_PARM_2:
      000000                         39 	.ds 2
      000002                         40 _memchr_PARM_3:
      000002                         41 	.ds 2
      000004                         42 _memchr_p_1_22:
      000004                         43 	.ds 3
      000007                         44 _memchr_end_1_22:
      000007                         45 	.ds 3
                                     46 ;--------------------------------------------------------
                                     47 ; indirectly addressable internal ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area ISEG    (DATA)
                                     50 ;--------------------------------------------------------
                                     51 ; absolute internal ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area IABS    (ABS,DATA)
                                     54 	.area IABS    (ABS,DATA)
                                     55 ;--------------------------------------------------------
                                     56 ; bit data
                                     57 ;--------------------------------------------------------
                                     58 	.area BSEG    (BIT)
                                     59 ;--------------------------------------------------------
                                     60 ; paged external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area PSEG    (PAG,XDATA)
                                     63 ;--------------------------------------------------------
                                     64 ; external ram data
                                     65 ;--------------------------------------------------------
                                     66 	.area XSEG    (XDATA)
                                     67 ;--------------------------------------------------------
                                     68 ; absolute external ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area XABS    (ABS,XDATA)
                                     71 ;--------------------------------------------------------
                                     72 ; external initialized ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area XISEG   (XDATA)
                                     75 	.area HOME    (CODE)
                                     76 	.area GSINIT0 (CODE)
                                     77 	.area GSINIT1 (CODE)
                                     78 	.area GSINIT2 (CODE)
                                     79 	.area GSINIT3 (CODE)
                                     80 	.area GSINIT4 (CODE)
                                     81 	.area GSINIT5 (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 	.area GSFINAL (CODE)
                                     84 	.area CSEG    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; global & static initialisations
                                     87 ;--------------------------------------------------------
                                     88 	.area HOME    (CODE)
                                     89 	.area GSINIT  (CODE)
                                     90 	.area GSFINAL (CODE)
                                     91 	.area GSINIT  (CODE)
                                     92 ;--------------------------------------------------------
                                     93 ; Home
                                     94 ;--------------------------------------------------------
                                     95 	.area HOME    (CODE)
                                     96 	.area HOME    (CODE)
                                     97 ;--------------------------------------------------------
                                     98 ; code
                                     99 ;--------------------------------------------------------
                                    100 	.area CSEG    (CODE)
                                    101 ;------------------------------------------------------------
                                    102 ;Allocation info for local variables in function 'memchr'
                                    103 ;------------------------------------------------------------
                                    104 ;c                         Allocated with name '_memchr_PARM_2'
                                    105 ;n                         Allocated with name '_memchr_PARM_3'
                                    106 ;s                         Allocated to registers r5 r6 r7 
                                    107 ;p                         Allocated with name '_memchr_p_1_22'
                                    108 ;end                       Allocated with name '_memchr_end_1_22'
                                    109 ;------------------------------------------------------------
                                    110 ;	_memchr.c:31: void *memchr(const void *s, int c, size_t n)
                                    111 ;	-----------------------------------------
                                    112 ;	 function memchr
                                    113 ;	-----------------------------------------
      000000                        114 _memchr:
                           000007   115 	ar7 = 0x07
                           000006   116 	ar6 = 0x06
                           000005   117 	ar5 = 0x05
                           000004   118 	ar4 = 0x04
                           000003   119 	ar3 = 0x03
                           000002   120 	ar2 = 0x02
                           000001   121 	ar1 = 0x01
                           000000   122 	ar0 = 0x00
      000000 AD 82            [24]  123 	mov	r5,dpl
      000002 AE 83            [24]  124 	mov	r6,dph
      000004 AF F0            [24]  125 	mov	r7,b
                                    126 ;	_memchr.c:33: unsigned char *p = (unsigned char *)s;
      000006 8D*04            [24]  127 	mov	_memchr_p_1_22,r5
      000008 8E*05            [24]  128 	mov	(_memchr_p_1_22 + 1),r6
      00000A 8F*06            [24]  129 	mov	(_memchr_p_1_22 + 2),r7
                                    130 ;	_memchr.c:34: unsigned char *end = p + n;
      00000C E5*02            [12]  131 	mov	a,_memchr_PARM_3
      00000E 25*04            [12]  132 	add	a,_memchr_p_1_22
      000010 F5*07            [12]  133 	mov	_memchr_end_1_22,a
      000012 E5*03            [12]  134 	mov	a,(_memchr_PARM_3 + 1)
      000014 35*05            [12]  135 	addc	a,(_memchr_p_1_22 + 1)
      000016 F5*08            [12]  136 	mov	(_memchr_end_1_22 + 1),a
      000018 85*06*09         [24]  137 	mov	(_memchr_end_1_22 + 2),(_memchr_p_1_22 + 2)
                                    138 ;	_memchr.c:38: return(0);
      00001B A8*04            [24]  139 	mov	r0,_memchr_p_1_22
      00001D A9*05            [24]  140 	mov	r1,(_memchr_p_1_22 + 1)
      00001F AC*06            [24]  141 	mov	r4,(_memchr_p_1_22 + 2)
      000021                        142 00105$:
                                    143 ;	_memchr.c:35: for(; p != end; p++)
      000021 C0*07            [24]  144 	push	_memchr_end_1_22
      000023 C0*08            [24]  145 	push	(_memchr_end_1_22 + 1)
      000025 C0*09            [24]  146 	push	(_memchr_end_1_22 + 2)
      000027 88 82            [24]  147 	mov	dpl,r0
      000029 89 83            [24]  148 	mov	dph,r1
      00002B 8C F0            [24]  149 	mov	b,r4
      00002D 12r00r00         [24]  150 	lcall	___gptr_cmp
      000030 15 81            [12]  151 	dec	sp
      000032 15 81            [12]  152 	dec	sp
      000034 15 81            [12]  153 	dec	sp
      000036 60 2D            [24]  154 	jz	00103$
                                    155 ;	_memchr.c:36: if(*p == c)
      000038 88 82            [24]  156 	mov	dpl,r0
      00003A 89 83            [24]  157 	mov	dph,r1
      00003C 8C F0            [24]  158 	mov	b,r4
      00003E 12r00r00         [24]  159 	lcall	__gptrget
      000041 FB               [12]  160 	mov	r3,a
      000042 7A 00            [12]  161 	mov	r2,#0x00
      000044 B5*00 11         [24]  162 	cjne	a,_memchr_PARM_2,00106$
      000047 EA               [12]  163 	mov	a,r2
      000048 B5*01 0D         [24]  164 	cjne	a,(_memchr_PARM_2 + 1),00106$
                                    165 ;	_memchr.c:37: return((void *)p);
      00004B AA*04            [24]  166 	mov	r2,_memchr_p_1_22
      00004D AB*05            [24]  167 	mov	r3,(_memchr_p_1_22 + 1)
      00004F AF*06            [24]  168 	mov	r7,(_memchr_p_1_22 + 2)
      000051 8A 82            [24]  169 	mov	dpl,r2
      000053 8B 83            [24]  170 	mov	dph,r3
      000055 8F F0            [24]  171 	mov	b,r7
      000057 22               [24]  172 	ret
      000058                        173 00106$:
                                    174 ;	_memchr.c:35: for(; p != end; p++)
      000058 08               [12]  175 	inc	r0
      000059 B8 00 01         [24]  176 	cjne	r0,#0x00,00121$
      00005C 09               [12]  177 	inc	r1
      00005D                        178 00121$:
      00005D 88*04            [24]  179 	mov	_memchr_p_1_22,r0
      00005F 89*05            [24]  180 	mov	(_memchr_p_1_22 + 1),r1
      000061 8C*06            [24]  181 	mov	(_memchr_p_1_22 + 2),r4
      000063 80 BC            [24]  182 	sjmp	00105$
      000065                        183 00103$:
                                    184 ;	_memchr.c:38: return(0);
      000065 90 00 00         [24]  185 	mov	dptr,#0x0000
      000068 75 F0 00         [24]  186 	mov	b,#0x00
      00006B 22               [24]  187 	ret
                                    188 	.area CSEG    (CODE)
                                    189 	.area CONST   (CODE)
                                    190 	.area XINIT   (CODE)
                                    191 	.area CABS    (ABS,CODE)
