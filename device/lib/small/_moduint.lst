                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:27:50 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _moduint
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in internal ram 
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; indirectly addressable internal ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area ISEG    (DATA)
                                     38 ;--------------------------------------------------------
                                     39 ; absolute internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area IABS    (ABS,DATA)
                                     42 	.area IABS    (ABS,DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; bit data
                                     45 ;--------------------------------------------------------
                                     46 	.area BSEG    (BIT)
                                     47 ;--------------------------------------------------------
                                     48 ; paged external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area PSEG    (PAG,XDATA)
                                     51 ;--------------------------------------------------------
                                     52 ; external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area XSEG    (XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XABS    (ABS,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; external initialized ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XISEG   (XDATA)
                                     63 	.area HOME    (CODE)
                                     64 	.area GSINIT0 (CODE)
                                     65 	.area GSINIT1 (CODE)
                                     66 	.area GSINIT2 (CODE)
                                     67 	.area GSINIT3 (CODE)
                                     68 	.area GSINIT4 (CODE)
                                     69 	.area GSINIT5 (CODE)
                                     70 	.area GSINIT  (CODE)
                                     71 	.area GSFINAL (CODE)
                                     72 	.area CSEG    (CODE)
                                     73 ;--------------------------------------------------------
                                     74 ; global & static initialisations
                                     75 ;--------------------------------------------------------
                                     76 	.area HOME    (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; Home
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area HOME    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; code
                                     87 ;--------------------------------------------------------
                                     88 	.area CSEG    (CODE)
                                     89 ;------------------------------------------------------------
                                     90 ;Allocation info for local variables in function '_moduint_dummy'
                                     91 ;------------------------------------------------------------
                                     92 ;	_moduint.c:50: _moduint_dummy (void) __naked
                                     93 ;	-----------------------------------------
                                     94 ;	 function _moduint_dummy
                                     95 ;	-----------------------------------------
      000000                         96 __moduint_dummy:
                                     97 ;	naked function: no prologue.
                                     98 ;	_moduint.c:165: __endasm;
                                     99 	.globl __moduint
      000000                        100 	__moduint:
                                    101 	.area OSEG (OVR,DATA)
                                    102 	.globl __moduint_PARM_2
                                    103 	.globl __modsint_PARM_2
      000000                        104 	__moduint_PARM_2:
      000000                        105 	__modsint_PARM_2:
      000000                        106 	.ds 2
                                    107 	.area CSEG (CODE)
      000000 E5*00            [12]  108 	mov a,(__moduint_PARM_2) ; avoid endless loop
      000002 45*01            [12]  109 	orl a,(__moduint_PARM_2 + 1)
      000004 60 46            [24]  110 	jz div_by_0
      000006 7A 01            [12]  111 	mov r2,#1
      000008                        112 	loop1:
      000008 E5*00            [12]  113 	mov a,(__moduint_PARM_2) ; b <<= 1
      00000A 25 E0            [12]  114 	add a,acc
      00000C F5*00            [12]  115 	mov (__moduint_PARM_2),a
      00000E E5*01            [12]  116 	mov a,(__moduint_PARM_2 + 1)
      000010 33               [12]  117 	rlc a
      000011 40 12            [24]  118 	jc msbset
      000013 F5*01            [12]  119 	mov (__moduint_PARM_2 + 1),a
      000015 E5 82            [12]  120 	mov a,dpl ; a - b
      000017 95*00            [12]  121 	subb a,(__moduint_PARM_2) ; here carry is always clear
      000019 E5 83            [12]  122 	mov a,dph
      00001B 95*01            [12]  123 	subb a,(__moduint_PARM_2 + 1)
      00001D 40 03            [24]  124 	jc start
      00001F 0A               [12]  125 	inc r2
      000020 80 E6            [24]  126 	sjmp loop1
      000022                        127 	start:
      000022 C3               [12]  128 	clr c
      000023 E5*01            [12]  129 	mov a,(__moduint_PARM_2 + 1) ; b >>= 1;
      000025                        130 	msbset:
      000025 13               [12]  131 	rrc a
      000026 F5*01            [12]  132 	mov (__moduint_PARM_2 + 1),a
      000028 E5*00            [12]  133 	mov a,(__moduint_PARM_2)
      00002A 13               [12]  134 	rrc a
      00002B F5*00            [12]  135 	mov (__moduint_PARM_2),a
      00002D                        136 	loop2:
      00002D C3               [12]  137 	clr c
      00002E E5 82            [12]  138 	mov a,dpl ; a - b
      000030 95*00            [12]  139 	subb a,(__moduint_PARM_2)
      000032 F5 F0            [12]  140 	mov b,a
      000034 E5 83            [12]  141 	mov a,dph
      000036 95*01            [12]  142 	subb a,(__moduint_PARM_2 + 1)
      000038 40 05            [24]  143 	jc smaller ; a >= b?
      00003A F5 83            [12]  144 	mov dph,a ; -> yes; a = a - b;
      00003C 85 F0 82         [24]  145 	mov dpl,b
      00003F                        146 	smaller:
                                    147 ; -> no
      00003F C3               [12]  148 	clr c
      000040 E5*01            [12]  149 	mov a,(__moduint_PARM_2 + 1) ; b >>= 1;
      000042 13               [12]  150 	rrc a
      000043 F5*01            [12]  151 	mov (__moduint_PARM_2 + 1),a
      000045 E5*00            [12]  152 	mov a,(__moduint_PARM_2)
      000047 13               [12]  153 	rrc a
      000048 F5*00            [12]  154 	mov (__moduint_PARM_2),a
      00004A DA E1            [24]  155 	djnz r2,loop2
      00004C                        156 	div_by_0:
      00004C 22               [24]  157 	ret
                                    158 ;	naked function: no epilogue.
                                    159 	.area CSEG    (CODE)
                                    160 	.area CONST   (CODE)
                                    161 	.area XINIT   (CODE)
                                    162 	.area CABS    (ABS,CODE)
