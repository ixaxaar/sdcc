                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:27:51 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module assert
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl __assert
                                     13 	.globl _printf
                                     14 	.globl __assert_PARM_3
                                     15 	.globl __assert_PARM_2
                                     16 ;--------------------------------------------------------
                                     17 ; special function registers
                                     18 ;--------------------------------------------------------
                                     19 	.area RSEG    (ABS,DATA)
      000000                         20 	.org 0x0000
                                     21 ;--------------------------------------------------------
                                     22 ; special function bits
                                     23 ;--------------------------------------------------------
                                     24 	.area RSEG    (ABS,DATA)
      000000                         25 	.org 0x0000
                                     26 ;--------------------------------------------------------
                                     27 ; overlayable register banks
                                     28 ;--------------------------------------------------------
                                     29 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         30 	.ds 8
                                     31 ;--------------------------------------------------------
                                     32 ; internal ram data
                                     33 ;--------------------------------------------------------
                                     34 	.area DSEG    (DATA)
      000000                         35 __assert_PARM_2:
      000000                         36 	.ds 3
      000003                         37 __assert_PARM_3:
      000003                         38 	.ds 2
                                     39 ;--------------------------------------------------------
                                     40 ; overlayable items in internal ram 
                                     41 ;--------------------------------------------------------
                                     42 ;--------------------------------------------------------
                                     43 ; indirectly addressable internal ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area ISEG    (DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; absolute internal ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area IABS    (ABS,DATA)
                                     50 	.area IABS    (ABS,DATA)
                                     51 ;--------------------------------------------------------
                                     52 ; bit data
                                     53 ;--------------------------------------------------------
                                     54 	.area BSEG    (BIT)
                                     55 ;--------------------------------------------------------
                                     56 ; paged external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area PSEG    (PAG,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XSEG    (XDATA)
                                     63 ;--------------------------------------------------------
                                     64 ; absolute external ram data
                                     65 ;--------------------------------------------------------
                                     66 	.area XABS    (ABS,XDATA)
                                     67 ;--------------------------------------------------------
                                     68 ; external initialized ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area XISEG   (XDATA)
                                     71 	.area HOME    (CODE)
                                     72 	.area GSINIT0 (CODE)
                                     73 	.area GSINIT1 (CODE)
                                     74 	.area GSINIT2 (CODE)
                                     75 	.area GSINIT3 (CODE)
                                     76 	.area GSINIT4 (CODE)
                                     77 	.area GSINIT5 (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area CSEG    (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; global & static initialisations
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area GSINIT  (CODE)
                                     86 	.area GSFINAL (CODE)
                                     87 	.area GSINIT  (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; Home
                                     90 ;--------------------------------------------------------
                                     91 	.area HOME    (CODE)
                                     92 	.area HOME    (CODE)
                                     93 ;--------------------------------------------------------
                                     94 ; code
                                     95 ;--------------------------------------------------------
                                     96 	.area CSEG    (CODE)
                                     97 ;------------------------------------------------------------
                                     98 ;Allocation info for local variables in function '_assert'
                                     99 ;------------------------------------------------------------
                                    100 ;filename                  Allocated with name '__assert_PARM_2'
                                    101 ;linenumber                Allocated with name '__assert_PARM_3'
                                    102 ;expr                      Allocated to registers r5 r6 r7 
                                    103 ;------------------------------------------------------------
                                    104 ;	assert.c:32: void _assert(char *expr, const char *filename, unsigned int linenumber)
                                    105 ;	-----------------------------------------
                                    106 ;	 function _assert
                                    107 ;	-----------------------------------------
      000000                        108 __assert:
                           000007   109 	ar7 = 0x07
                           000006   110 	ar6 = 0x06
                           000005   111 	ar5 = 0x05
                           000004   112 	ar4 = 0x04
                           000003   113 	ar3 = 0x03
                           000002   114 	ar2 = 0x02
                           000001   115 	ar1 = 0x01
                           000000   116 	ar0 = 0x00
      000000 AD 82            [24]  117 	mov	r5,dpl
      000002 AE 83            [24]  118 	mov	r6,dph
      000004 AF F0            [24]  119 	mov	r7,b
                                    120 ;	assert.c:34: printf("Assert(%s) failed at line %u in file %s.\n",
      000006 C0*00            [24]  121 	push	__assert_PARM_2
      000008 C0*01            [24]  122 	push	(__assert_PARM_2 + 1)
      00000A C0*02            [24]  123 	push	(__assert_PARM_2 + 2)
      00000C C0*03            [24]  124 	push	__assert_PARM_3
      00000E C0*04            [24]  125 	push	(__assert_PARM_3 + 1)
      000010 C0 05            [24]  126 	push	ar5
      000012 C0 06            [24]  127 	push	ar6
      000014 C0 07            [24]  128 	push	ar7
      000016 74r00            [12]  129 	mov	a,#__str_0
      000018 C0 E0            [24]  130 	push	acc
      00001A 74s00            [12]  131 	mov	a,#(__str_0 >> 8)
      00001C C0 E0            [24]  132 	push	acc
      00001E 74 80            [12]  133 	mov	a,#0x80
      000020 C0 E0            [24]  134 	push	acc
      000022 12r00r00         [24]  135 	lcall	_printf
      000025 E5 81            [12]  136 	mov	a,sp
      000027 24 F5            [12]  137 	add	a,#0xf5
      000029 F5 81            [12]  138 	mov	sp,a
                                    139 ;	assert.c:36: while(1);
      00002B                        140 00102$:
      00002B 80 FE            [24]  141 	sjmp	00102$
                                    142 	.area CSEG    (CODE)
                                    143 	.area CONST   (CODE)
      000000                        144 __str_0:
      000000 41 73 73 65 72 74 28   145 	.ascii "Assert(%s) failed at line %u in file %s."
             25 73 29 20 66 61 69
             6C 65 64 20 61 74 20
             6C 69 6E 65 20 25 75
             20 69 6E 20 66 69 6C
             65 20 25 73 2E
      000028 0A                     146 	.db 0x0A
      000029 00                     147 	.db 0x00
                                    148 	.area XINIT   (CODE)
                                    149 	.area CABS    (ABS,CODE)
