                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:27:50 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _strncmp
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _strncmp_PARM_3
                                     13 	.globl _strncmp_PARM_2
                                     14 	.globl _strncmp
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram 
                                     36 ;--------------------------------------------------------
                                     37 	.area	OSEG    (OVR,DATA)
      000000                         38 _strncmp_PARM_2:
      000000                         39 	.ds 3
      000003                         40 _strncmp_PARM_3:
      000003                         41 	.ds 2
      000005                         42 _strncmp_sloc0_1_0:
      000005                         43 	.ds 1
                                     44 ;--------------------------------------------------------
                                     45 ; indirectly addressable internal ram data
                                     46 ;--------------------------------------------------------
                                     47 	.area ISEG    (DATA)
                                     48 ;--------------------------------------------------------
                                     49 ; absolute internal ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area IABS    (ABS,DATA)
                                     52 	.area IABS    (ABS,DATA)
                                     53 ;--------------------------------------------------------
                                     54 ; bit data
                                     55 ;--------------------------------------------------------
                                     56 	.area BSEG    (BIT)
                                     57 ;--------------------------------------------------------
                                     58 ; paged external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area PSEG    (PAG,XDATA)
                                     61 ;--------------------------------------------------------
                                     62 ; external ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XSEG    (XDATA)
                                     65 ;--------------------------------------------------------
                                     66 ; absolute external ram data
                                     67 ;--------------------------------------------------------
                                     68 	.area XABS    (ABS,XDATA)
                                     69 ;--------------------------------------------------------
                                     70 ; external initialized ram data
                                     71 ;--------------------------------------------------------
                                     72 	.area XISEG   (XDATA)
                                     73 	.area HOME    (CODE)
                                     74 	.area GSINIT0 (CODE)
                                     75 	.area GSINIT1 (CODE)
                                     76 	.area GSINIT2 (CODE)
                                     77 	.area GSINIT3 (CODE)
                                     78 	.area GSINIT4 (CODE)
                                     79 	.area GSINIT5 (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 	.area GSFINAL (CODE)
                                     82 	.area CSEG    (CODE)
                                     83 ;--------------------------------------------------------
                                     84 ; global & static initialisations
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area GSINIT  (CODE)
                                     88 	.area GSFINAL (CODE)
                                     89 	.area GSINIT  (CODE)
                                     90 ;--------------------------------------------------------
                                     91 ; Home
                                     92 ;--------------------------------------------------------
                                     93 	.area HOME    (CODE)
                                     94 	.area HOME    (CODE)
                                     95 ;--------------------------------------------------------
                                     96 ; code
                                     97 ;--------------------------------------------------------
                                     98 	.area CSEG    (CODE)
                                     99 ;------------------------------------------------------------
                                    100 ;Allocation info for local variables in function 'strncmp'
                                    101 ;------------------------------------------------------------
                                    102 ;last                      Allocated with name '_strncmp_PARM_2'
                                    103 ;count                     Allocated with name '_strncmp_PARM_3'
                                    104 ;first                     Allocated to registers r5 r6 r7 
                                    105 ;sloc0                     Allocated with name '_strncmp_sloc0_1_0'
                                    106 ;------------------------------------------------------------
                                    107 ;	_strncmp.c:31: int strncmp (
                                    108 ;	-----------------------------------------
                                    109 ;	 function strncmp
                                    110 ;	-----------------------------------------
      000000                        111 _strncmp:
                           000007   112 	ar7 = 0x07
                           000006   113 	ar6 = 0x06
                           000005   114 	ar5 = 0x05
                           000004   115 	ar4 = 0x04
                           000003   116 	ar3 = 0x03
                           000002   117 	ar2 = 0x02
                           000001   118 	ar1 = 0x01
                           000000   119 	ar0 = 0x00
      000000 AD 82            [24]  120 	mov	r5,dpl
      000002 AE 83            [24]  121 	mov	r6,dph
      000004 AF F0            [24]  122 	mov	r7,b
                                    123 ;	_strncmp.c:37: if (!count)
      000006 E5*03            [12]  124 	mov	a,_strncmp_PARM_3
      000008 45*04            [12]  125 	orl	a,(_strncmp_PARM_3 + 1)
      00000A 70 04            [24]  126 	jnz	00114$
                                    127 ;	_strncmp.c:38: return(0);
      00000C 90 00 00         [24]  128 	mov	dptr,#0x0000
                                    129 ;	_strncmp.c:40: while (--count && *first && *first == *last) {
      00000F 22               [24]  130 	ret
      000010                        131 00114$:
      000010 AA*00            [24]  132 	mov	r2,_strncmp_PARM_2
      000012 AB*01            [24]  133 	mov	r3,(_strncmp_PARM_2 + 1)
      000014 AC*02            [24]  134 	mov	r4,(_strncmp_PARM_2 + 2)
      000016 A8*03            [24]  135 	mov	r0,_strncmp_PARM_3
      000018 A9*04            [24]  136 	mov	r1,(_strncmp_PARM_3 + 1)
      00001A                        137 00105$:
      00001A 18               [12]  138 	dec	r0
      00001B B8 FF 01         [24]  139 	cjne	r0,#0xFF,00127$
      00001E 19               [12]  140 	dec	r1
      00001F                        141 00127$:
      00001F E8               [12]  142 	mov	a,r0
      000020 49               [12]  143 	orl	a,r1
      000021 60 36            [24]  144 	jz	00107$
      000023 8D 82            [24]  145 	mov	dpl,r5
      000025 8E 83            [24]  146 	mov	dph,r6
      000027 8F F0            [24]  147 	mov	b,r7
      000029 12r00r00         [24]  148 	lcall	__gptrget
      00002C F5*05            [12]  149 	mov	_strncmp_sloc0_1_0,a
      00002E 60 29            [24]  150 	jz	00107$
      000030 C0 00            [24]  151 	push	ar0
      000032 C0 01            [24]  152 	push	ar1
      000034 8A 82            [24]  153 	mov	dpl,r2
      000036 8B 83            [24]  154 	mov	dph,r3
      000038 8C F0            [24]  155 	mov	b,r4
      00003A 12r00r00         [24]  156 	lcall	__gptrget
      00003D F9               [12]  157 	mov	r1,a
      00003E B5*05 02         [24]  158 	cjne	a,_strncmp_sloc0_1_0,00130$
      000041 80 06            [24]  159 	sjmp	00131$
      000043                        160 00130$:
      000043 D0 01            [24]  161 	pop	ar1
      000045 D0 00            [24]  162 	pop	ar0
      000047 80 10            [24]  163 	sjmp	00107$
      000049                        164 00131$:
      000049 D0 01            [24]  165 	pop	ar1
      00004B D0 00            [24]  166 	pop	ar0
                                    167 ;	_strncmp.c:41: first++;
      00004D 0D               [12]  168 	inc	r5
      00004E BD 00 01         [24]  169 	cjne	r5,#0x00,00132$
      000051 0E               [12]  170 	inc	r6
      000052                        171 00132$:
                                    172 ;	_strncmp.c:42: last++;
      000052 0A               [12]  173 	inc	r2
      000053 BA 00 C4         [24]  174 	cjne	r2,#0x00,00105$
      000056 0B               [12]  175 	inc	r3
      000057 80 C1            [24]  176 	sjmp	00105$
      000059                        177 00107$:
                                    178 ;	_strncmp.c:45: return( *first - *last );
      000059 8D 82            [24]  179 	mov	dpl,r5
      00005B 8E 83            [24]  180 	mov	dph,r6
      00005D 8F F0            [24]  181 	mov	b,r7
      00005F 12r00r00         [24]  182 	lcall	__gptrget
      000062 FD               [12]  183 	mov	r5,a
      000063 33               [12]  184 	rlc	a
      000064 95 E0            [12]  185 	subb	a,acc
      000066 FF               [12]  186 	mov	r7,a
      000067 8A 82            [24]  187 	mov	dpl,r2
      000069 8B 83            [24]  188 	mov	dph,r3
      00006B 8C F0            [24]  189 	mov	b,r4
      00006D 12r00r00         [24]  190 	lcall	__gptrget
      000070 FA               [12]  191 	mov	r2,a
      000071 33               [12]  192 	rlc	a
      000072 95 E0            [12]  193 	subb	a,acc
      000074 FE               [12]  194 	mov	r6,a
      000075 ED               [12]  195 	mov	a,r5
      000076 C3               [12]  196 	clr	c
      000077 9A               [12]  197 	subb	a,r2
      000078 F5 82            [12]  198 	mov	dpl,a
      00007A EF               [12]  199 	mov	a,r7
      00007B 9E               [12]  200 	subb	a,r6
      00007C F5 83            [12]  201 	mov	dph,a
      00007E 22               [24]  202 	ret
                                    203 	.area CSEG    (CODE)
                                    204 	.area CONST   (CODE)
                                    205 	.area XINIT   (CODE)
                                    206 	.area CABS    (ABS,CODE)
