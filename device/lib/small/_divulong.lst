                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:27:50 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _divulong
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in internal ram 
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; indirectly addressable internal ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area ISEG    (DATA)
                                     38 ;--------------------------------------------------------
                                     39 ; absolute internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area IABS    (ABS,DATA)
                                     42 	.area IABS    (ABS,DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; bit data
                                     45 ;--------------------------------------------------------
                                     46 	.area BSEG    (BIT)
                                     47 ;--------------------------------------------------------
                                     48 ; paged external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area PSEG    (PAG,XDATA)
                                     51 ;--------------------------------------------------------
                                     52 ; external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area XSEG    (XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XABS    (ABS,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; external initialized ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XISEG   (XDATA)
                                     63 	.area HOME    (CODE)
                                     64 	.area GSINIT0 (CODE)
                                     65 	.area GSINIT1 (CODE)
                                     66 	.area GSINIT2 (CODE)
                                     67 	.area GSINIT3 (CODE)
                                     68 	.area GSINIT4 (CODE)
                                     69 	.area GSINIT5 (CODE)
                                     70 	.area GSINIT  (CODE)
                                     71 	.area GSFINAL (CODE)
                                     72 	.area CSEG    (CODE)
                                     73 ;--------------------------------------------------------
                                     74 ; global & static initialisations
                                     75 ;--------------------------------------------------------
                                     76 	.area HOME    (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; Home
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area HOME    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; code
                                     87 ;--------------------------------------------------------
                                     88 	.area CSEG    (CODE)
                                     89 ;------------------------------------------------------------
                                     90 ;Allocation info for local variables in function '_divlong_dummy'
                                     91 ;------------------------------------------------------------
                                     92 ;	_divulong.c:51: _divlong_dummy (void) __naked
                                     93 ;	-----------------------------------------
                                     94 ;	 function _divlong_dummy
                                     95 ;	-----------------------------------------
      000000                         96 __divlong_dummy:
                                     97 ;	naked function: no prologue.
                                     98 ;	_divulong.c:186: __endasm;
                                     99 	.globl __divulong
      000000                        100 	__divulong:
                                    101 	.area OSEG (OVR,DATA)
                                    102 	.globl __divulong_PARM_2
                                    103 	.globl __divslong_PARM_2
      000000                        104 	__divulong_PARM_2:
      000000                        105 	__divslong_PARM_2:
      000000                        106 	.ds 4
                                    107 	.area CSEG (CODE)
                                    108 ; parameter x comes in a, b, dph, dpl
      000000 FB               [12]  109 	mov r3,a ; save parameter r3
      000001 7A 20            [12]  110 	mov r2,#32
      000003 E4               [12]  111 	clr a
      000004 FC               [12]  112 	mov r4,a
      000005 FD               [12]  113 	mov r5,a
      000006 FE               [12]  114 	mov r6,a
      000007 FF               [12]  115 	mov r7,a
                                    116 ; optimization loop in lp0 until the first bit is shifted into rest
      000008                        117 	lp0:
      000008 E5 82            [12]  118 	mov a,dpl ; x <<= 1
      00000A 25 82            [12]  119 	add a,dpl
      00000C F5 82            [12]  120 	mov dpl,a
      00000E E5 83            [12]  121 	mov a,dph
      000010 33               [12]  122 	rlc a
      000011 F5 83            [12]  123 	mov dph,a
      000013 E5 F0            [12]  124 	mov a,b
      000015 33               [12]  125 	rlc a
      000016 F5 F0            [12]  126 	mov b,a
      000018 EB               [12]  127 	mov a,r3
      000019 33               [12]  128 	rlc a
      00001A FB               [12]  129 	mov r3,a
      00001B 40 17            [24]  130 	jc in_lp
      00001D DA E9            [24]  131 	djnz r2,lp0
      00001F 80 42            [24]  132 	sjmp exit
      000021                        133 	loop:
      000021 E5 82            [12]  134 	mov a,dpl ; x <<= 1
      000023 25 82            [12]  135 	add a,dpl
      000025 F5 82            [12]  136 	mov dpl,a
      000027 E5 83            [12]  137 	mov a,dph
      000029 33               [12]  138 	rlc a
      00002A F5 83            [12]  139 	mov dph,a
      00002C E5 F0            [12]  140 	mov a,b
      00002E 33               [12]  141 	rlc a
      00002F F5 F0            [12]  142 	mov b,a
      000031 EB               [12]  143 	mov a,r3
      000032 33               [12]  144 	rlc a
      000033 FB               [12]  145 	mov r3,a
      000034                        146 	in_lp:
      000034 EC               [12]  147 	mov a,r4 ; reste <<= 1
      000035 33               [12]  148 	rlc a ; feed in carry
      000036 FC               [12]  149 	mov r4,a
      000037 ED               [12]  150 	mov a,r5
      000038 33               [12]  151 	rlc a
      000039 FD               [12]  152 	mov r5,a
      00003A EE               [12]  153 	mov a,r6
      00003B 33               [12]  154 	rlc a
      00003C FE               [12]  155 	mov r6,a
      00003D EF               [12]  156 	mov a,r7
      00003E 33               [12]  157 	rlc a
      00003F FF               [12]  158 	mov r7,a
      000040 EC               [12]  159 	mov a,r4 ; reste - y
      000041 95*00            [12]  160 	subb a,(__divulong_PARM_2) ; carry is always clear here, because
                                    161 ; reste <<= 1 never overflows
      000043 ED               [12]  162 	mov a,r5
      000044 95*01            [12]  163 	subb a,(__divulong_PARM_2 + 1)
      000046 EE               [12]  164 	mov a,r6
      000047 95*02            [12]  165 	subb a,(__divulong_PARM_2 + 2)
      000049 EF               [12]  166 	mov a,r7
      00004A 95*03            [12]  167 	subb a,(__divulong_PARM_2 + 3)
      00004C 40 13            [24]  168 	jc minus ; reste >= y?
                                    169 ; -> yes; reste -= y;
      00004E EC               [12]  170 	mov a,r4
      00004F 95*00            [12]  171 	subb a,(__divulong_PARM_2) ; carry is always clear here (jc)
      000051 FC               [12]  172 	mov r4,a
      000052 ED               [12]  173 	mov a,r5
      000053 95*01            [12]  174 	subb a,(__divulong_PARM_2 + 1)
      000055 FD               [12]  175 	mov r5,a
      000056 EE               [12]  176 	mov a,r6
      000057 95*02            [12]  177 	subb a,(__divulong_PARM_2 + 2)
      000059 FE               [12]  178 	mov r6,a
      00005A EF               [12]  179 	mov a,r7
      00005B 95*03            [12]  180 	subb a,(__divulong_PARM_2 + 3)
      00005D FF               [12]  181 	mov r7,a
      00005E 43 82 01         [24]  182 	orl dpl,#1
      000061                        183 	minus:
      000061 DA BE            [24]  184 	djnz r2,loop ; -> no
      000063                        185 	exit:
      000063 EB               [12]  186 	mov a,r3 ; prepare the return value
      000064 22               [24]  187 	ret
                                    188 ;	naked function: no epilogue.
                                    189 	.area CSEG    (CODE)
                                    190 	.area CONST   (CODE)
                                    191 	.area XINIT   (CODE)
                                    192 	.area CABS    (ABS,CODE)
