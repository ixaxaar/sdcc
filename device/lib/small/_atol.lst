                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:27:50 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _atol
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _atol
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
      000000                         32 _atol_s_1_1:
      000000                         33 	.ds 3
      000003                         34 _atol_sloc0_1_0:
      000003                         35 	.ds 1
      000004                         36 _atol_sloc1_1_0:
      000004                         37 	.ds 3
      000007                         38 _atol_sloc2_1_0:
      000007                         39 	.ds 4
                                     40 ;--------------------------------------------------------
                                     41 ; overlayable items in internal ram 
                                     42 ;--------------------------------------------------------
                                     43 ;--------------------------------------------------------
                                     44 ; indirectly addressable internal ram data
                                     45 ;--------------------------------------------------------
                                     46 	.area ISEG    (DATA)
                                     47 ;--------------------------------------------------------
                                     48 ; absolute internal ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area IABS    (ABS,DATA)
                                     51 	.area IABS    (ABS,DATA)
                                     52 ;--------------------------------------------------------
                                     53 ; bit data
                                     54 ;--------------------------------------------------------
                                     55 	.area BSEG    (BIT)
                                     56 ;--------------------------------------------------------
                                     57 ; paged external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area PSEG    (PAG,XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; external ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XSEG    (XDATA)
                                     64 ;--------------------------------------------------------
                                     65 ; absolute external ram data
                                     66 ;--------------------------------------------------------
                                     67 	.area XABS    (ABS,XDATA)
                                     68 ;--------------------------------------------------------
                                     69 ; external initialized ram data
                                     70 ;--------------------------------------------------------
                                     71 	.area XISEG   (XDATA)
                                     72 	.area HOME    (CODE)
                                     73 	.area GSINIT0 (CODE)
                                     74 	.area GSINIT1 (CODE)
                                     75 	.area GSINIT2 (CODE)
                                     76 	.area GSINIT3 (CODE)
                                     77 	.area GSINIT4 (CODE)
                                     78 	.area GSINIT5 (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 	.area GSFINAL (CODE)
                                     81 	.area CSEG    (CODE)
                                     82 ;--------------------------------------------------------
                                     83 ; global & static initialisations
                                     84 ;--------------------------------------------------------
                                     85 	.area HOME    (CODE)
                                     86 	.area GSINIT  (CODE)
                                     87 	.area GSFINAL (CODE)
                                     88 	.area GSINIT  (CODE)
                                     89 ;--------------------------------------------------------
                                     90 ; Home
                                     91 ;--------------------------------------------------------
                                     92 	.area HOME    (CODE)
                                     93 	.area HOME    (CODE)
                                     94 ;--------------------------------------------------------
                                     95 ; code
                                     96 ;--------------------------------------------------------
                                     97 	.area CSEG    (CODE)
                                     98 ;------------------------------------------------------------
                                     99 ;Allocation info for local variables in function 'atol'
                                    100 ;------------------------------------------------------------
                                    101 ;s                         Allocated with name '_atol_s_1_1'
                                    102 ;rv                        Allocated to registers r1 r2 r3 r4 
                                    103 ;sign                      Allocated to registers r5 
                                    104 ;sloc0                     Allocated with name '_atol_sloc0_1_0'
                                    105 ;sloc1                     Allocated with name '_atol_sloc1_1_0'
                                    106 ;sloc2                     Allocated with name '_atol_sloc2_1_0'
                                    107 ;------------------------------------------------------------
                                    108 ;	_atol.c:29: long atol(char * s)
                                    109 ;	-----------------------------------------
                                    110 ;	 function atol
                                    111 ;	-----------------------------------------
      000000                        112 _atol:
                           000007   113 	ar7 = 0x07
                           000006   114 	ar6 = 0x06
                           000005   115 	ar5 = 0x05
                           000004   116 	ar4 = 0x04
                           000003   117 	ar3 = 0x03
                           000002   118 	ar2 = 0x02
                           000001   119 	ar1 = 0x01
                           000000   120 	ar0 = 0x00
      000000 85 82*00         [24]  121 	mov	_atol_s_1_1,dpl
      000003 85 83*01         [24]  122 	mov	(_atol_s_1_1 + 1),dph
      000006 85 F0*02         [24]  123 	mov	(_atol_s_1_1 + 2),b
                                    124 ;	_atol.c:31: register long rv=0; 
      000009 79 00            [12]  125 	mov	r1,#0x00
      00000B 7A 00            [12]  126 	mov	r2,#0x00
      00000D 7B 00            [12]  127 	mov	r3,#0x00
      00000F 7C 00            [12]  128 	mov	r4,#0x00
                                    129 ;	_atol.c:35: while (*s) {
      000011 A8*00            [24]  130 	mov	r0,_atol_s_1_1
      000013 AE*01            [24]  131 	mov	r6,(_atol_s_1_1 + 1)
      000015 AF*02            [24]  132 	mov	r7,(_atol_s_1_1 + 2)
      000017                        133 00107$:
      000017 88 82            [24]  134 	mov	dpl,r0
      000019 8E 83            [24]  135 	mov	dph,r6
      00001B 8F F0            [24]  136 	mov	b,r7
      00001D 12r00r00         [24]  137 	lcall	__gptrget
      000020 FD               [12]  138 	mov	r5,a
      000021 60 2E            [24]  139 	jz	00133$
                                    140 ;	_atol.c:36: if (*s <= '9' && *s >= '0')
      000023 C3               [12]  141 	clr	c
      000024 74 B9            [12]  142 	mov	a,#(0x39 ^ 0x80)
      000026 8D F0            [24]  143 	mov	b,r5
      000028 63 F0 80         [24]  144 	xrl	b,#0x80
      00002B 95 F0            [12]  145 	subb	a,b
      00002D 40 07            [24]  146 	jc	00102$
      00002F ED               [12]  147 	mov	a,r5
      000030 64 80            [12]  148 	xrl	a,#0x80
      000032 94 B0            [12]  149 	subb	a,#0xb0
      000034 50 1B            [24]  150 	jnc	00133$
                                    151 ;	_atol.c:37: break;
      000036                        152 00102$:
                                    153 ;	_atol.c:38: if (*s == '-' || *s == '+') 
      000036 88 82            [24]  154 	mov	dpl,r0
      000038 8E 83            [24]  155 	mov	dph,r6
      00003A 8F F0            [24]  156 	mov	b,r7
      00003C 12r00r00         [24]  157 	lcall	__gptrget
      00003F FD               [12]  158 	mov	r5,a
      000040 BD 2D 02         [24]  159 	cjne	r5,#0x2D,00160$
      000043 80 0C            [24]  160 	sjmp	00133$
      000045                        161 00160$:
      000045 BD 2B 02         [24]  162 	cjne	r5,#0x2B,00161$
      000048 80 07            [24]  163 	sjmp	00133$
      00004A                        164 00161$:
                                    165 ;	_atol.c:40: s++;
      00004A 08               [12]  166 	inc	r0
      00004B B8 00 C9         [24]  167 	cjne	r0,#0x00,00107$
      00004E 0E               [12]  168 	inc	r6
      00004F 80 C6            [24]  169 	sjmp	00107$
      000051                        170 00133$:
      000051 88*00            [24]  171 	mov	_atol_s_1_1,r0
      000053 8E*01            [24]  172 	mov	(_atol_s_1_1 + 1),r6
      000055 8F*02            [24]  173 	mov	(_atol_s_1_1 + 2),r7
                                    174 ;	_atol.c:43: sign = (*s == '-');
      000057 88 82            [24]  175 	mov	dpl,r0
      000059 8E 83            [24]  176 	mov	dph,r6
      00005B 8F F0            [24]  177 	mov	b,r7
      00005D 12r00r00         [24]  178 	lcall	__gptrget
      000060 FF               [12]  179 	mov	r7,a
      000061 E4               [12]  180 	clr	a
      000062 BF 2D 01         [24]  181 	cjne	r7,#0x2D,00163$
      000065 04               [12]  182 	inc	a
      000066                        183 00163$:
                                    184 ;	_atol.c:44: if (*s == '-' || *s == '+') s++;
      000066 FE               [12]  185 	mov	r6,a
      000067 FD               [12]  186 	mov	r5,a
      000068 70 03            [24]  187 	jnz	00110$
      00006A BF 2B 08         [24]  188 	cjne	r7,#0x2B,00131$
      00006D                        189 00110$:
      00006D 05*00            [12]  190 	inc	_atol_s_1_1
      00006F E4               [12]  191 	clr	a
      000070 B5*00 02         [24]  192 	cjne	a,_atol_s_1_1,00168$
      000073 05*01            [12]  193 	inc	(_atol_s_1_1 + 1)
      000075                        194 00168$:
                                    195 ;	_atol.c:46: while (*s && *s >= '0' && *s <= '9') {
      000075                        196 00131$:
      000075 85*00*04         [24]  197 	mov	_atol_sloc1_1_0,_atol_s_1_1
      000078 85*01*05         [24]  198 	mov	(_atol_sloc1_1_0 + 1),(_atol_s_1_1 + 1)
      00007B 85*02*06         [24]  199 	mov	(_atol_sloc1_1_0 + 2),(_atol_s_1_1 + 2)
      00007E                        200 00115$:
      00007E 85*04 82         [24]  201 	mov	dpl,_atol_sloc1_1_0
      000081 85*05 83         [24]  202 	mov	dph,(_atol_sloc1_1_0 + 1)
      000084 85*06 F0         [24]  203 	mov	b,(_atol_sloc1_1_0 + 2)
      000087 12r00r00         [24]  204 	lcall	__gptrget
      00008A F5*03            [12]  205 	mov	_atol_sloc0_1_0,a
      00008C 60 6C            [24]  206 	jz	00117$
      00008E C3               [12]  207 	clr	c
      00008F E5*03            [12]  208 	mov	a,_atol_sloc0_1_0
      000091 64 80            [12]  209 	xrl	a,#0x80
      000093 94 B0            [12]  210 	subb	a,#0xb0
      000095 40 63            [24]  211 	jc	00117$
      000097 74 B9            [12]  212 	mov	a,#(0x39 ^ 0x80)
      000099 85*03 F0         [24]  213 	mov	b,_atol_sloc0_1_0
      00009C 63 F0 80         [24]  214 	xrl	b,#0x80
      00009F 95 F0            [12]  215 	subb	a,b
      0000A1 40 57            [24]  216 	jc	00117$
                                    217 ;	_atol.c:47: rv = (rv * 10) + (*s - '0');
      0000A3 C0 05            [24]  218 	push	ar5
      0000A5 89*00            [24]  219 	mov	__mullong_PARM_2,r1
      0000A7 8A*01            [24]  220 	mov	(__mullong_PARM_2 + 1),r2
      0000A9 8B*02            [24]  221 	mov	(__mullong_PARM_2 + 2),r3
      0000AB 8C*03            [24]  222 	mov	(__mullong_PARM_2 + 3),r4
      0000AD 90 00 0A         [24]  223 	mov	dptr,#(0x0A&0x00ff)
      0000B0 E4               [12]  224 	clr	a
      0000B1 F5 F0            [12]  225 	mov	b,a
      0000B3 C0 05            [24]  226 	push	ar5
      0000B5 12r00r00         [24]  227 	lcall	__mullong
      0000B8 85 82*07         [24]  228 	mov	_atol_sloc2_1_0,dpl
      0000BB 85 83*08         [24]  229 	mov	(_atol_sloc2_1_0 + 1),dph
      0000BE 85 F0*09         [24]  230 	mov	(_atol_sloc2_1_0 + 2),b
      0000C1 F5*0A            [12]  231 	mov	(_atol_sloc2_1_0 + 3),a
      0000C3 D0 05            [24]  232 	pop	ar5
      0000C5 E5*03            [12]  233 	mov	a,_atol_sloc0_1_0
      0000C7 FE               [12]  234 	mov	r6,a
      0000C8 33               [12]  235 	rlc	a
      0000C9 95 E0            [12]  236 	subb	a,acc
      0000CB FF               [12]  237 	mov	r7,a
      0000CC EE               [12]  238 	mov	a,r6
      0000CD 24 D0            [12]  239 	add	a,#0xD0
      0000CF FE               [12]  240 	mov	r6,a
      0000D0 EF               [12]  241 	mov	a,r7
      0000D1 34 FF            [12]  242 	addc	a,#0xFF
      0000D3 FF               [12]  243 	mov	r7,a
      0000D4 8E 00            [24]  244 	mov	ar0,r6
      0000D6 EF               [12]  245 	mov	a,r7
      0000D7 FD               [12]  246 	mov	r5,a
      0000D8 33               [12]  247 	rlc	a
      0000D9 95 E0            [12]  248 	subb	a,acc
      0000DB FE               [12]  249 	mov	r6,a
      0000DC FF               [12]  250 	mov	r7,a
      0000DD E8               [12]  251 	mov	a,r0
      0000DE 25*07            [12]  252 	add	a,_atol_sloc2_1_0
      0000E0 F9               [12]  253 	mov	r1,a
      0000E1 ED               [12]  254 	mov	a,r5
      0000E2 35*08            [12]  255 	addc	a,(_atol_sloc2_1_0 + 1)
      0000E4 FA               [12]  256 	mov	r2,a
      0000E5 EE               [12]  257 	mov	a,r6
      0000E6 35*09            [12]  258 	addc	a,(_atol_sloc2_1_0 + 2)
      0000E8 FB               [12]  259 	mov	r3,a
      0000E9 EF               [12]  260 	mov	a,r7
      0000EA 35*0A            [12]  261 	addc	a,(_atol_sloc2_1_0 + 3)
      0000EC FC               [12]  262 	mov	r4,a
                                    263 ;	_atol.c:48: s++;
      0000ED 05*04            [12]  264 	inc	_atol_sloc1_1_0
      0000EF E4               [12]  265 	clr	a
      0000F0 B5*04 02         [24]  266 	cjne	a,_atol_sloc1_1_0,00172$
      0000F3 05*05            [12]  267 	inc	(_atol_sloc1_1_0 + 1)
      0000F5                        268 00172$:
      0000F5 D0 05            [24]  269 	pop	ar5
      0000F7 02r00r7E         [24]  270 	ljmp	00115$
      0000FA                        271 00117$:
                                    272 ;	_atol.c:51: return (sign ? -rv : rv);
      0000FA ED               [12]  273 	mov	a,r5
      0000FB 60 0F            [24]  274 	jz	00120$
      0000FD C3               [12]  275 	clr	c
      0000FE E4               [12]  276 	clr	a
      0000FF 99               [12]  277 	subb	a,r1
      000100 F8               [12]  278 	mov	r0,a
      000101 E4               [12]  279 	clr	a
      000102 9A               [12]  280 	subb	a,r2
      000103 FD               [12]  281 	mov	r5,a
      000104 E4               [12]  282 	clr	a
      000105 9B               [12]  283 	subb	a,r3
      000106 FE               [12]  284 	mov	r6,a
      000107 E4               [12]  285 	clr	a
      000108 9C               [12]  286 	subb	a,r4
      000109 FF               [12]  287 	mov	r7,a
      00010A 80 08            [24]  288 	sjmp	00121$
      00010C                        289 00120$:
      00010C 89 00            [24]  290 	mov	ar0,r1
      00010E 8A 05            [24]  291 	mov	ar5,r2
      000110 8B 06            [24]  292 	mov	ar6,r3
      000112 8C 07            [24]  293 	mov	ar7,r4
      000114                        294 00121$:
      000114 88 82            [24]  295 	mov	dpl,r0
      000116 8D 83            [24]  296 	mov	dph,r5
      000118 8E F0            [24]  297 	mov	b,r6
      00011A EF               [12]  298 	mov	a,r7
      00011B 22               [24]  299 	ret
                                    300 	.area CSEG    (CODE)
                                    301 	.area CONST   (CODE)
                                    302 	.area XINIT   (CODE)
                                    303 	.area CABS    (ABS,CODE)
