                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:27:49 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module powf
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _logf
                                     13 	.globl _expf
                                     14 	.globl _powf_PARM_2
                                     15 	.globl _powf
                                     16 ;--------------------------------------------------------
                                     17 ; special function registers
                                     18 ;--------------------------------------------------------
                                     19 	.area RSEG    (ABS,DATA)
      000000                         20 	.org 0x0000
                                     21 ;--------------------------------------------------------
                                     22 ; special function bits
                                     23 ;--------------------------------------------------------
                                     24 	.area RSEG    (ABS,DATA)
      000000                         25 	.org 0x0000
                                     26 ;--------------------------------------------------------
                                     27 ; overlayable register banks
                                     28 ;--------------------------------------------------------
                                     29 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         30 	.ds 8
                                     31 ;--------------------------------------------------------
                                     32 ; internal ram data
                                     33 ;--------------------------------------------------------
                                     34 	.area DSEG    (DATA)
      000000                         35 _powf_PARM_2:
      000000                         36 	.ds 4
                                     37 ;--------------------------------------------------------
                                     38 ; overlayable items in internal ram 
                                     39 ;--------------------------------------------------------
                                     40 ;--------------------------------------------------------
                                     41 ; indirectly addressable internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area ISEG    (DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; absolute internal ram data
                                     46 ;--------------------------------------------------------
                                     47 	.area IABS    (ABS,DATA)
                                     48 	.area IABS    (ABS,DATA)
                                     49 ;--------------------------------------------------------
                                     50 ; bit data
                                     51 ;--------------------------------------------------------
                                     52 	.area BSEG    (BIT)
                                     53 ;--------------------------------------------------------
                                     54 ; paged external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area PSEG    (PAG,XDATA)
                                     57 ;--------------------------------------------------------
                                     58 ; external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XSEG    (XDATA)
                                     61 ;--------------------------------------------------------
                                     62 ; absolute external ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XABS    (ABS,XDATA)
                                     65 ;--------------------------------------------------------
                                     66 ; external initialized ram data
                                     67 ;--------------------------------------------------------
                                     68 	.area XISEG   (XDATA)
                                     69 	.area HOME    (CODE)
                                     70 	.area GSINIT0 (CODE)
                                     71 	.area GSINIT1 (CODE)
                                     72 	.area GSINIT2 (CODE)
                                     73 	.area GSINIT3 (CODE)
                                     74 	.area GSINIT4 (CODE)
                                     75 	.area GSINIT5 (CODE)
                                     76 	.area GSINIT  (CODE)
                                     77 	.area GSFINAL (CODE)
                                     78 	.area CSEG    (CODE)
                                     79 ;--------------------------------------------------------
                                     80 ; global & static initialisations
                                     81 ;--------------------------------------------------------
                                     82 	.area HOME    (CODE)
                                     83 	.area GSINIT  (CODE)
                                     84 	.area GSFINAL (CODE)
                                     85 	.area GSINIT  (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; Home
                                     88 ;--------------------------------------------------------
                                     89 	.area HOME    (CODE)
                                     90 	.area HOME    (CODE)
                                     91 ;--------------------------------------------------------
                                     92 ; code
                                     93 ;--------------------------------------------------------
                                     94 	.area CSEG    (CODE)
                                     95 ;------------------------------------------------------------
                                     96 ;Allocation info for local variables in function 'powf'
                                     97 ;------------------------------------------------------------
                                     98 ;y                         Allocated with name '_powf_PARM_2'
                                     99 ;x                         Allocated to registers r4 r5 r6 r7 
                                    100 ;------------------------------------------------------------
                                    101 ;	powf.c:35: float powf(const float x, const float y)
                                    102 ;	-----------------------------------------
                                    103 ;	 function powf
                                    104 ;	-----------------------------------------
      000000                        105 _powf:
                           000007   106 	ar7 = 0x07
                           000006   107 	ar6 = 0x06
                           000005   108 	ar5 = 0x05
                           000004   109 	ar4 = 0x04
                           000003   110 	ar3 = 0x03
                           000002   111 	ar2 = 0x02
                           000001   112 	ar1 = 0x01
                           000000   113 	ar0 = 0x00
      000000 AC 82            [24]  114 	mov	r4,dpl
      000002 AD 83            [24]  115 	mov	r5,dph
      000004 AE F0            [24]  116 	mov	r6,b
      000006 FF               [12]  117 	mov	r7,a
                                    118 ;	powf.c:37: if(y == 0.0) return 1.0;
      000007 85*00 F0         [24]  119 	mov	b,_powf_PARM_2
      00000A E5*01            [12]  120 	mov	a,(_powf_PARM_2 + 1)
      00000C 42 F0            [12]  121 	orl	b,a
      00000E E5*02            [12]  122 	mov	a,(_powf_PARM_2 + 2)
      000010 42 F0            [12]  123 	orl	b,a
      000012 E5*03            [12]  124 	mov	a,(_powf_PARM_2 + 3)
      000014 54 7F            [12]  125 	anl	a,#0x7F
      000016 45 F0            [12]  126 	orl	a,b
      000018 70 09            [24]  127 	jnz	00102$
      00001A 90 00 00         [24]  128 	mov	dptr,#0x0000
      00001D 75 F0 80         [24]  129 	mov	b,#0x80
      000020 74 3F            [12]  130 	mov	a,#0x3F
      000022 22               [24]  131 	ret
      000023                        132 00102$:
                                    133 ;	powf.c:38: if(y==1.0) return x;
      000023 C0 07            [24]  134 	push	ar7
      000025 C0 06            [24]  135 	push	ar6
      000027 C0 05            [24]  136 	push	ar5
      000029 C0 04            [24]  137 	push	ar4
      00002B E4               [12]  138 	clr	a
      00002C C0 E0            [24]  139 	push	acc
      00002E C0 E0            [24]  140 	push	acc
      000030 74 80            [12]  141 	mov	a,#0x80
      000032 C0 E0            [24]  142 	push	acc
      000034 74 3F            [12]  143 	mov	a,#0x3F
      000036 C0 E0            [24]  144 	push	acc
      000038 85*00 82         [24]  145 	mov	dpl,_powf_PARM_2
      00003B 85*01 83         [24]  146 	mov	dph,(_powf_PARM_2 + 1)
      00003E 85*02 F0         [24]  147 	mov	b,(_powf_PARM_2 + 2)
      000041 E5*03            [12]  148 	mov	a,(_powf_PARM_2 + 3)
      000043 12r00r00         [24]  149 	lcall	___fseq
      000046 AB 82            [24]  150 	mov	r3,dpl
      000048 E5 81            [12]  151 	mov	a,sp
      00004A 24 FC            [12]  152 	add	a,#0xfc
      00004C F5 81            [12]  153 	mov	sp,a
      00004E D0 04            [24]  154 	pop	ar4
      000050 D0 05            [24]  155 	pop	ar5
      000052 D0 06            [24]  156 	pop	ar6
      000054 D0 07            [24]  157 	pop	ar7
      000056 EB               [12]  158 	mov	a,r3
      000057 60 08            [24]  159 	jz	00104$
      000059 8C 82            [24]  160 	mov	dpl,r4
      00005B 8D 83            [24]  161 	mov	dph,r5
      00005D 8E F0            [24]  162 	mov	b,r6
      00005F EF               [12]  163 	mov	a,r7
      000060 22               [24]  164 	ret
      000061                        165 00104$:
                                    166 ;	powf.c:39: if(x <= 0.0) return 0.0;
      000061 C0 07            [24]  167 	push	ar7
      000063 C0 06            [24]  168 	push	ar6
      000065 C0 05            [24]  169 	push	ar5
      000067 C0 04            [24]  170 	push	ar4
      000069 E4               [12]  171 	clr	a
      00006A C0 E0            [24]  172 	push	acc
      00006C C0 E0            [24]  173 	push	acc
      00006E C0 E0            [24]  174 	push	acc
      000070 C0 E0            [24]  175 	push	acc
      000072 8C 82            [24]  176 	mov	dpl,r4
      000074 8D 83            [24]  177 	mov	dph,r5
      000076 8E F0            [24]  178 	mov	b,r6
      000078 EF               [12]  179 	mov	a,r7
      000079 12r00r00         [24]  180 	lcall	___fsgt
      00007C AB 82            [24]  181 	mov	r3,dpl
      00007E E5 81            [12]  182 	mov	a,sp
      000080 24 FC            [12]  183 	add	a,#0xfc
      000082 F5 81            [12]  184 	mov	sp,a
      000084 D0 04            [24]  185 	pop	ar4
      000086 D0 05            [24]  186 	pop	ar5
      000088 D0 06            [24]  187 	pop	ar6
      00008A D0 07            [24]  188 	pop	ar7
      00008C EB               [12]  189 	mov	a,r3
      00008D 70 07            [24]  190 	jnz	00106$
      00008F 90 00 00         [24]  191 	mov	dptr,#(0x00&0x00ff)
      000092 E4               [12]  192 	clr	a
      000093 F5 F0            [12]  193 	mov	b,a
      000095 22               [24]  194 	ret
      000096                        195 00106$:
                                    196 ;	powf.c:40: return expf(logf(x) * y);
      000096 8C 82            [24]  197 	mov	dpl,r4
      000098 8D 83            [24]  198 	mov	dph,r5
      00009A 8E F0            [24]  199 	mov	b,r6
      00009C EF               [12]  200 	mov	a,r7
      00009D 12r00r00         [24]  201 	lcall	_logf
      0000A0 AC 82            [24]  202 	mov	r4,dpl
      0000A2 AD 83            [24]  203 	mov	r5,dph
      0000A4 AE F0            [24]  204 	mov	r6,b
      0000A6 FF               [12]  205 	mov	r7,a
      0000A7 C0*00            [24]  206 	push	_powf_PARM_2
      0000A9 C0*01            [24]  207 	push	(_powf_PARM_2 + 1)
      0000AB C0*02            [24]  208 	push	(_powf_PARM_2 + 2)
      0000AD C0*03            [24]  209 	push	(_powf_PARM_2 + 3)
      0000AF 8C 82            [24]  210 	mov	dpl,r4
      0000B1 8D 83            [24]  211 	mov	dph,r5
      0000B3 8E F0            [24]  212 	mov	b,r6
      0000B5 EF               [12]  213 	mov	a,r7
      0000B6 12r00r00         [24]  214 	lcall	___fsmul
      0000B9 AC 82            [24]  215 	mov	r4,dpl
      0000BB AD 83            [24]  216 	mov	r5,dph
      0000BD AE F0            [24]  217 	mov	r6,b
      0000BF FF               [12]  218 	mov	r7,a
      0000C0 E5 81            [12]  219 	mov	a,sp
      0000C2 24 FC            [12]  220 	add	a,#0xfc
      0000C4 F5 81            [12]  221 	mov	sp,a
      0000C6 8C 82            [24]  222 	mov	dpl,r4
      0000C8 8D 83            [24]  223 	mov	dph,r5
      0000CA 8E F0            [24]  224 	mov	b,r6
      0000CC EF               [12]  225 	mov	a,r7
      0000CD 02r00r00         [24]  226 	ljmp	_expf
                                    227 	.area CSEG    (CODE)
                                    228 	.area CONST   (CODE)
                                    229 	.area XINIT   (CODE)
                                    230 	.area CABS    (ABS,CODE)
