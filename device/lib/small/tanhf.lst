                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:27:49 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module tanhf
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _fabsf
                                     13 	.globl _expf
                                     14 	.globl _tanhf
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram 
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; indirectly addressable internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area ISEG    (DATA)
                                     41 ;--------------------------------------------------------
                                     42 ; absolute internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area IABS    (ABS,DATA)
                                     45 	.area IABS    (ABS,DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; bit data
                                     48 ;--------------------------------------------------------
                                     49 	.area BSEG    (BIT)
                                     50 ;--------------------------------------------------------
                                     51 ; paged external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area PSEG    (PAG,XDATA)
                                     54 ;--------------------------------------------------------
                                     55 ; external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XSEG    (XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; absolute external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XABS    (ABS,XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; external initialized ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XISEG   (XDATA)
                                     66 	.area HOME    (CODE)
                                     67 	.area GSINIT0 (CODE)
                                     68 	.area GSINIT1 (CODE)
                                     69 	.area GSINIT2 (CODE)
                                     70 	.area GSINIT3 (CODE)
                                     71 	.area GSINIT4 (CODE)
                                     72 	.area GSINIT5 (CODE)
                                     73 	.area GSINIT  (CODE)
                                     74 	.area GSFINAL (CODE)
                                     75 	.area CSEG    (CODE)
                                     76 ;--------------------------------------------------------
                                     77 ; global & static initialisations
                                     78 ;--------------------------------------------------------
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 	.area GSFINAL (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 ;--------------------------------------------------------
                                     84 ; Home
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area HOME    (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; code
                                     90 ;--------------------------------------------------------
                                     91 	.area CSEG    (CODE)
                                     92 ;------------------------------------------------------------
                                     93 ;Allocation info for local variables in function 'tanhf'
                                     94 ;------------------------------------------------------------
                                     95 ;x                         Allocated to stack - _bp +1
                                     96 ;f                         Allocated to stack - _bp +9
                                     97 ;g                         Allocated to stack - _bp +13
                                     98 ;r                         Allocated to stack - _bp +17
                                     99 ;sloc0                     Allocated to stack - _bp +5
                                    100 ;------------------------------------------------------------
                                    101 ;	tanhf.c:50: float tanhf(const float x) _FLOAT_FUNC_REENTRANT
                                    102 ;	-----------------------------------------
                                    103 ;	 function tanhf
                                    104 ;	-----------------------------------------
      000000                        105 _tanhf:
                           000007   106 	ar7 = 0x07
                           000006   107 	ar6 = 0x06
                           000005   108 	ar5 = 0x05
                           000004   109 	ar4 = 0x04
                           000003   110 	ar3 = 0x03
                           000002   111 	ar2 = 0x02
                           000001   112 	ar1 = 0x01
                           000000   113 	ar0 = 0x00
      000000 C0*00            [24]  114 	push	_bp
      000002 85 81*00         [24]  115 	mov	_bp,sp
      000005 C0 82            [24]  116 	push	dpl
      000007 C0 83            [24]  117 	push	dph
      000009 C0 F0            [24]  118 	push	b
      00000B C0 E0            [24]  119 	push	acc
      00000D E5 81            [12]  120 	mov	a,sp
      00000F 24 10            [12]  121 	add	a,#0x10
      000011 F5 81            [12]  122 	mov	sp,a
                                    123 ;	tanhf.c:54: f=fabsf(x);
      000013 A8*00            [24]  124 	mov	r0,_bp
      000015 08               [12]  125 	inc	r0
      000016 86 82            [24]  126 	mov	dpl,@r0
      000018 08               [12]  127 	inc	r0
      000019 86 83            [24]  128 	mov	dph,@r0
      00001B 08               [12]  129 	inc	r0
      00001C 86 F0            [24]  130 	mov	b,@r0
      00001E 08               [12]  131 	inc	r0
      00001F E6               [12]  132 	mov	a,@r0
      000020 12r00r00         [24]  133 	lcall	_fabsf
      000023 AF 82            [24]  134 	mov	r7,dpl
      000025 AE 83            [24]  135 	mov	r6,dph
      000027 AD F0            [24]  136 	mov	r5,b
      000029 FC               [12]  137 	mov	r4,a
      00002A E5*00            [12]  138 	mov	a,_bp
      00002C 24 09            [12]  139 	add	a,#0x09
      00002E F8               [12]  140 	mov	r0,a
      00002F A6 07            [24]  141 	mov	@r0,ar7
      000031 08               [12]  142 	inc	r0
      000032 A6 06            [24]  143 	mov	@r0,ar6
      000034 08               [12]  144 	inc	r0
      000035 A6 05            [24]  145 	mov	@r0,ar5
      000037 08               [12]  146 	inc	r0
      000038 A6 04            [24]  147 	mov	@r0,ar4
                                    148 ;	tanhf.c:55: if(f>SBIG) r=1.0;
      00003A 74 B0            [12]  149 	mov	a,#0xB0
      00003C C0 E0            [24]  150 	push	acc
      00003E 74 2C            [12]  151 	mov	a,#0x2C
      000040 C0 E0            [24]  152 	push	acc
      000042 74 10            [12]  153 	mov	a,#0x10
      000044 C0 E0            [24]  154 	push	acc
      000046 74 41            [12]  155 	mov	a,#0x41
      000048 C0 E0            [24]  156 	push	acc
      00004A E5*00            [12]  157 	mov	a,_bp
      00004C 24 09            [12]  158 	add	a,#0x09
      00004E F8               [12]  159 	mov	r0,a
      00004F 86 82            [24]  160 	mov	dpl,@r0
      000051 08               [12]  161 	inc	r0
      000052 86 83            [24]  162 	mov	dph,@r0
      000054 08               [12]  163 	inc	r0
      000055 86 F0            [24]  164 	mov	b,@r0
      000057 08               [12]  165 	inc	r0
      000058 E6               [12]  166 	mov	a,@r0
      000059 12r00r00         [24]  167 	lcall	___fsgt
      00005C AD 82            [24]  168 	mov	r5,dpl
      00005E E5 81            [12]  169 	mov	a,sp
      000060 24 FC            [12]  170 	add	a,#0xfc
      000062 F5 81            [12]  171 	mov	sp,a
      000064 ED               [12]  172 	mov	a,r5
      000065 60 12            [24]  173 	jz	00108$
      000067 E5*00            [12]  174 	mov	a,_bp
      000069 24 11            [12]  175 	add	a,#0x11
      00006B F8               [12]  176 	mov	r0,a
      00006C E4               [12]  177 	clr	a
      00006D F6               [12]  178 	mov	@r0,a
      00006E 08               [12]  179 	inc	r0
      00006F F6               [12]  180 	mov	@r0,a
      000070 08               [12]  181 	inc	r0
      000071 76 80            [12]  182 	mov	@r0,#0x80
      000073 08               [12]  183 	inc	r0
      000074 76 3F            [12]  184 	mov	@r0,#0x3F
      000076 02r03r6A         [24]  185 	ljmp	00109$
      000079                        186 00108$:
                                    187 ;	tanhf.c:56: else if(f>K1)
      000079 74 54            [12]  188 	mov	a,#0x54
      00007B C0 E0            [24]  189 	push	acc
      00007D 74 9F            [12]  190 	mov	a,#0x9F
      00007F C0 E0            [24]  191 	push	acc
      000081 74 0C            [12]  192 	mov	a,#0x0C
      000083 C0 E0            [24]  193 	push	acc
      000085 74 3F            [12]  194 	mov	a,#0x3F
      000087 C0 E0            [24]  195 	push	acc
      000089 E5*00            [12]  196 	mov	a,_bp
      00008B 24 09            [12]  197 	add	a,#0x09
      00008D F8               [12]  198 	mov	r0,a
      00008E 86 82            [24]  199 	mov	dpl,@r0
      000090 08               [12]  200 	inc	r0
      000091 86 83            [24]  201 	mov	dph,@r0
      000093 08               [12]  202 	inc	r0
      000094 86 F0            [24]  203 	mov	b,@r0
      000096 08               [12]  204 	inc	r0
      000097 E6               [12]  205 	mov	a,@r0
      000098 12r00r00         [24]  206 	lcall	___fsgt
      00009B AD 82            [24]  207 	mov	r5,dpl
      00009D E5 81            [12]  208 	mov	a,sp
      00009F 24 FC            [12]  209 	add	a,#0xfc
      0000A1 F5 81            [12]  210 	mov	sp,a
      0000A3 ED               [12]  211 	mov	a,r5
      0000A4 70 03            [24]  212 	jnz	00127$
      0000A6 02r01rA7         [24]  213 	ljmp	00105$
      0000A9                        214 00127$:
                                    215 ;	tanhf.c:58: r=0.5-1.0/(expf(f+f)+1.0);
      0000A9 E5*00            [12]  216 	mov	a,_bp
      0000AB 24 09            [12]  217 	add	a,#0x09
      0000AD F8               [12]  218 	mov	r0,a
      0000AE E6               [12]  219 	mov	a,@r0
      0000AF C0 E0            [24]  220 	push	acc
      0000B1 08               [12]  221 	inc	r0
      0000B2 E6               [12]  222 	mov	a,@r0
      0000B3 C0 E0            [24]  223 	push	acc
      0000B5 08               [12]  224 	inc	r0
      0000B6 E6               [12]  225 	mov	a,@r0
      0000B7 C0 E0            [24]  226 	push	acc
      0000B9 08               [12]  227 	inc	r0
      0000BA E6               [12]  228 	mov	a,@r0
      0000BB C0 E0            [24]  229 	push	acc
      0000BD E5*00            [12]  230 	mov	a,_bp
      0000BF 24 09            [12]  231 	add	a,#0x09
      0000C1 F8               [12]  232 	mov	r0,a
      0000C2 86 82            [24]  233 	mov	dpl,@r0
      0000C4 08               [12]  234 	inc	r0
      0000C5 86 83            [24]  235 	mov	dph,@r0
      0000C7 08               [12]  236 	inc	r0
      0000C8 86 F0            [24]  237 	mov	b,@r0
      0000CA 08               [12]  238 	inc	r0
      0000CB E6               [12]  239 	mov	a,@r0
      0000CC 12r00r00         [24]  240 	lcall	___fsadd
      0000CF AF 82            [24]  241 	mov	r7,dpl
      0000D1 AE 83            [24]  242 	mov	r6,dph
      0000D3 AD F0            [24]  243 	mov	r5,b
      0000D5 FC               [12]  244 	mov	r4,a
      0000D6 E5 81            [12]  245 	mov	a,sp
      0000D8 24 FC            [12]  246 	add	a,#0xfc
      0000DA F5 81            [12]  247 	mov	sp,a
      0000DC 8F 82            [24]  248 	mov	dpl,r7
      0000DE 8E 83            [24]  249 	mov	dph,r6
      0000E0 8D F0            [24]  250 	mov	b,r5
      0000E2 EC               [12]  251 	mov	a,r4
      0000E3 12r00r00         [24]  252 	lcall	_expf
      0000E6 AF 82            [24]  253 	mov	r7,dpl
      0000E8 AE 83            [24]  254 	mov	r6,dph
      0000EA AD F0            [24]  255 	mov	r5,b
      0000EC FC               [12]  256 	mov	r4,a
      0000ED E4               [12]  257 	clr	a
      0000EE C0 E0            [24]  258 	push	acc
      0000F0 C0 E0            [24]  259 	push	acc
      0000F2 74 80            [12]  260 	mov	a,#0x80
      0000F4 C0 E0            [24]  261 	push	acc
      0000F6 74 3F            [12]  262 	mov	a,#0x3F
      0000F8 C0 E0            [24]  263 	push	acc
      0000FA 8F 82            [24]  264 	mov	dpl,r7
      0000FC 8E 83            [24]  265 	mov	dph,r6
      0000FE 8D F0            [24]  266 	mov	b,r5
      000100 EC               [12]  267 	mov	a,r4
      000101 12r00r00         [24]  268 	lcall	___fsadd
      000104 AF 82            [24]  269 	mov	r7,dpl
      000106 AE 83            [24]  270 	mov	r6,dph
      000108 AD F0            [24]  271 	mov	r5,b
      00010A FC               [12]  272 	mov	r4,a
      00010B E5 81            [12]  273 	mov	a,sp
      00010D 24 FC            [12]  274 	add	a,#0xfc
      00010F F5 81            [12]  275 	mov	sp,a
      000111 C0 07            [24]  276 	push	ar7
      000113 C0 06            [24]  277 	push	ar6
      000115 C0 05            [24]  278 	push	ar5
      000117 C0 04            [24]  279 	push	ar4
      000119 90 00 00         [24]  280 	mov	dptr,#0x0000
      00011C 75 F0 80         [24]  281 	mov	b,#0x80
      00011F 74 3F            [12]  282 	mov	a,#0x3F
      000121 12r00r00         [24]  283 	lcall	___fsdiv
      000124 AF 82            [24]  284 	mov	r7,dpl
      000126 AE 83            [24]  285 	mov	r6,dph
      000128 AD F0            [24]  286 	mov	r5,b
      00012A FC               [12]  287 	mov	r4,a
      00012B E5 81            [12]  288 	mov	a,sp
      00012D 24 FC            [12]  289 	add	a,#0xfc
      00012F F5 81            [12]  290 	mov	sp,a
      000131 C0 07            [24]  291 	push	ar7
      000133 C0 06            [24]  292 	push	ar6
      000135 C0 05            [24]  293 	push	ar5
      000137 C0 04            [24]  294 	push	ar4
      000139 90 00 00         [24]  295 	mov	dptr,#(0x00&0x00ff)
      00013C E4               [12]  296 	clr	a
      00013D F5 F0            [12]  297 	mov	b,a
      00013F 74 3F            [12]  298 	mov	a,#0x3F
      000141 12r00r00         [24]  299 	lcall	___fssub
      000144 AF 82            [24]  300 	mov	r7,dpl
      000146 AE 83            [24]  301 	mov	r6,dph
      000148 AD F0            [24]  302 	mov	r5,b
      00014A FC               [12]  303 	mov	r4,a
      00014B E5 81            [12]  304 	mov	a,sp
      00014D 24 FC            [12]  305 	add	a,#0xfc
      00014F F5 81            [12]  306 	mov	sp,a
      000151 E5*00            [12]  307 	mov	a,_bp
      000153 24 11            [12]  308 	add	a,#0x11
      000155 F8               [12]  309 	mov	r0,a
      000156 A6 07            [24]  310 	mov	@r0,ar7
      000158 08               [12]  311 	inc	r0
      000159 A6 06            [24]  312 	mov	@r0,ar6
      00015B 08               [12]  313 	inc	r0
      00015C A6 05            [24]  314 	mov	@r0,ar5
      00015E 08               [12]  315 	inc	r0
      00015F A6 04            [24]  316 	mov	@r0,ar4
                                    317 ;	tanhf.c:59: r+=r;
      000161 E5*00            [12]  318 	mov	a,_bp
      000163 24 11            [12]  319 	add	a,#0x11
      000165 F8               [12]  320 	mov	r0,a
      000166 E6               [12]  321 	mov	a,@r0
      000167 C0 E0            [24]  322 	push	acc
      000169 08               [12]  323 	inc	r0
      00016A E6               [12]  324 	mov	a,@r0
      00016B C0 E0            [24]  325 	push	acc
      00016D 08               [12]  326 	inc	r0
      00016E E6               [12]  327 	mov	a,@r0
      00016F C0 E0            [24]  328 	push	acc
      000171 08               [12]  329 	inc	r0
      000172 E6               [12]  330 	mov	a,@r0
      000173 C0 E0            [24]  331 	push	acc
      000175 E5*00            [12]  332 	mov	a,_bp
      000177 24 11            [12]  333 	add	a,#0x11
      000179 F8               [12]  334 	mov	r0,a
      00017A 86 82            [24]  335 	mov	dpl,@r0
      00017C 08               [12]  336 	inc	r0
      00017D 86 83            [24]  337 	mov	dph,@r0
      00017F 08               [12]  338 	inc	r0
      000180 86 F0            [24]  339 	mov	b,@r0
      000182 08               [12]  340 	inc	r0
      000183 E6               [12]  341 	mov	a,@r0
      000184 12r00r00         [24]  342 	lcall	___fsadd
      000187 AF 82            [24]  343 	mov	r7,dpl
      000189 AE 83            [24]  344 	mov	r6,dph
      00018B AD F0            [24]  345 	mov	r5,b
      00018D FC               [12]  346 	mov	r4,a
      00018E E5 81            [12]  347 	mov	a,sp
      000190 24 FC            [12]  348 	add	a,#0xfc
      000192 F5 81            [12]  349 	mov	sp,a
      000194 E5*00            [12]  350 	mov	a,_bp
      000196 24 11            [12]  351 	add	a,#0x11
      000198 F8               [12]  352 	mov	r0,a
      000199 A6 07            [24]  353 	mov	@r0,ar7
      00019B 08               [12]  354 	inc	r0
      00019C A6 06            [24]  355 	mov	@r0,ar6
      00019E 08               [12]  356 	inc	r0
      00019F A6 05            [24]  357 	mov	@r0,ar5
      0001A1 08               [12]  358 	inc	r0
      0001A2 A6 04            [24]  359 	mov	@r0,ar4
      0001A4 02r03r6A         [24]  360 	ljmp	00109$
      0001A7                        361 00105$:
                                    362 ;	tanhf.c:61: else if(f<EPS) r=f;
      0001A7 E4               [12]  363 	clr	a
      0001A8 C0 E0            [24]  364 	push	acc
      0001AA C0 E0            [24]  365 	push	acc
      0001AC 74 80            [12]  366 	mov	a,#0x80
      0001AE C0 E0            [24]  367 	push	acc
      0001B0 74 39            [12]  368 	mov	a,#0x39
      0001B2 C0 E0            [24]  369 	push	acc
      0001B4 E5*00            [12]  370 	mov	a,_bp
      0001B6 24 09            [12]  371 	add	a,#0x09
      0001B8 F8               [12]  372 	mov	r0,a
      0001B9 86 82            [24]  373 	mov	dpl,@r0
      0001BB 08               [12]  374 	inc	r0
      0001BC 86 83            [24]  375 	mov	dph,@r0
      0001BE 08               [12]  376 	inc	r0
      0001BF 86 F0            [24]  377 	mov	b,@r0
      0001C1 08               [12]  378 	inc	r0
      0001C2 E6               [12]  379 	mov	a,@r0
      0001C3 12r00r00         [24]  380 	lcall	___fslt
      0001C6 AD 82            [24]  381 	mov	r5,dpl
      0001C8 E5 81            [12]  382 	mov	a,sp
      0001CA 24 FC            [12]  383 	add	a,#0xfc
      0001CC F5 81            [12]  384 	mov	sp,a
      0001CE ED               [12]  385 	mov	a,r5
      0001CF 60 1B            [24]  386 	jz	00102$
      0001D1 E5*00            [12]  387 	mov	a,_bp
      0001D3 24 09            [12]  388 	add	a,#0x09
      0001D5 F8               [12]  389 	mov	r0,a
      0001D6 E5*00            [12]  390 	mov	a,_bp
      0001D8 24 11            [12]  391 	add	a,#0x11
      0001DA F9               [12]  392 	mov	r1,a
      0001DB E6               [12]  393 	mov	a,@r0
      0001DC F7               [12]  394 	mov	@r1,a
      0001DD 08               [12]  395 	inc	r0
      0001DE 09               [12]  396 	inc	r1
      0001DF E6               [12]  397 	mov	a,@r0
      0001E0 F7               [12]  398 	mov	@r1,a
      0001E1 08               [12]  399 	inc	r0
      0001E2 09               [12]  400 	inc	r1
      0001E3 E6               [12]  401 	mov	a,@r0
      0001E4 F7               [12]  402 	mov	@r1,a
      0001E5 08               [12]  403 	inc	r0
      0001E6 09               [12]  404 	inc	r1
      0001E7 E6               [12]  405 	mov	a,@r0
      0001E8 F7               [12]  406 	mov	@r1,a
      0001E9 02r03r6A         [24]  407 	ljmp	00109$
      0001EC                        408 00102$:
                                    409 ;	tanhf.c:64: g=f*f;
      0001EC E5*00            [12]  410 	mov	a,_bp
      0001EE 24 09            [12]  411 	add	a,#0x09
      0001F0 F8               [12]  412 	mov	r0,a
      0001F1 E6               [12]  413 	mov	a,@r0
      0001F2 C0 E0            [24]  414 	push	acc
      0001F4 08               [12]  415 	inc	r0
      0001F5 E6               [12]  416 	mov	a,@r0
      0001F6 C0 E0            [24]  417 	push	acc
      0001F8 08               [12]  418 	inc	r0
      0001F9 E6               [12]  419 	mov	a,@r0
      0001FA C0 E0            [24]  420 	push	acc
      0001FC 08               [12]  421 	inc	r0
      0001FD E6               [12]  422 	mov	a,@r0
      0001FE C0 E0            [24]  423 	push	acc
      000200 E5*00            [12]  424 	mov	a,_bp
      000202 24 09            [12]  425 	add	a,#0x09
      000204 F8               [12]  426 	mov	r0,a
      000205 86 82            [24]  427 	mov	dpl,@r0
      000207 08               [12]  428 	inc	r0
      000208 86 83            [24]  429 	mov	dph,@r0
      00020A 08               [12]  430 	inc	r0
      00020B 86 F0            [24]  431 	mov	b,@r0
      00020D 08               [12]  432 	inc	r0
      00020E E6               [12]  433 	mov	a,@r0
      00020F 12r00r00         [24]  434 	lcall	___fsmul
      000212 AF 82            [24]  435 	mov	r7,dpl
      000214 AE 83            [24]  436 	mov	r6,dph
      000216 AD F0            [24]  437 	mov	r5,b
      000218 FC               [12]  438 	mov	r4,a
      000219 E5 81            [12]  439 	mov	a,sp
      00021B 24 FC            [12]  440 	add	a,#0xfc
      00021D F5 81            [12]  441 	mov	sp,a
      00021F E5*00            [12]  442 	mov	a,_bp
      000221 24 0D            [12]  443 	add	a,#0x0d
      000223 F8               [12]  444 	mov	r0,a
      000224 A6 07            [24]  445 	mov	@r0,ar7
      000226 08               [12]  446 	inc	r0
      000227 A6 06            [24]  447 	mov	@r0,ar6
      000229 08               [12]  448 	inc	r0
      00022A A6 05            [24]  449 	mov	@r0,ar5
      00022C 08               [12]  450 	inc	r0
      00022D A6 04            [24]  451 	mov	@r0,ar4
                                    452 ;	tanhf.c:65: r=f+f*(P(g)/Q(g));
      00022F E5*00            [12]  453 	mov	a,_bp
      000231 24 0D            [12]  454 	add	a,#0x0d
      000233 F8               [12]  455 	mov	r0,a
      000234 E6               [12]  456 	mov	a,@r0
      000235 C0 E0            [24]  457 	push	acc
      000237 08               [12]  458 	inc	r0
      000238 E6               [12]  459 	mov	a,@r0
      000239 C0 E0            [24]  460 	push	acc
      00023B 08               [12]  461 	inc	r0
      00023C E6               [12]  462 	mov	a,@r0
      00023D C0 E0            [24]  463 	push	acc
      00023F 08               [12]  464 	inc	r0
      000240 E6               [12]  465 	mov	a,@r0
      000241 C0 E0            [24]  466 	push	acc
      000243 90 11 B2         [24]  467 	mov	dptr,#0x11B2
      000246 75 F0 7B         [24]  468 	mov	b,#0x7B
      000249 74 BB            [12]  469 	mov	a,#0xBB
      00024B 12r00r00         [24]  470 	lcall	___fsmul
      00024E AC 82            [24]  471 	mov	r4,dpl
      000250 AD 83            [24]  472 	mov	r5,dph
      000252 AE F0            [24]  473 	mov	r6,b
      000254 FF               [12]  474 	mov	r7,a
      000255 E5 81            [12]  475 	mov	a,sp
      000257 24 FC            [12]  476 	add	a,#0xfc
      000259 F5 81            [12]  477 	mov	sp,a
      00025B 74 C6            [12]  478 	mov	a,#0xC6
      00025D C0 E0            [24]  479 	push	acc
      00025F 74 E2            [12]  480 	mov	a,#0xE2
      000261 C0 E0            [24]  481 	push	acc
      000263 74 52            [12]  482 	mov	a,#0x52
      000265 C0 E0            [24]  483 	push	acc
      000267 74 BF            [12]  484 	mov	a,#0xBF
      000269 C0 E0            [24]  485 	push	acc
      00026B 8C 82            [24]  486 	mov	dpl,r4
      00026D 8D 83            [24]  487 	mov	dph,r5
      00026F 8E F0            [24]  488 	mov	b,r6
      000271 EF               [12]  489 	mov	a,r7
      000272 12r00r00         [24]  490 	lcall	___fsadd
      000275 AC 82            [24]  491 	mov	r4,dpl
      000277 AD 83            [24]  492 	mov	r5,dph
      000279 AE F0            [24]  493 	mov	r6,b
      00027B FF               [12]  494 	mov	r7,a
      00027C E5 81            [12]  495 	mov	a,sp
      00027E 24 FC            [12]  496 	add	a,#0xfc
      000280 F5 81            [12]  497 	mov	sp,a
      000282 E5*00            [12]  498 	mov	a,_bp
      000284 24 0D            [12]  499 	add	a,#0x0d
      000286 F8               [12]  500 	mov	r0,a
      000287 E6               [12]  501 	mov	a,@r0
      000288 C0 E0            [24]  502 	push	acc
      00028A 08               [12]  503 	inc	r0
      00028B E6               [12]  504 	mov	a,@r0
      00028C C0 E0            [24]  505 	push	acc
      00028E 08               [12]  506 	inc	r0
      00028F E6               [12]  507 	mov	a,@r0
      000290 C0 E0            [24]  508 	push	acc
      000292 08               [12]  509 	inc	r0
      000293 E6               [12]  510 	mov	a,@r0
      000294 C0 E0            [24]  511 	push	acc
      000296 8C 82            [24]  512 	mov	dpl,r4
      000298 8D 83            [24]  513 	mov	dph,r5
      00029A 8E F0            [24]  514 	mov	b,r6
      00029C EF               [12]  515 	mov	a,r7
      00029D 12r00r00         [24]  516 	lcall	___fsmul
      0002A0 C8               [12]  517 	xch	a,r0
      0002A1 E5*00            [12]  518 	mov	a,_bp
      0002A3 24 05            [12]  519 	add	a,#0x05
      0002A5 C8               [12]  520 	xch	a,r0
      0002A6 A6 82            [24]  521 	mov	@r0,dpl
      0002A8 08               [12]  522 	inc	r0
      0002A9 A6 83            [24]  523 	mov	@r0,dph
      0002AB 08               [12]  524 	inc	r0
      0002AC A6 F0            [24]  525 	mov	@r0,b
      0002AE 08               [12]  526 	inc	r0
      0002AF F6               [12]  527 	mov	@r0,a
      0002B0 E5 81            [12]  528 	mov	a,sp
      0002B2 24 FC            [12]  529 	add	a,#0xfc
      0002B4 F5 81            [12]  530 	mov	sp,a
      0002B6 74 1A            [12]  531 	mov	a,#0x1A
      0002B8 C0 E0            [24]  532 	push	acc
      0002BA 74 2A            [12]  533 	mov	a,#0x2A
      0002BC C0 E0            [24]  534 	push	acc
      0002BE 74 1E            [12]  535 	mov	a,#0x1E
      0002C0 C0 E0            [24]  536 	push	acc
      0002C2 74 40            [12]  537 	mov	a,#0x40
      0002C4 C0 E0            [24]  538 	push	acc
      0002C6 E5*00            [12]  539 	mov	a,_bp
      0002C8 24 0D            [12]  540 	add	a,#0x0d
      0002CA F8               [12]  541 	mov	r0,a
      0002CB 86 82            [24]  542 	mov	dpl,@r0
      0002CD 08               [12]  543 	inc	r0
      0002CE 86 83            [24]  544 	mov	dph,@r0
      0002D0 08               [12]  545 	inc	r0
      0002D1 86 F0            [24]  546 	mov	b,@r0
      0002D3 08               [12]  547 	inc	r0
      0002D4 E6               [12]  548 	mov	a,@r0
      0002D5 12r00r00         [24]  549 	lcall	___fsadd
      0002D8 AA 82            [24]  550 	mov	r2,dpl
      0002DA AB 83            [24]  551 	mov	r3,dph
      0002DC AE F0            [24]  552 	mov	r6,b
      0002DE FF               [12]  553 	mov	r7,a
      0002DF E5 81            [12]  554 	mov	a,sp
      0002E1 24 FC            [12]  555 	add	a,#0xfc
      0002E3 F5 81            [12]  556 	mov	sp,a
      0002E5 C0 02            [24]  557 	push	ar2
      0002E7 C0 03            [24]  558 	push	ar3
      0002E9 C0 06            [24]  559 	push	ar6
      0002EB C0 07            [24]  560 	push	ar7
      0002ED E5*00            [12]  561 	mov	a,_bp
      0002EF 24 05            [12]  562 	add	a,#0x05
      0002F1 F8               [12]  563 	mov	r0,a
      0002F2 86 82            [24]  564 	mov	dpl,@r0
      0002F4 08               [12]  565 	inc	r0
      0002F5 86 83            [24]  566 	mov	dph,@r0
      0002F7 08               [12]  567 	inc	r0
      0002F8 86 F0            [24]  568 	mov	b,@r0
      0002FA 08               [12]  569 	inc	r0
      0002FB E6               [12]  570 	mov	a,@r0
      0002FC 12r00r00         [24]  571 	lcall	___fsdiv
      0002FF AC 82            [24]  572 	mov	r4,dpl
      000301 AD 83            [24]  573 	mov	r5,dph
      000303 AE F0            [24]  574 	mov	r6,b
      000305 FF               [12]  575 	mov	r7,a
      000306 E5 81            [12]  576 	mov	a,sp
      000308 24 FC            [12]  577 	add	a,#0xfc
      00030A F5 81            [12]  578 	mov	sp,a
      00030C C0 04            [24]  579 	push	ar4
      00030E C0 05            [24]  580 	push	ar5
      000310 C0 06            [24]  581 	push	ar6
      000312 C0 07            [24]  582 	push	ar7
      000314 E5*00            [12]  583 	mov	a,_bp
      000316 24 09            [12]  584 	add	a,#0x09
      000318 F8               [12]  585 	mov	r0,a
      000319 86 82            [24]  586 	mov	dpl,@r0
      00031B 08               [12]  587 	inc	r0
      00031C 86 83            [24]  588 	mov	dph,@r0
      00031E 08               [12]  589 	inc	r0
      00031F 86 F0            [24]  590 	mov	b,@r0
      000321 08               [12]  591 	inc	r0
      000322 E6               [12]  592 	mov	a,@r0
      000323 12r00r00         [24]  593 	lcall	___fsmul
      000326 AC 82            [24]  594 	mov	r4,dpl
      000328 AD 83            [24]  595 	mov	r5,dph
      00032A AE F0            [24]  596 	mov	r6,b
      00032C FF               [12]  597 	mov	r7,a
      00032D E5 81            [12]  598 	mov	a,sp
      00032F 24 FC            [12]  599 	add	a,#0xfc
      000331 F5 81            [12]  600 	mov	sp,a
      000333 C0 04            [24]  601 	push	ar4
      000335 C0 05            [24]  602 	push	ar5
      000337 C0 06            [24]  603 	push	ar6
      000339 C0 07            [24]  604 	push	ar7
      00033B E5*00            [12]  605 	mov	a,_bp
      00033D 24 09            [12]  606 	add	a,#0x09
      00033F F8               [12]  607 	mov	r0,a
      000340 86 82            [24]  608 	mov	dpl,@r0
      000342 08               [12]  609 	inc	r0
      000343 86 83            [24]  610 	mov	dph,@r0
      000345 08               [12]  611 	inc	r0
      000346 86 F0            [24]  612 	mov	b,@r0
      000348 08               [12]  613 	inc	r0
      000349 E6               [12]  614 	mov	a,@r0
      00034A 12r00r00         [24]  615 	lcall	___fsadd
      00034D AC 82            [24]  616 	mov	r4,dpl
      00034F AD 83            [24]  617 	mov	r5,dph
      000351 AE F0            [24]  618 	mov	r6,b
      000353 FF               [12]  619 	mov	r7,a
      000354 E5 81            [12]  620 	mov	a,sp
      000356 24 FC            [12]  621 	add	a,#0xfc
      000358 F5 81            [12]  622 	mov	sp,a
      00035A E5*00            [12]  623 	mov	a,_bp
      00035C 24 11            [12]  624 	add	a,#0x11
      00035E F8               [12]  625 	mov	r0,a
      00035F A6 04            [24]  626 	mov	@r0,ar4
      000361 08               [12]  627 	inc	r0
      000362 A6 05            [24]  628 	mov	@r0,ar5
      000364 08               [12]  629 	inc	r0
      000365 A6 06            [24]  630 	mov	@r0,ar6
      000367 08               [12]  631 	inc	r0
      000368 A6 07            [24]  632 	mov	@r0,ar7
      00036A                        633 00109$:
                                    634 ;	tanhf.c:67: if(x<0.0) r=-r;
      00036A E4               [12]  635 	clr	a
      00036B C0 E0            [24]  636 	push	acc
      00036D C0 E0            [24]  637 	push	acc
      00036F C0 E0            [24]  638 	push	acc
      000371 C0 E0            [24]  639 	push	acc
      000373 A8*00            [24]  640 	mov	r0,_bp
      000375 08               [12]  641 	inc	r0
      000376 86 82            [24]  642 	mov	dpl,@r0
      000378 08               [12]  643 	inc	r0
      000379 86 83            [24]  644 	mov	dph,@r0
      00037B 08               [12]  645 	inc	r0
      00037C 86 F0            [24]  646 	mov	b,@r0
      00037E 08               [12]  647 	inc	r0
      00037F E6               [12]  648 	mov	a,@r0
      000380 12r00r00         [24]  649 	lcall	___fslt
      000383 AF 82            [24]  650 	mov	r7,dpl
      000385 E5 81            [12]  651 	mov	a,sp
      000387 24 FC            [12]  652 	add	a,#0xfc
      000389 F5 81            [12]  653 	mov	sp,a
      00038B EF               [12]  654 	mov	a,r7
      00038C 60 12            [24]  655 	jz	00111$
      00038E E5*00            [12]  656 	mov	a,_bp
      000390 24 11            [12]  657 	add	a,#0x11
      000392 F8               [12]  658 	mov	r0,a
      000393 E6               [12]  659 	mov	a,@r0
      000394 F6               [12]  660 	mov	@r0,a
      000395 08               [12]  661 	inc	r0
      000396 E6               [12]  662 	mov	a,@r0
      000397 F6               [12]  663 	mov	@r0,a
      000398 08               [12]  664 	inc	r0
      000399 E6               [12]  665 	mov	a,@r0
      00039A F6               [12]  666 	mov	@r0,a
      00039B 08               [12]  667 	inc	r0
      00039C E6               [12]  668 	mov	a,@r0
      00039D B2 E7            [12]  669 	cpl	acc.7
      00039F F6               [12]  670 	mov	@r0,a
      0003A0                        671 00111$:
                                    672 ;	tanhf.c:68: return r;
      0003A0 E5*00            [12]  673 	mov	a,_bp
      0003A2 24 11            [12]  674 	add	a,#0x11
      0003A4 F8               [12]  675 	mov	r0,a
      0003A5 86 82            [24]  676 	mov	dpl,@r0
      0003A7 08               [12]  677 	inc	r0
      0003A8 86 83            [24]  678 	mov	dph,@r0
      0003AA 08               [12]  679 	inc	r0
      0003AB 86 F0            [24]  680 	mov	b,@r0
      0003AD 08               [12]  681 	inc	r0
      0003AE E6               [12]  682 	mov	a,@r0
      0003AF 85*00 81         [24]  683 	mov	sp,_bp
      0003B2 D0*00            [24]  684 	pop	_bp
      0003B4 22               [24]  685 	ret
                                    686 	.area CSEG    (CODE)
                                    687 	.area CONST   (CODE)
                                    688 	.area XINIT   (CODE)
                                    689 	.area CABS    (ABS,CODE)
