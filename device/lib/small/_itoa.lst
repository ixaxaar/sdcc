                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:27:51 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _itoa
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl __itoa
                                     13 	.globl __uitoa
                                     14 	.globl __itoa_PARM_3
                                     15 	.globl __itoa_PARM_2
                                     16 	.globl __uitoa_PARM_3
                                     17 	.globl __uitoa_PARM_2
                                     18 ;--------------------------------------------------------
                                     19 ; special function registers
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; special function bits
                                     25 ;--------------------------------------------------------
                                     26 	.area RSEG    (ABS,DATA)
      000000                         27 	.org 0x0000
                                     28 ;--------------------------------------------------------
                                     29 ; overlayable register banks
                                     30 ;--------------------------------------------------------
                                     31 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         32 	.ds 8
                                     33 ;--------------------------------------------------------
                                     34 ; internal ram data
                                     35 ;--------------------------------------------------------
                                     36 	.area DSEG    (DATA)
      000000                         37 __uitoa_PARM_2:
      000000                         38 	.ds 3
      000003                         39 __uitoa_PARM_3:
      000003                         40 	.ds 1
      000004                         41 __uitoa_value_1_1:
      000004                         42 	.ds 2
      000006                         43 __uitoa_index_1_2:
      000006                         44 	.ds 1
      000007                         45 __uitoa_i_1_2:
      000007                         46 	.ds 1
      000008                         47 __uitoa_tmp_2_4:
      000008                         48 	.ds 1
      000009                         49 __itoa_PARM_2:
      000009                         50 	.ds 3
      00000C                         51 __itoa_PARM_3:
      00000C                         52 	.ds 1
                                     53 ;--------------------------------------------------------
                                     54 ; overlayable items in internal ram 
                                     55 ;--------------------------------------------------------
                                     56 ;--------------------------------------------------------
                                     57 ; indirectly addressable internal ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area ISEG    (DATA)
                                     60 ;--------------------------------------------------------
                                     61 ; absolute internal ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area IABS    (ABS,DATA)
                                     64 	.area IABS    (ABS,DATA)
                                     65 ;--------------------------------------------------------
                                     66 ; bit data
                                     67 ;--------------------------------------------------------
                                     68 	.area BSEG    (BIT)
                                     69 ;--------------------------------------------------------
                                     70 ; paged external ram data
                                     71 ;--------------------------------------------------------
                                     72 	.area PSEG    (PAG,XDATA)
                                     73 ;--------------------------------------------------------
                                     74 ; external ram data
                                     75 ;--------------------------------------------------------
                                     76 	.area XSEG    (XDATA)
                                     77 ;--------------------------------------------------------
                                     78 ; absolute external ram data
                                     79 ;--------------------------------------------------------
                                     80 	.area XABS    (ABS,XDATA)
                                     81 ;--------------------------------------------------------
                                     82 ; external initialized ram data
                                     83 ;--------------------------------------------------------
                                     84 	.area XISEG   (XDATA)
                                     85 	.area HOME    (CODE)
                                     86 	.area GSINIT0 (CODE)
                                     87 	.area GSINIT1 (CODE)
                                     88 	.area GSINIT2 (CODE)
                                     89 	.area GSINIT3 (CODE)
                                     90 	.area GSINIT4 (CODE)
                                     91 	.area GSINIT5 (CODE)
                                     92 	.area GSINIT  (CODE)
                                     93 	.area GSFINAL (CODE)
                                     94 	.area CSEG    (CODE)
                                     95 ;--------------------------------------------------------
                                     96 ; global & static initialisations
                                     97 ;--------------------------------------------------------
                                     98 	.area HOME    (CODE)
                                     99 	.area GSINIT  (CODE)
                                    100 	.area GSFINAL (CODE)
                                    101 	.area GSINIT  (CODE)
                                    102 ;--------------------------------------------------------
                                    103 ; Home
                                    104 ;--------------------------------------------------------
                                    105 	.area HOME    (CODE)
                                    106 	.area HOME    (CODE)
                                    107 ;--------------------------------------------------------
                                    108 ; code
                                    109 ;--------------------------------------------------------
                                    110 	.area CSEG    (CODE)
                                    111 ;------------------------------------------------------------
                                    112 ;Allocation info for local variables in function '_uitoa'
                                    113 ;------------------------------------------------------------
                                    114 ;string                    Allocated with name '__uitoa_PARM_2'
                                    115 ;radix                     Allocated with name '__uitoa_PARM_3'
                                    116 ;value                     Allocated with name '__uitoa_value_1_1'
                                    117 ;index                     Allocated with name '__uitoa_index_1_2'
                                    118 ;i                         Allocated with name '__uitoa_i_1_2'
                                    119 ;tmp                       Allocated with name '__uitoa_tmp_2_4'
                                    120 ;------------------------------------------------------------
                                    121 ;	_itoa.c:40: void _uitoa(unsigned int value, char* string, unsigned char radix)
                                    122 ;	-----------------------------------------
                                    123 ;	 function _uitoa
                                    124 ;	-----------------------------------------
      000000                        125 __uitoa:
                           000007   126 	ar7 = 0x07
                           000006   127 	ar6 = 0x06
                           000005   128 	ar5 = 0x05
                           000004   129 	ar4 = 0x04
                           000003   130 	ar3 = 0x03
                           000002   131 	ar2 = 0x02
                           000001   132 	ar1 = 0x01
                           000000   133 	ar0 = 0x00
      000000 85 82*04         [24]  134 	mov	__uitoa_value_1_1,dpl
      000003 85 83*05         [24]  135 	mov	(__uitoa_value_1_1 + 1),dph
                                    136 ;	_itoa.c:45: do {
      000006 75*06 00         [24]  137 	mov	__uitoa_index_1_2,#0x00
      000009                        138 00103$:
                                    139 ;	_itoa.c:46: string[index] = '0' + (value % radix);
      000009 E5*06            [12]  140 	mov	a,__uitoa_index_1_2
      00000B 25*00            [12]  141 	add	a,__uitoa_PARM_2
      00000D FA               [12]  142 	mov	r2,a
      00000E E4               [12]  143 	clr	a
      00000F 35*01            [12]  144 	addc	a,(__uitoa_PARM_2 + 1)
      000011 FB               [12]  145 	mov	r3,a
      000012 AC*02            [24]  146 	mov	r4,(__uitoa_PARM_2 + 2)
      000014 A8*03            [24]  147 	mov	r0,__uitoa_PARM_3
      000016 79 00            [12]  148 	mov	r1,#0x00
      000018 88*00            [24]  149 	mov	__moduint_PARM_2,r0
      00001A 89*01            [24]  150 	mov	(__moduint_PARM_2 + 1),r1
      00001C 85*04 82         [24]  151 	mov	dpl,__uitoa_value_1_1
      00001F 85*05 83         [24]  152 	mov	dph,(__uitoa_value_1_1 + 1)
      000022 C0 04            [24]  153 	push	ar4
      000024 C0 03            [24]  154 	push	ar3
      000026 C0 02            [24]  155 	push	ar2
      000028 C0 01            [24]  156 	push	ar1
      00002A C0 00            [24]  157 	push	ar0
      00002C 12r00r00         [24]  158 	lcall	__moduint
      00002F AD 82            [24]  159 	mov	r5,dpl
      000031 AF 83            [24]  160 	mov	r7,dph
      000033 D0 00            [24]  161 	pop	ar0
      000035 D0 01            [24]  162 	pop	ar1
      000037 D0 02            [24]  163 	pop	ar2
      000039 D0 03            [24]  164 	pop	ar3
      00003B D0 04            [24]  165 	pop	ar4
      00003D 74 30            [12]  166 	mov	a,#0x30
      00003F 2D               [12]  167 	add	a,r5
      000040 FD               [12]  168 	mov	r5,a
      000041 8A 82            [24]  169 	mov	dpl,r2
      000043 8B 83            [24]  170 	mov	dph,r3
      000045 8C F0            [24]  171 	mov	b,r4
      000047 12r00r00         [24]  172 	lcall	__gptrput
                                    173 ;	_itoa.c:47: if (string[index] > '9')
      00004A C3               [12]  174 	clr	c
      00004B 74 B9            [12]  175 	mov	a,#(0x39 ^ 0x80)
      00004D 8D F0            [24]  176 	mov	b,r5
      00004F 63 F0 80         [24]  177 	xrl	b,#0x80
      000052 95 F0            [12]  178 	subb	a,b
      000054 50 15            [24]  179 	jnc	00102$
                                    180 ;	_itoa.c:48: string[index] += 'A' - '9' - 1;
      000056 8A 82            [24]  181 	mov	dpl,r2
      000058 8B 83            [24]  182 	mov	dph,r3
      00005A 8C F0            [24]  183 	mov	b,r4
      00005C 12r00r00         [24]  184 	lcall	__gptrget
      00005F 24 07            [12]  185 	add	a,#0x07
      000061 FF               [12]  186 	mov	r7,a
      000062 8A 82            [24]  187 	mov	dpl,r2
      000064 8B 83            [24]  188 	mov	dph,r3
      000066 8C F0            [24]  189 	mov	b,r4
      000068 12r00r00         [24]  190 	lcall	__gptrput
      00006B                        191 00102$:
                                    192 ;	_itoa.c:49: value /= radix;
      00006B 88*00            [24]  193 	mov	__divuint_PARM_2,r0
      00006D 89*01            [24]  194 	mov	(__divuint_PARM_2 + 1),r1
      00006F 85*04 82         [24]  195 	mov	dpl,__uitoa_value_1_1
      000072 85*05 83         [24]  196 	mov	dph,(__uitoa_value_1_1 + 1)
      000075 12r00r00         [24]  197 	lcall	__divuint
      000078 85 82*04         [24]  198 	mov	__uitoa_value_1_1,dpl
      00007B 85 83*05         [24]  199 	mov	(__uitoa_value_1_1 + 1),dph
                                    200 ;	_itoa.c:50: ++index;
      00007E 05*06            [12]  201 	inc	__uitoa_index_1_2
                                    202 ;	_itoa.c:51: } while (value != 0);
      000080 E5*04            [12]  203 	mov	a,__uitoa_value_1_1
      000082 45*05            [12]  204 	orl	a,(__uitoa_value_1_1 + 1)
      000084 60 03            [24]  205 	jz	00129$
      000086 02r00r09         [24]  206 	ljmp	00103$
      000089                        207 00129$:
                                    208 ;	_itoa.c:54: string[index--] = '\0';
      000089 E5*06            [12]  209 	mov	a,__uitoa_index_1_2
      00008B 14               [12]  210 	dec	a
      00008C FF               [12]  211 	mov	r7,a
      00008D E5*06            [12]  212 	mov	a,__uitoa_index_1_2
      00008F 25*00            [12]  213 	add	a,__uitoa_PARM_2
      000091 FC               [12]  214 	mov	r4,a
      000092 E4               [12]  215 	clr	a
      000093 35*01            [12]  216 	addc	a,(__uitoa_PARM_2 + 1)
      000095 FD               [12]  217 	mov	r5,a
      000096 AE*02            [24]  218 	mov	r6,(__uitoa_PARM_2 + 2)
      000098 8C 82            [24]  219 	mov	dpl,r4
      00009A 8D 83            [24]  220 	mov	dph,r5
      00009C 8E F0            [24]  221 	mov	b,r6
      00009E E4               [12]  222 	clr	a
      00009F 12r00r00         [24]  223 	lcall	__gptrput
                                    224 ;	_itoa.c:57: while (index > i) {
                                    225 ;	1-genFromRTrack replaced	mov	__uitoa_i_1_2,#0x00
      0000A2 F5*07            [12]  226 	mov	__uitoa_i_1_2,a
      0000A4                        227 00106$:
      0000A4 C3               [12]  228 	clr	c
      0000A5 E5*07            [12]  229 	mov	a,__uitoa_i_1_2
      0000A7 64 80            [12]  230 	xrl	a,#0x80
      0000A9 8F F0            [24]  231 	mov	b,r7
      0000AB 63 F0 80         [24]  232 	xrl	b,#0x80
      0000AE 95 F0            [12]  233 	subb	a,b
      0000B0 50 43            [24]  234 	jnc	00109$
                                    235 ;	_itoa.c:58: char tmp = string[i];
      0000B2 E5*07            [12]  236 	mov	a,__uitoa_i_1_2
      0000B4 25*00            [12]  237 	add	a,__uitoa_PARM_2
      0000B6 FB               [12]  238 	mov	r3,a
      0000B7 E4               [12]  239 	clr	a
      0000B8 35*01            [12]  240 	addc	a,(__uitoa_PARM_2 + 1)
      0000BA FC               [12]  241 	mov	r4,a
      0000BB AD*02            [24]  242 	mov	r5,(__uitoa_PARM_2 + 2)
      0000BD 8B 82            [24]  243 	mov	dpl,r3
      0000BF 8C 83            [24]  244 	mov	dph,r4
      0000C1 8D F0            [24]  245 	mov	b,r5
      0000C3 12r00r00         [24]  246 	lcall	__gptrget
      0000C6 F5*08            [12]  247 	mov	__uitoa_tmp_2_4,a
                                    248 ;	_itoa.c:59: string[i] = string[index];
      0000C8 EF               [12]  249 	mov	a,r7
      0000C9 25*00            [12]  250 	add	a,__uitoa_PARM_2
      0000CB F8               [12]  251 	mov	r0,a
      0000CC E4               [12]  252 	clr	a
      0000CD 35*01            [12]  253 	addc	a,(__uitoa_PARM_2 + 1)
      0000CF F9               [12]  254 	mov	r1,a
      0000D0 AA*02            [24]  255 	mov	r2,(__uitoa_PARM_2 + 2)
      0000D2 88 82            [24]  256 	mov	dpl,r0
      0000D4 89 83            [24]  257 	mov	dph,r1
      0000D6 8A F0            [24]  258 	mov	b,r2
      0000D8 12r00r00         [24]  259 	lcall	__gptrget
      0000DB FE               [12]  260 	mov	r6,a
      0000DC 8B 82            [24]  261 	mov	dpl,r3
      0000DE 8C 83            [24]  262 	mov	dph,r4
      0000E0 8D F0            [24]  263 	mov	b,r5
      0000E2 12r00r00         [24]  264 	lcall	__gptrput
                                    265 ;	_itoa.c:60: string[index] = tmp;
      0000E5 88 82            [24]  266 	mov	dpl,r0
      0000E7 89 83            [24]  267 	mov	dph,r1
      0000E9 8A F0            [24]  268 	mov	b,r2
      0000EB E5*08            [12]  269 	mov	a,__uitoa_tmp_2_4
      0000ED 12r00r00         [24]  270 	lcall	__gptrput
                                    271 ;	_itoa.c:61: ++i;
      0000F0 05*07            [12]  272 	inc	__uitoa_i_1_2
                                    273 ;	_itoa.c:62: --index;
      0000F2 1F               [12]  274 	dec	r7
      0000F3 80 AF            [24]  275 	sjmp	00106$
      0000F5                        276 00109$:
      0000F5 22               [24]  277 	ret
                                    278 ;------------------------------------------------------------
                                    279 ;Allocation info for local variables in function '_itoa'
                                    280 ;------------------------------------------------------------
                                    281 ;string                    Allocated with name '__itoa_PARM_2'
                                    282 ;radix                     Allocated with name '__itoa_PARM_3'
                                    283 ;value                     Allocated to registers r6 r7 
                                    284 ;------------------------------------------------------------
                                    285 ;	_itoa.c:66: void _itoa(int value, char* string, unsigned char radix)
                                    286 ;	-----------------------------------------
                                    287 ;	 function _itoa
                                    288 ;	-----------------------------------------
      0000F6                        289 __itoa:
      0000F6 AE 82            [24]  290 	mov	r6,dpl
                                    291 ;	_itoa.c:68: if (value < 0 && radix == 10) {
      0000F8 E5 83            [12]  292 	mov	a,dph
      0000FA FF               [12]  293 	mov	r7,a
      0000FB 30 E7 28         [24]  294 	jnb	acc.7,00102$
      0000FE 74 0A            [12]  295 	mov	a,#0x0A
      000100 B5*0C 23         [24]  296 	cjne	a,__itoa_PARM_3,00102$
                                    297 ;	_itoa.c:69: *string++ = '-';
      000103 AB*09            [24]  298 	mov	r3,__itoa_PARM_2
      000105 AC*0A            [24]  299 	mov	r4,(__itoa_PARM_2 + 1)
      000107 AD*0B            [24]  300 	mov	r5,(__itoa_PARM_2 + 2)
      000109 8B 82            [24]  301 	mov	dpl,r3
      00010B 8C 83            [24]  302 	mov	dph,r4
      00010D 8D F0            [24]  303 	mov	b,r5
      00010F 74 2D            [12]  304 	mov	a,#0x2D
      000111 12r00r00         [24]  305 	lcall	__gptrput
      000114 74 01            [12]  306 	mov	a,#0x01
      000116 2B               [12]  307 	add	a,r3
      000117 F5*09            [12]  308 	mov	__itoa_PARM_2,a
      000119 E4               [12]  309 	clr	a
      00011A 3C               [12]  310 	addc	a,r4
      00011B F5*0A            [12]  311 	mov	(__itoa_PARM_2 + 1),a
      00011D 8D*0B            [24]  312 	mov	(__itoa_PARM_2 + 2),r5
                                    313 ;	_itoa.c:70: value = -value;
      00011F C3               [12]  314 	clr	c
      000120 E4               [12]  315 	clr	a
      000121 9E               [12]  316 	subb	a,r6
      000122 FE               [12]  317 	mov	r6,a
      000123 E4               [12]  318 	clr	a
      000124 9F               [12]  319 	subb	a,r7
      000125 FF               [12]  320 	mov	r7,a
      000126                        321 00102$:
                                    322 ;	_itoa.c:72: _uitoa(value, string, radix);
      000126 85*09*00         [24]  323 	mov	__uitoa_PARM_2,__itoa_PARM_2
      000129 85*0A*01         [24]  324 	mov	(__uitoa_PARM_2 + 1),(__itoa_PARM_2 + 1)
      00012C 85*0B*02         [24]  325 	mov	(__uitoa_PARM_2 + 2),(__itoa_PARM_2 + 2)
      00012F 85*0C*03         [24]  326 	mov	__uitoa_PARM_3,__itoa_PARM_3
      000132 8E 82            [24]  327 	mov	dpl,r6
      000134 8F 83            [24]  328 	mov	dph,r7
      000136 02r00r00         [24]  329 	ljmp	__uitoa
                                    330 	.area CSEG    (CODE)
                                    331 	.area CONST   (CODE)
                                    332 	.area XINIT   (CODE)
                                    333 	.area CABS    (ABS,CODE)
