                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:11 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _strcmp
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _strcmp
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram 
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
                                     48 ;--------------------------------------------------------
                                     49 ; paged external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area PSEG    (PAG,XDATA)
                                     52 ;--------------------------------------------------------
                                     53 ; external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area XSEG    (XDATA)
                                     56 ;--------------------------------------------------------
                                     57 ; absolute external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XABS    (ABS,XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; external initialized ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XISEG   (XDATA)
                                     64 	.area HOME    (CODE)
                                     65 	.area GSINIT0 (CODE)
                                     66 	.area GSINIT1 (CODE)
                                     67 	.area GSINIT2 (CODE)
                                     68 	.area GSINIT3 (CODE)
                                     69 	.area GSINIT4 (CODE)
                                     70 	.area GSINIT5 (CODE)
                                     71 	.area GSINIT  (CODE)
                                     72 	.area GSFINAL (CODE)
                                     73 	.area CSEG    (CODE)
                                     74 ;--------------------------------------------------------
                                     75 ; global & static initialisations
                                     76 ;--------------------------------------------------------
                                     77 	.area HOME    (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; Home
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area HOME    (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; code
                                     88 ;--------------------------------------------------------
                                     89 	.area CSEG    (CODE)
                                     90 ;------------------------------------------------------------
                                     91 ;Allocation info for local variables in function 'strcmp'
                                     92 ;------------------------------------------------------------
                                     93 ;adst                      Allocated to stack - _bp -5
                                     94 ;asrc                      Allocated to registers 
                                     95 ;ret                       Allocated to stack - _bp +4
                                     96 ;sloc0                     Allocated to stack - _bp +1
                                     97 ;sloc1                     Allocated to stack - _bp +4
                                     98 ;------------------------------------------------------------
                                     99 ;	_strcmp.c:34: int strcmp (
                                    100 ;	-----------------------------------------
                                    101 ;	 function strcmp
                                    102 ;	-----------------------------------------
      000000                        103 _strcmp:
                           000007   104 	ar7 = 0x07
                           000006   105 	ar6 = 0x06
                           000005   106 	ar5 = 0x05
                           000004   107 	ar4 = 0x04
                           000003   108 	ar3 = 0x03
                           000002   109 	ar2 = 0x02
                           000001   110 	ar1 = 0x01
                           000000   111 	ar0 = 0x00
      000000 C0*00            [24]  112 	push	_bp
      000002 85 81*00         [24]  113 	mov	_bp,sp
      000005 C0 82            [24]  114 	push	dpl
      000007 C0 83            [24]  115 	push	dph
      000009 C0 F0            [24]  116 	push	b
      00000B 05 81            [12]  117 	inc	sp
      00000D 05 81            [12]  118 	inc	sp
                                    119 ;	_strcmp.c:53: while( ! (ret = *(unsigned char *)asrc - *(unsigned char *)adst) && *adst)
      00000F E5*00            [12]  120 	mov	a,_bp
      000011 24 FB            [12]  121 	add	a,#0xfb
      000013 F8               [12]  122 	mov	r0,a
      000014 86 02            [24]  123 	mov	ar2,@r0
      000016 08               [12]  124 	inc	r0
      000017 86 03            [24]  125 	mov	ar3,@r0
      000019 08               [12]  126 	inc	r0
      00001A 86 04            [24]  127 	mov	ar4,@r0
      00001C                        128 00102$:
      00001C A8*00            [24]  129 	mov	r0,_bp
      00001E 08               [12]  130 	inc	r0
      00001F 86 05            [24]  131 	mov	ar5,@r0
      000021 08               [12]  132 	inc	r0
      000022 86 06            [24]  133 	mov	ar6,@r0
      000024 08               [12]  134 	inc	r0
      000025 86 07            [24]  135 	mov	ar7,@r0
      000027 8D 82            [24]  136 	mov	dpl,r5
      000029 8E 83            [24]  137 	mov	dph,r6
      00002B 8F F0            [24]  138 	mov	b,r7
      00002D 12r00r00         [24]  139 	lcall	__gptrget
      000030 FD               [12]  140 	mov	r5,a
      000031 E5*00            [12]  141 	mov	a,_bp
      000033 24 04            [12]  142 	add	a,#0x04
      000035 F8               [12]  143 	mov	r0,a
      000036 A6 05            [24]  144 	mov	@r0,ar5
      000038 08               [12]  145 	inc	r0
      000039 76 00            [12]  146 	mov	@r0,#0x00
      00003B 8A 05            [24]  147 	mov	ar5,r2
      00003D 8B 06            [24]  148 	mov	ar6,r3
      00003F 8C 07            [24]  149 	mov	ar7,r4
      000041 8D 82            [24]  150 	mov	dpl,r5
      000043 8E 83            [24]  151 	mov	dph,r6
      000045 8F F0            [24]  152 	mov	b,r7
      000047 12r00r00         [24]  153 	lcall	__gptrget
      00004A FD               [12]  154 	mov	r5,a
      00004B 7F 00            [12]  155 	mov	r7,#0x00
      00004D E5*00            [12]  156 	mov	a,_bp
      00004F 24 04            [12]  157 	add	a,#0x04
      000051 F8               [12]  158 	mov	r0,a
      000052 E6               [12]  159 	mov	a,@r0
      000053 C3               [12]  160 	clr	c
      000054 9D               [12]  161 	subb	a,r5
      000055 FD               [12]  162 	mov	r5,a
      000056 08               [12]  163 	inc	r0
      000057 E6               [12]  164 	mov	a,@r0
      000058 9F               [12]  165 	subb	a,r7
      000059 FF               [12]  166 	mov	r7,a
      00005A E5*00            [12]  167 	mov	a,_bp
      00005C 24 04            [12]  168 	add	a,#0x04
      00005E F8               [12]  169 	mov	r0,a
      00005F A6 05            [24]  170 	mov	@r0,ar5
      000061 08               [12]  171 	inc	r0
      000062 A6 07            [24]  172 	mov	@r0,ar7
      000064 ED               [12]  173 	mov	a,r5
      000065 4F               [12]  174 	orl	a,r7
      000066 70 1B            [24]  175 	jnz	00104$
      000068 8A 82            [24]  176 	mov	dpl,r2
      00006A 8B 83            [24]  177 	mov	dph,r3
      00006C 8C F0            [24]  178 	mov	b,r4
      00006E 12r00r00         [24]  179 	lcall	__gptrget
      000071 60 10            [24]  180 	jz	00104$
                                    181 ;	_strcmp.c:54: ++asrc, ++adst;
      000073 A8*00            [24]  182 	mov	r0,_bp
      000075 08               [12]  183 	inc	r0
      000076 06               [12]  184 	inc	@r0
      000077 B6 00 02         [24]  185 	cjne	@r0,#0x00,00119$
      00007A 08               [12]  186 	inc	r0
      00007B 06               [12]  187 	inc	@r0
      00007C                        188 00119$:
      00007C 0A               [12]  189 	inc	r2
      00007D BA 00 9C         [24]  190 	cjne	r2,#0x00,00102$
      000080 0B               [12]  191 	inc	r3
      000081 80 99            [24]  192 	sjmp	00102$
      000083                        193 00104$:
                                    194 ;	_strcmp.c:56: return( ret );
      000083 E5*00            [12]  195 	mov	a,_bp
      000085 24 04            [12]  196 	add	a,#0x04
      000087 F8               [12]  197 	mov	r0,a
      000088 86 82            [24]  198 	mov	dpl,@r0
      00008A 08               [12]  199 	inc	r0
      00008B 86 83            [24]  200 	mov	dph,@r0
      00008D 85*00 81         [24]  201 	mov	sp,_bp
      000090 D0*00            [24]  202 	pop	_bp
      000092 22               [24]  203 	ret
                                    204 	.area CSEG    (CODE)
                                    205 	.area CONST   (CODE)
                                    206 	.area XINIT   (CODE)
                                    207 	.area CABS    (ABS,CODE)
