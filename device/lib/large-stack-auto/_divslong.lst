                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:10 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _divslong
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl __divslong
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram 
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
                                     48 ;--------------------------------------------------------
                                     49 ; paged external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area PSEG    (PAG,XDATA)
                                     52 ;--------------------------------------------------------
                                     53 ; external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area XSEG    (XDATA)
                                     56 ;--------------------------------------------------------
                                     57 ; absolute external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XABS    (ABS,XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; external initialized ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XISEG   (XDATA)
                                     64 	.area HOME    (CODE)
                                     65 	.area GSINIT0 (CODE)
                                     66 	.area GSINIT1 (CODE)
                                     67 	.area GSINIT2 (CODE)
                                     68 	.area GSINIT3 (CODE)
                                     69 	.area GSINIT4 (CODE)
                                     70 	.area GSINIT5 (CODE)
                                     71 	.area GSINIT  (CODE)
                                     72 	.area GSFINAL (CODE)
                                     73 	.area CSEG    (CODE)
                                     74 ;--------------------------------------------------------
                                     75 ; global & static initialisations
                                     76 ;--------------------------------------------------------
                                     77 	.area HOME    (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; Home
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area HOME    (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; code
                                     88 ;--------------------------------------------------------
                                     89 	.area CSEG    (CODE)
                                     90 ;------------------------------------------------------------
                                     91 ;Allocation info for local variables in function '_divslong'
                                     92 ;------------------------------------------------------------
                                     93 ;y                         Allocated to stack - _bp -6
                                     94 ;x                         Allocated to registers r4 r5 r6 r7 
                                     95 ;r                         Allocated to stack - _bp +9
                                     96 ;sloc0                     Allocated to stack - _bp +1
                                     97 ;sloc1                     Allocated to stack - _bp +5
                                     98 ;------------------------------------------------------------
                                     99 ;	_divslong.c:259: _divslong (long x, long y)
                                    100 ;	-----------------------------------------
                                    101 ;	 function _divslong
                                    102 ;	-----------------------------------------
      000000                        103 __divslong:
                           000007   104 	ar7 = 0x07
                           000006   105 	ar6 = 0x06
                           000005   106 	ar5 = 0x05
                           000004   107 	ar4 = 0x04
                           000003   108 	ar3 = 0x03
                           000002   109 	ar2 = 0x02
                           000001   110 	ar1 = 0x01
                           000000   111 	ar0 = 0x00
      000000 C0*00            [24]  112 	push	_bp
      000002 85 81*00         [24]  113 	mov	_bp,sp
      000005 AC 82            [24]  114 	mov	r4,dpl
      000007 AD 83            [24]  115 	mov	r5,dph
      000009 AE F0            [24]  116 	mov	r6,b
      00000B FF               [12]  117 	mov	r7,a
      00000C E5 81            [12]  118 	mov	a,sp
      00000E 24 0C            [12]  119 	add	a,#0x0C
      000010 F5 81            [12]  120 	mov	sp,a
                                    121 ;	_divslong.c:263: r = (unsigned long)(x < 0 ? -x : x) / (unsigned long)(y < 0 ? -y : y);
      000012 EF               [12]  122 	mov	a,r7
      000013 33               [12]  123 	rlc	a
      000014 E4               [12]  124 	clr	a
      000015 33               [12]  125 	rlc	a
      000016 FB               [12]  126 	mov	r3,a
      000017 60 15            [24]  127 	jz	00106$
      000019 A8*00            [24]  128 	mov	r0,_bp
      00001B 08               [12]  129 	inc	r0
      00001C C3               [12]  130 	clr	c
      00001D E4               [12]  131 	clr	a
      00001E 9C               [12]  132 	subb	a,r4
      00001F F6               [12]  133 	mov	@r0,a
      000020 E4               [12]  134 	clr	a
      000021 9D               [12]  135 	subb	a,r5
      000022 08               [12]  136 	inc	r0
      000023 F6               [12]  137 	mov	@r0,a
      000024 E4               [12]  138 	clr	a
      000025 9E               [12]  139 	subb	a,r6
      000026 08               [12]  140 	inc	r0
      000027 F6               [12]  141 	mov	@r0,a
      000028 E4               [12]  142 	clr	a
      000029 9F               [12]  143 	subb	a,r7
      00002A 08               [12]  144 	inc	r0
      00002B F6               [12]  145 	mov	@r0,a
      00002C 80 0E            [24]  146 	sjmp	00107$
      00002E                        147 00106$:
      00002E A8*00            [24]  148 	mov	r0,_bp
      000030 08               [12]  149 	inc	r0
      000031 A6 04            [24]  150 	mov	@r0,ar4
      000033 08               [12]  151 	inc	r0
      000034 A6 05            [24]  152 	mov	@r0,ar5
      000036 08               [12]  153 	inc	r0
      000037 A6 06            [24]  154 	mov	@r0,ar6
      000039 08               [12]  155 	inc	r0
      00003A A6 07            [24]  156 	mov	@r0,ar7
      00003C                        157 00107$:
      00003C A8*00            [24]  158 	mov	r0,_bp
      00003E 08               [12]  159 	inc	r0
      00003F E5*00            [12]  160 	mov	a,_bp
      000041 24 05            [12]  161 	add	a,#0x05
      000043 F9               [12]  162 	mov	r1,a
      000044 E6               [12]  163 	mov	a,@r0
      000045 F7               [12]  164 	mov	@r1,a
      000046 08               [12]  165 	inc	r0
      000047 09               [12]  166 	inc	r1
      000048 E6               [12]  167 	mov	a,@r0
      000049 F7               [12]  168 	mov	@r1,a
      00004A 08               [12]  169 	inc	r0
      00004B 09               [12]  170 	inc	r1
      00004C E6               [12]  171 	mov	a,@r0
      00004D F7               [12]  172 	mov	@r1,a
      00004E 08               [12]  173 	inc	r0
      00004F 09               [12]  174 	inc	r1
      000050 E6               [12]  175 	mov	a,@r0
      000051 F7               [12]  176 	mov	@r1,a
      000052 E5*00            [12]  177 	mov	a,_bp
      000054 24 FA            [12]  178 	add	a,#0xfa
      000056 F8               [12]  179 	mov	r0,a
      000057 08               [12]  180 	inc	r0
      000058 08               [12]  181 	inc	r0
      000059 08               [12]  182 	inc	r0
      00005A E6               [12]  183 	mov	a,@r0
      00005B 33               [12]  184 	rlc	a
      00005C E4               [12]  185 	clr	a
      00005D 33               [12]  186 	rlc	a
      00005E FA               [12]  187 	mov	r2,a
      00005F 60 17            [24]  188 	jz	00108$
      000061 E5*00            [12]  189 	mov	a,_bp
      000063 24 FA            [12]  190 	add	a,#0xfa
      000065 F8               [12]  191 	mov	r0,a
      000066 C3               [12]  192 	clr	c
      000067 E4               [12]  193 	clr	a
      000068 96               [12]  194 	subb	a,@r0
      000069 FC               [12]  195 	mov	r4,a
      00006A 08               [12]  196 	inc	r0
      00006B E4               [12]  197 	clr	a
      00006C 96               [12]  198 	subb	a,@r0
      00006D FD               [12]  199 	mov	r5,a
      00006E 08               [12]  200 	inc	r0
      00006F E4               [12]  201 	clr	a
      000070 96               [12]  202 	subb	a,@r0
      000071 FE               [12]  203 	mov	r6,a
      000072 08               [12]  204 	inc	r0
      000073 E4               [12]  205 	clr	a
      000074 96               [12]  206 	subb	a,@r0
      000075 FF               [12]  207 	mov	r7,a
      000076 80 10            [24]  208 	sjmp	00109$
      000078                        209 00108$:
      000078 E5*00            [12]  210 	mov	a,_bp
      00007A 24 FA            [12]  211 	add	a,#0xfa
      00007C F8               [12]  212 	mov	r0,a
      00007D 86 04            [24]  213 	mov	ar4,@r0
      00007F 08               [12]  214 	inc	r0
      000080 86 05            [24]  215 	mov	ar5,@r0
      000082 08               [12]  216 	inc	r0
      000083 86 06            [24]  217 	mov	ar6,@r0
      000085 08               [12]  218 	inc	r0
      000086 86 07            [24]  219 	mov	ar7,@r0
      000088                        220 00109$:
      000088 C0 03            [24]  221 	push	ar3
      00008A C0 02            [24]  222 	push	ar2
      00008C C0 04            [24]  223 	push	ar4
      00008E C0 05            [24]  224 	push	ar5
      000090 C0 06            [24]  225 	push	ar6
      000092 C0 07            [24]  226 	push	ar7
      000094 E5*00            [12]  227 	mov	a,_bp
      000096 24 05            [12]  228 	add	a,#0x05
      000098 F8               [12]  229 	mov	r0,a
      000099 86 82            [24]  230 	mov	dpl,@r0
      00009B 08               [12]  231 	inc	r0
      00009C 86 83            [24]  232 	mov	dph,@r0
      00009E 08               [12]  233 	inc	r0
      00009F 86 F0            [24]  234 	mov	b,@r0
      0000A1 08               [12]  235 	inc	r0
      0000A2 E6               [12]  236 	mov	a,@r0
      0000A3 12r00r00         [24]  237 	lcall	__divulong
      0000A6 AC 82            [24]  238 	mov	r4,dpl
      0000A8 AD 83            [24]  239 	mov	r5,dph
      0000AA AE F0            [24]  240 	mov	r6,b
      0000AC FF               [12]  241 	mov	r7,a
      0000AD E5 81            [12]  242 	mov	a,sp
      0000AF 24 FC            [12]  243 	add	a,#0xfc
      0000B1 F5 81            [12]  244 	mov	sp,a
      0000B3 D0 02            [24]  245 	pop	ar2
      0000B5 D0 03            [24]  246 	pop	ar3
      0000B7 E5*00            [12]  247 	mov	a,_bp
      0000B9 24 09            [12]  248 	add	a,#0x09
      0000BB F8               [12]  249 	mov	r0,a
      0000BC A6 04            [24]  250 	mov	@r0,ar4
      0000BE 08               [12]  251 	inc	r0
      0000BF A6 05            [24]  252 	mov	@r0,ar5
      0000C1 08               [12]  253 	inc	r0
      0000C2 A6 06            [24]  254 	mov	@r0,ar6
      0000C4 08               [12]  255 	inc	r0
      0000C5 A6 07            [24]  256 	mov	@r0,ar7
                                    257 ;	_divslong.c:264: if ((x < 0) ^ (y < 0))
      0000C7 EA               [12]  258 	mov	a,r2
      0000C8 6B               [12]  259 	xrl	a,r3
      0000C9 60 1D            [24]  260 	jz	00102$
                                    261 ;	_divslong.c:265: return -r;
      0000CB E5*00            [12]  262 	mov	a,_bp
      0000CD 24 09            [12]  263 	add	a,#0x09
      0000CF F8               [12]  264 	mov	r0,a
      0000D0 C3               [12]  265 	clr	c
      0000D1 E4               [12]  266 	clr	a
      0000D2 96               [12]  267 	subb	a,@r0
      0000D3 FA               [12]  268 	mov	r2,a
      0000D4 08               [12]  269 	inc	r0
      0000D5 E4               [12]  270 	clr	a
      0000D6 96               [12]  271 	subb	a,@r0
      0000D7 FB               [12]  272 	mov	r3,a
      0000D8 08               [12]  273 	inc	r0
      0000D9 E4               [12]  274 	clr	a
      0000DA 96               [12]  275 	subb	a,@r0
      0000DB FE               [12]  276 	mov	r6,a
      0000DC 08               [12]  277 	inc	r0
      0000DD E4               [12]  278 	clr	a
      0000DE 96               [12]  279 	subb	a,@r0
      0000DF FF               [12]  280 	mov	r7,a
      0000E0 8A 82            [24]  281 	mov	dpl,r2
      0000E2 8B 83            [24]  282 	mov	dph,r3
      0000E4 8E F0            [24]  283 	mov	b,r6
      0000E6 80 0F            [24]  284 	sjmp	00104$
      0000E8                        285 00102$:
                                    286 ;	_divslong.c:267: return r;
      0000E8 E5*00            [12]  287 	mov	a,_bp
      0000EA 24 09            [12]  288 	add	a,#0x09
      0000EC F8               [12]  289 	mov	r0,a
      0000ED 86 82            [24]  290 	mov	dpl,@r0
      0000EF 08               [12]  291 	inc	r0
      0000F0 86 83            [24]  292 	mov	dph,@r0
      0000F2 08               [12]  293 	inc	r0
      0000F3 86 F0            [24]  294 	mov	b,@r0
      0000F5 08               [12]  295 	inc	r0
      0000F6 E6               [12]  296 	mov	a,@r0
      0000F7                        297 00104$:
      0000F7 85*00 81         [24]  298 	mov	sp,_bp
      0000FA D0*00            [24]  299 	pop	_bp
      0000FC 22               [24]  300 	ret
                                    301 	.area CSEG    (CODE)
                                    302 	.area CONST   (CODE)
                                    303 	.area XINIT   (CODE)
                                    304 	.area CABS    (ABS,CODE)
