                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:11 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _strchr
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _strchr
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram 
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
                                     48 ;--------------------------------------------------------
                                     49 ; paged external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area PSEG    (PAG,XDATA)
                                     52 ;--------------------------------------------------------
                                     53 ; external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area XSEG    (XDATA)
                                     56 ;--------------------------------------------------------
                                     57 ; absolute external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XABS    (ABS,XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; external initialized ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XISEG   (XDATA)
                                     64 	.area HOME    (CODE)
                                     65 	.area GSINIT0 (CODE)
                                     66 	.area GSINIT1 (CODE)
                                     67 	.area GSINIT2 (CODE)
                                     68 	.area GSINIT3 (CODE)
                                     69 	.area GSINIT4 (CODE)
                                     70 	.area GSINIT5 (CODE)
                                     71 	.area GSINIT  (CODE)
                                     72 	.area GSFINAL (CODE)
                                     73 	.area CSEG    (CODE)
                                     74 ;--------------------------------------------------------
                                     75 ; global & static initialisations
                                     76 ;--------------------------------------------------------
                                     77 	.area HOME    (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; Home
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area HOME    (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; code
                                     88 ;--------------------------------------------------------
                                     89 	.area CSEG    (CODE)
                                     90 ;------------------------------------------------------------
                                     91 ;Allocation info for local variables in function 'strchr'
                                     92 ;------------------------------------------------------------
                                     93 ;ch                        Allocated to stack - _bp -3
                                     94 ;string                    Allocated to registers 
                                     95 ;------------------------------------------------------------
                                     96 ;	_strchr.c:34: char * strchr (
                                     97 ;	-----------------------------------------
                                     98 ;	 function strchr
                                     99 ;	-----------------------------------------
      000000                        100 _strchr:
                           000007   101 	ar7 = 0x07
                           000006   102 	ar6 = 0x06
                           000005   103 	ar5 = 0x05
                           000004   104 	ar4 = 0x04
                           000003   105 	ar3 = 0x03
                           000002   106 	ar2 = 0x02
                           000001   107 	ar1 = 0x01
                           000000   108 	ar0 = 0x00
      000000 C0*00            [24]  109 	push	_bp
      000002 85 81*00         [24]  110 	mov	_bp,sp
      000005 AD 82            [24]  111 	mov	r5,dpl
      000007 AE 83            [24]  112 	mov	r6,dph
      000009 AF F0            [24]  113 	mov	r7,b
                                    114 ;	_strchr.c:45: while (*string && *string != ch)
      00000B                        115 00102$:
      00000B 8D 82            [24]  116 	mov	dpl,r5
      00000D 8E 83            [24]  117 	mov	dph,r6
      00000F 8F F0            [24]  118 	mov	b,r7
      000011 12r00r00         [24]  119 	lcall	__gptrget
      000014 FC               [12]  120 	mov	r4,a
      000015 60 12            [24]  121 	jz	00104$
      000017 E5*00            [12]  122 	mov	a,_bp
      000019 24 FD            [12]  123 	add	a,#0xfd
      00001B F8               [12]  124 	mov	r0,a
      00001C E6               [12]  125 	mov	a,@r0
      00001D B5 04 02         [24]  126 	cjne	a,ar4,00123$
      000020 80 07            [24]  127 	sjmp	00104$
      000022                        128 00123$:
                                    129 ;	_strchr.c:46: string++;
      000022 0D               [12]  130 	inc	r5
      000023 BD 00 E5         [24]  131 	cjne	r5,#0x00,00102$
      000026 0E               [12]  132 	inc	r6
      000027 80 E2            [24]  133 	sjmp	00102$
      000029                        134 00104$:
                                    135 ;	_strchr.c:48: if (*string == ch)
      000029 8D 82            [24]  136 	mov	dpl,r5
      00002B 8E 83            [24]  137 	mov	dph,r6
      00002D 8F F0            [24]  138 	mov	b,r7
      00002F 12r00r00         [24]  139 	lcall	__gptrget
      000032 FC               [12]  140 	mov	r4,a
      000033 E5*00            [12]  141 	mov	a,_bp
      000035 24 FD            [12]  142 	add	a,#0xfd
      000037 F8               [12]  143 	mov	r0,a
      000038 E6               [12]  144 	mov	a,@r0
      000039 B5 04 08         [24]  145 	cjne	a,ar4,00106$
                                    146 ;	_strchr.c:49: return(string);
      00003C 8D 82            [24]  147 	mov	dpl,r5
      00003E 8E 83            [24]  148 	mov	dph,r6
      000040 8F F0            [24]  149 	mov	b,r7
      000042 80 06            [24]  150 	sjmp	00107$
      000044                        151 00106$:
                                    152 ;	_strchr.c:50: return ( NULL );
      000044 90 00 00         [24]  153 	mov	dptr,#0x0000
      000047 75 F0 00         [24]  154 	mov	b,#0x00
      00004A                        155 00107$:
      00004A D0*00            [24]  156 	pop	_bp
      00004C 22               [24]  157 	ret
                                    158 	.area CSEG    (CODE)
                                    159 	.area CONST   (CODE)
                                    160 	.area XINIT   (CODE)
                                    161 	.area CABS    (ABS,CODE)
