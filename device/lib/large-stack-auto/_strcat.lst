                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:11 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _strcat
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _strcat
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram 
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
                                     48 ;--------------------------------------------------------
                                     49 ; paged external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area PSEG    (PAG,XDATA)
                                     52 ;--------------------------------------------------------
                                     53 ; external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area XSEG    (XDATA)
                                     56 ;--------------------------------------------------------
                                     57 ; absolute external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XABS    (ABS,XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; external initialized ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XISEG   (XDATA)
                                     64 	.area HOME    (CODE)
                                     65 	.area GSINIT0 (CODE)
                                     66 	.area GSINIT1 (CODE)
                                     67 	.area GSINIT2 (CODE)
                                     68 	.area GSINIT3 (CODE)
                                     69 	.area GSINIT4 (CODE)
                                     70 	.area GSINIT5 (CODE)
                                     71 	.area GSINIT  (CODE)
                                     72 	.area GSFINAL (CODE)
                                     73 	.area CSEG    (CODE)
                                     74 ;--------------------------------------------------------
                                     75 ; global & static initialisations
                                     76 ;--------------------------------------------------------
                                     77 	.area HOME    (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; Home
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area HOME    (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; code
                                     88 ;--------------------------------------------------------
                                     89 	.area CSEG    (CODE)
                                     90 ;------------------------------------------------------------
                                     91 ;Allocation info for local variables in function 'strcat'
                                     92 ;------------------------------------------------------------
                                     93 ;src                       Allocated to stack - _bp -5
                                     94 ;dst                       Allocated to stack - _bp +1
                                     95 ;cp                        Allocated to stack - _bp +4
                                     96 ;------------------------------------------------------------
                                     97 ;	_strcat.c:31: char * strcat (
                                     98 ;	-----------------------------------------
                                     99 ;	 function strcat
                                    100 ;	-----------------------------------------
      000000                        101 _strcat:
                           000007   102 	ar7 = 0x07
                           000006   103 	ar6 = 0x06
                           000005   104 	ar5 = 0x05
                           000004   105 	ar4 = 0x04
                           000003   106 	ar3 = 0x03
                           000002   107 	ar2 = 0x02
                           000001   108 	ar1 = 0x01
                           000000   109 	ar0 = 0x00
      000000 C0*00            [24]  110 	push	_bp
      000002 85 81*00         [24]  111 	mov	_bp,sp
      000005 C0 82            [24]  112 	push	dpl
      000007 C0 83            [24]  113 	push	dph
      000009 C0 F0            [24]  114 	push	b
      00000B 05 81            [12]  115 	inc	sp
      00000D 05 81            [12]  116 	inc	sp
      00000F 05 81            [12]  117 	inc	sp
                                    118 ;	_strcat.c:38: while( *cp )
      000011 A8*00            [24]  119 	mov	r0,_bp
      000013 08               [12]  120 	inc	r0
      000014 86 02            [24]  121 	mov	ar2,@r0
      000016 08               [12]  122 	inc	r0
      000017 86 03            [24]  123 	mov	ar3,@r0
      000019 08               [12]  124 	inc	r0
      00001A 86 04            [24]  125 	mov	ar4,@r0
      00001C                        126 00101$:
      00001C 8A 82            [24]  127 	mov	dpl,r2
      00001E 8B 83            [24]  128 	mov	dph,r3
      000020 8C F0            [24]  129 	mov	b,r4
      000022 12r00r00         [24]  130 	lcall	__gptrget
      000025 60 07            [24]  131 	jz	00111$
                                    132 ;	_strcat.c:39: cp++;                   /* find end of dst */
      000027 0A               [12]  133 	inc	r2
                                    134 ;	_strcat.c:41: while( *cp++ = *src++ ) ;       /* Copy src to end of dst */
      000028 BA 00 F1         [24]  135 	cjne	r2,#0x00,00101$
      00002B 0B               [12]  136 	inc	r3
      00002C 80 EE            [24]  137 	sjmp	00101$
      00002E                        138 00111$:
      00002E E5*00            [12]  139 	mov	a,_bp
      000030 24 FB            [12]  140 	add	a,#0xfb
      000032 F8               [12]  141 	mov	r0,a
      000033 86 05            [24]  142 	mov	ar5,@r0
      000035 08               [12]  143 	inc	r0
      000036 86 06            [24]  144 	mov	ar6,@r0
      000038 08               [12]  145 	inc	r0
      000039 86 07            [24]  146 	mov	ar7,@r0
      00003B E5*00            [12]  147 	mov	a,_bp
      00003D 24 04            [12]  148 	add	a,#0x04
      00003F F8               [12]  149 	mov	r0,a
      000040 A6 02            [24]  150 	mov	@r0,ar2
      000042 08               [12]  151 	inc	r0
      000043 A6 03            [24]  152 	mov	@r0,ar3
      000045 08               [12]  153 	inc	r0
      000046 A6 04            [24]  154 	mov	@r0,ar4
      000048                        155 00104$:
      000048 8D 82            [24]  156 	mov	dpl,r5
      00004A 8E 83            [24]  157 	mov	dph,r6
      00004C 8F F0            [24]  158 	mov	b,r7
      00004E 12r00r00         [24]  159 	lcall	__gptrget
      000051 FC               [12]  160 	mov	r4,a
      000052 A3               [24]  161 	inc	dptr
      000053 AD 82            [24]  162 	mov	r5,dpl
      000055 AE 83            [24]  163 	mov	r6,dph
      000057 E5*00            [12]  164 	mov	a,_bp
      000059 24 04            [12]  165 	add	a,#0x04
      00005B F8               [12]  166 	mov	r0,a
      00005C 86 82            [24]  167 	mov	dpl,@r0
      00005E 08               [12]  168 	inc	r0
      00005F 86 83            [24]  169 	mov	dph,@r0
      000061 08               [12]  170 	inc	r0
      000062 86 F0            [24]  171 	mov	b,@r0
      000064 EC               [12]  172 	mov	a,r4
      000065 12r00r00         [24]  173 	lcall	__gptrput
      000068 A3               [24]  174 	inc	dptr
      000069 18               [12]  175 	dec	r0
      00006A 18               [12]  176 	dec	r0
      00006B A6 82            [24]  177 	mov	@r0,dpl
      00006D 08               [12]  178 	inc	r0
      00006E A6 83            [24]  179 	mov	@r0,dph
      000070 EC               [12]  180 	mov	a,r4
      000071 70 D5            [24]  181 	jnz	00104$
                                    182 ;	_strcat.c:43: return( dst );                  /* return dst */
      000073 A8*00            [24]  183 	mov	r0,_bp
      000075 08               [12]  184 	inc	r0
      000076 86 82            [24]  185 	mov	dpl,@r0
      000078 08               [12]  186 	inc	r0
      000079 86 83            [24]  187 	mov	dph,@r0
      00007B 08               [12]  188 	inc	r0
      00007C 86 F0            [24]  189 	mov	b,@r0
      00007E 85*00 81         [24]  190 	mov	sp,_bp
      000081 D0*00            [24]  191 	pop	_bp
      000083 22               [24]  192 	ret
                                    193 	.area CSEG    (CODE)
                                    194 	.area CONST   (CODE)
                                    195 	.area XINIT   (CODE)
                                    196 	.area CABS    (ABS,CODE)
