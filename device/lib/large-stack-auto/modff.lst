                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:10 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module modff
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _modff
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram 
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
                                     48 ;--------------------------------------------------------
                                     49 ; paged external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area PSEG    (PAG,XDATA)
                                     52 ;--------------------------------------------------------
                                     53 ; external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area XSEG    (XDATA)
                                     56 ;--------------------------------------------------------
                                     57 ; absolute external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XABS    (ABS,XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; external initialized ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XISEG   (XDATA)
                                     64 	.area HOME    (CODE)
                                     65 	.area GSINIT0 (CODE)
                                     66 	.area GSINIT1 (CODE)
                                     67 	.area GSINIT2 (CODE)
                                     68 	.area GSINIT3 (CODE)
                                     69 	.area GSINIT4 (CODE)
                                     70 	.area GSINIT5 (CODE)
                                     71 	.area GSINIT  (CODE)
                                     72 	.area GSFINAL (CODE)
                                     73 	.area CSEG    (CODE)
                                     74 ;--------------------------------------------------------
                                     75 ; global & static initialisations
                                     76 ;--------------------------------------------------------
                                     77 	.area HOME    (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; Home
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area HOME    (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; code
                                     88 ;--------------------------------------------------------
                                     89 	.area CSEG    (CODE)
                                     90 ;------------------------------------------------------------
                                     91 ;Allocation info for local variables in function 'modff'
                                     92 ;------------------------------------------------------------
                                     93 ;y                         Allocated to stack - _bp -5
                                     94 ;x                         Allocated to stack - _bp +1
                                     95 ;sloc0                     Allocated to stack - _bp +5
                                     96 ;------------------------------------------------------------
                                     97 ;	modff.c:33: float modff(float x, float * y)
                                     98 ;	-----------------------------------------
                                     99 ;	 function modff
                                    100 ;	-----------------------------------------
      000000                        101 _modff:
                           000007   102 	ar7 = 0x07
                           000006   103 	ar6 = 0x06
                           000005   104 	ar5 = 0x05
                           000004   105 	ar4 = 0x04
                           000003   106 	ar3 = 0x03
                           000002   107 	ar2 = 0x02
                           000001   108 	ar1 = 0x01
                           000000   109 	ar0 = 0x00
      000000 C0*00            [24]  110 	push	_bp
      000002 85 81*00         [24]  111 	mov	_bp,sp
      000005 C0 82            [24]  112 	push	dpl
      000007 C0 83            [24]  113 	push	dph
      000009 C0 F0            [24]  114 	push	b
      00000B C0 E0            [24]  115 	push	acc
      00000D 05 81            [12]  116 	inc	sp
      00000F 05 81            [12]  117 	inc	sp
      000011 05 81            [12]  118 	inc	sp
                                    119 ;	modff.c:35: *y=(long)x;
      000013 E5*00            [12]  120 	mov	a,_bp
      000015 24 FB            [12]  121 	add	a,#0xfb
      000017 F8               [12]  122 	mov	r0,a
      000018 E5*00            [12]  123 	mov	a,_bp
      00001A 24 05            [12]  124 	add	a,#0x05
      00001C F9               [12]  125 	mov	r1,a
      00001D E6               [12]  126 	mov	a,@r0
      00001E F7               [12]  127 	mov	@r1,a
      00001F 08               [12]  128 	inc	r0
      000020 09               [12]  129 	inc	r1
      000021 E6               [12]  130 	mov	a,@r0
      000022 F7               [12]  131 	mov	@r1,a
      000023 08               [12]  132 	inc	r0
      000024 09               [12]  133 	inc	r1
      000025 E6               [12]  134 	mov	a,@r0
      000026 F7               [12]  135 	mov	@r1,a
      000027 A8*00            [24]  136 	mov	r0,_bp
      000029 08               [12]  137 	inc	r0
      00002A 86 82            [24]  138 	mov	dpl,@r0
      00002C 08               [12]  139 	inc	r0
      00002D 86 83            [24]  140 	mov	dph,@r0
      00002F 08               [12]  141 	inc	r0
      000030 86 F0            [24]  142 	mov	b,@r0
      000032 08               [12]  143 	inc	r0
      000033 E6               [12]  144 	mov	a,@r0
      000034 12r00r00         [24]  145 	lcall	___fs2slong
      000037 12r00r00         [24]  146 	lcall	___slong2fs
      00003A AC 82            [24]  147 	mov	r4,dpl
      00003C AD 83            [24]  148 	mov	r5,dph
      00003E AE F0            [24]  149 	mov	r6,b
      000040 FF               [12]  150 	mov	r7,a
      000041 E5*00            [12]  151 	mov	a,_bp
      000043 24 05            [12]  152 	add	a,#0x05
      000045 F8               [12]  153 	mov	r0,a
      000046 86 82            [24]  154 	mov	dpl,@r0
      000048 08               [12]  155 	inc	r0
      000049 86 83            [24]  156 	mov	dph,@r0
      00004B 08               [12]  157 	inc	r0
      00004C 86 F0            [24]  158 	mov	b,@r0
      00004E EC               [12]  159 	mov	a,r4
      00004F 12r00r00         [24]  160 	lcall	__gptrput
      000052 A3               [24]  161 	inc	dptr
      000053 ED               [12]  162 	mov	a,r5
      000054 12r00r00         [24]  163 	lcall	__gptrput
      000057 A3               [24]  164 	inc	dptr
      000058 EE               [12]  165 	mov	a,r6
      000059 12r00r00         [24]  166 	lcall	__gptrput
      00005C A3               [24]  167 	inc	dptr
      00005D EF               [12]  168 	mov	a,r7
      00005E 12r00r00         [24]  169 	lcall	__gptrput
                                    170 ;	modff.c:36: return (x-*y);
      000061 C0 04            [24]  171 	push	ar4
      000063 C0 05            [24]  172 	push	ar5
      000065 C0 06            [24]  173 	push	ar6
      000067 C0 07            [24]  174 	push	ar7
      000069 A8*00            [24]  175 	mov	r0,_bp
      00006B 08               [12]  176 	inc	r0
      00006C 86 82            [24]  177 	mov	dpl,@r0
      00006E 08               [12]  178 	inc	r0
      00006F 86 83            [24]  179 	mov	dph,@r0
      000071 08               [12]  180 	inc	r0
      000072 86 F0            [24]  181 	mov	b,@r0
      000074 08               [12]  182 	inc	r0
      000075 E6               [12]  183 	mov	a,@r0
      000076 12r00r00         [24]  184 	lcall	___fssub
      000079 AC 82            [24]  185 	mov	r4,dpl
      00007B AD 83            [24]  186 	mov	r5,dph
      00007D AE F0            [24]  187 	mov	r6,b
      00007F FF               [12]  188 	mov	r7,a
      000080 E5 81            [12]  189 	mov	a,sp
      000082 24 FC            [12]  190 	add	a,#0xfc
      000084 F5 81            [12]  191 	mov	sp,a
      000086 8C 82            [24]  192 	mov	dpl,r4
      000088 8D 83            [24]  193 	mov	dph,r5
      00008A 8E F0            [24]  194 	mov	b,r6
      00008C EF               [12]  195 	mov	a,r7
      00008D 85*00 81         [24]  196 	mov	sp,_bp
      000090 D0*00            [24]  197 	pop	_bp
      000092 22               [24]  198 	ret
                                    199 	.area CSEG    (CODE)
                                    200 	.area CONST   (CODE)
                                    201 	.area XINIT   (CODE)
                                    202 	.area CABS    (ABS,CODE)
