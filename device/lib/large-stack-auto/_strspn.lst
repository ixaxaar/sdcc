                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:11 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _strspn
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _strchr
                                     13 	.globl _strspn
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram 
                                     35 ;--------------------------------------------------------
                                     36 ;--------------------------------------------------------
                                     37 ; indirectly addressable internal ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area ISEG    (DATA)
                                     40 ;--------------------------------------------------------
                                     41 ; absolute internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area IABS    (ABS,DATA)
                                     44 	.area IABS    (ABS,DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; bit data
                                     47 ;--------------------------------------------------------
                                     48 	.area BSEG    (BIT)
                                     49 ;--------------------------------------------------------
                                     50 ; paged external ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area PSEG    (PAG,XDATA)
                                     53 ;--------------------------------------------------------
                                     54 ; external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area XSEG    (XDATA)
                                     57 ;--------------------------------------------------------
                                     58 ; absolute external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XABS    (ABS,XDATA)
                                     61 ;--------------------------------------------------------
                                     62 ; external initialized ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XISEG   (XDATA)
                                     65 	.area HOME    (CODE)
                                     66 	.area GSINIT0 (CODE)
                                     67 	.area GSINIT1 (CODE)
                                     68 	.area GSINIT2 (CODE)
                                     69 	.area GSINIT3 (CODE)
                                     70 	.area GSINIT4 (CODE)
                                     71 	.area GSINIT5 (CODE)
                                     72 	.area GSINIT  (CODE)
                                     73 	.area GSFINAL (CODE)
                                     74 	.area CSEG    (CODE)
                                     75 ;--------------------------------------------------------
                                     76 ; global & static initialisations
                                     77 ;--------------------------------------------------------
                                     78 	.area HOME    (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 	.area GSFINAL (CODE)
                                     81 	.area GSINIT  (CODE)
                                     82 ;--------------------------------------------------------
                                     83 ; Home
                                     84 ;--------------------------------------------------------
                                     85 	.area HOME    (CODE)
                                     86 	.area HOME    (CODE)
                                     87 ;--------------------------------------------------------
                                     88 ; code
                                     89 ;--------------------------------------------------------
                                     90 	.area CSEG    (CODE)
                                     91 ;------------------------------------------------------------
                                     92 ;Allocation info for local variables in function 'strspn'
                                     93 ;------------------------------------------------------------
                                     94 ;control                   Allocated to stack - _bp -5
                                     95 ;string                    Allocated to registers 
                                     96 ;count                     Allocated to stack - _bp +1
                                     97 ;ch                        Allocated to registers 
                                     98 ;------------------------------------------------------------
                                     99 ;	_strspn.c:31: size_t strspn (
                                    100 ;	-----------------------------------------
                                    101 ;	 function strspn
                                    102 ;	-----------------------------------------
      000000                        103 _strspn:
                           000007   104 	ar7 = 0x07
                           000006   105 	ar6 = 0x06
                           000005   106 	ar5 = 0x05
                           000004   107 	ar4 = 0x04
                           000003   108 	ar3 = 0x03
                           000002   109 	ar2 = 0x02
                           000001   110 	ar1 = 0x01
                           000000   111 	ar0 = 0x00
      000000 C0*00            [24]  112 	push	_bp
      000002 85 81*00         [24]  113 	mov	_bp,sp
      000005 05 81            [12]  114 	inc	sp
      000007 05 81            [12]  115 	inc	sp
      000009 AD 82            [24]  116 	mov	r5,dpl
      00000B AE 83            [24]  117 	mov	r6,dph
      00000D AF F0            [24]  118 	mov	r7,b
                                    119 ;	_strspn.c:39: while (ch = *string) {
      00000F A8*00            [24]  120 	mov	r0,_bp
      000011 08               [12]  121 	inc	r0
      000012 E4               [12]  122 	clr	a
      000013 F6               [12]  123 	mov	@r0,a
      000014 08               [12]  124 	inc	r0
      000015 F6               [12]  125 	mov	@r0,a
      000016                        126 00104$:
      000016 8D 82            [24]  127 	mov	dpl,r5
      000018 8E 83            [24]  128 	mov	dph,r6
      00001A 8F F0            [24]  129 	mov	b,r7
      00001C 12r00r00         [24]  130 	lcall	__gptrget
      00001F FA               [12]  131 	mov	r2,a
      000020 60 3A            [24]  132 	jz	00106$
                                    133 ;	_strspn.c:40: if ( strchr(control,ch) )
      000022 C0 07            [24]  134 	push	ar7
      000024 C0 06            [24]  135 	push	ar6
      000026 C0 05            [24]  136 	push	ar5
      000028 C0 02            [24]  137 	push	ar2
      00002A E5*00            [12]  138 	mov	a,_bp
      00002C 24 FB            [12]  139 	add	a,#0xfb
      00002E F8               [12]  140 	mov	r0,a
      00002F 86 82            [24]  141 	mov	dpl,@r0
      000031 08               [12]  142 	inc	r0
      000032 86 83            [24]  143 	mov	dph,@r0
      000034 08               [12]  144 	inc	r0
      000035 86 F0            [24]  145 	mov	b,@r0
      000037 12r00r00         [24]  146 	lcall	_strchr
      00003A AA 82            [24]  147 	mov	r2,dpl
      00003C AB 83            [24]  148 	mov	r3,dph
      00003E AC F0            [24]  149 	mov	r4,b
      000040 15 81            [12]  150 	dec	sp
      000042 D0 05            [24]  151 	pop	ar5
      000044 D0 06            [24]  152 	pop	ar6
      000046 D0 07            [24]  153 	pop	ar7
      000048 EA               [12]  154 	mov	a,r2
      000049 4B               [12]  155 	orl	a,r3
      00004A 60 10            [24]  156 	jz	00106$
                                    157 ;	_strspn.c:41: count++ ;
      00004C A8*00            [24]  158 	mov	r0,_bp
      00004E 08               [12]  159 	inc	r0
      00004F 06               [12]  160 	inc	@r0
      000050 B6 00 02         [24]  161 	cjne	@r0,#0x00,00121$
      000053 08               [12]  162 	inc	r0
      000054 06               [12]  163 	inc	@r0
      000055                        164 00121$:
                                    165 ;	_strspn.c:44: string++ ;
      000055 0D               [12]  166 	inc	r5
      000056 BD 00 BD         [24]  167 	cjne	r5,#0x00,00104$
      000059 0E               [12]  168 	inc	r6
      00005A 80 BA            [24]  169 	sjmp	00104$
      00005C                        170 00106$:
                                    171 ;	_strspn.c:47: return count ;
      00005C A8*00            [24]  172 	mov	r0,_bp
      00005E 08               [12]  173 	inc	r0
      00005F 86 82            [24]  174 	mov	dpl,@r0
      000061 08               [12]  175 	inc	r0
      000062 86 83            [24]  176 	mov	dph,@r0
      000064 85*00 81         [24]  177 	mov	sp,_bp
      000067 D0*00            [24]  178 	pop	_bp
      000069 22               [24]  179 	ret
                                    180 	.area CSEG    (CODE)
                                    181 	.area CONST   (CODE)
                                    182 	.area XINIT   (CODE)
                                    183 	.area CABS    (ABS,CODE)
