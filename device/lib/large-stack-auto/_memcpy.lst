                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:11 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _memcpy
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _memcpy
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram 
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
                                     48 ;--------------------------------------------------------
                                     49 ; paged external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area PSEG    (PAG,XDATA)
                                     52 ;--------------------------------------------------------
                                     53 ; external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area XSEG    (XDATA)
                                     56 ;--------------------------------------------------------
                                     57 ; absolute external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XABS    (ABS,XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; external initialized ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XISEG   (XDATA)
                                     64 	.area HOME    (CODE)
                                     65 	.area GSINIT0 (CODE)
                                     66 	.area GSINIT1 (CODE)
                                     67 	.area GSINIT2 (CODE)
                                     68 	.area GSINIT3 (CODE)
                                     69 	.area GSINIT4 (CODE)
                                     70 	.area GSINIT5 (CODE)
                                     71 	.area GSINIT  (CODE)
                                     72 	.area GSFINAL (CODE)
                                     73 	.area CSEG    (CODE)
                                     74 ;--------------------------------------------------------
                                     75 ; global & static initialisations
                                     76 ;--------------------------------------------------------
                                     77 	.area HOME    (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; Home
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area HOME    (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; code
                                     88 ;--------------------------------------------------------
                                     89 	.area CSEG    (CODE)
                                     90 ;------------------------------------------------------------
                                     91 ;Allocation info for local variables in function 'memcpy'
                                     92 ;------------------------------------------------------------
                                     93 ;src                       Allocated to stack - _bp -5
                                     94 ;acount                    Allocated to stack - _bp -7
                                     95 ;dst                       Allocated to registers r5 r6 r7 
                                     96 ;ret                       Allocated to stack - _bp +6
                                     97 ;d                         Allocated to registers 
                                     98 ;s                         Allocated to registers 
                                     99 ;sloc0                     Allocated to stack - _bp +1
                                    100 ;sloc1                     Allocated to stack - _bp +4
                                    101 ;------------------------------------------------------------
                                    102 ;	_memcpy.c:36: void * memcpy (
                                    103 ;	-----------------------------------------
                                    104 ;	 function memcpy
                                    105 ;	-----------------------------------------
      000000                        106 _memcpy:
                           000007   107 	ar7 = 0x07
                           000006   108 	ar6 = 0x06
                           000005   109 	ar5 = 0x05
                           000004   110 	ar4 = 0x04
                           000003   111 	ar3 = 0x03
                           000002   112 	ar2 = 0x02
                           000001   113 	ar1 = 0x01
                           000000   114 	ar0 = 0x00
      000000 C0*00            [24]  115 	push	_bp
      000002 E5 81            [12]  116 	mov	a,sp
      000004 F5*00            [12]  117 	mov	_bp,a
      000006 24 08            [12]  118 	add	a,#0x08
      000008 F5 81            [12]  119 	mov	sp,a
      00000A AD 82            [24]  120 	mov	r5,dpl
      00000C AE 83            [24]  121 	mov	r6,dph
      00000E AF F0            [24]  122 	mov	r7,b
                                    123 ;	_memcpy.c:42: void * ret = dst;
      000010 E5*00            [12]  124 	mov	a,_bp
      000012 24 06            [12]  125 	add	a,#0x06
      000014 F8               [12]  126 	mov	r0,a
      000015 A6 05            [24]  127 	mov	@r0,ar5
      000017 08               [12]  128 	inc	r0
      000018 A6 06            [24]  129 	mov	@r0,ar6
      00001A 08               [12]  130 	inc	r0
      00001B A6 07            [24]  131 	mov	@r0,ar7
                                    132 ;	_memcpy.c:43: char * d = dst;
                                    133 ;	_memcpy.c:44: char * s = src;
      00001D E5*00            [12]  134 	mov	a,_bp
      00001F 24 FB            [12]  135 	add	a,#0xfb
      000021 F8               [12]  136 	mov	r0,a
      000022 A9*00            [24]  137 	mov	r1,_bp
      000024 09               [12]  138 	inc	r1
      000025 E6               [12]  139 	mov	a,@r0
      000026 F7               [12]  140 	mov	@r1,a
      000027 08               [12]  141 	inc	r0
      000028 09               [12]  142 	inc	r1
      000029 E6               [12]  143 	mov	a,@r0
      00002A F7               [12]  144 	mov	@r1,a
      00002B 08               [12]  145 	inc	r0
      00002C 09               [12]  146 	inc	r1
      00002D E6               [12]  147 	mov	a,@r0
      00002E F7               [12]  148 	mov	@r1,a
                                    149 ;	_memcpy.c:49: while (acount--) {
      00002F E5*00            [12]  150 	mov	a,_bp
      000031 24 F9            [12]  151 	add	a,#0xf9
      000033 F8               [12]  152 	mov	r0,a
      000034 E5*00            [12]  153 	mov	a,_bp
      000036 24 04            [12]  154 	add	a,#0x04
      000038 F9               [12]  155 	mov	r1,a
      000039 E6               [12]  156 	mov	a,@r0
      00003A F7               [12]  157 	mov	@r1,a
      00003B 08               [12]  158 	inc	r0
      00003C 09               [12]  159 	inc	r1
      00003D E6               [12]  160 	mov	a,@r0
      00003E F7               [12]  161 	mov	@r1,a
      00003F                        162 00101$:
      00003F E5*00            [12]  163 	mov	a,_bp
      000041 24 04            [12]  164 	add	a,#0x04
      000043 F8               [12]  165 	mov	r0,a
      000044 86 03            [24]  166 	mov	ar3,@r0
      000046 08               [12]  167 	inc	r0
      000047 86 04            [24]  168 	mov	ar4,@r0
      000049 E5*00            [12]  169 	mov	a,_bp
      00004B 24 04            [12]  170 	add	a,#0x04
      00004D F8               [12]  171 	mov	r0,a
      00004E 16               [12]  172 	dec	@r0
      00004F B6 FF 02         [24]  173 	cjne	@r0,#0xFF,00113$
      000052 08               [12]  174 	inc	r0
      000053 16               [12]  175 	dec	@r0
      000054                        176 00113$:
      000054 EB               [12]  177 	mov	a,r3
      000055 4C               [12]  178 	orl	a,r4
      000056 60 28            [24]  179 	jz	00103$
                                    180 ;	_memcpy.c:50: *d++ = *s++;
      000058 A8*00            [24]  181 	mov	r0,_bp
      00005A 08               [12]  182 	inc	r0
      00005B 86 82            [24]  183 	mov	dpl,@r0
      00005D 08               [12]  184 	inc	r0
      00005E 86 83            [24]  185 	mov	dph,@r0
      000060 08               [12]  186 	inc	r0
      000061 86 F0            [24]  187 	mov	b,@r0
      000063 12r00r00         [24]  188 	lcall	__gptrget
      000066 FC               [12]  189 	mov	r4,a
      000067 A3               [24]  190 	inc	dptr
      000068 18               [12]  191 	dec	r0
      000069 18               [12]  192 	dec	r0
      00006A A6 82            [24]  193 	mov	@r0,dpl
      00006C 08               [12]  194 	inc	r0
      00006D A6 83            [24]  195 	mov	@r0,dph
      00006F 8D 82            [24]  196 	mov	dpl,r5
      000071 8E 83            [24]  197 	mov	dph,r6
      000073 8F F0            [24]  198 	mov	b,r7
      000075 EC               [12]  199 	mov	a,r4
      000076 12r00r00         [24]  200 	lcall	__gptrput
      000079 A3               [24]  201 	inc	dptr
      00007A AD 82            [24]  202 	mov	r5,dpl
      00007C AE 83            [24]  203 	mov	r6,dph
      00007E 80 BF            [24]  204 	sjmp	00101$
      000080                        205 00103$:
                                    206 ;	_memcpy.c:53: return(ret);
      000080 E5*00            [12]  207 	mov	a,_bp
      000082 24 06            [12]  208 	add	a,#0x06
      000084 F8               [12]  209 	mov	r0,a
      000085 86 82            [24]  210 	mov	dpl,@r0
      000087 08               [12]  211 	inc	r0
      000088 86 83            [24]  212 	mov	dph,@r0
      00008A 08               [12]  213 	inc	r0
      00008B 86 F0            [24]  214 	mov	b,@r0
      00008D 85*00 81         [24]  215 	mov	sp,_bp
      000090 D0*00            [24]  216 	pop	_bp
      000092 22               [24]  217 	ret
                                    218 	.area CSEG    (CODE)
                                    219 	.area CONST   (CODE)
                                    220 	.area XINIT   (CODE)
                                    221 	.area CABS    (ABS,CODE)
