                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:10 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module atan2f
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _fabsf
                                     13 	.globl _atanf
                                     14 	.globl _atan2f
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram 
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; indirectly addressable internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area ISEG    (DATA)
                                     41 ;--------------------------------------------------------
                                     42 ; absolute internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area IABS    (ABS,DATA)
                                     45 	.area IABS    (ABS,DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; bit data
                                     48 ;--------------------------------------------------------
                                     49 	.area BSEG    (BIT)
                                     50 ;--------------------------------------------------------
                                     51 ; paged external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area PSEG    (PAG,XDATA)
                                     54 ;--------------------------------------------------------
                                     55 ; external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XSEG    (XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; absolute external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XABS    (ABS,XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; external initialized ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XISEG   (XDATA)
                                     66 	.area HOME    (CODE)
                                     67 	.area GSINIT0 (CODE)
                                     68 	.area GSINIT1 (CODE)
                                     69 	.area GSINIT2 (CODE)
                                     70 	.area GSINIT3 (CODE)
                                     71 	.area GSINIT4 (CODE)
                                     72 	.area GSINIT5 (CODE)
                                     73 	.area GSINIT  (CODE)
                                     74 	.area GSFINAL (CODE)
                                     75 	.area CSEG    (CODE)
                                     76 ;--------------------------------------------------------
                                     77 ; global & static initialisations
                                     78 ;--------------------------------------------------------
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 	.area GSFINAL (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 ;--------------------------------------------------------
                                     84 ; Home
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area HOME    (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; code
                                     90 ;--------------------------------------------------------
                                     91 	.area CSEG    (CODE)
                                     92 ;------------------------------------------------------------
                                     93 ;Allocation info for local variables in function 'atan2f'
                                     94 ;------------------------------------------------------------
                                     95 ;y                         Allocated to stack - _bp -6
                                     96 ;x                         Allocated to stack - _bp +1
                                     97 ;r                         Allocated to stack - _bp +9
                                     98 ;sloc0                     Allocated to stack - _bp +5
                                     99 ;------------------------------------------------------------
                                    100 ;	atan2f.c:34: float atan2f(const float x, const float y)
                                    101 ;	-----------------------------------------
                                    102 ;	 function atan2f
                                    103 ;	-----------------------------------------
      000000                        104 _atan2f:
                           000007   105 	ar7 = 0x07
                           000006   106 	ar6 = 0x06
                           000005   107 	ar5 = 0x05
                           000004   108 	ar4 = 0x04
                           000003   109 	ar3 = 0x03
                           000002   110 	ar2 = 0x02
                           000001   111 	ar1 = 0x01
                           000000   112 	ar0 = 0x00
      000000 C0*00            [24]  113 	push	_bp
      000002 85 81*00         [24]  114 	mov	_bp,sp
      000005 C0 82            [24]  115 	push	dpl
      000007 C0 83            [24]  116 	push	dph
      000009 C0 F0            [24]  117 	push	b
      00000B C0 E0            [24]  118 	push	acc
      00000D E5 81            [12]  119 	mov	a,sp
      00000F 24 08            [12]  120 	add	a,#0x08
      000011 F5 81            [12]  121 	mov	sp,a
                                    122 ;	atan2f.c:38: if ((x==0.0) && (y==0.0))
      000013 A8*00            [24]  123 	mov	r0,_bp
      000015 08               [12]  124 	inc	r0
      000016 86 F0            [24]  125 	mov	b,@r0
      000018 08               [12]  126 	inc	r0
      000019 E6               [12]  127 	mov	a,@r0
      00001A 42 F0            [12]  128 	orl	b,a
      00001C 08               [12]  129 	inc	r0
      00001D E6               [12]  130 	mov	a,@r0
      00001E 42 F0            [12]  131 	orl	b,a
      000020 08               [12]  132 	inc	r0
      000021 E6               [12]  133 	mov	a,@r0
      000022 54 7F            [12]  134 	anl	a,#0x7F
      000024 45 F0            [12]  135 	orl	a,b
      000026 70 29            [24]  136 	jnz	00102$
      000028 E5*00            [12]  137 	mov	a,_bp
      00002A 24 FA            [12]  138 	add	a,#0xfa
      00002C F8               [12]  139 	mov	r0,a
      00002D 86 F0            [24]  140 	mov	b,@r0
      00002F 08               [12]  141 	inc	r0
      000030 E6               [12]  142 	mov	a,@r0
      000031 42 F0            [12]  143 	orl	b,a
      000033 08               [12]  144 	inc	r0
      000034 E6               [12]  145 	mov	a,@r0
      000035 42 F0            [12]  146 	orl	b,a
      000037 08               [12]  147 	inc	r0
      000038 E6               [12]  148 	mov	a,@r0
      000039 54 7F            [12]  149 	anl	a,#0x7F
      00003B 45 F0            [12]  150 	orl	a,b
      00003D 70 12            [24]  151 	jnz	00102$
                                    152 ;	atan2f.c:40: errno=EDOM;
      00003F 90r00r00         [24]  153 	mov	dptr,#_errno
      000042 74 21            [12]  154 	mov	a,#0x21
      000044 F0               [24]  155 	movx	@dptr,a
      000045 E4               [12]  156 	clr	a
      000046 A3               [24]  157 	inc	dptr
      000047 F0               [24]  158 	movx	@dptr,a
                                    159 ;	atan2f.c:41: return 0.0;
      000048 90 00 00         [24]  160 	mov	dptr,#(0x00&0x00ff)
      00004B E4               [12]  161 	clr	a
      00004C F5 F0            [12]  162 	mov	b,a
      00004E 02r02r73         [24]  163 	ljmp	00109$
      000051                        164 00102$:
                                    165 ;	atan2f.c:44: if(fabsf(y)>=fabsf(x))
      000051 E5*00            [12]  166 	mov	a,_bp
      000053 24 FA            [12]  167 	add	a,#0xfa
      000055 F8               [12]  168 	mov	r0,a
      000056 86 82            [24]  169 	mov	dpl,@r0
      000058 08               [12]  170 	inc	r0
      000059 86 83            [24]  171 	mov	dph,@r0
      00005B 08               [12]  172 	inc	r0
      00005C 86 F0            [24]  173 	mov	b,@r0
      00005E 08               [12]  174 	inc	r0
      00005F E6               [12]  175 	mov	a,@r0
      000060 12r00r00         [24]  176 	lcall	_fabsf
      000063 C8               [12]  177 	xch	a,r0
      000064 E5*00            [12]  178 	mov	a,_bp
      000066 24 05            [12]  179 	add	a,#0x05
      000068 C8               [12]  180 	xch	a,r0
      000069 A6 82            [24]  181 	mov	@r0,dpl
      00006B 08               [12]  182 	inc	r0
      00006C A6 83            [24]  183 	mov	@r0,dph
      00006E 08               [12]  184 	inc	r0
      00006F A6 F0            [24]  185 	mov	@r0,b
      000071 08               [12]  186 	inc	r0
      000072 F6               [12]  187 	mov	@r0,a
      000073 A8*00            [24]  188 	mov	r0,_bp
      000075 08               [12]  189 	inc	r0
      000076 86 82            [24]  190 	mov	dpl,@r0
      000078 08               [12]  191 	inc	r0
      000079 86 83            [24]  192 	mov	dph,@r0
      00007B 08               [12]  193 	inc	r0
      00007C 86 F0            [24]  194 	mov	b,@r0
      00007E 08               [12]  195 	inc	r0
      00007F E6               [12]  196 	mov	a,@r0
      000080 12r00r00         [24]  197 	lcall	_fabsf
      000083 AC 82            [24]  198 	mov	r4,dpl
      000085 AD 83            [24]  199 	mov	r5,dph
      000087 AE F0            [24]  200 	mov	r6,b
      000089 FF               [12]  201 	mov	r7,a
      00008A C0 04            [24]  202 	push	ar4
      00008C C0 05            [24]  203 	push	ar5
      00008E C0 06            [24]  204 	push	ar6
      000090 C0 07            [24]  205 	push	ar7
      000092 E5*00            [12]  206 	mov	a,_bp
      000094 24 05            [12]  207 	add	a,#0x05
      000096 F8               [12]  208 	mov	r0,a
      000097 86 82            [24]  209 	mov	dpl,@r0
      000099 08               [12]  210 	inc	r0
      00009A 86 83            [24]  211 	mov	dph,@r0
      00009C 08               [12]  212 	inc	r0
      00009D 86 F0            [24]  213 	mov	b,@r0
      00009F 08               [12]  214 	inc	r0
      0000A0 E6               [12]  215 	mov	a,@r0
      0000A1 12r00r00         [24]  216 	lcall	___fslt
      0000A4 AF 82            [24]  217 	mov	r7,dpl
      0000A6 E5 81            [12]  218 	mov	a,sp
      0000A8 24 FC            [12]  219 	add	a,#0xfc
      0000AA F5 81            [12]  220 	mov	sp,a
      0000AC EF               [12]  221 	mov	a,r7
      0000AD 60 03            [24]  222 	jz	00135$
      0000AF 02r01rA3         [24]  223 	ljmp	00107$
      0000B2                        224 00135$:
                                    225 ;	atan2f.c:46: r=atanf(x/y);
      0000B2 E5*00            [12]  226 	mov	a,_bp
      0000B4 24 FA            [12]  227 	add	a,#0xfa
      0000B6 F8               [12]  228 	mov	r0,a
      0000B7 E6               [12]  229 	mov	a,@r0
      0000B8 C0 E0            [24]  230 	push	acc
      0000BA 08               [12]  231 	inc	r0
      0000BB E6               [12]  232 	mov	a,@r0
      0000BC C0 E0            [24]  233 	push	acc
      0000BE 08               [12]  234 	inc	r0
      0000BF E6               [12]  235 	mov	a,@r0
      0000C0 C0 E0            [24]  236 	push	acc
      0000C2 08               [12]  237 	inc	r0
      0000C3 E6               [12]  238 	mov	a,@r0
      0000C4 C0 E0            [24]  239 	push	acc
      0000C6 A8*00            [24]  240 	mov	r0,_bp
      0000C8 08               [12]  241 	inc	r0
      0000C9 86 82            [24]  242 	mov	dpl,@r0
      0000CB 08               [12]  243 	inc	r0
      0000CC 86 83            [24]  244 	mov	dph,@r0
      0000CE 08               [12]  245 	inc	r0
      0000CF 86 F0            [24]  246 	mov	b,@r0
      0000D1 08               [12]  247 	inc	r0
      0000D2 E6               [12]  248 	mov	a,@r0
      0000D3 12r00r00         [24]  249 	lcall	___fsdiv
      0000D6 AC 82            [24]  250 	mov	r4,dpl
      0000D8 AD 83            [24]  251 	mov	r5,dph
      0000DA AE F0            [24]  252 	mov	r6,b
      0000DC FF               [12]  253 	mov	r7,a
      0000DD E5 81            [12]  254 	mov	a,sp
      0000DF 24 FC            [12]  255 	add	a,#0xfc
      0000E1 F5 81            [12]  256 	mov	sp,a
      0000E3 8C 82            [24]  257 	mov	dpl,r4
      0000E5 8D 83            [24]  258 	mov	dph,r5
      0000E7 8E F0            [24]  259 	mov	b,r6
      0000E9 EF               [12]  260 	mov	a,r7
      0000EA 12r00r00         [24]  261 	lcall	_atanf
      0000ED AC 82            [24]  262 	mov	r4,dpl
      0000EF AD 83            [24]  263 	mov	r5,dph
      0000F1 AE F0            [24]  264 	mov	r6,b
      0000F3 FF               [12]  265 	mov	r7,a
      0000F4 E5*00            [12]  266 	mov	a,_bp
      0000F6 24 09            [12]  267 	add	a,#0x09
      0000F8 F8               [12]  268 	mov	r0,a
      0000F9 A6 04            [24]  269 	mov	@r0,ar4
      0000FB 08               [12]  270 	inc	r0
      0000FC A6 05            [24]  271 	mov	@r0,ar5
      0000FE 08               [12]  272 	inc	r0
      0000FF A6 06            [24]  273 	mov	@r0,ar6
      000101 08               [12]  274 	inc	r0
      000102 A6 07            [24]  275 	mov	@r0,ar7
                                    276 ;	atan2f.c:47: if(y<0.0) r+=(x>=0?PI:-PI);
      000104 E4               [12]  277 	clr	a
      000105 C0 E0            [24]  278 	push	acc
      000107 C0 E0            [24]  279 	push	acc
      000109 C0 E0            [24]  280 	push	acc
      00010B C0 E0            [24]  281 	push	acc
      00010D E5*00            [12]  282 	mov	a,_bp
      00010F 24 FA            [12]  283 	add	a,#0xfa
      000111 F8               [12]  284 	mov	r0,a
      000112 86 82            [24]  285 	mov	dpl,@r0
      000114 08               [12]  286 	inc	r0
      000115 86 83            [24]  287 	mov	dph,@r0
      000117 08               [12]  288 	inc	r0
      000118 86 F0            [24]  289 	mov	b,@r0
      00011A 08               [12]  290 	inc	r0
      00011B E6               [12]  291 	mov	a,@r0
      00011C 12r00r00         [24]  292 	lcall	___fslt
      00011F AB 82            [24]  293 	mov	r3,dpl
      000121 E5 81            [12]  294 	mov	a,sp
      000123 24 FC            [12]  295 	add	a,#0xfc
      000125 F5 81            [12]  296 	mov	sp,a
      000127 EB               [12]  297 	mov	a,r3
      000128 70 03            [24]  298 	jnz	00136$
      00012A 02r02r64         [24]  299 	ljmp	00108$
      00012D                        300 00136$:
      00012D E4               [12]  301 	clr	a
      00012E C0 E0            [24]  302 	push	acc
      000130 C0 E0            [24]  303 	push	acc
      000132 C0 E0            [24]  304 	push	acc
      000134 C0 E0            [24]  305 	push	acc
      000136 A8*00            [24]  306 	mov	r0,_bp
      000138 08               [12]  307 	inc	r0
      000139 86 82            [24]  308 	mov	dpl,@r0
      00013B 08               [12]  309 	inc	r0
      00013C 86 83            [24]  310 	mov	dph,@r0
      00013E 08               [12]  311 	inc	r0
      00013F 86 F0            [24]  312 	mov	b,@r0
      000141 08               [12]  313 	inc	r0
      000142 E6               [12]  314 	mov	a,@r0
      000143 12r00r00         [24]  315 	lcall	___fslt
      000146 AB 82            [24]  316 	mov	r3,dpl
      000148 E5 81            [12]  317 	mov	a,sp
      00014A 24 FC            [12]  318 	add	a,#0xfc
      00014C F5 81            [12]  319 	mov	sp,a
      00014E EB               [12]  320 	mov	a,r3
      00014F B4 01 00         [24]  321 	cjne	a,#0x01,00137$
      000152                        322 00137$:
      000152 E4               [12]  323 	clr	a
      000153 33               [12]  324 	rlc	a
      000154 FB               [12]  325 	mov	r3,a
      000155 60 0A            [24]  326 	jz	00111$
      000157 7A DB            [12]  327 	mov	r2,#0xDB
      000159 7B 0F            [12]  328 	mov	r3,#0x0F
      00015B 7E 49            [12]  329 	mov	r6,#0x49
      00015D 7F 40            [12]  330 	mov	r7,#0x40
      00015F 80 08            [24]  331 	sjmp	00112$
      000161                        332 00111$:
      000161 7A DB            [12]  333 	mov	r2,#0xDB
      000163 7B 0F            [12]  334 	mov	r3,#0x0F
      000165 7E 49            [12]  335 	mov	r6,#0x49
      000167 7F C0            [12]  336 	mov	r7,#0xC0
      000169                        337 00112$:
      000169 C0 02            [24]  338 	push	ar2
      00016B C0 03            [24]  339 	push	ar3
      00016D C0 06            [24]  340 	push	ar6
      00016F C0 07            [24]  341 	push	ar7
      000171 E5*00            [12]  342 	mov	a,_bp
      000173 24 09            [12]  343 	add	a,#0x09
      000175 F8               [12]  344 	mov	r0,a
      000176 86 82            [24]  345 	mov	dpl,@r0
      000178 08               [12]  346 	inc	r0
      000179 86 83            [24]  347 	mov	dph,@r0
      00017B 08               [12]  348 	inc	r0
      00017C 86 F0            [24]  349 	mov	b,@r0
      00017E 08               [12]  350 	inc	r0
      00017F E6               [12]  351 	mov	a,@r0
      000180 12r00r00         [24]  352 	lcall	___fsadd
      000183 AC 82            [24]  353 	mov	r4,dpl
      000185 AD 83            [24]  354 	mov	r5,dph
      000187 AE F0            [24]  355 	mov	r6,b
      000189 FF               [12]  356 	mov	r7,a
      00018A E5 81            [12]  357 	mov	a,sp
      00018C 24 FC            [12]  358 	add	a,#0xfc
      00018E F5 81            [12]  359 	mov	sp,a
      000190 E5*00            [12]  360 	mov	a,_bp
      000192 24 09            [12]  361 	add	a,#0x09
      000194 F8               [12]  362 	mov	r0,a
      000195 A6 04            [24]  363 	mov	@r0,ar4
      000197 08               [12]  364 	inc	r0
      000198 A6 05            [24]  365 	mov	@r0,ar5
      00019A 08               [12]  366 	inc	r0
      00019B A6 06            [24]  367 	mov	@r0,ar6
      00019D 08               [12]  368 	inc	r0
      00019E A6 07            [24]  369 	mov	@r0,ar7
      0001A0 02r02r64         [24]  370 	ljmp	00108$
      0001A3                        371 00107$:
                                    372 ;	atan2f.c:51: r=-atanf(y/x);
      0001A3 A8*00            [24]  373 	mov	r0,_bp
      0001A5 08               [12]  374 	inc	r0
      0001A6 E6               [12]  375 	mov	a,@r0
      0001A7 C0 E0            [24]  376 	push	acc
      0001A9 08               [12]  377 	inc	r0
      0001AA E6               [12]  378 	mov	a,@r0
      0001AB C0 E0            [24]  379 	push	acc
      0001AD 08               [12]  380 	inc	r0
      0001AE E6               [12]  381 	mov	a,@r0
      0001AF C0 E0            [24]  382 	push	acc
      0001B1 08               [12]  383 	inc	r0
      0001B2 E6               [12]  384 	mov	a,@r0
      0001B3 C0 E0            [24]  385 	push	acc
      0001B5 E5*00            [12]  386 	mov	a,_bp
      0001B7 24 FA            [12]  387 	add	a,#0xfa
      0001B9 F8               [12]  388 	mov	r0,a
      0001BA 86 82            [24]  389 	mov	dpl,@r0
      0001BC 08               [12]  390 	inc	r0
      0001BD 86 83            [24]  391 	mov	dph,@r0
      0001BF 08               [12]  392 	inc	r0
      0001C0 86 F0            [24]  393 	mov	b,@r0
      0001C2 08               [12]  394 	inc	r0
      0001C3 E6               [12]  395 	mov	a,@r0
      0001C4 12r00r00         [24]  396 	lcall	___fsdiv
      0001C7 AC 82            [24]  397 	mov	r4,dpl
      0001C9 AD 83            [24]  398 	mov	r5,dph
      0001CB AE F0            [24]  399 	mov	r6,b
      0001CD FF               [12]  400 	mov	r7,a
      0001CE E5 81            [12]  401 	mov	a,sp
      0001D0 24 FC            [12]  402 	add	a,#0xfc
      0001D2 F5 81            [12]  403 	mov	sp,a
      0001D4 8C 82            [24]  404 	mov	dpl,r4
      0001D6 8D 83            [24]  405 	mov	dph,r5
      0001D8 8E F0            [24]  406 	mov	b,r6
      0001DA EF               [12]  407 	mov	a,r7
      0001DB 12r00r00         [24]  408 	lcall	_atanf
      0001DE AC 82            [24]  409 	mov	r4,dpl
      0001E0 AD 83            [24]  410 	mov	r5,dph
      0001E2 AE F0            [24]  411 	mov	r6,b
      0001E4 B2 E7            [12]  412 	cpl	acc.7
      0001E6 FF               [12]  413 	mov	r7,a
      0001E7 E5*00            [12]  414 	mov	a,_bp
      0001E9 24 09            [12]  415 	add	a,#0x09
      0001EB F8               [12]  416 	mov	r0,a
      0001EC A6 04            [24]  417 	mov	@r0,ar4
      0001EE 08               [12]  418 	inc	r0
      0001EF A6 05            [24]  419 	mov	@r0,ar5
      0001F1 08               [12]  420 	inc	r0
      0001F2 A6 06            [24]  421 	mov	@r0,ar6
      0001F4 08               [12]  422 	inc	r0
      0001F5 A6 07            [24]  423 	mov	@r0,ar7
                                    424 ;	atan2f.c:52: r+=(x<0.0?-HALF_PI:HALF_PI);
      0001F7 E4               [12]  425 	clr	a
      0001F8 C0 E0            [24]  426 	push	acc
      0001FA C0 E0            [24]  427 	push	acc
      0001FC C0 E0            [24]  428 	push	acc
      0001FE C0 E0            [24]  429 	push	acc
      000200 A8*00            [24]  430 	mov	r0,_bp
      000202 08               [12]  431 	inc	r0
      000203 86 82            [24]  432 	mov	dpl,@r0
      000205 08               [12]  433 	inc	r0
      000206 86 83            [24]  434 	mov	dph,@r0
      000208 08               [12]  435 	inc	r0
      000209 86 F0            [24]  436 	mov	b,@r0
      00020B 08               [12]  437 	inc	r0
      00020C E6               [12]  438 	mov	a,@r0
      00020D 12r00r00         [24]  439 	lcall	___fslt
      000210 AF 82            [24]  440 	mov	r7,dpl
      000212 E5 81            [12]  441 	mov	a,sp
      000214 24 FC            [12]  442 	add	a,#0xfc
      000216 F5 81            [12]  443 	mov	sp,a
      000218 EF               [12]  444 	mov	a,r7
      000219 60 0A            [24]  445 	jz	00113$
      00021B 7C DB            [12]  446 	mov	r4,#0xDB
      00021D 7D 0F            [12]  447 	mov	r5,#0x0F
      00021F 7E C9            [12]  448 	mov	r6,#0xC9
      000221 7F BF            [12]  449 	mov	r7,#0xBF
      000223 80 08            [24]  450 	sjmp	00114$
      000225                        451 00113$:
      000225 7C DB            [12]  452 	mov	r4,#0xDB
      000227 7D 0F            [12]  453 	mov	r5,#0x0F
      000229 7E C9            [12]  454 	mov	r6,#0xC9
      00022B 7F 3F            [12]  455 	mov	r7,#0x3F
      00022D                        456 00114$:
      00022D C0 04            [24]  457 	push	ar4
      00022F C0 05            [24]  458 	push	ar5
      000231 C0 06            [24]  459 	push	ar6
      000233 C0 07            [24]  460 	push	ar7
      000235 E5*00            [12]  461 	mov	a,_bp
      000237 24 09            [12]  462 	add	a,#0x09
      000239 F8               [12]  463 	mov	r0,a
      00023A 86 82            [24]  464 	mov	dpl,@r0
      00023C 08               [12]  465 	inc	r0
      00023D 86 83            [24]  466 	mov	dph,@r0
      00023F 08               [12]  467 	inc	r0
      000240 86 F0            [24]  468 	mov	b,@r0
      000242 08               [12]  469 	inc	r0
      000243 E6               [12]  470 	mov	a,@r0
      000244 12r00r00         [24]  471 	lcall	___fsadd
      000247 AC 82            [24]  472 	mov	r4,dpl
      000249 AD 83            [24]  473 	mov	r5,dph
      00024B AE F0            [24]  474 	mov	r6,b
      00024D FF               [12]  475 	mov	r7,a
      00024E E5 81            [12]  476 	mov	a,sp
      000250 24 FC            [12]  477 	add	a,#0xfc
      000252 F5 81            [12]  478 	mov	sp,a
      000254 E5*00            [12]  479 	mov	a,_bp
      000256 24 09            [12]  480 	add	a,#0x09
      000258 F8               [12]  481 	mov	r0,a
      000259 A6 04            [24]  482 	mov	@r0,ar4
      00025B 08               [12]  483 	inc	r0
      00025C A6 05            [24]  484 	mov	@r0,ar5
      00025E 08               [12]  485 	inc	r0
      00025F A6 06            [24]  486 	mov	@r0,ar6
      000261 08               [12]  487 	inc	r0
      000262 A6 07            [24]  488 	mov	@r0,ar7
      000264                        489 00108$:
                                    490 ;	atan2f.c:54: return r;
      000264 E5*00            [12]  491 	mov	a,_bp
      000266 24 09            [12]  492 	add	a,#0x09
      000268 F8               [12]  493 	mov	r0,a
      000269 86 82            [24]  494 	mov	dpl,@r0
      00026B 08               [12]  495 	inc	r0
      00026C 86 83            [24]  496 	mov	dph,@r0
      00026E 08               [12]  497 	inc	r0
      00026F 86 F0            [24]  498 	mov	b,@r0
      000271 08               [12]  499 	inc	r0
      000272 E6               [12]  500 	mov	a,@r0
      000273                        501 00109$:
      000273 85*00 81         [24]  502 	mov	sp,_bp
      000276 D0*00            [24]  503 	pop	_bp
      000278 22               [24]  504 	ret
                                    505 	.area CSEG    (CODE)
                                    506 	.area CONST   (CODE)
                                    507 	.area XINIT   (CODE)
                                    508 	.area CABS    (ABS,CODE)
