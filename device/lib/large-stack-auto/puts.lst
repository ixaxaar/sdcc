                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:11 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module puts
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _puts
                                     13 	.globl _putchar
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram 
                                     35 ;--------------------------------------------------------
                                     36 ;--------------------------------------------------------
                                     37 ; indirectly addressable internal ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area ISEG    (DATA)
                                     40 ;--------------------------------------------------------
                                     41 ; absolute internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area IABS    (ABS,DATA)
                                     44 	.area IABS    (ABS,DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; bit data
                                     47 ;--------------------------------------------------------
                                     48 	.area BSEG    (BIT)
                                     49 ;--------------------------------------------------------
                                     50 ; paged external ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area PSEG    (PAG,XDATA)
                                     53 ;--------------------------------------------------------
                                     54 ; external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area XSEG    (XDATA)
                                     57 ;--------------------------------------------------------
                                     58 ; absolute external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XABS    (ABS,XDATA)
                                     61 ;--------------------------------------------------------
                                     62 ; external initialized ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XISEG   (XDATA)
                                     65 	.area HOME    (CODE)
                                     66 	.area GSINIT0 (CODE)
                                     67 	.area GSINIT1 (CODE)
                                     68 	.area GSINIT2 (CODE)
                                     69 	.area GSINIT3 (CODE)
                                     70 	.area GSINIT4 (CODE)
                                     71 	.area GSINIT5 (CODE)
                                     72 	.area GSINIT  (CODE)
                                     73 	.area GSFINAL (CODE)
                                     74 	.area CSEG    (CODE)
                                     75 ;--------------------------------------------------------
                                     76 ; global & static initialisations
                                     77 ;--------------------------------------------------------
                                     78 	.area HOME    (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 	.area GSFINAL (CODE)
                                     81 	.area GSINIT  (CODE)
                                     82 ;--------------------------------------------------------
                                     83 ; Home
                                     84 ;--------------------------------------------------------
                                     85 	.area HOME    (CODE)
                                     86 	.area HOME    (CODE)
                                     87 ;--------------------------------------------------------
                                     88 ; code
                                     89 ;--------------------------------------------------------
                                     90 	.area CSEG    (CODE)
                                     91 ;------------------------------------------------------------
                                     92 ;Allocation info for local variables in function 'puts'
                                     93 ;------------------------------------------------------------
                                     94 ;s                         Allocated to registers 
                                     95 ;i                         Allocated to registers r3 r4 
                                     96 ;------------------------------------------------------------
                                     97 ;	puts.c:31: int puts (char *s)
                                     98 ;	-----------------------------------------
                                     99 ;	 function puts
                                    100 ;	-----------------------------------------
      000000                        101 _puts:
                           000007   102 	ar7 = 0x07
                           000006   103 	ar6 = 0x06
                           000005   104 	ar5 = 0x05
                           000004   105 	ar4 = 0x04
                           000003   106 	ar3 = 0x03
                           000002   107 	ar2 = 0x02
                           000001   108 	ar1 = 0x01
                           000000   109 	ar0 = 0x00
      000000 AD 82            [24]  110 	mov	r5,dpl
      000002 AE 83            [24]  111 	mov	r6,dph
      000004 AF F0            [24]  112 	mov	r7,b
                                    113 ;	puts.c:34: while (*s){
      000006 7B 00            [12]  114 	mov	r3,#0x00
      000008 7C 00            [12]  115 	mov	r4,#0x00
      00000A                        116 00101$:
      00000A 8D 82            [24]  117 	mov	dpl,r5
      00000C 8E 83            [24]  118 	mov	dph,r6
      00000E 8F F0            [24]  119 	mov	b,r7
      000010 12r00r00         [24]  120 	lcall	__gptrget
      000013 FA               [12]  121 	mov	r2,a
      000014 60 25            [24]  122 	jz	00103$
                                    123 ;	puts.c:35: putchar(*s++);
      000016 0D               [12]  124 	inc	r5
      000017 BD 00 01         [24]  125 	cjne	r5,#0x00,00114$
      00001A 0E               [12]  126 	inc	r6
      00001B                        127 00114$:
      00001B 8A 82            [24]  128 	mov	dpl,r2
      00001D C0 07            [24]  129 	push	ar7
      00001F C0 06            [24]  130 	push	ar6
      000021 C0 05            [24]  131 	push	ar5
      000023 C0 04            [24]  132 	push	ar4
      000025 C0 03            [24]  133 	push	ar3
      000027 12r00r00         [24]  134 	lcall	_putchar
      00002A D0 03            [24]  135 	pop	ar3
      00002C D0 04            [24]  136 	pop	ar4
      00002E D0 05            [24]  137 	pop	ar5
      000030 D0 06            [24]  138 	pop	ar6
      000032 D0 07            [24]  139 	pop	ar7
                                    140 ;	puts.c:36: i++;
      000034 0B               [12]  141 	inc	r3
      000035 BB 00 D2         [24]  142 	cjne	r3,#0x00,00101$
      000038 0C               [12]  143 	inc	r4
      000039 80 CF            [24]  144 	sjmp	00101$
      00003B                        145 00103$:
                                    146 ;	puts.c:38: putchar('\n');
      00003B 75 82 0A         [24]  147 	mov	dpl,#0x0A
      00003E C0 04            [24]  148 	push	ar4
      000040 C0 03            [24]  149 	push	ar3
      000042 12r00r00         [24]  150 	lcall	_putchar
      000045 D0 03            [24]  151 	pop	ar3
      000047 D0 04            [24]  152 	pop	ar4
                                    153 ;	puts.c:39: return i+1;
      000049 0B               [12]  154 	inc	r3
      00004A BB 00 01         [24]  155 	cjne	r3,#0x00,00116$
      00004D 0C               [12]  156 	inc	r4
      00004E                        157 00116$:
      00004E 8B 82            [24]  158 	mov	dpl,r3
      000050 8C 83            [24]  159 	mov	dph,r4
      000052 22               [24]  160 	ret
                                    161 	.area CSEG    (CODE)
                                    162 	.area CONST   (CODE)
                                    163 	.area XINIT   (CODE)
                                    164 	.area CABS    (ABS,CODE)
