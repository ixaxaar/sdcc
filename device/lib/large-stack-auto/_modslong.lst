                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:10 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _modslong
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl __modslong
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram 
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
                                     48 ;--------------------------------------------------------
                                     49 ; paged external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area PSEG    (PAG,XDATA)
                                     52 ;--------------------------------------------------------
                                     53 ; external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area XSEG    (XDATA)
                                     56 ;--------------------------------------------------------
                                     57 ; absolute external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XABS    (ABS,XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; external initialized ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XISEG   (XDATA)
                                     64 	.area HOME    (CODE)
                                     65 	.area GSINIT0 (CODE)
                                     66 	.area GSINIT1 (CODE)
                                     67 	.area GSINIT2 (CODE)
                                     68 	.area GSINIT3 (CODE)
                                     69 	.area GSINIT4 (CODE)
                                     70 	.area GSINIT5 (CODE)
                                     71 	.area GSINIT  (CODE)
                                     72 	.area GSFINAL (CODE)
                                     73 	.area CSEG    (CODE)
                                     74 ;--------------------------------------------------------
                                     75 ; global & static initialisations
                                     76 ;--------------------------------------------------------
                                     77 	.area HOME    (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; Home
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area HOME    (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; code
                                     88 ;--------------------------------------------------------
                                     89 	.area CSEG    (CODE)
                                     90 ;------------------------------------------------------------
                                     91 ;Allocation info for local variables in function '_modslong'
                                     92 ;------------------------------------------------------------
                                     93 ;b                         Allocated to stack - _bp -6
                                     94 ;a                         Allocated to registers r4 r5 r6 r7 
                                     95 ;r                         Allocated to stack - _bp +9
                                     96 ;sloc0                     Allocated to stack - _bp +5
                                     97 ;sloc1                     Allocated to stack - _bp +1
                                     98 ;------------------------------------------------------------
                                     99 ;	_modslong.c:259: _modslong (long a, long b)
                                    100 ;	-----------------------------------------
                                    101 ;	 function _modslong
                                    102 ;	-----------------------------------------
      000000                        103 __modslong:
                           000007   104 	ar7 = 0x07
                           000006   105 	ar6 = 0x06
                           000005   106 	ar5 = 0x05
                           000004   107 	ar4 = 0x04
                           000003   108 	ar3 = 0x03
                           000002   109 	ar2 = 0x02
                           000001   110 	ar1 = 0x01
                           000000   111 	ar0 = 0x00
      000000 C0*00            [24]  112 	push	_bp
      000002 85 81*00         [24]  113 	mov	_bp,sp
      000005 AC 82            [24]  114 	mov	r4,dpl
      000007 AD 83            [24]  115 	mov	r5,dph
      000009 AE F0            [24]  116 	mov	r6,b
      00000B FF               [12]  117 	mov	r7,a
      00000C E5 81            [12]  118 	mov	a,sp
      00000E 24 0C            [12]  119 	add	a,#0x0C
      000010 F5 81            [12]  120 	mov	sp,a
                                    121 ;	_modslong.c:263: r = (unsigned long)(a < 0 ? -a : a) % (unsigned long)(b < 0 ? -b : b);
      000012 EF               [12]  122 	mov	a,r7
      000013 33               [12]  123 	rlc	a
      000014 E4               [12]  124 	clr	a
      000015 33               [12]  125 	rlc	a
      000016 FB               [12]  126 	mov	r3,a
      000017 60 17            [24]  127 	jz	00106$
      000019 E5*00            [12]  128 	mov	a,_bp
      00001B 24 05            [12]  129 	add	a,#0x05
      00001D F8               [12]  130 	mov	r0,a
      00001E C3               [12]  131 	clr	c
      00001F E4               [12]  132 	clr	a
      000020 9C               [12]  133 	subb	a,r4
      000021 F6               [12]  134 	mov	@r0,a
      000022 E4               [12]  135 	clr	a
      000023 9D               [12]  136 	subb	a,r5
      000024 08               [12]  137 	inc	r0
      000025 F6               [12]  138 	mov	@r0,a
      000026 E4               [12]  139 	clr	a
      000027 9E               [12]  140 	subb	a,r6
      000028 08               [12]  141 	inc	r0
      000029 F6               [12]  142 	mov	@r0,a
      00002A E4               [12]  143 	clr	a
      00002B 9F               [12]  144 	subb	a,r7
      00002C 08               [12]  145 	inc	r0
      00002D F6               [12]  146 	mov	@r0,a
      00002E 80 10            [24]  147 	sjmp	00107$
      000030                        148 00106$:
      000030 E5*00            [12]  149 	mov	a,_bp
      000032 24 05            [12]  150 	add	a,#0x05
      000034 F8               [12]  151 	mov	r0,a
      000035 A6 04            [24]  152 	mov	@r0,ar4
      000037 08               [12]  153 	inc	r0
      000038 A6 05            [24]  154 	mov	@r0,ar5
      00003A 08               [12]  155 	inc	r0
      00003B A6 06            [24]  156 	mov	@r0,ar6
      00003D 08               [12]  157 	inc	r0
      00003E A6 07            [24]  158 	mov	@r0,ar7
      000040                        159 00107$:
      000040 E5*00            [12]  160 	mov	a,_bp
      000042 24 05            [12]  161 	add	a,#0x05
      000044 F8               [12]  162 	mov	r0,a
      000045 A9*00            [24]  163 	mov	r1,_bp
      000047 09               [12]  164 	inc	r1
      000048 E6               [12]  165 	mov	a,@r0
      000049 F7               [12]  166 	mov	@r1,a
      00004A 08               [12]  167 	inc	r0
      00004B 09               [12]  168 	inc	r1
      00004C E6               [12]  169 	mov	a,@r0
      00004D F7               [12]  170 	mov	@r1,a
      00004E 08               [12]  171 	inc	r0
      00004F 09               [12]  172 	inc	r1
      000050 E6               [12]  173 	mov	a,@r0
      000051 F7               [12]  174 	mov	@r1,a
      000052 08               [12]  175 	inc	r0
      000053 09               [12]  176 	inc	r1
      000054 E6               [12]  177 	mov	a,@r0
      000055 F7               [12]  178 	mov	@r1,a
      000056 E5*00            [12]  179 	mov	a,_bp
      000058 24 FA            [12]  180 	add	a,#0xfa
      00005A F8               [12]  181 	mov	r0,a
      00005B 08               [12]  182 	inc	r0
      00005C 08               [12]  183 	inc	r0
      00005D 08               [12]  184 	inc	r0
      00005E E6               [12]  185 	mov	a,@r0
      00005F 30 E7 17         [24]  186 	jnb	acc.7,00108$
      000062 E5*00            [12]  187 	mov	a,_bp
      000064 24 FA            [12]  188 	add	a,#0xfa
      000066 F8               [12]  189 	mov	r0,a
      000067 C3               [12]  190 	clr	c
      000068 E4               [12]  191 	clr	a
      000069 96               [12]  192 	subb	a,@r0
      00006A FC               [12]  193 	mov	r4,a
      00006B 08               [12]  194 	inc	r0
      00006C E4               [12]  195 	clr	a
      00006D 96               [12]  196 	subb	a,@r0
      00006E FD               [12]  197 	mov	r5,a
      00006F 08               [12]  198 	inc	r0
      000070 E4               [12]  199 	clr	a
      000071 96               [12]  200 	subb	a,@r0
      000072 FE               [12]  201 	mov	r6,a
      000073 08               [12]  202 	inc	r0
      000074 E4               [12]  203 	clr	a
      000075 96               [12]  204 	subb	a,@r0
      000076 FF               [12]  205 	mov	r7,a
      000077 80 10            [24]  206 	sjmp	00109$
      000079                        207 00108$:
      000079 E5*00            [12]  208 	mov	a,_bp
      00007B 24 FA            [12]  209 	add	a,#0xfa
      00007D F8               [12]  210 	mov	r0,a
      00007E 86 04            [24]  211 	mov	ar4,@r0
      000080 08               [12]  212 	inc	r0
      000081 86 05            [24]  213 	mov	ar5,@r0
      000083 08               [12]  214 	inc	r0
      000084 86 06            [24]  215 	mov	ar6,@r0
      000086 08               [12]  216 	inc	r0
      000087 86 07            [24]  217 	mov	ar7,@r0
      000089                        218 00109$:
      000089 8C 02            [24]  219 	mov	ar2,r4
      00008B C0 03            [24]  220 	push	ar3
      00008D C0 02            [24]  221 	push	ar2
      00008F C0 05            [24]  222 	push	ar5
      000091 C0 06            [24]  223 	push	ar6
      000093 C0 07            [24]  224 	push	ar7
      000095 A8*00            [24]  225 	mov	r0,_bp
      000097 08               [12]  226 	inc	r0
      000098 86 82            [24]  227 	mov	dpl,@r0
      00009A 08               [12]  228 	inc	r0
      00009B 86 83            [24]  229 	mov	dph,@r0
      00009D 08               [12]  230 	inc	r0
      00009E 86 F0            [24]  231 	mov	b,@r0
      0000A0 08               [12]  232 	inc	r0
      0000A1 E6               [12]  233 	mov	a,@r0
      0000A2 12r00r00         [24]  234 	lcall	__modulong
      0000A5 AC 82            [24]  235 	mov	r4,dpl
      0000A7 AD 83            [24]  236 	mov	r5,dph
      0000A9 AE F0            [24]  237 	mov	r6,b
      0000AB FF               [12]  238 	mov	r7,a
      0000AC E5 81            [12]  239 	mov	a,sp
      0000AE 24 FC            [12]  240 	add	a,#0xfc
      0000B0 F5 81            [12]  241 	mov	sp,a
      0000B2 D0 03            [24]  242 	pop	ar3
      0000B4 E5*00            [12]  243 	mov	a,_bp
      0000B6 24 09            [12]  244 	add	a,#0x09
      0000B8 F8               [12]  245 	mov	r0,a
      0000B9 A6 04            [24]  246 	mov	@r0,ar4
      0000BB 08               [12]  247 	inc	r0
      0000BC A6 05            [24]  248 	mov	@r0,ar5
      0000BE 08               [12]  249 	inc	r0
      0000BF A6 06            [24]  250 	mov	@r0,ar6
      0000C1 08               [12]  251 	inc	r0
      0000C2 A6 07            [24]  252 	mov	@r0,ar7
                                    253 ;	_modslong.c:265: if (a < 0)
      0000C4 EB               [12]  254 	mov	a,r3
      0000C5 60 1D            [24]  255 	jz	00102$
                                    256 ;	_modslong.c:266: return -r;
      0000C7 E5*00            [12]  257 	mov	a,_bp
      0000C9 24 09            [12]  258 	add	a,#0x09
      0000CB F8               [12]  259 	mov	r0,a
      0000CC C3               [12]  260 	clr	c
      0000CD E4               [12]  261 	clr	a
      0000CE 96               [12]  262 	subb	a,@r0
      0000CF FA               [12]  263 	mov	r2,a
      0000D0 08               [12]  264 	inc	r0
      0000D1 E4               [12]  265 	clr	a
      0000D2 96               [12]  266 	subb	a,@r0
      0000D3 FB               [12]  267 	mov	r3,a
      0000D4 08               [12]  268 	inc	r0
      0000D5 E4               [12]  269 	clr	a
      0000D6 96               [12]  270 	subb	a,@r0
      0000D7 FE               [12]  271 	mov	r6,a
      0000D8 08               [12]  272 	inc	r0
      0000D9 E4               [12]  273 	clr	a
      0000DA 96               [12]  274 	subb	a,@r0
      0000DB FF               [12]  275 	mov	r7,a
      0000DC 8A 82            [24]  276 	mov	dpl,r2
      0000DE 8B 83            [24]  277 	mov	dph,r3
      0000E0 8E F0            [24]  278 	mov	b,r6
      0000E2 80 0F            [24]  279 	sjmp	00104$
      0000E4                        280 00102$:
                                    281 ;	_modslong.c:268: return r;
      0000E4 E5*00            [12]  282 	mov	a,_bp
      0000E6 24 09            [12]  283 	add	a,#0x09
      0000E8 F8               [12]  284 	mov	r0,a
      0000E9 86 82            [24]  285 	mov	dpl,@r0
      0000EB 08               [12]  286 	inc	r0
      0000EC 86 83            [24]  287 	mov	dph,@r0
      0000EE 08               [12]  288 	inc	r0
      0000EF 86 F0            [24]  289 	mov	b,@r0
      0000F1 08               [12]  290 	inc	r0
      0000F2 E6               [12]  291 	mov	a,@r0
      0000F3                        292 00104$:
      0000F3 85*00 81         [24]  293 	mov	sp,_bp
      0000F6 D0*00            [24]  294 	pop	_bp
      0000F8 22               [24]  295 	ret
                                    296 	.area CSEG    (CODE)
                                    297 	.area CONST   (CODE)
                                    298 	.area XINIT   (CODE)
                                    299 	.area CABS    (ABS,CODE)
