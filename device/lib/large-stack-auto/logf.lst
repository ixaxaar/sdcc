                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:09 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module logf
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _frexpf
                                     13 	.globl _logf
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram 
                                     35 ;--------------------------------------------------------
                                     36 ;--------------------------------------------------------
                                     37 ; indirectly addressable internal ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area ISEG    (DATA)
                                     40 ;--------------------------------------------------------
                                     41 ; absolute internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area IABS    (ABS,DATA)
                                     44 	.area IABS    (ABS,DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; bit data
                                     47 ;--------------------------------------------------------
                                     48 	.area BSEG    (BIT)
                                     49 ;--------------------------------------------------------
                                     50 ; paged external ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area PSEG    (PAG,XDATA)
                                     53 ;--------------------------------------------------------
                                     54 ; external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area XSEG    (XDATA)
                                     57 ;--------------------------------------------------------
                                     58 ; absolute external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XABS    (ABS,XDATA)
                                     61 ;--------------------------------------------------------
                                     62 ; external initialized ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XISEG   (XDATA)
                                     65 	.area HOME    (CODE)
                                     66 	.area GSINIT0 (CODE)
                                     67 	.area GSINIT1 (CODE)
                                     68 	.area GSINIT2 (CODE)
                                     69 	.area GSINIT3 (CODE)
                                     70 	.area GSINIT4 (CODE)
                                     71 	.area GSINIT5 (CODE)
                                     72 	.area GSINIT  (CODE)
                                     73 	.area GSFINAL (CODE)
                                     74 	.area CSEG    (CODE)
                                     75 ;--------------------------------------------------------
                                     76 ; global & static initialisations
                                     77 ;--------------------------------------------------------
                                     78 	.area HOME    (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 	.area GSFINAL (CODE)
                                     81 	.area GSINIT  (CODE)
                                     82 ;--------------------------------------------------------
                                     83 ; Home
                                     84 ;--------------------------------------------------------
                                     85 	.area HOME    (CODE)
                                     86 	.area HOME    (CODE)
                                     87 ;--------------------------------------------------------
                                     88 ; code
                                     89 ;--------------------------------------------------------
                                     90 	.area CSEG    (CODE)
                                     91 ;------------------------------------------------------------
                                     92 ;Allocation info for local variables in function 'logf'
                                     93 ;------------------------------------------------------------
                                     94 ;x                         Allocated to stack - _bp +1
                                     95 ;Rz                        Allocated to stack - _bp +9
                                     96 ;f                         Allocated to registers r4 r3 r6 r7 
                                     97 ;z                         Allocated to stack - _bp +13
                                     98 ;w                         Allocated to registers r7 r6 r5 r4 
                                     99 ;znum                      Allocated to stack - _bp +17
                                    100 ;zden                      Allocated to stack - _bp +21
                                    101 ;xn                        Allocated to stack - _bp +25
                                    102 ;n                         Allocated to stack - _bp +29
                                    103 ;sloc0                     Allocated to stack - _bp +5
                                    104 ;------------------------------------------------------------
                                    105 ;	logf.c:216: float logf(const float x) _FLOAT_FUNC_REENTRANT
                                    106 ;	-----------------------------------------
                                    107 ;	 function logf
                                    108 ;	-----------------------------------------
      000000                        109 _logf:
                           000007   110 	ar7 = 0x07
                           000006   111 	ar6 = 0x06
                           000005   112 	ar5 = 0x05
                           000004   113 	ar4 = 0x04
                           000003   114 	ar3 = 0x03
                           000002   115 	ar2 = 0x02
                           000001   116 	ar1 = 0x01
                           000000   117 	ar0 = 0x00
      000000 C0*00            [24]  118 	push	_bp
      000002 85 81*00         [24]  119 	mov	_bp,sp
      000005 C0 82            [24]  120 	push	dpl
      000007 C0 83            [24]  121 	push	dph
      000009 C0 F0            [24]  122 	push	b
      00000B C0 E0            [24]  123 	push	acc
      00000D E5 81            [12]  124 	mov	a,sp
      00000F 24 1A            [12]  125 	add	a,#0x1A
      000011 F5 81            [12]  126 	mov	sp,a
                                    127 ;	logf.c:226: if (x<=0.0)
      000013 E4               [12]  128 	clr	a
      000014 C0 E0            [24]  129 	push	acc
      000016 C0 E0            [24]  130 	push	acc
      000018 C0 E0            [24]  131 	push	acc
      00001A C0 E0            [24]  132 	push	acc
      00001C A8*00            [24]  133 	mov	r0,_bp
      00001E 08               [12]  134 	inc	r0
      00001F 86 82            [24]  135 	mov	dpl,@r0
      000021 08               [12]  136 	inc	r0
      000022 86 83            [24]  137 	mov	dph,@r0
      000024 08               [12]  138 	inc	r0
      000025 86 F0            [24]  139 	mov	b,@r0
      000027 08               [12]  140 	inc	r0
      000028 E6               [12]  141 	mov	a,@r0
      000029 12r00r00         [24]  142 	lcall	___fsgt
      00002C AB 82            [24]  143 	mov	r3,dpl
      00002E E5 81            [12]  144 	mov	a,sp
      000030 24 FC            [12]  145 	add	a,#0xfc
      000032 F5 81            [12]  146 	mov	sp,a
      000034 EB               [12]  147 	mov	a,r3
      000035 70 12            [24]  148 	jnz	00102$
                                    149 ;	logf.c:228: errno=EDOM;
      000037 90r00r00         [24]  150 	mov	dptr,#_errno
      00003A 74 21            [12]  151 	mov	a,#0x21
      00003C F0               [24]  152 	movx	@dptr,a
      00003D E4               [12]  153 	clr	a
      00003E A3               [24]  154 	inc	dptr
      00003F F0               [24]  155 	movx	@dptr,a
                                    156 ;	logf.c:229: return 0.0;
      000040 90 00 00         [24]  157 	mov	dptr,#(0x00&0x00ff)
      000043 E4               [12]  158 	clr	a
      000044 F5 F0            [12]  159 	mov	b,a
      000046 02r04r25         [24]  160 	ljmp	00106$
      000049                        161 00102$:
                                    162 ;	logf.c:231: f=frexpf(x, &n);
      000049 E5*00            [12]  163 	mov	a,_bp
      00004B 24 1D            [12]  164 	add	a,#0x1D
      00004D FA               [12]  165 	mov	r2,a
      00004E 7B 00            [12]  166 	mov	r3,#0x00
      000050 7F 40            [12]  167 	mov	r7,#0x40
      000052 C0 02            [24]  168 	push	ar2
      000054 C0 03            [24]  169 	push	ar3
      000056 C0 07            [24]  170 	push	ar7
      000058 A8*00            [24]  171 	mov	r0,_bp
      00005A 08               [12]  172 	inc	r0
      00005B 86 82            [24]  173 	mov	dpl,@r0
      00005D 08               [12]  174 	inc	r0
      00005E 86 83            [24]  175 	mov	dph,@r0
      000060 08               [12]  176 	inc	r0
      000061 86 F0            [24]  177 	mov	b,@r0
      000063 08               [12]  178 	inc	r0
      000064 E6               [12]  179 	mov	a,@r0
      000065 12r00r00         [24]  180 	lcall	_frexpf
      000068 AC 82            [24]  181 	mov	r4,dpl
      00006A AD 83            [24]  182 	mov	r5,dph
      00006C AE F0            [24]  183 	mov	r6,b
      00006E FF               [12]  184 	mov	r7,a
      00006F 15 81            [12]  185 	dec	sp
      000071 15 81            [12]  186 	dec	sp
      000073 15 81            [12]  187 	dec	sp
      000075 8D 03            [24]  188 	mov	ar3,r5
                                    189 ;	logf.c:232: znum=f-0.5;
      000077 C0 07            [24]  190 	push	ar7
      000079 C0 06            [24]  191 	push	ar6
      00007B C0 04            [24]  192 	push	ar4
      00007D C0 03            [24]  193 	push	ar3
      00007F E4               [12]  194 	clr	a
      000080 C0 E0            [24]  195 	push	acc
      000082 C0 E0            [24]  196 	push	acc
      000084 C0 E0            [24]  197 	push	acc
      000086 74 3F            [12]  198 	mov	a,#0x3F
      000088 C0 E0            [24]  199 	push	acc
      00008A 8C 82            [24]  200 	mov	dpl,r4
      00008C 8B 83            [24]  201 	mov	dph,r3
      00008E 8E F0            [24]  202 	mov	b,r6
      000090 EF               [12]  203 	mov	a,r7
      000091 12r00r00         [24]  204 	lcall	___fssub
      000094 C8               [12]  205 	xch	a,r0
      000095 E5*00            [12]  206 	mov	a,_bp
      000097 24 11            [12]  207 	add	a,#0x11
      000099 C8               [12]  208 	xch	a,r0
      00009A A6 82            [24]  209 	mov	@r0,dpl
      00009C 08               [12]  210 	inc	r0
      00009D A6 83            [24]  211 	mov	@r0,dph
      00009F 08               [12]  212 	inc	r0
      0000A0 A6 F0            [24]  213 	mov	@r0,b
      0000A2 08               [12]  214 	inc	r0
      0000A3 F6               [12]  215 	mov	@r0,a
      0000A4 E5 81            [12]  216 	mov	a,sp
      0000A6 24 FC            [12]  217 	add	a,#0xfc
      0000A8 F5 81            [12]  218 	mov	sp,a
      0000AA D0 03            [24]  219 	pop	ar3
      0000AC D0 04            [24]  220 	pop	ar4
      0000AE D0 06            [24]  221 	pop	ar6
      0000B0 D0 07            [24]  222 	pop	ar7
      0000B2 E5*00            [12]  223 	mov	a,_bp
      0000B4 24 11            [12]  224 	add	a,#0x11
                                    225 ;	logf.c:233: if (f>C0)
      0000B6 C0 07            [24]  226 	push	ar7
      0000B8 C0 06            [24]  227 	push	ar6
      0000BA C0 04            [24]  228 	push	ar4
      0000BC C0 03            [24]  229 	push	ar3
      0000BE 74 F3            [12]  230 	mov	a,#0xF3
      0000C0 C0 E0            [24]  231 	push	acc
      0000C2 74 04            [12]  232 	mov	a,#0x04
      0000C4 C0 E0            [24]  233 	push	acc
      0000C6 74 35            [12]  234 	mov	a,#0x35
      0000C8 C0 E0            [24]  235 	push	acc
      0000CA 74 3F            [12]  236 	mov	a,#0x3F
      0000CC C0 E0            [24]  237 	push	acc
      0000CE 8C 82            [24]  238 	mov	dpl,r4
      0000D0 8B 83            [24]  239 	mov	dph,r3
      0000D2 8E F0            [24]  240 	mov	b,r6
      0000D4 EF               [12]  241 	mov	a,r7
      0000D5 12r00r00         [24]  242 	lcall	___fsgt
      0000D8 AD 82            [24]  243 	mov	r5,dpl
      0000DA E5 81            [12]  244 	mov	a,sp
      0000DC 24 FC            [12]  245 	add	a,#0xfc
      0000DE F5 81            [12]  246 	mov	sp,a
      0000E0 D0 03            [24]  247 	pop	ar3
      0000E2 D0 04            [24]  248 	pop	ar4
      0000E4 D0 06            [24]  249 	pop	ar6
      0000E6 D0 07            [24]  250 	pop	ar7
      0000E8 ED               [12]  251 	mov	a,r5
      0000E9 70 03            [24]  252 	jnz	00115$
      0000EB 02r01r8D         [24]  253 	ljmp	00104$
      0000EE                        254 00115$:
                                    255 ;	logf.c:235: znum-=0.5;
      0000EE C0 07            [24]  256 	push	ar7
      0000F0 C0 06            [24]  257 	push	ar6
      0000F2 C0 04            [24]  258 	push	ar4
      0000F4 C0 03            [24]  259 	push	ar3
      0000F6 E4               [12]  260 	clr	a
      0000F7 C0 E0            [24]  261 	push	acc
      0000F9 C0 E0            [24]  262 	push	acc
      0000FB C0 E0            [24]  263 	push	acc
      0000FD 74 3F            [12]  264 	mov	a,#0x3F
      0000FF C0 E0            [24]  265 	push	acc
      000101 E5*00            [12]  266 	mov	a,_bp
      000103 24 11            [12]  267 	add	a,#0x11
      000105 F8               [12]  268 	mov	r0,a
      000106 86 82            [24]  269 	mov	dpl,@r0
      000108 08               [12]  270 	inc	r0
      000109 86 83            [24]  271 	mov	dph,@r0
      00010B 08               [12]  272 	inc	r0
      00010C 86 F0            [24]  273 	mov	b,@r0
      00010E 08               [12]  274 	inc	r0
      00010F E6               [12]  275 	mov	a,@r0
      000110 12r00r00         [24]  276 	lcall	___fssub
      000113 C8               [12]  277 	xch	a,r0
      000114 E5*00            [12]  278 	mov	a,_bp
      000116 24 05            [12]  279 	add	a,#0x05
      000118 C8               [12]  280 	xch	a,r0
      000119 A6 82            [24]  281 	mov	@r0,dpl
      00011B 08               [12]  282 	inc	r0
      00011C A6 83            [24]  283 	mov	@r0,dph
      00011E 08               [12]  284 	inc	r0
      00011F A6 F0            [24]  285 	mov	@r0,b
      000121 08               [12]  286 	inc	r0
      000122 F6               [12]  287 	mov	@r0,a
      000123 E5 81            [12]  288 	mov	a,sp
      000125 24 FC            [12]  289 	add	a,#0xfc
      000127 F5 81            [12]  290 	mov	sp,a
      000129 D0 03            [24]  291 	pop	ar3
      00012B D0 04            [24]  292 	pop	ar4
      00012D D0 06            [24]  293 	pop	ar6
      00012F D0 07            [24]  294 	pop	ar7
      000131 E5*00            [12]  295 	mov	a,_bp
      000133 24 05            [12]  296 	add	a,#0x05
      000135 F8               [12]  297 	mov	r0,a
      000136 E5*00            [12]  298 	mov	a,_bp
      000138 24 11            [12]  299 	add	a,#0x11
      00013A F9               [12]  300 	mov	r1,a
      00013B E6               [12]  301 	mov	a,@r0
      00013C F7               [12]  302 	mov	@r1,a
      00013D 08               [12]  303 	inc	r0
      00013E 09               [12]  304 	inc	r1
      00013F E6               [12]  305 	mov	a,@r0
      000140 F7               [12]  306 	mov	@r1,a
      000141 08               [12]  307 	inc	r0
      000142 09               [12]  308 	inc	r1
      000143 E6               [12]  309 	mov	a,@r0
      000144 F7               [12]  310 	mov	@r1,a
      000145 08               [12]  311 	inc	r0
      000146 09               [12]  312 	inc	r1
      000147 E6               [12]  313 	mov	a,@r0
      000148 F7               [12]  314 	mov	@r1,a
                                    315 ;	logf.c:236: zden=(f*0.5)+0.5;
      000149 C0 04            [24]  316 	push	ar4
      00014B C0 03            [24]  317 	push	ar3
      00014D C0 06            [24]  318 	push	ar6
      00014F C0 07            [24]  319 	push	ar7
      000151 90 00 00         [24]  320 	mov	dptr,#(0x00&0x00ff)
      000154 E4               [12]  321 	clr	a
      000155 F5 F0            [12]  322 	mov	b,a
      000157 74 3F            [12]  323 	mov	a,#0x3F
      000159 12r00r00         [24]  324 	lcall	___fsmul
      00015C AC 82            [24]  325 	mov	r4,dpl
      00015E AD 83            [24]  326 	mov	r5,dph
      000160 AE F0            [24]  327 	mov	r6,b
      000162 FF               [12]  328 	mov	r7,a
      000163 E5 81            [12]  329 	mov	a,sp
      000165 24 FC            [12]  330 	add	a,#0xfc
      000167 F5 81            [12]  331 	mov	sp,a
      000169 E4               [12]  332 	clr	a
      00016A C0 E0            [24]  333 	push	acc
      00016C C0 E0            [24]  334 	push	acc
      00016E C0 E0            [24]  335 	push	acc
      000170 74 3F            [12]  336 	mov	a,#0x3F
      000172 C0 E0            [24]  337 	push	acc
      000174 8C 82            [24]  338 	mov	dpl,r4
      000176 8D 83            [24]  339 	mov	dph,r5
      000178 8E F0            [24]  340 	mov	b,r6
      00017A EF               [12]  341 	mov	a,r7
      00017B 12r00r00         [24]  342 	lcall	___fsadd
      00017E AC 82            [24]  343 	mov	r4,dpl
      000180 AD 83            [24]  344 	mov	r5,dph
      000182 AE F0            [24]  345 	mov	r6,b
      000184 FF               [12]  346 	mov	r7,a
      000185 E5 81            [12]  347 	mov	a,sp
      000187 24 FC            [12]  348 	add	a,#0xfc
      000189 F5 81            [12]  349 	mov	sp,a
      00018B 80 72            [24]  350 	sjmp	00105$
      00018D                        351 00104$:
                                    352 ;	logf.c:240: n--;
      00018D E5*00            [12]  353 	mov	a,_bp
      00018F 24 1D            [12]  354 	add	a,#0x1d
      000191 F8               [12]  355 	mov	r0,a
      000192 16               [12]  356 	dec	@r0
      000193 B6 FF 02         [24]  357 	cjne	@r0,#0xFF,00116$
      000196 08               [12]  358 	inc	r0
      000197 16               [12]  359 	dec	@r0
      000198                        360 00116$:
                                    361 ;	logf.c:241: zden=znum*0.5+0.5;
      000198 E5*00            [12]  362 	mov	a,_bp
      00019A 24 11            [12]  363 	add	a,#0x11
      00019C F8               [12]  364 	mov	r0,a
      00019D E6               [12]  365 	mov	a,@r0
      00019E C0 E0            [24]  366 	push	acc
      0001A0 08               [12]  367 	inc	r0
      0001A1 E6               [12]  368 	mov	a,@r0
      0001A2 C0 E0            [24]  369 	push	acc
      0001A4 08               [12]  370 	inc	r0
      0001A5 E6               [12]  371 	mov	a,@r0
      0001A6 C0 E0            [24]  372 	push	acc
      0001A8 08               [12]  373 	inc	r0
      0001A9 E6               [12]  374 	mov	a,@r0
      0001AA C0 E0            [24]  375 	push	acc
      0001AC 90 00 00         [24]  376 	mov	dptr,#(0x00&0x00ff)
      0001AF E4               [12]  377 	clr	a
      0001B0 F5 F0            [12]  378 	mov	b,a
      0001B2 74 3F            [12]  379 	mov	a,#0x3F
      0001B4 12r00r00         [24]  380 	lcall	___fsmul
      0001B7 AF 82            [24]  381 	mov	r7,dpl
      0001B9 AE 83            [24]  382 	mov	r6,dph
      0001BB AD F0            [24]  383 	mov	r5,b
      0001BD FC               [12]  384 	mov	r4,a
      0001BE E5 81            [12]  385 	mov	a,sp
      0001C0 24 FC            [12]  386 	add	a,#0xfc
      0001C2 F5 81            [12]  387 	mov	sp,a
      0001C4 E4               [12]  388 	clr	a
      0001C5 C0 E0            [24]  389 	push	acc
      0001C7 C0 E0            [24]  390 	push	acc
      0001C9 C0 E0            [24]  391 	push	acc
      0001CB 74 3F            [12]  392 	mov	a,#0x3F
      0001CD C0 E0            [24]  393 	push	acc
      0001CF 8F 82            [24]  394 	mov	dpl,r7
      0001D1 8E 83            [24]  395 	mov	dph,r6
      0001D3 8D F0            [24]  396 	mov	b,r5
      0001D5 EC               [12]  397 	mov	a,r4
      0001D6 12r00r00         [24]  398 	lcall	___fsadd
      0001D9 C8               [12]  399 	xch	a,r0
      0001DA E5*00            [12]  400 	mov	a,_bp
      0001DC 24 15            [12]  401 	add	a,#0x15
      0001DE C8               [12]  402 	xch	a,r0
      0001DF A6 82            [24]  403 	mov	@r0,dpl
      0001E1 08               [12]  404 	inc	r0
      0001E2 A6 83            [24]  405 	mov	@r0,dph
      0001E4 08               [12]  406 	inc	r0
      0001E5 A6 F0            [24]  407 	mov	@r0,b
      0001E7 08               [12]  408 	inc	r0
      0001E8 F6               [12]  409 	mov	@r0,a
      0001E9 E5 81            [12]  410 	mov	a,sp
      0001EB 24 FC            [12]  411 	add	a,#0xfc
      0001ED F5 81            [12]  412 	mov	sp,a
      0001EF E5*00            [12]  413 	mov	a,_bp
      0001F1 24 15            [12]  414 	add	a,#0x15
      0001F3 F8               [12]  415 	mov	r0,a
      0001F4 86 04            [24]  416 	mov	ar4,@r0
      0001F6 08               [12]  417 	inc	r0
      0001F7 86 05            [24]  418 	mov	ar5,@r0
      0001F9 08               [12]  419 	inc	r0
      0001FA 86 06            [24]  420 	mov	ar6,@r0
      0001FC 08               [12]  421 	inc	r0
      0001FD 86 07            [24]  422 	mov	ar7,@r0
      0001FF                        423 00105$:
                                    424 ;	logf.c:243: z=znum/zden;
      0001FF C0 04            [24]  425 	push	ar4
      000201 C0 05            [24]  426 	push	ar5
      000203 C0 06            [24]  427 	push	ar6
      000205 C0 07            [24]  428 	push	ar7
      000207 E5*00            [12]  429 	mov	a,_bp
      000209 24 11            [12]  430 	add	a,#0x11
      00020B F8               [12]  431 	mov	r0,a
      00020C 86 82            [24]  432 	mov	dpl,@r0
      00020E 08               [12]  433 	inc	r0
      00020F 86 83            [24]  434 	mov	dph,@r0
      000211 08               [12]  435 	inc	r0
      000212 86 F0            [24]  436 	mov	b,@r0
      000214 08               [12]  437 	inc	r0
      000215 E6               [12]  438 	mov	a,@r0
      000216 12r00r00         [24]  439 	lcall	___fsdiv
      000219 AC 82            [24]  440 	mov	r4,dpl
      00021B AD 83            [24]  441 	mov	r5,dph
      00021D AE F0            [24]  442 	mov	r6,b
      00021F FF               [12]  443 	mov	r7,a
      000220 E5 81            [12]  444 	mov	a,sp
      000222 24 FC            [12]  445 	add	a,#0xfc
      000224 F5 81            [12]  446 	mov	sp,a
      000226 E5*00            [12]  447 	mov	a,_bp
      000228 24 0D            [12]  448 	add	a,#0x0d
      00022A F8               [12]  449 	mov	r0,a
      00022B A6 04            [24]  450 	mov	@r0,ar4
      00022D 08               [12]  451 	inc	r0
      00022E A6 05            [24]  452 	mov	@r0,ar5
      000230 08               [12]  453 	inc	r0
      000231 A6 06            [24]  454 	mov	@r0,ar6
      000233 08               [12]  455 	inc	r0
      000234 A6 07            [24]  456 	mov	@r0,ar7
                                    457 ;	logf.c:244: w=z*z;
      000236 E5*00            [12]  458 	mov	a,_bp
      000238 24 0D            [12]  459 	add	a,#0x0d
      00023A F8               [12]  460 	mov	r0,a
      00023B E6               [12]  461 	mov	a,@r0
      00023C C0 E0            [24]  462 	push	acc
      00023E 08               [12]  463 	inc	r0
      00023F E6               [12]  464 	mov	a,@r0
      000240 C0 E0            [24]  465 	push	acc
      000242 08               [12]  466 	inc	r0
      000243 E6               [12]  467 	mov	a,@r0
      000244 C0 E0            [24]  468 	push	acc
      000246 08               [12]  469 	inc	r0
      000247 E6               [12]  470 	mov	a,@r0
      000248 C0 E0            [24]  471 	push	acc
      00024A E5*00            [12]  472 	mov	a,_bp
      00024C 24 0D            [12]  473 	add	a,#0x0d
      00024E F8               [12]  474 	mov	r0,a
      00024F 86 82            [24]  475 	mov	dpl,@r0
      000251 08               [12]  476 	inc	r0
      000252 86 83            [24]  477 	mov	dph,@r0
      000254 08               [12]  478 	inc	r0
      000255 86 F0            [24]  479 	mov	b,@r0
      000257 08               [12]  480 	inc	r0
      000258 E6               [12]  481 	mov	a,@r0
      000259 12r00r00         [24]  482 	lcall	___fsmul
      00025C AF 82            [24]  483 	mov	r7,dpl
      00025E AE 83            [24]  484 	mov	r6,dph
      000260 AD F0            [24]  485 	mov	r5,b
      000262 FC               [12]  486 	mov	r4,a
      000263 E5 81            [12]  487 	mov	a,sp
      000265 24 FC            [12]  488 	add	a,#0xfc
      000267 F5 81            [12]  489 	mov	sp,a
                                    490 ;	logf.c:246: Rz=z+z*(w*A(w)/B(w));
      000269 C0 07            [24]  491 	push	ar7
      00026B C0 06            [24]  492 	push	ar6
      00026D C0 05            [24]  493 	push	ar5
      00026F C0 04            [24]  494 	push	ar4
      000271 C0 07            [24]  495 	push	ar7
      000273 C0 06            [24]  496 	push	ar6
      000275 C0 05            [24]  497 	push	ar5
      000277 C0 04            [24]  498 	push	ar4
      000279 90 7E 3D         [24]  499 	mov	dptr,#0x7E3D
      00027C 75 F0 0D         [24]  500 	mov	b,#0x0D
      00027F 74 BF            [12]  501 	mov	a,#0xBF
      000281 12r00r00         [24]  502 	lcall	___fsmul
      000284 C8               [12]  503 	xch	a,r0
      000285 E5*00            [12]  504 	mov	a,_bp
      000287 24 05            [12]  505 	add	a,#0x05
      000289 C8               [12]  506 	xch	a,r0
      00028A A6 82            [24]  507 	mov	@r0,dpl
      00028C 08               [12]  508 	inc	r0
      00028D A6 83            [24]  509 	mov	@r0,dph
      00028F 08               [12]  510 	inc	r0
      000290 A6 F0            [24]  511 	mov	@r0,b
      000292 08               [12]  512 	inc	r0
      000293 F6               [12]  513 	mov	@r0,a
      000294 E5 81            [12]  514 	mov	a,sp
      000296 24 FC            [12]  515 	add	a,#0xfc
      000298 F5 81            [12]  516 	mov	sp,a
      00029A D0 04            [24]  517 	pop	ar4
      00029C D0 05            [24]  518 	pop	ar5
      00029E D0 06            [24]  519 	pop	ar6
      0002A0 D0 07            [24]  520 	pop	ar7
      0002A2 74 3A            [12]  521 	mov	a,#0x3A
      0002A4 C0 E0            [24]  522 	push	acc
      0002A6 74 3F            [12]  523 	mov	a,#0x3F
      0002A8 C0 E0            [24]  524 	push	acc
      0002AA 74 D4            [12]  525 	mov	a,#0xD4
      0002AC C0 E0            [24]  526 	push	acc
      0002AE 74 C0            [12]  527 	mov	a,#0xC0
      0002B0 C0 E0            [24]  528 	push	acc
      0002B2 8F 82            [24]  529 	mov	dpl,r7
      0002B4 8E 83            [24]  530 	mov	dph,r6
      0002B6 8D F0            [24]  531 	mov	b,r5
      0002B8 EC               [12]  532 	mov	a,r4
      0002B9 12r00r00         [24]  533 	lcall	___fsadd
      0002BC AC 82            [24]  534 	mov	r4,dpl
      0002BE AD 83            [24]  535 	mov	r5,dph
      0002C0 AE F0            [24]  536 	mov	r6,b
      0002C2 FF               [12]  537 	mov	r7,a
      0002C3 E5 81            [12]  538 	mov	a,sp
      0002C5 24 FC            [12]  539 	add	a,#0xfc
      0002C7 F5 81            [12]  540 	mov	sp,a
      0002C9 C0 04            [24]  541 	push	ar4
      0002CB C0 05            [24]  542 	push	ar5
      0002CD C0 06            [24]  543 	push	ar6
      0002CF C0 07            [24]  544 	push	ar7
      0002D1 E5*00            [12]  545 	mov	a,_bp
      0002D3 24 05            [12]  546 	add	a,#0x05
      0002D5 F8               [12]  547 	mov	r0,a
      0002D6 86 82            [24]  548 	mov	dpl,@r0
      0002D8 08               [12]  549 	inc	r0
      0002D9 86 83            [24]  550 	mov	dph,@r0
      0002DB 08               [12]  551 	inc	r0
      0002DC 86 F0            [24]  552 	mov	b,@r0
      0002DE 08               [12]  553 	inc	r0
      0002DF E6               [12]  554 	mov	a,@r0
      0002E0 12r00r00         [24]  555 	lcall	___fsdiv
      0002E3 AC 82            [24]  556 	mov	r4,dpl
      0002E5 AD 83            [24]  557 	mov	r5,dph
      0002E7 AE F0            [24]  558 	mov	r6,b
      0002E9 FF               [12]  559 	mov	r7,a
      0002EA E5 81            [12]  560 	mov	a,sp
      0002EC 24 FC            [12]  561 	add	a,#0xfc
      0002EE F5 81            [12]  562 	mov	sp,a
      0002F0 C0 04            [24]  563 	push	ar4
      0002F2 C0 05            [24]  564 	push	ar5
      0002F4 C0 06            [24]  565 	push	ar6
      0002F6 C0 07            [24]  566 	push	ar7
      0002F8 E5*00            [12]  567 	mov	a,_bp
      0002FA 24 0D            [12]  568 	add	a,#0x0d
      0002FC F8               [12]  569 	mov	r0,a
      0002FD 86 82            [24]  570 	mov	dpl,@r0
      0002FF 08               [12]  571 	inc	r0
      000300 86 83            [24]  572 	mov	dph,@r0
      000302 08               [12]  573 	inc	r0
      000303 86 F0            [24]  574 	mov	b,@r0
      000305 08               [12]  575 	inc	r0
      000306 E6               [12]  576 	mov	a,@r0
      000307 12r00r00         [24]  577 	lcall	___fsmul
      00030A AC 82            [24]  578 	mov	r4,dpl
      00030C AD 83            [24]  579 	mov	r5,dph
      00030E AE F0            [24]  580 	mov	r6,b
      000310 FF               [12]  581 	mov	r7,a
      000311 E5 81            [12]  582 	mov	a,sp
      000313 24 FC            [12]  583 	add	a,#0xfc
      000315 F5 81            [12]  584 	mov	sp,a
      000317 C0 04            [24]  585 	push	ar4
      000319 C0 05            [24]  586 	push	ar5
      00031B C0 06            [24]  587 	push	ar6
      00031D C0 07            [24]  588 	push	ar7
      00031F E5*00            [12]  589 	mov	a,_bp
      000321 24 0D            [12]  590 	add	a,#0x0d
      000323 F8               [12]  591 	mov	r0,a
      000324 86 82            [24]  592 	mov	dpl,@r0
      000326 08               [12]  593 	inc	r0
      000327 86 83            [24]  594 	mov	dph,@r0
      000329 08               [12]  595 	inc	r0
      00032A 86 F0            [24]  596 	mov	b,@r0
      00032C 08               [12]  597 	inc	r0
      00032D E6               [12]  598 	mov	a,@r0
      00032E 12r00r00         [24]  599 	lcall	___fsadd
      000331 C8               [12]  600 	xch	a,r0
      000332 E5*00            [12]  601 	mov	a,_bp
      000334 24 09            [12]  602 	add	a,#0x09
      000336 C8               [12]  603 	xch	a,r0
      000337 A6 82            [24]  604 	mov	@r0,dpl
      000339 08               [12]  605 	inc	r0
      00033A A6 83            [24]  606 	mov	@r0,dph
      00033C 08               [12]  607 	inc	r0
      00033D A6 F0            [24]  608 	mov	@r0,b
      00033F 08               [12]  609 	inc	r0
      000340 F6               [12]  610 	mov	@r0,a
      000341 E5 81            [12]  611 	mov	a,sp
      000343 24 FC            [12]  612 	add	a,#0xfc
      000345 F5 81            [12]  613 	mov	sp,a
                                    614 ;	logf.c:247: xn=n;
      000347 E5*00            [12]  615 	mov	a,_bp
      000349 24 1D            [12]  616 	add	a,#0x1d
      00034B F8               [12]  617 	mov	r0,a
      00034C 86 82            [24]  618 	mov	dpl,@r0
      00034E 08               [12]  619 	inc	r0
      00034F 86 83            [24]  620 	mov	dph,@r0
      000351 12r00r00         [24]  621 	lcall	___sint2fs
      000354 AA 82            [24]  622 	mov	r2,dpl
      000356 AB 83            [24]  623 	mov	r3,dph
      000358 AE F0            [24]  624 	mov	r6,b
      00035A FF               [12]  625 	mov	r7,a
      00035B E5*00            [12]  626 	mov	a,_bp
      00035D 24 19            [12]  627 	add	a,#0x19
      00035F F8               [12]  628 	mov	r0,a
      000360 A6 02            [24]  629 	mov	@r0,ar2
      000362 08               [12]  630 	inc	r0
      000363 A6 03            [24]  631 	mov	@r0,ar3
      000365 08               [12]  632 	inc	r0
      000366 A6 06            [24]  633 	mov	@r0,ar6
      000368 08               [12]  634 	inc	r0
      000369 A6 07            [24]  635 	mov	@r0,ar7
                                    636 ;	logf.c:248: return ((xn*C2+Rz)+xn*C1);
      00036B E5*00            [12]  637 	mov	a,_bp
      00036D 24 19            [12]  638 	add	a,#0x19
      00036F F8               [12]  639 	mov	r0,a
      000370 E6               [12]  640 	mov	a,@r0
      000371 C0 E0            [24]  641 	push	acc
      000373 08               [12]  642 	inc	r0
      000374 E6               [12]  643 	mov	a,@r0
      000375 C0 E0            [24]  644 	push	acc
      000377 08               [12]  645 	inc	r0
      000378 E6               [12]  646 	mov	a,@r0
      000379 C0 E0            [24]  647 	push	acc
      00037B 08               [12]  648 	inc	r0
      00037C E6               [12]  649 	mov	a,@r0
      00037D C0 E0            [24]  650 	push	acc
      00037F 90 80 83         [24]  651 	mov	dptr,#0x8083
      000382 75 F0 5E         [24]  652 	mov	b,#0x5E
      000385 74 B9            [12]  653 	mov	a,#0xB9
      000387 12r00r00         [24]  654 	lcall	___fsmul
      00038A AC 82            [24]  655 	mov	r4,dpl
      00038C AD 83            [24]  656 	mov	r5,dph
      00038E AE F0            [24]  657 	mov	r6,b
      000390 FF               [12]  658 	mov	r7,a
      000391 E5 81            [12]  659 	mov	a,sp
      000393 24 FC            [12]  660 	add	a,#0xfc
      000395 F5 81            [12]  661 	mov	sp,a
      000397 E5*00            [12]  662 	mov	a,_bp
      000399 24 09            [12]  663 	add	a,#0x09
      00039B F8               [12]  664 	mov	r0,a
      00039C E6               [12]  665 	mov	a,@r0
      00039D C0 E0            [24]  666 	push	acc
      00039F 08               [12]  667 	inc	r0
      0003A0 E6               [12]  668 	mov	a,@r0
      0003A1 C0 E0            [24]  669 	push	acc
      0003A3 08               [12]  670 	inc	r0
      0003A4 E6               [12]  671 	mov	a,@r0
      0003A5 C0 E0            [24]  672 	push	acc
      0003A7 08               [12]  673 	inc	r0
      0003A8 E6               [12]  674 	mov	a,@r0
      0003A9 C0 E0            [24]  675 	push	acc
      0003AB 8C 82            [24]  676 	mov	dpl,r4
      0003AD 8D 83            [24]  677 	mov	dph,r5
      0003AF 8E F0            [24]  678 	mov	b,r6
      0003B1 EF               [12]  679 	mov	a,r7
      0003B2 12r00r00         [24]  680 	lcall	___fsadd
      0003B5 C8               [12]  681 	xch	a,r0
      0003B6 E5*00            [12]  682 	mov	a,_bp
      0003B8 24 05            [12]  683 	add	a,#0x05
      0003BA C8               [12]  684 	xch	a,r0
      0003BB A6 82            [24]  685 	mov	@r0,dpl
      0003BD 08               [12]  686 	inc	r0
      0003BE A6 83            [24]  687 	mov	@r0,dph
      0003C0 08               [12]  688 	inc	r0
      0003C1 A6 F0            [24]  689 	mov	@r0,b
      0003C3 08               [12]  690 	inc	r0
      0003C4 F6               [12]  691 	mov	@r0,a
      0003C5 E5 81            [12]  692 	mov	a,sp
      0003C7 24 FC            [12]  693 	add	a,#0xfc
      0003C9 F5 81            [12]  694 	mov	sp,a
      0003CB E5*00            [12]  695 	mov	a,_bp
      0003CD 24 19            [12]  696 	add	a,#0x19
      0003CF F8               [12]  697 	mov	r0,a
      0003D0 E6               [12]  698 	mov	a,@r0
      0003D1 C0 E0            [24]  699 	push	acc
      0003D3 08               [12]  700 	inc	r0
      0003D4 E6               [12]  701 	mov	a,@r0
      0003D5 C0 E0            [24]  702 	push	acc
      0003D7 08               [12]  703 	inc	r0
      0003D8 E6               [12]  704 	mov	a,@r0
      0003D9 C0 E0            [24]  705 	push	acc
      0003DB 08               [12]  706 	inc	r0
      0003DC E6               [12]  707 	mov	a,@r0
      0003DD C0 E0            [24]  708 	push	acc
      0003DF 90 80 00         [24]  709 	mov	dptr,#0x8000
      0003E2 75 F0 31         [24]  710 	mov	b,#0x31
      0003E5 74 3F            [12]  711 	mov	a,#0x3F
      0003E7 12r00r00         [24]  712 	lcall	___fsmul
      0003EA AA 82            [24]  713 	mov	r2,dpl
      0003EC AB 83            [24]  714 	mov	r3,dph
      0003EE AE F0            [24]  715 	mov	r6,b
      0003F0 FF               [12]  716 	mov	r7,a
      0003F1 E5 81            [12]  717 	mov	a,sp
      0003F3 24 FC            [12]  718 	add	a,#0xfc
      0003F5 F5 81            [12]  719 	mov	sp,a
      0003F7 C0 02            [24]  720 	push	ar2
      0003F9 C0 03            [24]  721 	push	ar3
      0003FB C0 06            [24]  722 	push	ar6
      0003FD C0 07            [24]  723 	push	ar7
      0003FF E5*00            [12]  724 	mov	a,_bp
      000401 24 05            [12]  725 	add	a,#0x05
      000403 F8               [12]  726 	mov	r0,a
      000404 86 82            [24]  727 	mov	dpl,@r0
      000406 08               [12]  728 	inc	r0
      000407 86 83            [24]  729 	mov	dph,@r0
      000409 08               [12]  730 	inc	r0
      00040A 86 F0            [24]  731 	mov	b,@r0
      00040C 08               [12]  732 	inc	r0
      00040D E6               [12]  733 	mov	a,@r0
      00040E 12r00r00         [24]  734 	lcall	___fsadd
      000411 AC 82            [24]  735 	mov	r4,dpl
      000413 AD 83            [24]  736 	mov	r5,dph
      000415 AE F0            [24]  737 	mov	r6,b
      000417 FF               [12]  738 	mov	r7,a
      000418 E5 81            [12]  739 	mov	a,sp
      00041A 24 FC            [12]  740 	add	a,#0xfc
      00041C F5 81            [12]  741 	mov	sp,a
      00041E 8C 82            [24]  742 	mov	dpl,r4
      000420 8D 83            [24]  743 	mov	dph,r5
      000422 8E F0            [24]  744 	mov	b,r6
      000424 EF               [12]  745 	mov	a,r7
      000425                        746 00106$:
      000425 85*00 81         [24]  747 	mov	sp,_bp
      000428 D0*00            [24]  748 	pop	_bp
      00042A 22               [24]  749 	ret
                                    750 	.area CSEG    (CODE)
                                    751 	.area CONST   (CODE)
                                    752 	.area XINIT   (CODE)
                                    753 	.area CABS    (ABS,CODE)
