                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:15 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module puts
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _puts
                                     13 	.globl _putchar
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram 
                                     35 ;--------------------------------------------------------
                                     36 ;--------------------------------------------------------
                                     37 ; indirectly addressable internal ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area ISEG    (DATA)
                                     40 ;--------------------------------------------------------
                                     41 ; absolute internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area IABS    (ABS,DATA)
                                     44 	.area IABS    (ABS,DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; bit data
                                     47 ;--------------------------------------------------------
                                     48 	.area BSEG    (BIT)
                                     49 ;--------------------------------------------------------
                                     50 ; paged external ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area PSEG    (PAG,XDATA)
                                     53 ;--------------------------------------------------------
                                     54 ; external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area XSEG    (XDATA)
                                     57 ;--------------------------------------------------------
                                     58 ; absolute external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XABS    (ABS,XDATA)
                                     61 ;--------------------------------------------------------
                                     62 ; external initialized ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XISEG   (XDATA)
                                     65 	.area HOME    (CODE)
                                     66 	.area GSINIT0 (CODE)
                                     67 	.area GSINIT1 (CODE)
                                     68 	.area GSINIT2 (CODE)
                                     69 	.area GSINIT3 (CODE)
                                     70 	.area GSINIT4 (CODE)
                                     71 	.area GSINIT5 (CODE)
                                     72 	.area GSINIT  (CODE)
                                     73 	.area GSFINAL (CODE)
                                     74 	.area CSEG    (CODE)
                                     75 ;--------------------------------------------------------
                                     76 ; global & static initialisations
                                     77 ;--------------------------------------------------------
                                     78 	.area HOME    (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 	.area GSFINAL (CODE)
                                     81 	.area GSINIT  (CODE)
                                     82 ;--------------------------------------------------------
                                     83 ; Home
                                     84 ;--------------------------------------------------------
                                     85 	.area HOME    (CODE)
                                     86 	.area HOME    (CODE)
                                     87 ;--------------------------------------------------------
                                     88 ; code
                                     89 ;--------------------------------------------------------
                                     90 	.area CSEG    (CODE)
                                     91 ;------------------------------------------------------------
                                     92 ;Allocation info for local variables in function 'puts'
                                     93 ;------------------------------------------------------------
                                     94 ;s                         Allocated to registers 
                                     95 ;i                         Allocated to registers r3 r4 
                                     96 ;------------------------------------------------------------
                                     97 ;	puts.c:31: int puts (char *s)
                                     98 ;	-----------------------------------------
                                     99 ;	 function puts
                                    100 ;	-----------------------------------------
      000000                        101 _puts:
                           000007   102 	ar7 = 0x07
                           000006   103 	ar6 = 0x06
                           000005   104 	ar5 = 0x05
                           000004   105 	ar4 = 0x04
                           000003   106 	ar3 = 0x03
                           000002   107 	ar2 = 0x02
                           000001   108 	ar1 = 0x01
                           000000   109 	ar0 = 0x00
      000000 AD 82            [24]  110 	mov	r5,dpl
      000002 AE 83            [24]  111 	mov	r6,dph
      000004 AF F0            [24]  112 	mov	r7,b
                                    113 ;	puts.c:34: while (*s){
      000006 7B 00            [12]  114 	mov	r3,#0x00
      000008 7C 00            [12]  115 	mov	r4,#0x00
      00000A                        116 00101$:
      00000A 8D 82            [24]  117 	mov	dpl,r5
      00000C 8E 83            [24]  118 	mov	dph,r6
      00000E 8F F0            [24]  119 	mov	b,r7
      000010 12r00r00         [24]  120 	lcall	__gptrget
      000013 FA               [12]  121 	mov	r2,a
      000014 60 2B            [24]  122 	jz	00103$
                                    123 ;	puts.c:35: putchar(*s++);
      000016 0D               [12]  124 	inc	r5
      000017 BD 00 01         [24]  125 	cjne	r5,#0x00,00114$
      00001A 0E               [12]  126 	inc	r6
      00001B                        127 00114$:
      00001B 8A 82            [24]  128 	mov	dpl,r2
      00001D C0 07            [24]  129 	push	ar7
      00001F C0 06            [24]  130 	push	ar6
      000021 C0 05            [24]  131 	push	ar5
      000023 C0 04            [24]  132 	push	ar4
      000025 C0 03            [24]  133 	push	ar3
      000027 78r00            [12]  134 	mov	r0,#_putchar
      000029 79s00            [12]  135 	mov	r1,#(_putchar >> 8)
      00002B 7As00            [12]  136 	mov	r2,#(_putchar >> 16)
      00002D 12r00r00         [24]  137 	lcall	__sdcc_banked_call
      000030 D0 03            [24]  138 	pop	ar3
      000032 D0 04            [24]  139 	pop	ar4
      000034 D0 05            [24]  140 	pop	ar5
      000036 D0 06            [24]  141 	pop	ar6
      000038 D0 07            [24]  142 	pop	ar7
                                    143 ;	puts.c:36: i++;
      00003A 0B               [12]  144 	inc	r3
      00003B BB 00 CC         [24]  145 	cjne	r3,#0x00,00101$
      00003E 0C               [12]  146 	inc	r4
      00003F 80 C9            [24]  147 	sjmp	00101$
      000041                        148 00103$:
                                    149 ;	puts.c:38: putchar('\n');
      000041 75 82 0A         [24]  150 	mov	dpl,#0x0A
      000044 C0 04            [24]  151 	push	ar4
      000046 C0 03            [24]  152 	push	ar3
      000048 78r00            [12]  153 	mov	r0,#_putchar
      00004A 79s00            [12]  154 	mov	r1,#(_putchar >> 8)
      00004C 7As00            [12]  155 	mov	r2,#(_putchar >> 16)
      00004E 12r00r00         [24]  156 	lcall	__sdcc_banked_call
      000051 D0 03            [24]  157 	pop	ar3
      000053 D0 04            [24]  158 	pop	ar4
                                    159 ;	puts.c:39: return i+1;
      000055 0B               [12]  160 	inc	r3
      000056 BB 00 01         [24]  161 	cjne	r3,#0x00,00116$
      000059 0C               [12]  162 	inc	r4
      00005A                        163 00116$:
      00005A 8B 82            [24]  164 	mov	dpl,r3
      00005C 8C 83            [24]  165 	mov	dph,r4
      00005E 02r00r00         [24]  166 	ljmp	__sdcc_banked_ret
                                    167 	.area CSEG    (CODE)
                                    168 	.area CONST   (CODE)
                                    169 	.area XINIT   (CODE)
                                    170 	.area CABS    (ABS,CODE)
