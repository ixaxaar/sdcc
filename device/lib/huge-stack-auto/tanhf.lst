                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:13 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module tanhf
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _fabsf
                                     13 	.globl _expf
                                     14 	.globl _tanhf
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram 
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; indirectly addressable internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area ISEG    (DATA)
                                     41 ;--------------------------------------------------------
                                     42 ; absolute internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area IABS    (ABS,DATA)
                                     45 	.area IABS    (ABS,DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; bit data
                                     48 ;--------------------------------------------------------
                                     49 	.area BSEG    (BIT)
                                     50 ;--------------------------------------------------------
                                     51 ; paged external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area PSEG    (PAG,XDATA)
                                     54 ;--------------------------------------------------------
                                     55 ; external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XSEG    (XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; absolute external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XABS    (ABS,XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; external initialized ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XISEG   (XDATA)
                                     66 	.area HOME    (CODE)
                                     67 	.area GSINIT0 (CODE)
                                     68 	.area GSINIT1 (CODE)
                                     69 	.area GSINIT2 (CODE)
                                     70 	.area GSINIT3 (CODE)
                                     71 	.area GSINIT4 (CODE)
                                     72 	.area GSINIT5 (CODE)
                                     73 	.area GSINIT  (CODE)
                                     74 	.area GSFINAL (CODE)
                                     75 	.area CSEG    (CODE)
                                     76 ;--------------------------------------------------------
                                     77 ; global & static initialisations
                                     78 ;--------------------------------------------------------
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 	.area GSFINAL (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 ;--------------------------------------------------------
                                     84 ; Home
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area HOME    (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; code
                                     90 ;--------------------------------------------------------
                                     91 	.area CSEG    (CODE)
                                     92 ;------------------------------------------------------------
                                     93 ;Allocation info for local variables in function 'tanhf'
                                     94 ;------------------------------------------------------------
                                     95 ;x                         Allocated to stack - _bp +1
                                     96 ;f                         Allocated to stack - _bp +9
                                     97 ;g                         Allocated to stack - _bp +13
                                     98 ;r                         Allocated to stack - _bp +17
                                     99 ;sloc0                     Allocated to stack - _bp +5
                                    100 ;------------------------------------------------------------
                                    101 ;	tanhf.c:50: float tanhf(const float x) _FLOAT_FUNC_REENTRANT
                                    102 ;	-----------------------------------------
                                    103 ;	 function tanhf
                                    104 ;	-----------------------------------------
      000000                        105 _tanhf:
                           000007   106 	ar7 = 0x07
                           000006   107 	ar6 = 0x06
                           000005   108 	ar5 = 0x05
                           000004   109 	ar4 = 0x04
                           000003   110 	ar3 = 0x03
                           000002   111 	ar2 = 0x02
                           000001   112 	ar1 = 0x01
                           000000   113 	ar0 = 0x00
      000000 C0*00            [24]  114 	push	_bp
      000002 85 81*00         [24]  115 	mov	_bp,sp
      000005 C0 82            [24]  116 	push	dpl
      000007 C0 83            [24]  117 	push	dph
      000009 C0 F0            [24]  118 	push	b
      00000B C0 E0            [24]  119 	push	acc
      00000D E5 81            [12]  120 	mov	a,sp
      00000F 24 10            [12]  121 	add	a,#0x10
      000011 F5 81            [12]  122 	mov	sp,a
                                    123 ;	tanhf.c:54: f=fabsf(x);
      000013 A8*00            [24]  124 	mov	r0,_bp
      000015 08               [12]  125 	inc	r0
      000016 86 82            [24]  126 	mov	dpl,@r0
      000018 08               [12]  127 	inc	r0
      000019 86 83            [24]  128 	mov	dph,@r0
      00001B 08               [12]  129 	inc	r0
      00001C 86 F0            [24]  130 	mov	b,@r0
      00001E 08               [12]  131 	inc	r0
      00001F E6               [12]  132 	mov	a,@r0
      000020 78r00            [12]  133 	mov	r0,#_fabsf
      000022 79s00            [12]  134 	mov	r1,#(_fabsf >> 8)
      000024 7As00            [12]  135 	mov	r2,#(_fabsf >> 16)
      000026 12r00r00         [24]  136 	lcall	__sdcc_banked_call
      000029 AF 82            [24]  137 	mov	r7,dpl
      00002B AE 83            [24]  138 	mov	r6,dph
      00002D AD F0            [24]  139 	mov	r5,b
      00002F FC               [12]  140 	mov	r4,a
      000030 E5*00            [12]  141 	mov	a,_bp
      000032 24 09            [12]  142 	add	a,#0x09
      000034 F8               [12]  143 	mov	r0,a
      000035 A6 07            [24]  144 	mov	@r0,ar7
      000037 08               [12]  145 	inc	r0
      000038 A6 06            [24]  146 	mov	@r0,ar6
      00003A 08               [12]  147 	inc	r0
      00003B A6 05            [24]  148 	mov	@r0,ar5
      00003D 08               [12]  149 	inc	r0
      00003E A6 04            [24]  150 	mov	@r0,ar4
                                    151 ;	tanhf.c:55: if(f>SBIG) r=1.0;
      000040 74 B0            [12]  152 	mov	a,#0xB0
      000042 C0 E0            [24]  153 	push	acc
      000044 74 2C            [12]  154 	mov	a,#0x2C
      000046 C0 E0            [24]  155 	push	acc
      000048 74 10            [12]  156 	mov	a,#0x10
      00004A C0 E0            [24]  157 	push	acc
      00004C 74 41            [12]  158 	mov	a,#0x41
      00004E C0 E0            [24]  159 	push	acc
      000050 E5*00            [12]  160 	mov	a,_bp
      000052 24 09            [12]  161 	add	a,#0x09
      000054 F8               [12]  162 	mov	r0,a
      000055 86 82            [24]  163 	mov	dpl,@r0
      000057 08               [12]  164 	inc	r0
      000058 86 83            [24]  165 	mov	dph,@r0
      00005A 08               [12]  166 	inc	r0
      00005B 86 F0            [24]  167 	mov	b,@r0
      00005D 08               [12]  168 	inc	r0
      00005E E6               [12]  169 	mov	a,@r0
      00005F 12r00r00         [24]  170 	lcall	___fsgt
      000062 AD 82            [24]  171 	mov	r5,dpl
      000064 E5 81            [12]  172 	mov	a,sp
      000066 24 FC            [12]  173 	add	a,#0xfc
      000068 F5 81            [12]  174 	mov	sp,a
      00006A ED               [12]  175 	mov	a,r5
      00006B 60 12            [24]  176 	jz	00108$
      00006D E5*00            [12]  177 	mov	a,_bp
      00006F 24 11            [12]  178 	add	a,#0x11
      000071 F8               [12]  179 	mov	r0,a
      000072 E4               [12]  180 	clr	a
      000073 F6               [12]  181 	mov	@r0,a
      000074 08               [12]  182 	inc	r0
      000075 F6               [12]  183 	mov	@r0,a
      000076 08               [12]  184 	inc	r0
      000077 76 80            [12]  185 	mov	@r0,#0x80
      000079 08               [12]  186 	inc	r0
      00007A 76 3F            [12]  187 	mov	@r0,#0x3F
      00007C 02r03r76         [24]  188 	ljmp	00109$
      00007F                        189 00108$:
                                    190 ;	tanhf.c:56: else if(f>K1)
      00007F 74 54            [12]  191 	mov	a,#0x54
      000081 C0 E0            [24]  192 	push	acc
      000083 74 9F            [12]  193 	mov	a,#0x9F
      000085 C0 E0            [24]  194 	push	acc
      000087 74 0C            [12]  195 	mov	a,#0x0C
      000089 C0 E0            [24]  196 	push	acc
      00008B 74 3F            [12]  197 	mov	a,#0x3F
      00008D C0 E0            [24]  198 	push	acc
      00008F E5*00            [12]  199 	mov	a,_bp
      000091 24 09            [12]  200 	add	a,#0x09
      000093 F8               [12]  201 	mov	r0,a
      000094 86 82            [24]  202 	mov	dpl,@r0
      000096 08               [12]  203 	inc	r0
      000097 86 83            [24]  204 	mov	dph,@r0
      000099 08               [12]  205 	inc	r0
      00009A 86 F0            [24]  206 	mov	b,@r0
      00009C 08               [12]  207 	inc	r0
      00009D E6               [12]  208 	mov	a,@r0
      00009E 12r00r00         [24]  209 	lcall	___fsgt
      0000A1 AD 82            [24]  210 	mov	r5,dpl
      0000A3 E5 81            [12]  211 	mov	a,sp
      0000A5 24 FC            [12]  212 	add	a,#0xfc
      0000A7 F5 81            [12]  213 	mov	sp,a
      0000A9 ED               [12]  214 	mov	a,r5
      0000AA 70 03            [24]  215 	jnz	00127$
      0000AC 02r01rB3         [24]  216 	ljmp	00105$
      0000AF                        217 00127$:
                                    218 ;	tanhf.c:58: r=0.5-1.0/(expf(f+f)+1.0);
      0000AF E5*00            [12]  219 	mov	a,_bp
      0000B1 24 09            [12]  220 	add	a,#0x09
      0000B3 F8               [12]  221 	mov	r0,a
      0000B4 E6               [12]  222 	mov	a,@r0
      0000B5 C0 E0            [24]  223 	push	acc
      0000B7 08               [12]  224 	inc	r0
      0000B8 E6               [12]  225 	mov	a,@r0
      0000B9 C0 E0            [24]  226 	push	acc
      0000BB 08               [12]  227 	inc	r0
      0000BC E6               [12]  228 	mov	a,@r0
      0000BD C0 E0            [24]  229 	push	acc
      0000BF 08               [12]  230 	inc	r0
      0000C0 E6               [12]  231 	mov	a,@r0
      0000C1 C0 E0            [24]  232 	push	acc
      0000C3 E5*00            [12]  233 	mov	a,_bp
      0000C5 24 09            [12]  234 	add	a,#0x09
      0000C7 F8               [12]  235 	mov	r0,a
      0000C8 86 82            [24]  236 	mov	dpl,@r0
      0000CA 08               [12]  237 	inc	r0
      0000CB 86 83            [24]  238 	mov	dph,@r0
      0000CD 08               [12]  239 	inc	r0
      0000CE 86 F0            [24]  240 	mov	b,@r0
      0000D0 08               [12]  241 	inc	r0
      0000D1 E6               [12]  242 	mov	a,@r0
      0000D2 12r00r00         [24]  243 	lcall	___fsadd
      0000D5 AF 82            [24]  244 	mov	r7,dpl
      0000D7 AE 83            [24]  245 	mov	r6,dph
      0000D9 AD F0            [24]  246 	mov	r5,b
      0000DB FC               [12]  247 	mov	r4,a
      0000DC E5 81            [12]  248 	mov	a,sp
      0000DE 24 FC            [12]  249 	add	a,#0xfc
      0000E0 F5 81            [12]  250 	mov	sp,a
      0000E2 8F 82            [24]  251 	mov	dpl,r7
      0000E4 8E 83            [24]  252 	mov	dph,r6
      0000E6 8D F0            [24]  253 	mov	b,r5
      0000E8 EC               [12]  254 	mov	a,r4
      0000E9 78r00            [12]  255 	mov	r0,#_expf
      0000EB 79s00            [12]  256 	mov	r1,#(_expf >> 8)
      0000ED 7As00            [12]  257 	mov	r2,#(_expf >> 16)
      0000EF 12r00r00         [24]  258 	lcall	__sdcc_banked_call
      0000F2 AF 82            [24]  259 	mov	r7,dpl
      0000F4 AE 83            [24]  260 	mov	r6,dph
      0000F6 AD F0            [24]  261 	mov	r5,b
      0000F8 FC               [12]  262 	mov	r4,a
      0000F9 E4               [12]  263 	clr	a
      0000FA C0 E0            [24]  264 	push	acc
      0000FC C0 E0            [24]  265 	push	acc
      0000FE 74 80            [12]  266 	mov	a,#0x80
      000100 C0 E0            [24]  267 	push	acc
      000102 74 3F            [12]  268 	mov	a,#0x3F
      000104 C0 E0            [24]  269 	push	acc
      000106 8F 82            [24]  270 	mov	dpl,r7
      000108 8E 83            [24]  271 	mov	dph,r6
      00010A 8D F0            [24]  272 	mov	b,r5
      00010C EC               [12]  273 	mov	a,r4
      00010D 12r00r00         [24]  274 	lcall	___fsadd
      000110 AF 82            [24]  275 	mov	r7,dpl
      000112 AE 83            [24]  276 	mov	r6,dph
      000114 AD F0            [24]  277 	mov	r5,b
      000116 FC               [12]  278 	mov	r4,a
      000117 E5 81            [12]  279 	mov	a,sp
      000119 24 FC            [12]  280 	add	a,#0xfc
      00011B F5 81            [12]  281 	mov	sp,a
      00011D C0 07            [24]  282 	push	ar7
      00011F C0 06            [24]  283 	push	ar6
      000121 C0 05            [24]  284 	push	ar5
      000123 C0 04            [24]  285 	push	ar4
      000125 90 00 00         [24]  286 	mov	dptr,#0x0000
      000128 75 F0 80         [24]  287 	mov	b,#0x80
      00012B 74 3F            [12]  288 	mov	a,#0x3F
      00012D 12r00r00         [24]  289 	lcall	___fsdiv
      000130 AF 82            [24]  290 	mov	r7,dpl
      000132 AE 83            [24]  291 	mov	r6,dph
      000134 AD F0            [24]  292 	mov	r5,b
      000136 FC               [12]  293 	mov	r4,a
      000137 E5 81            [12]  294 	mov	a,sp
      000139 24 FC            [12]  295 	add	a,#0xfc
      00013B F5 81            [12]  296 	mov	sp,a
      00013D C0 07            [24]  297 	push	ar7
      00013F C0 06            [24]  298 	push	ar6
      000141 C0 05            [24]  299 	push	ar5
      000143 C0 04            [24]  300 	push	ar4
      000145 90 00 00         [24]  301 	mov	dptr,#(0x00&0x00ff)
      000148 E4               [12]  302 	clr	a
      000149 F5 F0            [12]  303 	mov	b,a
      00014B 74 3F            [12]  304 	mov	a,#0x3F
      00014D 12r00r00         [24]  305 	lcall	___fssub
      000150 AF 82            [24]  306 	mov	r7,dpl
      000152 AE 83            [24]  307 	mov	r6,dph
      000154 AD F0            [24]  308 	mov	r5,b
      000156 FC               [12]  309 	mov	r4,a
      000157 E5 81            [12]  310 	mov	a,sp
      000159 24 FC            [12]  311 	add	a,#0xfc
      00015B F5 81            [12]  312 	mov	sp,a
      00015D E5*00            [12]  313 	mov	a,_bp
      00015F 24 11            [12]  314 	add	a,#0x11
      000161 F8               [12]  315 	mov	r0,a
      000162 A6 07            [24]  316 	mov	@r0,ar7
      000164 08               [12]  317 	inc	r0
      000165 A6 06            [24]  318 	mov	@r0,ar6
      000167 08               [12]  319 	inc	r0
      000168 A6 05            [24]  320 	mov	@r0,ar5
      00016A 08               [12]  321 	inc	r0
      00016B A6 04            [24]  322 	mov	@r0,ar4
                                    323 ;	tanhf.c:59: r+=r;
      00016D E5*00            [12]  324 	mov	a,_bp
      00016F 24 11            [12]  325 	add	a,#0x11
      000171 F8               [12]  326 	mov	r0,a
      000172 E6               [12]  327 	mov	a,@r0
      000173 C0 E0            [24]  328 	push	acc
      000175 08               [12]  329 	inc	r0
      000176 E6               [12]  330 	mov	a,@r0
      000177 C0 E0            [24]  331 	push	acc
      000179 08               [12]  332 	inc	r0
      00017A E6               [12]  333 	mov	a,@r0
      00017B C0 E0            [24]  334 	push	acc
      00017D 08               [12]  335 	inc	r0
      00017E E6               [12]  336 	mov	a,@r0
      00017F C0 E0            [24]  337 	push	acc
      000181 E5*00            [12]  338 	mov	a,_bp
      000183 24 11            [12]  339 	add	a,#0x11
      000185 F8               [12]  340 	mov	r0,a
      000186 86 82            [24]  341 	mov	dpl,@r0
      000188 08               [12]  342 	inc	r0
      000189 86 83            [24]  343 	mov	dph,@r0
      00018B 08               [12]  344 	inc	r0
      00018C 86 F0            [24]  345 	mov	b,@r0
      00018E 08               [12]  346 	inc	r0
      00018F E6               [12]  347 	mov	a,@r0
      000190 12r00r00         [24]  348 	lcall	___fsadd
      000193 AF 82            [24]  349 	mov	r7,dpl
      000195 AE 83            [24]  350 	mov	r6,dph
      000197 AD F0            [24]  351 	mov	r5,b
      000199 FC               [12]  352 	mov	r4,a
      00019A E5 81            [12]  353 	mov	a,sp
      00019C 24 FC            [12]  354 	add	a,#0xfc
      00019E F5 81            [12]  355 	mov	sp,a
      0001A0 E5*00            [12]  356 	mov	a,_bp
      0001A2 24 11            [12]  357 	add	a,#0x11
      0001A4 F8               [12]  358 	mov	r0,a
      0001A5 A6 07            [24]  359 	mov	@r0,ar7
      0001A7 08               [12]  360 	inc	r0
      0001A8 A6 06            [24]  361 	mov	@r0,ar6
      0001AA 08               [12]  362 	inc	r0
      0001AB A6 05            [24]  363 	mov	@r0,ar5
      0001AD 08               [12]  364 	inc	r0
      0001AE A6 04            [24]  365 	mov	@r0,ar4
      0001B0 02r03r76         [24]  366 	ljmp	00109$
      0001B3                        367 00105$:
                                    368 ;	tanhf.c:61: else if(f<EPS) r=f;
      0001B3 E4               [12]  369 	clr	a
      0001B4 C0 E0            [24]  370 	push	acc
      0001B6 C0 E0            [24]  371 	push	acc
      0001B8 74 80            [12]  372 	mov	a,#0x80
      0001BA C0 E0            [24]  373 	push	acc
      0001BC 74 39            [12]  374 	mov	a,#0x39
      0001BE C0 E0            [24]  375 	push	acc
      0001C0 E5*00            [12]  376 	mov	a,_bp
      0001C2 24 09            [12]  377 	add	a,#0x09
      0001C4 F8               [12]  378 	mov	r0,a
      0001C5 86 82            [24]  379 	mov	dpl,@r0
      0001C7 08               [12]  380 	inc	r0
      0001C8 86 83            [24]  381 	mov	dph,@r0
      0001CA 08               [12]  382 	inc	r0
      0001CB 86 F0            [24]  383 	mov	b,@r0
      0001CD 08               [12]  384 	inc	r0
      0001CE E6               [12]  385 	mov	a,@r0
      0001CF 12r00r00         [24]  386 	lcall	___fslt
      0001D2 AD 82            [24]  387 	mov	r5,dpl
      0001D4 E5 81            [12]  388 	mov	a,sp
      0001D6 24 FC            [12]  389 	add	a,#0xfc
      0001D8 F5 81            [12]  390 	mov	sp,a
      0001DA ED               [12]  391 	mov	a,r5
      0001DB 60 1B            [24]  392 	jz	00102$
      0001DD E5*00            [12]  393 	mov	a,_bp
      0001DF 24 09            [12]  394 	add	a,#0x09
      0001E1 F8               [12]  395 	mov	r0,a
      0001E2 E5*00            [12]  396 	mov	a,_bp
      0001E4 24 11            [12]  397 	add	a,#0x11
      0001E6 F9               [12]  398 	mov	r1,a
      0001E7 E6               [12]  399 	mov	a,@r0
      0001E8 F7               [12]  400 	mov	@r1,a
      0001E9 08               [12]  401 	inc	r0
      0001EA 09               [12]  402 	inc	r1
      0001EB E6               [12]  403 	mov	a,@r0
      0001EC F7               [12]  404 	mov	@r1,a
      0001ED 08               [12]  405 	inc	r0
      0001EE 09               [12]  406 	inc	r1
      0001EF E6               [12]  407 	mov	a,@r0
      0001F0 F7               [12]  408 	mov	@r1,a
      0001F1 08               [12]  409 	inc	r0
      0001F2 09               [12]  410 	inc	r1
      0001F3 E6               [12]  411 	mov	a,@r0
      0001F4 F7               [12]  412 	mov	@r1,a
      0001F5 02r03r76         [24]  413 	ljmp	00109$
      0001F8                        414 00102$:
                                    415 ;	tanhf.c:64: g=f*f;
      0001F8 E5*00            [12]  416 	mov	a,_bp
      0001FA 24 09            [12]  417 	add	a,#0x09
      0001FC F8               [12]  418 	mov	r0,a
      0001FD E6               [12]  419 	mov	a,@r0
      0001FE C0 E0            [24]  420 	push	acc
      000200 08               [12]  421 	inc	r0
      000201 E6               [12]  422 	mov	a,@r0
      000202 C0 E0            [24]  423 	push	acc
      000204 08               [12]  424 	inc	r0
      000205 E6               [12]  425 	mov	a,@r0
      000206 C0 E0            [24]  426 	push	acc
      000208 08               [12]  427 	inc	r0
      000209 E6               [12]  428 	mov	a,@r0
      00020A C0 E0            [24]  429 	push	acc
      00020C E5*00            [12]  430 	mov	a,_bp
      00020E 24 09            [12]  431 	add	a,#0x09
      000210 F8               [12]  432 	mov	r0,a
      000211 86 82            [24]  433 	mov	dpl,@r0
      000213 08               [12]  434 	inc	r0
      000214 86 83            [24]  435 	mov	dph,@r0
      000216 08               [12]  436 	inc	r0
      000217 86 F0            [24]  437 	mov	b,@r0
      000219 08               [12]  438 	inc	r0
      00021A E6               [12]  439 	mov	a,@r0
      00021B 12r00r00         [24]  440 	lcall	___fsmul
      00021E AF 82            [24]  441 	mov	r7,dpl
      000220 AE 83            [24]  442 	mov	r6,dph
      000222 AD F0            [24]  443 	mov	r5,b
      000224 FC               [12]  444 	mov	r4,a
      000225 E5 81            [12]  445 	mov	a,sp
      000227 24 FC            [12]  446 	add	a,#0xfc
      000229 F5 81            [12]  447 	mov	sp,a
      00022B E5*00            [12]  448 	mov	a,_bp
      00022D 24 0D            [12]  449 	add	a,#0x0d
      00022F F8               [12]  450 	mov	r0,a
      000230 A6 07            [24]  451 	mov	@r0,ar7
      000232 08               [12]  452 	inc	r0
      000233 A6 06            [24]  453 	mov	@r0,ar6
      000235 08               [12]  454 	inc	r0
      000236 A6 05            [24]  455 	mov	@r0,ar5
      000238 08               [12]  456 	inc	r0
      000239 A6 04            [24]  457 	mov	@r0,ar4
                                    458 ;	tanhf.c:65: r=f+f*(P(g)/Q(g));
      00023B E5*00            [12]  459 	mov	a,_bp
      00023D 24 0D            [12]  460 	add	a,#0x0d
      00023F F8               [12]  461 	mov	r0,a
      000240 E6               [12]  462 	mov	a,@r0
      000241 C0 E0            [24]  463 	push	acc
      000243 08               [12]  464 	inc	r0
      000244 E6               [12]  465 	mov	a,@r0
      000245 C0 E0            [24]  466 	push	acc
      000247 08               [12]  467 	inc	r0
      000248 E6               [12]  468 	mov	a,@r0
      000249 C0 E0            [24]  469 	push	acc
      00024B 08               [12]  470 	inc	r0
      00024C E6               [12]  471 	mov	a,@r0
      00024D C0 E0            [24]  472 	push	acc
      00024F 90 11 B2         [24]  473 	mov	dptr,#0x11B2
      000252 75 F0 7B         [24]  474 	mov	b,#0x7B
      000255 74 BB            [12]  475 	mov	a,#0xBB
      000257 12r00r00         [24]  476 	lcall	___fsmul
      00025A AC 82            [24]  477 	mov	r4,dpl
      00025C AD 83            [24]  478 	mov	r5,dph
      00025E AE F0            [24]  479 	mov	r6,b
      000260 FF               [12]  480 	mov	r7,a
      000261 E5 81            [12]  481 	mov	a,sp
      000263 24 FC            [12]  482 	add	a,#0xfc
      000265 F5 81            [12]  483 	mov	sp,a
      000267 74 C6            [12]  484 	mov	a,#0xC6
      000269 C0 E0            [24]  485 	push	acc
      00026B 74 E2            [12]  486 	mov	a,#0xE2
      00026D C0 E0            [24]  487 	push	acc
      00026F 74 52            [12]  488 	mov	a,#0x52
      000271 C0 E0            [24]  489 	push	acc
      000273 74 BF            [12]  490 	mov	a,#0xBF
      000275 C0 E0            [24]  491 	push	acc
      000277 8C 82            [24]  492 	mov	dpl,r4
      000279 8D 83            [24]  493 	mov	dph,r5
      00027B 8E F0            [24]  494 	mov	b,r6
      00027D EF               [12]  495 	mov	a,r7
      00027E 12r00r00         [24]  496 	lcall	___fsadd
      000281 AC 82            [24]  497 	mov	r4,dpl
      000283 AD 83            [24]  498 	mov	r5,dph
      000285 AE F0            [24]  499 	mov	r6,b
      000287 FF               [12]  500 	mov	r7,a
      000288 E5 81            [12]  501 	mov	a,sp
      00028A 24 FC            [12]  502 	add	a,#0xfc
      00028C F5 81            [12]  503 	mov	sp,a
      00028E E5*00            [12]  504 	mov	a,_bp
      000290 24 0D            [12]  505 	add	a,#0x0d
      000292 F8               [12]  506 	mov	r0,a
      000293 E6               [12]  507 	mov	a,@r0
      000294 C0 E0            [24]  508 	push	acc
      000296 08               [12]  509 	inc	r0
      000297 E6               [12]  510 	mov	a,@r0
      000298 C0 E0            [24]  511 	push	acc
      00029A 08               [12]  512 	inc	r0
      00029B E6               [12]  513 	mov	a,@r0
      00029C C0 E0            [24]  514 	push	acc
      00029E 08               [12]  515 	inc	r0
      00029F E6               [12]  516 	mov	a,@r0
      0002A0 C0 E0            [24]  517 	push	acc
      0002A2 8C 82            [24]  518 	mov	dpl,r4
      0002A4 8D 83            [24]  519 	mov	dph,r5
      0002A6 8E F0            [24]  520 	mov	b,r6
      0002A8 EF               [12]  521 	mov	a,r7
      0002A9 12r00r00         [24]  522 	lcall	___fsmul
      0002AC C8               [12]  523 	xch	a,r0
      0002AD E5*00            [12]  524 	mov	a,_bp
      0002AF 24 05            [12]  525 	add	a,#0x05
      0002B1 C8               [12]  526 	xch	a,r0
      0002B2 A6 82            [24]  527 	mov	@r0,dpl
      0002B4 08               [12]  528 	inc	r0
      0002B5 A6 83            [24]  529 	mov	@r0,dph
      0002B7 08               [12]  530 	inc	r0
      0002B8 A6 F0            [24]  531 	mov	@r0,b
      0002BA 08               [12]  532 	inc	r0
      0002BB F6               [12]  533 	mov	@r0,a
      0002BC E5 81            [12]  534 	mov	a,sp
      0002BE 24 FC            [12]  535 	add	a,#0xfc
      0002C0 F5 81            [12]  536 	mov	sp,a
      0002C2 74 1A            [12]  537 	mov	a,#0x1A
      0002C4 C0 E0            [24]  538 	push	acc
      0002C6 74 2A            [12]  539 	mov	a,#0x2A
      0002C8 C0 E0            [24]  540 	push	acc
      0002CA 74 1E            [12]  541 	mov	a,#0x1E
      0002CC C0 E0            [24]  542 	push	acc
      0002CE 74 40            [12]  543 	mov	a,#0x40
      0002D0 C0 E0            [24]  544 	push	acc
      0002D2 E5*00            [12]  545 	mov	a,_bp
      0002D4 24 0D            [12]  546 	add	a,#0x0d
      0002D6 F8               [12]  547 	mov	r0,a
      0002D7 86 82            [24]  548 	mov	dpl,@r0
      0002D9 08               [12]  549 	inc	r0
      0002DA 86 83            [24]  550 	mov	dph,@r0
      0002DC 08               [12]  551 	inc	r0
      0002DD 86 F0            [24]  552 	mov	b,@r0
      0002DF 08               [12]  553 	inc	r0
      0002E0 E6               [12]  554 	mov	a,@r0
      0002E1 12r00r00         [24]  555 	lcall	___fsadd
      0002E4 AA 82            [24]  556 	mov	r2,dpl
      0002E6 AB 83            [24]  557 	mov	r3,dph
      0002E8 AE F0            [24]  558 	mov	r6,b
      0002EA FF               [12]  559 	mov	r7,a
      0002EB E5 81            [12]  560 	mov	a,sp
      0002ED 24 FC            [12]  561 	add	a,#0xfc
      0002EF F5 81            [12]  562 	mov	sp,a
      0002F1 C0 02            [24]  563 	push	ar2
      0002F3 C0 03            [24]  564 	push	ar3
      0002F5 C0 06            [24]  565 	push	ar6
      0002F7 C0 07            [24]  566 	push	ar7
      0002F9 E5*00            [12]  567 	mov	a,_bp
      0002FB 24 05            [12]  568 	add	a,#0x05
      0002FD F8               [12]  569 	mov	r0,a
      0002FE 86 82            [24]  570 	mov	dpl,@r0
      000300 08               [12]  571 	inc	r0
      000301 86 83            [24]  572 	mov	dph,@r0
      000303 08               [12]  573 	inc	r0
      000304 86 F0            [24]  574 	mov	b,@r0
      000306 08               [12]  575 	inc	r0
      000307 E6               [12]  576 	mov	a,@r0
      000308 12r00r00         [24]  577 	lcall	___fsdiv
      00030B AC 82            [24]  578 	mov	r4,dpl
      00030D AD 83            [24]  579 	mov	r5,dph
      00030F AE F0            [24]  580 	mov	r6,b
      000311 FF               [12]  581 	mov	r7,a
      000312 E5 81            [12]  582 	mov	a,sp
      000314 24 FC            [12]  583 	add	a,#0xfc
      000316 F5 81            [12]  584 	mov	sp,a
      000318 C0 04            [24]  585 	push	ar4
      00031A C0 05            [24]  586 	push	ar5
      00031C C0 06            [24]  587 	push	ar6
      00031E C0 07            [24]  588 	push	ar7
      000320 E5*00            [12]  589 	mov	a,_bp
      000322 24 09            [12]  590 	add	a,#0x09
      000324 F8               [12]  591 	mov	r0,a
      000325 86 82            [24]  592 	mov	dpl,@r0
      000327 08               [12]  593 	inc	r0
      000328 86 83            [24]  594 	mov	dph,@r0
      00032A 08               [12]  595 	inc	r0
      00032B 86 F0            [24]  596 	mov	b,@r0
      00032D 08               [12]  597 	inc	r0
      00032E E6               [12]  598 	mov	a,@r0
      00032F 12r00r00         [24]  599 	lcall	___fsmul
      000332 AC 82            [24]  600 	mov	r4,dpl
      000334 AD 83            [24]  601 	mov	r5,dph
      000336 AE F0            [24]  602 	mov	r6,b
      000338 FF               [12]  603 	mov	r7,a
      000339 E5 81            [12]  604 	mov	a,sp
      00033B 24 FC            [12]  605 	add	a,#0xfc
      00033D F5 81            [12]  606 	mov	sp,a
      00033F C0 04            [24]  607 	push	ar4
      000341 C0 05            [24]  608 	push	ar5
      000343 C0 06            [24]  609 	push	ar6
      000345 C0 07            [24]  610 	push	ar7
      000347 E5*00            [12]  611 	mov	a,_bp
      000349 24 09            [12]  612 	add	a,#0x09
      00034B F8               [12]  613 	mov	r0,a
      00034C 86 82            [24]  614 	mov	dpl,@r0
      00034E 08               [12]  615 	inc	r0
      00034F 86 83            [24]  616 	mov	dph,@r0
      000351 08               [12]  617 	inc	r0
      000352 86 F0            [24]  618 	mov	b,@r0
      000354 08               [12]  619 	inc	r0
      000355 E6               [12]  620 	mov	a,@r0
      000356 12r00r00         [24]  621 	lcall	___fsadd
      000359 AC 82            [24]  622 	mov	r4,dpl
      00035B AD 83            [24]  623 	mov	r5,dph
      00035D AE F0            [24]  624 	mov	r6,b
      00035F FF               [12]  625 	mov	r7,a
      000360 E5 81            [12]  626 	mov	a,sp
      000362 24 FC            [12]  627 	add	a,#0xfc
      000364 F5 81            [12]  628 	mov	sp,a
      000366 E5*00            [12]  629 	mov	a,_bp
      000368 24 11            [12]  630 	add	a,#0x11
      00036A F8               [12]  631 	mov	r0,a
      00036B A6 04            [24]  632 	mov	@r0,ar4
      00036D 08               [12]  633 	inc	r0
      00036E A6 05            [24]  634 	mov	@r0,ar5
      000370 08               [12]  635 	inc	r0
      000371 A6 06            [24]  636 	mov	@r0,ar6
      000373 08               [12]  637 	inc	r0
      000374 A6 07            [24]  638 	mov	@r0,ar7
      000376                        639 00109$:
                                    640 ;	tanhf.c:67: if(x<0.0) r=-r;
      000376 E4               [12]  641 	clr	a
      000377 C0 E0            [24]  642 	push	acc
      000379 C0 E0            [24]  643 	push	acc
      00037B C0 E0            [24]  644 	push	acc
      00037D C0 E0            [24]  645 	push	acc
      00037F A8*00            [24]  646 	mov	r0,_bp
      000381 08               [12]  647 	inc	r0
      000382 86 82            [24]  648 	mov	dpl,@r0
      000384 08               [12]  649 	inc	r0
      000385 86 83            [24]  650 	mov	dph,@r0
      000387 08               [12]  651 	inc	r0
      000388 86 F0            [24]  652 	mov	b,@r0
      00038A 08               [12]  653 	inc	r0
      00038B E6               [12]  654 	mov	a,@r0
      00038C 12r00r00         [24]  655 	lcall	___fslt
      00038F AF 82            [24]  656 	mov	r7,dpl
      000391 E5 81            [12]  657 	mov	a,sp
      000393 24 FC            [12]  658 	add	a,#0xfc
      000395 F5 81            [12]  659 	mov	sp,a
      000397 EF               [12]  660 	mov	a,r7
      000398 60 12            [24]  661 	jz	00111$
      00039A E5*00            [12]  662 	mov	a,_bp
      00039C 24 11            [12]  663 	add	a,#0x11
      00039E F8               [12]  664 	mov	r0,a
      00039F E6               [12]  665 	mov	a,@r0
      0003A0 F6               [12]  666 	mov	@r0,a
      0003A1 08               [12]  667 	inc	r0
      0003A2 E6               [12]  668 	mov	a,@r0
      0003A3 F6               [12]  669 	mov	@r0,a
      0003A4 08               [12]  670 	inc	r0
      0003A5 E6               [12]  671 	mov	a,@r0
      0003A6 F6               [12]  672 	mov	@r0,a
      0003A7 08               [12]  673 	inc	r0
      0003A8 E6               [12]  674 	mov	a,@r0
      0003A9 B2 E7            [12]  675 	cpl	acc.7
      0003AB F6               [12]  676 	mov	@r0,a
      0003AC                        677 00111$:
                                    678 ;	tanhf.c:68: return r;
      0003AC E5*00            [12]  679 	mov	a,_bp
      0003AE 24 11            [12]  680 	add	a,#0x11
      0003B0 F8               [12]  681 	mov	r0,a
      0003B1 86 82            [24]  682 	mov	dpl,@r0
      0003B3 08               [12]  683 	inc	r0
      0003B4 86 83            [24]  684 	mov	dph,@r0
      0003B6 08               [12]  685 	inc	r0
      0003B7 86 F0            [24]  686 	mov	b,@r0
      0003B9 08               [12]  687 	inc	r0
      0003BA E6               [12]  688 	mov	a,@r0
      0003BB 85*00 81         [24]  689 	mov	sp,_bp
      0003BE D0*00            [24]  690 	pop	_bp
      0003C0 02r00r00         [24]  691 	ljmp	__sdcc_banked_ret
                                    692 	.area CSEG    (CODE)
                                    693 	.area CONST   (CODE)
                                    694 	.area XINIT   (CODE)
                                    695 	.area CABS    (ABS,CODE)
