                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:14 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _divsint
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl __divsint
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram 
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
                                     48 ;--------------------------------------------------------
                                     49 ; paged external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area PSEG    (PAG,XDATA)
                                     52 ;--------------------------------------------------------
                                     53 ; external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area XSEG    (XDATA)
                                     56 ;--------------------------------------------------------
                                     57 ; absolute external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XABS    (ABS,XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; external initialized ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XISEG   (XDATA)
                                     64 	.area HOME    (CODE)
                                     65 	.area GSINIT0 (CODE)
                                     66 	.area GSINIT1 (CODE)
                                     67 	.area GSINIT2 (CODE)
                                     68 	.area GSINIT3 (CODE)
                                     69 	.area GSINIT4 (CODE)
                                     70 	.area GSINIT5 (CODE)
                                     71 	.area GSINIT  (CODE)
                                     72 	.area GSFINAL (CODE)
                                     73 	.area CSEG    (CODE)
                                     74 ;--------------------------------------------------------
                                     75 ; global & static initialisations
                                     76 ;--------------------------------------------------------
                                     77 	.area HOME    (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; Home
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area HOME    (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; code
                                     88 ;--------------------------------------------------------
                                     89 	.area CSEG    (CODE)
                                     90 ;------------------------------------------------------------
                                     91 ;Allocation info for local variables in function '_divsint'
                                     92 ;------------------------------------------------------------
                                     93 ;y                         Allocated to stack - _bp -4
                                     94 ;x                         Allocated to registers r6 r7 
                                     95 ;r                         Allocated to registers r4 r6 
                                     96 ;------------------------------------------------------------
                                     97 ;	_divsint.c:207: _divsint (int x, int y)
                                     98 ;	-----------------------------------------
                                     99 ;	 function _divsint
                                    100 ;	-----------------------------------------
      000000                        101 __divsint:
                           000007   102 	ar7 = 0x07
                           000006   103 	ar6 = 0x06
                           000005   104 	ar5 = 0x05
                           000004   105 	ar4 = 0x04
                           000003   106 	ar3 = 0x03
                           000002   107 	ar2 = 0x02
                           000001   108 	ar1 = 0x01
                           000000   109 	ar0 = 0x00
      000000 C0*00            [24]  110 	push	_bp
      000002 85 81*00         [24]  111 	mov	_bp,sp
      000005 AE 82            [24]  112 	mov	r6,dpl
                                    113 ;	_divsint.c:211: r = (unsigned int)(x < 0 ? -x : x) / (unsigned int)(y < 0 ? -y : y);
      000007 E5 83            [12]  114 	mov	a,dph
      000009 FF               [12]  115 	mov	r7,a
      00000A 33               [12]  116 	rlc	a
      00000B E4               [12]  117 	clr	a
      00000C 33               [12]  118 	rlc	a
      00000D FD               [12]  119 	mov	r5,a
      00000E 60 09            [24]  120 	jz	00106$
      000010 C3               [12]  121 	clr	c
      000011 E4               [12]  122 	clr	a
      000012 9E               [12]  123 	subb	a,r6
      000013 FB               [12]  124 	mov	r3,a
      000014 E4               [12]  125 	clr	a
      000015 9F               [12]  126 	subb	a,r7
      000016 FC               [12]  127 	mov	r4,a
      000017 80 04            [24]  128 	sjmp	00107$
      000019                        129 00106$:
      000019 8E 03            [24]  130 	mov	ar3,r6
      00001B 8F 04            [24]  131 	mov	ar4,r7
      00001D                        132 00107$:
      00001D E5*00            [12]  133 	mov	a,_bp
      00001F 24 FC            [12]  134 	add	a,#0xfc
      000021 F8               [12]  135 	mov	r0,a
      000022 08               [12]  136 	inc	r0
      000023 E6               [12]  137 	mov	a,@r0
      000024 33               [12]  138 	rlc	a
      000025 E4               [12]  139 	clr	a
      000026 33               [12]  140 	rlc	a
      000027 FF               [12]  141 	mov	r7,a
      000028 60 0F            [24]  142 	jz	00108$
      00002A E5*00            [12]  143 	mov	a,_bp
      00002C 24 FC            [12]  144 	add	a,#0xfc
      00002E F8               [12]  145 	mov	r0,a
      00002F C3               [12]  146 	clr	c
      000030 E4               [12]  147 	clr	a
      000031 96               [12]  148 	subb	a,@r0
      000032 FA               [12]  149 	mov	r2,a
      000033 08               [12]  150 	inc	r0
      000034 E4               [12]  151 	clr	a
      000035 96               [12]  152 	subb	a,@r0
      000036 FE               [12]  153 	mov	r6,a
      000037 80 0A            [24]  154 	sjmp	00109$
      000039                        155 00108$:
      000039 E5*00            [12]  156 	mov	a,_bp
      00003B 24 FC            [12]  157 	add	a,#0xfc
      00003D F8               [12]  158 	mov	r0,a
      00003E 86 02            [24]  159 	mov	ar2,@r0
      000040 08               [12]  160 	inc	r0
      000041 86 06            [24]  161 	mov	ar6,@r0
      000043                        162 00109$:
      000043 C0 07            [24]  163 	push	ar7
      000045 C0 05            [24]  164 	push	ar5
      000047 C0 02            [24]  165 	push	ar2
      000049 C0 06            [24]  166 	push	ar6
      00004B 8B 82            [24]  167 	mov	dpl,r3
      00004D 8C 83            [24]  168 	mov	dph,r4
      00004F 12r00r00         [24]  169 	lcall	__divuint
      000052 AC 82            [24]  170 	mov	r4,dpl
      000054 AE 83            [24]  171 	mov	r6,dph
      000056 15 81            [12]  172 	dec	sp
      000058 15 81            [12]  173 	dec	sp
      00005A D0 05            [24]  174 	pop	ar5
      00005C D0 07            [24]  175 	pop	ar7
                                    176 ;	_divsint.c:212: if ((x < 0) ^ (y < 0))
      00005E EF               [12]  177 	mov	a,r7
      00005F 6D               [12]  178 	xrl	a,r5
      000060 60 0D            [24]  179 	jz	00102$
                                    180 ;	_divsint.c:213: return -r;
      000062 C3               [12]  181 	clr	c
      000063 E4               [12]  182 	clr	a
      000064 9C               [12]  183 	subb	a,r4
      000065 FD               [12]  184 	mov	r5,a
      000066 E4               [12]  185 	clr	a
      000067 9E               [12]  186 	subb	a,r6
      000068 FF               [12]  187 	mov	r7,a
      000069 8D 82            [24]  188 	mov	dpl,r5
      00006B 8F 83            [24]  189 	mov	dph,r7
      00006D 80 04            [24]  190 	sjmp	00104$
      00006F                        191 00102$:
                                    192 ;	_divsint.c:215: return r;
      00006F 8C 82            [24]  193 	mov	dpl,r4
      000071 8E 83            [24]  194 	mov	dph,r6
      000073                        195 00104$:
      000073 D0*00            [24]  196 	pop	_bp
      000075 22               [24]  197 	ret
                                    198 	.area CSEG    (CODE)
                                    199 	.area CONST   (CODE)
                                    200 	.area XINIT   (CODE)
                                    201 	.area CABS    (ABS,CODE)
