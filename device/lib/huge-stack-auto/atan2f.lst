                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:13 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module atan2f
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _fabsf
                                     13 	.globl _atanf
                                     14 	.globl _atan2f
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram 
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; indirectly addressable internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area ISEG    (DATA)
                                     41 ;--------------------------------------------------------
                                     42 ; absolute internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area IABS    (ABS,DATA)
                                     45 	.area IABS    (ABS,DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; bit data
                                     48 ;--------------------------------------------------------
                                     49 	.area BSEG    (BIT)
                                     50 ;--------------------------------------------------------
                                     51 ; paged external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area PSEG    (PAG,XDATA)
                                     54 ;--------------------------------------------------------
                                     55 ; external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XSEG    (XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; absolute external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XABS    (ABS,XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; external initialized ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XISEG   (XDATA)
                                     66 	.area HOME    (CODE)
                                     67 	.area GSINIT0 (CODE)
                                     68 	.area GSINIT1 (CODE)
                                     69 	.area GSINIT2 (CODE)
                                     70 	.area GSINIT3 (CODE)
                                     71 	.area GSINIT4 (CODE)
                                     72 	.area GSINIT5 (CODE)
                                     73 	.area GSINIT  (CODE)
                                     74 	.area GSFINAL (CODE)
                                     75 	.area CSEG    (CODE)
                                     76 ;--------------------------------------------------------
                                     77 ; global & static initialisations
                                     78 ;--------------------------------------------------------
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 	.area GSFINAL (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 ;--------------------------------------------------------
                                     84 ; Home
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area HOME    (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; code
                                     90 ;--------------------------------------------------------
                                     91 	.area CSEG    (CODE)
                                     92 ;------------------------------------------------------------
                                     93 ;Allocation info for local variables in function 'atan2f'
                                     94 ;------------------------------------------------------------
                                     95 ;y                         Allocated to stack - _bp -7
                                     96 ;x                         Allocated to stack - _bp +1
                                     97 ;r                         Allocated to stack - _bp +9
                                     98 ;sloc0                     Allocated to stack - _bp +5
                                     99 ;------------------------------------------------------------
                                    100 ;	atan2f.c:34: float atan2f(const float x, const float y)
                                    101 ;	-----------------------------------------
                                    102 ;	 function atan2f
                                    103 ;	-----------------------------------------
      000000                        104 _atan2f:
                           000007   105 	ar7 = 0x07
                           000006   106 	ar6 = 0x06
                           000005   107 	ar5 = 0x05
                           000004   108 	ar4 = 0x04
                           000003   109 	ar3 = 0x03
                           000002   110 	ar2 = 0x02
                           000001   111 	ar1 = 0x01
                           000000   112 	ar0 = 0x00
      000000 C0*00            [24]  113 	push	_bp
      000002 85 81*00         [24]  114 	mov	_bp,sp
      000005 C0 82            [24]  115 	push	dpl
      000007 C0 83            [24]  116 	push	dph
      000009 C0 F0            [24]  117 	push	b
      00000B C0 E0            [24]  118 	push	acc
      00000D E5 81            [12]  119 	mov	a,sp
      00000F 24 08            [12]  120 	add	a,#0x08
      000011 F5 81            [12]  121 	mov	sp,a
                                    122 ;	atan2f.c:38: if ((x==0.0) && (y==0.0))
      000013 A8*00            [24]  123 	mov	r0,_bp
      000015 08               [12]  124 	inc	r0
      000016 86 F0            [24]  125 	mov	b,@r0
      000018 08               [12]  126 	inc	r0
      000019 E6               [12]  127 	mov	a,@r0
      00001A 42 F0            [12]  128 	orl	b,a
      00001C 08               [12]  129 	inc	r0
      00001D E6               [12]  130 	mov	a,@r0
      00001E 42 F0            [12]  131 	orl	b,a
      000020 08               [12]  132 	inc	r0
      000021 E6               [12]  133 	mov	a,@r0
      000022 54 7F            [12]  134 	anl	a,#0x7F
      000024 45 F0            [12]  135 	orl	a,b
      000026 70 29            [24]  136 	jnz	00102$
      000028 E5*00            [12]  137 	mov	a,_bp
      00002A 24 F9            [12]  138 	add	a,#0xf9
      00002C F8               [12]  139 	mov	r0,a
      00002D 86 F0            [24]  140 	mov	b,@r0
      00002F 08               [12]  141 	inc	r0
      000030 E6               [12]  142 	mov	a,@r0
      000031 42 F0            [12]  143 	orl	b,a
      000033 08               [12]  144 	inc	r0
      000034 E6               [12]  145 	mov	a,@r0
      000035 42 F0            [12]  146 	orl	b,a
      000037 08               [12]  147 	inc	r0
      000038 E6               [12]  148 	mov	a,@r0
      000039 54 7F            [12]  149 	anl	a,#0x7F
      00003B 45 F0            [12]  150 	orl	a,b
      00003D 70 12            [24]  151 	jnz	00102$
                                    152 ;	atan2f.c:40: errno=EDOM;
      00003F 90r00r00         [24]  153 	mov	dptr,#_errno
      000042 74 21            [12]  154 	mov	a,#0x21
      000044 F0               [24]  155 	movx	@dptr,a
      000045 E4               [12]  156 	clr	a
      000046 A3               [24]  157 	inc	dptr
      000047 F0               [24]  158 	movx	@dptr,a
                                    159 ;	atan2f.c:41: return 0.0;
      000048 90 00 00         [24]  160 	mov	dptr,#(0x00&0x00ff)
      00004B E4               [12]  161 	clr	a
      00004C F5 F0            [12]  162 	mov	b,a
      00004E 02r02r8B         [24]  163 	ljmp	00109$
      000051                        164 00102$:
                                    165 ;	atan2f.c:44: if(fabsf(y)>=fabsf(x))
      000051 E5*00            [12]  166 	mov	a,_bp
      000053 24 F9            [12]  167 	add	a,#0xf9
      000055 F8               [12]  168 	mov	r0,a
      000056 86 82            [24]  169 	mov	dpl,@r0
      000058 08               [12]  170 	inc	r0
      000059 86 83            [24]  171 	mov	dph,@r0
      00005B 08               [12]  172 	inc	r0
      00005C 86 F0            [24]  173 	mov	b,@r0
      00005E 08               [12]  174 	inc	r0
      00005F E6               [12]  175 	mov	a,@r0
      000060 78r00            [12]  176 	mov	r0,#_fabsf
      000062 79s00            [12]  177 	mov	r1,#(_fabsf >> 8)
      000064 7As00            [12]  178 	mov	r2,#(_fabsf >> 16)
      000066 12r00r00         [24]  179 	lcall	__sdcc_banked_call
      000069 C8               [12]  180 	xch	a,r0
      00006A E5*00            [12]  181 	mov	a,_bp
      00006C 24 05            [12]  182 	add	a,#0x05
      00006E C8               [12]  183 	xch	a,r0
      00006F A6 82            [24]  184 	mov	@r0,dpl
      000071 08               [12]  185 	inc	r0
      000072 A6 83            [24]  186 	mov	@r0,dph
      000074 08               [12]  187 	inc	r0
      000075 A6 F0            [24]  188 	mov	@r0,b
      000077 08               [12]  189 	inc	r0
      000078 F6               [12]  190 	mov	@r0,a
      000079 A8*00            [24]  191 	mov	r0,_bp
      00007B 08               [12]  192 	inc	r0
      00007C 86 82            [24]  193 	mov	dpl,@r0
      00007E 08               [12]  194 	inc	r0
      00007F 86 83            [24]  195 	mov	dph,@r0
      000081 08               [12]  196 	inc	r0
      000082 86 F0            [24]  197 	mov	b,@r0
      000084 08               [12]  198 	inc	r0
      000085 E6               [12]  199 	mov	a,@r0
      000086 78r00            [12]  200 	mov	r0,#_fabsf
      000088 79s00            [12]  201 	mov	r1,#(_fabsf >> 8)
      00008A 7As00            [12]  202 	mov	r2,#(_fabsf >> 16)
      00008C 12r00r00         [24]  203 	lcall	__sdcc_banked_call
      00008F AC 82            [24]  204 	mov	r4,dpl
      000091 AD 83            [24]  205 	mov	r5,dph
      000093 AE F0            [24]  206 	mov	r6,b
      000095 FF               [12]  207 	mov	r7,a
      000096 C0 04            [24]  208 	push	ar4
      000098 C0 05            [24]  209 	push	ar5
      00009A C0 06            [24]  210 	push	ar6
      00009C C0 07            [24]  211 	push	ar7
      00009E E5*00            [12]  212 	mov	a,_bp
      0000A0 24 05            [12]  213 	add	a,#0x05
      0000A2 F8               [12]  214 	mov	r0,a
      0000A3 86 82            [24]  215 	mov	dpl,@r0
      0000A5 08               [12]  216 	inc	r0
      0000A6 86 83            [24]  217 	mov	dph,@r0
      0000A8 08               [12]  218 	inc	r0
      0000A9 86 F0            [24]  219 	mov	b,@r0
      0000AB 08               [12]  220 	inc	r0
      0000AC E6               [12]  221 	mov	a,@r0
      0000AD 12r00r00         [24]  222 	lcall	___fslt
      0000B0 AF 82            [24]  223 	mov	r7,dpl
      0000B2 E5 81            [12]  224 	mov	a,sp
      0000B4 24 FC            [12]  225 	add	a,#0xfc
      0000B6 F5 81            [12]  226 	mov	sp,a
      0000B8 EF               [12]  227 	mov	a,r7
      0000B9 60 03            [24]  228 	jz	00135$
      0000BB 02r01rB5         [24]  229 	ljmp	00107$
      0000BE                        230 00135$:
                                    231 ;	atan2f.c:46: r=atanf(x/y);
      0000BE E5*00            [12]  232 	mov	a,_bp
      0000C0 24 F9            [12]  233 	add	a,#0xf9
      0000C2 F8               [12]  234 	mov	r0,a
      0000C3 E6               [12]  235 	mov	a,@r0
      0000C4 C0 E0            [24]  236 	push	acc
      0000C6 08               [12]  237 	inc	r0
      0000C7 E6               [12]  238 	mov	a,@r0
      0000C8 C0 E0            [24]  239 	push	acc
      0000CA 08               [12]  240 	inc	r0
      0000CB E6               [12]  241 	mov	a,@r0
      0000CC C0 E0            [24]  242 	push	acc
      0000CE 08               [12]  243 	inc	r0
      0000CF E6               [12]  244 	mov	a,@r0
      0000D0 C0 E0            [24]  245 	push	acc
      0000D2 A8*00            [24]  246 	mov	r0,_bp
      0000D4 08               [12]  247 	inc	r0
      0000D5 86 82            [24]  248 	mov	dpl,@r0
      0000D7 08               [12]  249 	inc	r0
      0000D8 86 83            [24]  250 	mov	dph,@r0
      0000DA 08               [12]  251 	inc	r0
      0000DB 86 F0            [24]  252 	mov	b,@r0
      0000DD 08               [12]  253 	inc	r0
      0000DE E6               [12]  254 	mov	a,@r0
      0000DF 12r00r00         [24]  255 	lcall	___fsdiv
      0000E2 AC 82            [24]  256 	mov	r4,dpl
      0000E4 AD 83            [24]  257 	mov	r5,dph
      0000E6 AE F0            [24]  258 	mov	r6,b
      0000E8 FF               [12]  259 	mov	r7,a
      0000E9 E5 81            [12]  260 	mov	a,sp
      0000EB 24 FC            [12]  261 	add	a,#0xfc
      0000ED F5 81            [12]  262 	mov	sp,a
      0000EF 8C 82            [24]  263 	mov	dpl,r4
      0000F1 8D 83            [24]  264 	mov	dph,r5
      0000F3 8E F0            [24]  265 	mov	b,r6
      0000F5 EF               [12]  266 	mov	a,r7
      0000F6 78r00            [12]  267 	mov	r0,#_atanf
      0000F8 79s00            [12]  268 	mov	r1,#(_atanf >> 8)
      0000FA 7As00            [12]  269 	mov	r2,#(_atanf >> 16)
      0000FC 12r00r00         [24]  270 	lcall	__sdcc_banked_call
      0000FF AC 82            [24]  271 	mov	r4,dpl
      000101 AD 83            [24]  272 	mov	r5,dph
      000103 AE F0            [24]  273 	mov	r6,b
      000105 FF               [12]  274 	mov	r7,a
      000106 E5*00            [12]  275 	mov	a,_bp
      000108 24 09            [12]  276 	add	a,#0x09
      00010A F8               [12]  277 	mov	r0,a
      00010B A6 04            [24]  278 	mov	@r0,ar4
      00010D 08               [12]  279 	inc	r0
      00010E A6 05            [24]  280 	mov	@r0,ar5
      000110 08               [12]  281 	inc	r0
      000111 A6 06            [24]  282 	mov	@r0,ar6
      000113 08               [12]  283 	inc	r0
      000114 A6 07            [24]  284 	mov	@r0,ar7
                                    285 ;	atan2f.c:47: if(y<0.0) r+=(x>=0?PI:-PI);
      000116 E4               [12]  286 	clr	a
      000117 C0 E0            [24]  287 	push	acc
      000119 C0 E0            [24]  288 	push	acc
      00011B C0 E0            [24]  289 	push	acc
      00011D C0 E0            [24]  290 	push	acc
      00011F E5*00            [12]  291 	mov	a,_bp
      000121 24 F9            [12]  292 	add	a,#0xf9
      000123 F8               [12]  293 	mov	r0,a
      000124 86 82            [24]  294 	mov	dpl,@r0
      000126 08               [12]  295 	inc	r0
      000127 86 83            [24]  296 	mov	dph,@r0
      000129 08               [12]  297 	inc	r0
      00012A 86 F0            [24]  298 	mov	b,@r0
      00012C 08               [12]  299 	inc	r0
      00012D E6               [12]  300 	mov	a,@r0
      00012E 12r00r00         [24]  301 	lcall	___fslt
      000131 AB 82            [24]  302 	mov	r3,dpl
      000133 E5 81            [12]  303 	mov	a,sp
      000135 24 FC            [12]  304 	add	a,#0xfc
      000137 F5 81            [12]  305 	mov	sp,a
      000139 EB               [12]  306 	mov	a,r3
      00013A 70 03            [24]  307 	jnz	00136$
      00013C 02r02r7C         [24]  308 	ljmp	00108$
      00013F                        309 00136$:
      00013F E4               [12]  310 	clr	a
      000140 C0 E0            [24]  311 	push	acc
      000142 C0 E0            [24]  312 	push	acc
      000144 C0 E0            [24]  313 	push	acc
      000146 C0 E0            [24]  314 	push	acc
      000148 A8*00            [24]  315 	mov	r0,_bp
      00014A 08               [12]  316 	inc	r0
      00014B 86 82            [24]  317 	mov	dpl,@r0
      00014D 08               [12]  318 	inc	r0
      00014E 86 83            [24]  319 	mov	dph,@r0
      000150 08               [12]  320 	inc	r0
      000151 86 F0            [24]  321 	mov	b,@r0
      000153 08               [12]  322 	inc	r0
      000154 E6               [12]  323 	mov	a,@r0
      000155 12r00r00         [24]  324 	lcall	___fslt
      000158 AB 82            [24]  325 	mov	r3,dpl
      00015A E5 81            [12]  326 	mov	a,sp
      00015C 24 FC            [12]  327 	add	a,#0xfc
      00015E F5 81            [12]  328 	mov	sp,a
      000160 EB               [12]  329 	mov	a,r3
      000161 B4 01 00         [24]  330 	cjne	a,#0x01,00137$
      000164                        331 00137$:
      000164 E4               [12]  332 	clr	a
      000165 33               [12]  333 	rlc	a
      000166 FB               [12]  334 	mov	r3,a
      000167 60 0A            [24]  335 	jz	00111$
      000169 7A DB            [12]  336 	mov	r2,#0xDB
      00016B 7B 0F            [12]  337 	mov	r3,#0x0F
      00016D 7E 49            [12]  338 	mov	r6,#0x49
      00016F 7F 40            [12]  339 	mov	r7,#0x40
      000171 80 08            [24]  340 	sjmp	00112$
      000173                        341 00111$:
      000173 7A DB            [12]  342 	mov	r2,#0xDB
      000175 7B 0F            [12]  343 	mov	r3,#0x0F
      000177 7E 49            [12]  344 	mov	r6,#0x49
      000179 7F C0            [12]  345 	mov	r7,#0xC0
      00017B                        346 00112$:
      00017B C0 02            [24]  347 	push	ar2
      00017D C0 03            [24]  348 	push	ar3
      00017F C0 06            [24]  349 	push	ar6
      000181 C0 07            [24]  350 	push	ar7
      000183 E5*00            [12]  351 	mov	a,_bp
      000185 24 09            [12]  352 	add	a,#0x09
      000187 F8               [12]  353 	mov	r0,a
      000188 86 82            [24]  354 	mov	dpl,@r0
      00018A 08               [12]  355 	inc	r0
      00018B 86 83            [24]  356 	mov	dph,@r0
      00018D 08               [12]  357 	inc	r0
      00018E 86 F0            [24]  358 	mov	b,@r0
      000190 08               [12]  359 	inc	r0
      000191 E6               [12]  360 	mov	a,@r0
      000192 12r00r00         [24]  361 	lcall	___fsadd
      000195 AC 82            [24]  362 	mov	r4,dpl
      000197 AD 83            [24]  363 	mov	r5,dph
      000199 AE F0            [24]  364 	mov	r6,b
      00019B FF               [12]  365 	mov	r7,a
      00019C E5 81            [12]  366 	mov	a,sp
      00019E 24 FC            [12]  367 	add	a,#0xfc
      0001A0 F5 81            [12]  368 	mov	sp,a
      0001A2 E5*00            [12]  369 	mov	a,_bp
      0001A4 24 09            [12]  370 	add	a,#0x09
      0001A6 F8               [12]  371 	mov	r0,a
      0001A7 A6 04            [24]  372 	mov	@r0,ar4
      0001A9 08               [12]  373 	inc	r0
      0001AA A6 05            [24]  374 	mov	@r0,ar5
      0001AC 08               [12]  375 	inc	r0
      0001AD A6 06            [24]  376 	mov	@r0,ar6
      0001AF 08               [12]  377 	inc	r0
      0001B0 A6 07            [24]  378 	mov	@r0,ar7
      0001B2 02r02r7C         [24]  379 	ljmp	00108$
      0001B5                        380 00107$:
                                    381 ;	atan2f.c:51: r=-atanf(y/x);
      0001B5 A8*00            [24]  382 	mov	r0,_bp
      0001B7 08               [12]  383 	inc	r0
      0001B8 E6               [12]  384 	mov	a,@r0
      0001B9 C0 E0            [24]  385 	push	acc
      0001BB 08               [12]  386 	inc	r0
      0001BC E6               [12]  387 	mov	a,@r0
      0001BD C0 E0            [24]  388 	push	acc
      0001BF 08               [12]  389 	inc	r0
      0001C0 E6               [12]  390 	mov	a,@r0
      0001C1 C0 E0            [24]  391 	push	acc
      0001C3 08               [12]  392 	inc	r0
      0001C4 E6               [12]  393 	mov	a,@r0
      0001C5 C0 E0            [24]  394 	push	acc
      0001C7 E5*00            [12]  395 	mov	a,_bp
      0001C9 24 F9            [12]  396 	add	a,#0xf9
      0001CB F8               [12]  397 	mov	r0,a
      0001CC 86 82            [24]  398 	mov	dpl,@r0
      0001CE 08               [12]  399 	inc	r0
      0001CF 86 83            [24]  400 	mov	dph,@r0
      0001D1 08               [12]  401 	inc	r0
      0001D2 86 F0            [24]  402 	mov	b,@r0
      0001D4 08               [12]  403 	inc	r0
      0001D5 E6               [12]  404 	mov	a,@r0
      0001D6 12r00r00         [24]  405 	lcall	___fsdiv
      0001D9 AC 82            [24]  406 	mov	r4,dpl
      0001DB AD 83            [24]  407 	mov	r5,dph
      0001DD AE F0            [24]  408 	mov	r6,b
      0001DF FF               [12]  409 	mov	r7,a
      0001E0 E5 81            [12]  410 	mov	a,sp
      0001E2 24 FC            [12]  411 	add	a,#0xfc
      0001E4 F5 81            [12]  412 	mov	sp,a
      0001E6 8C 82            [24]  413 	mov	dpl,r4
      0001E8 8D 83            [24]  414 	mov	dph,r5
      0001EA 8E F0            [24]  415 	mov	b,r6
      0001EC EF               [12]  416 	mov	a,r7
      0001ED 78r00            [12]  417 	mov	r0,#_atanf
      0001EF 79s00            [12]  418 	mov	r1,#(_atanf >> 8)
      0001F1 7As00            [12]  419 	mov	r2,#(_atanf >> 16)
      0001F3 12r00r00         [24]  420 	lcall	__sdcc_banked_call
      0001F6 AC 82            [24]  421 	mov	r4,dpl
      0001F8 AD 83            [24]  422 	mov	r5,dph
      0001FA AE F0            [24]  423 	mov	r6,b
      0001FC B2 E7            [12]  424 	cpl	acc.7
      0001FE FF               [12]  425 	mov	r7,a
      0001FF E5*00            [12]  426 	mov	a,_bp
      000201 24 09            [12]  427 	add	a,#0x09
      000203 F8               [12]  428 	mov	r0,a
      000204 A6 04            [24]  429 	mov	@r0,ar4
      000206 08               [12]  430 	inc	r0
      000207 A6 05            [24]  431 	mov	@r0,ar5
      000209 08               [12]  432 	inc	r0
      00020A A6 06            [24]  433 	mov	@r0,ar6
      00020C 08               [12]  434 	inc	r0
      00020D A6 07            [24]  435 	mov	@r0,ar7
                                    436 ;	atan2f.c:52: r+=(x<0.0?-HALF_PI:HALF_PI);
      00020F E4               [12]  437 	clr	a
      000210 C0 E0            [24]  438 	push	acc
      000212 C0 E0            [24]  439 	push	acc
      000214 C0 E0            [24]  440 	push	acc
      000216 C0 E0            [24]  441 	push	acc
      000218 A8*00            [24]  442 	mov	r0,_bp
      00021A 08               [12]  443 	inc	r0
      00021B 86 82            [24]  444 	mov	dpl,@r0
      00021D 08               [12]  445 	inc	r0
      00021E 86 83            [24]  446 	mov	dph,@r0
      000220 08               [12]  447 	inc	r0
      000221 86 F0            [24]  448 	mov	b,@r0
      000223 08               [12]  449 	inc	r0
      000224 E6               [12]  450 	mov	a,@r0
      000225 12r00r00         [24]  451 	lcall	___fslt
      000228 AF 82            [24]  452 	mov	r7,dpl
      00022A E5 81            [12]  453 	mov	a,sp
      00022C 24 FC            [12]  454 	add	a,#0xfc
      00022E F5 81            [12]  455 	mov	sp,a
      000230 EF               [12]  456 	mov	a,r7
      000231 60 0A            [24]  457 	jz	00113$
      000233 7C DB            [12]  458 	mov	r4,#0xDB
      000235 7D 0F            [12]  459 	mov	r5,#0x0F
      000237 7E C9            [12]  460 	mov	r6,#0xC9
      000239 7F BF            [12]  461 	mov	r7,#0xBF
      00023B 80 08            [24]  462 	sjmp	00114$
      00023D                        463 00113$:
      00023D 7C DB            [12]  464 	mov	r4,#0xDB
      00023F 7D 0F            [12]  465 	mov	r5,#0x0F
      000241 7E C9            [12]  466 	mov	r6,#0xC9
      000243 7F 3F            [12]  467 	mov	r7,#0x3F
      000245                        468 00114$:
      000245 C0 04            [24]  469 	push	ar4
      000247 C0 05            [24]  470 	push	ar5
      000249 C0 06            [24]  471 	push	ar6
      00024B C0 07            [24]  472 	push	ar7
      00024D E5*00            [12]  473 	mov	a,_bp
      00024F 24 09            [12]  474 	add	a,#0x09
      000251 F8               [12]  475 	mov	r0,a
      000252 86 82            [24]  476 	mov	dpl,@r0
      000254 08               [12]  477 	inc	r0
      000255 86 83            [24]  478 	mov	dph,@r0
      000257 08               [12]  479 	inc	r0
      000258 86 F0            [24]  480 	mov	b,@r0
      00025A 08               [12]  481 	inc	r0
      00025B E6               [12]  482 	mov	a,@r0
      00025C 12r00r00         [24]  483 	lcall	___fsadd
      00025F AC 82            [24]  484 	mov	r4,dpl
      000261 AD 83            [24]  485 	mov	r5,dph
      000263 AE F0            [24]  486 	mov	r6,b
      000265 FF               [12]  487 	mov	r7,a
      000266 E5 81            [12]  488 	mov	a,sp
      000268 24 FC            [12]  489 	add	a,#0xfc
      00026A F5 81            [12]  490 	mov	sp,a
      00026C E5*00            [12]  491 	mov	a,_bp
      00026E 24 09            [12]  492 	add	a,#0x09
      000270 F8               [12]  493 	mov	r0,a
      000271 A6 04            [24]  494 	mov	@r0,ar4
      000273 08               [12]  495 	inc	r0
      000274 A6 05            [24]  496 	mov	@r0,ar5
      000276 08               [12]  497 	inc	r0
      000277 A6 06            [24]  498 	mov	@r0,ar6
      000279 08               [12]  499 	inc	r0
      00027A A6 07            [24]  500 	mov	@r0,ar7
      00027C                        501 00108$:
                                    502 ;	atan2f.c:54: return r;
      00027C E5*00            [12]  503 	mov	a,_bp
      00027E 24 09            [12]  504 	add	a,#0x09
      000280 F8               [12]  505 	mov	r0,a
      000281 86 82            [24]  506 	mov	dpl,@r0
      000283 08               [12]  507 	inc	r0
      000284 86 83            [24]  508 	mov	dph,@r0
      000286 08               [12]  509 	inc	r0
      000287 86 F0            [24]  510 	mov	b,@r0
      000289 08               [12]  511 	inc	r0
      00028A E6               [12]  512 	mov	a,@r0
      00028B                        513 00109$:
      00028B 85*00 81         [24]  514 	mov	sp,_bp
      00028E D0*00            [24]  515 	pop	_bp
      000290 02r00r00         [24]  516 	ljmp	__sdcc_banked_ret
                                    517 	.area CSEG    (CODE)
                                    518 	.area CONST   (CODE)
                                    519 	.area XINIT   (CODE)
                                    520 	.area CABS    (ABS,CODE)
