                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:15 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module assert
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl __assert
                                     13 	.globl _printf
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram 
                                     35 ;--------------------------------------------------------
                                     36 ;--------------------------------------------------------
                                     37 ; indirectly addressable internal ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area ISEG    (DATA)
                                     40 ;--------------------------------------------------------
                                     41 ; absolute internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area IABS    (ABS,DATA)
                                     44 	.area IABS    (ABS,DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; bit data
                                     47 ;--------------------------------------------------------
                                     48 	.area BSEG    (BIT)
                                     49 ;--------------------------------------------------------
                                     50 ; paged external ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area PSEG    (PAG,XDATA)
                                     53 ;--------------------------------------------------------
                                     54 ; external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area XSEG    (XDATA)
                                     57 ;--------------------------------------------------------
                                     58 ; absolute external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XABS    (ABS,XDATA)
                                     61 ;--------------------------------------------------------
                                     62 ; external initialized ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XISEG   (XDATA)
                                     65 	.area HOME    (CODE)
                                     66 	.area GSINIT0 (CODE)
                                     67 	.area GSINIT1 (CODE)
                                     68 	.area GSINIT2 (CODE)
                                     69 	.area GSINIT3 (CODE)
                                     70 	.area GSINIT4 (CODE)
                                     71 	.area GSINIT5 (CODE)
                                     72 	.area GSINIT  (CODE)
                                     73 	.area GSFINAL (CODE)
                                     74 	.area CSEG    (CODE)
                                     75 ;--------------------------------------------------------
                                     76 ; global & static initialisations
                                     77 ;--------------------------------------------------------
                                     78 	.area HOME    (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 	.area GSFINAL (CODE)
                                     81 	.area GSINIT  (CODE)
                                     82 ;--------------------------------------------------------
                                     83 ; Home
                                     84 ;--------------------------------------------------------
                                     85 	.area HOME    (CODE)
                                     86 	.area HOME    (CODE)
                                     87 ;--------------------------------------------------------
                                     88 ; code
                                     89 ;--------------------------------------------------------
                                     90 	.area CSEG    (CODE)
                                     91 ;------------------------------------------------------------
                                     92 ;Allocation info for local variables in function '_assert'
                                     93 ;------------------------------------------------------------
                                     94 ;filename                  Allocated to stack - _bp -6
                                     95 ;linenumber                Allocated to stack - _bp -8
                                     96 ;expr                      Allocated to registers r5 r6 r7 
                                     97 ;------------------------------------------------------------
                                     98 ;	assert.c:32: void _assert(char *expr, const char *filename, unsigned int linenumber)
                                     99 ;	-----------------------------------------
                                    100 ;	 function _assert
                                    101 ;	-----------------------------------------
      000000                        102 __assert:
                           000007   103 	ar7 = 0x07
                           000006   104 	ar6 = 0x06
                           000005   105 	ar5 = 0x05
                           000004   106 	ar4 = 0x04
                           000003   107 	ar3 = 0x03
                           000002   108 	ar2 = 0x02
                           000001   109 	ar1 = 0x01
                           000000   110 	ar0 = 0x00
      000000 C0*00            [24]  111 	push	_bp
      000002 85 81*00         [24]  112 	mov	_bp,sp
      000005 AD 82            [24]  113 	mov	r5,dpl
      000007 AE 83            [24]  114 	mov	r6,dph
      000009 AF F0            [24]  115 	mov	r7,b
                                    116 ;	assert.c:34: printf("Assert(%s) failed at line %u in file %s.\n",
      00000B E5*00            [12]  117 	mov	a,_bp
      00000D 24 FA            [12]  118 	add	a,#0xfa
      00000F F8               [12]  119 	mov	r0,a
      000010 E6               [12]  120 	mov	a,@r0
      000011 C0 E0            [24]  121 	push	acc
      000013 08               [12]  122 	inc	r0
      000014 E6               [12]  123 	mov	a,@r0
      000015 C0 E0            [24]  124 	push	acc
      000017 08               [12]  125 	inc	r0
      000018 E6               [12]  126 	mov	a,@r0
      000019 C0 E0            [24]  127 	push	acc
      00001B E5*00            [12]  128 	mov	a,_bp
      00001D 24 F8            [12]  129 	add	a,#0xf8
      00001F F8               [12]  130 	mov	r0,a
      000020 E6               [12]  131 	mov	a,@r0
      000021 C0 E0            [24]  132 	push	acc
      000023 08               [12]  133 	inc	r0
      000024 E6               [12]  134 	mov	a,@r0
      000025 C0 E0            [24]  135 	push	acc
      000027 C0 05            [24]  136 	push	ar5
      000029 C0 06            [24]  137 	push	ar6
      00002B C0 07            [24]  138 	push	ar7
      00002D 74r00            [12]  139 	mov	a,#__str_0
      00002F C0 E0            [24]  140 	push	acc
      000031 74s00            [12]  141 	mov	a,#(__str_0 >> 8)
      000033 C0 E0            [24]  142 	push	acc
      000035 74 80            [12]  143 	mov	a,#0x80
      000037 C0 E0            [24]  144 	push	acc
      000039 78r00            [12]  145 	mov	r0,#_printf
      00003B 79s00            [12]  146 	mov	r1,#(_printf >> 8)
      00003D 7As00            [12]  147 	mov	r2,#(_printf >> 16)
      00003F 12r00r00         [24]  148 	lcall	__sdcc_banked_call
      000042 E5 81            [12]  149 	mov	a,sp
      000044 24 F5            [12]  150 	add	a,#0xf5
      000046 F5 81            [12]  151 	mov	sp,a
                                    152 ;	assert.c:36: while(1);
      000048                        153 00102$:
      000048 80 FE            [24]  154 	sjmp	00102$
      00004A D0*00            [24]  155 	pop	_bp
      00004C 02r00r00         [24]  156 	ljmp	__sdcc_banked_ret
                                    157 	.area CSEG    (CODE)
                                    158 	.area CONST   (CODE)
      000000                        159 __str_0:
      000000 41 73 73 65 72 74 28   160 	.ascii "Assert(%s) failed at line %u in file %s."
             25 73 29 20 66 61 69
             6C 65 64 20 61 74 20
             6C 69 6E 65 20 25 75
             20 69 6E 20 66 69 6C
             65 20 25 73 2E
      000028 0A                     161 	.db 0x0A
      000029 00                     162 	.db 0x00
                                    163 	.area XINIT   (CODE)
                                    164 	.area CABS    (ABS,CODE)
