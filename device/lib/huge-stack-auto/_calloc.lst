                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:14 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _calloc
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _memset
                                     13 	.globl _malloc
                                     14 	.globl _calloc
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram 
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; indirectly addressable internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area ISEG    (DATA)
                                     41 ;--------------------------------------------------------
                                     42 ; absolute internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area IABS    (ABS,DATA)
                                     45 	.area IABS    (ABS,DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; bit data
                                     48 ;--------------------------------------------------------
                                     49 	.area BSEG    (BIT)
                                     50 ;--------------------------------------------------------
                                     51 ; paged external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area PSEG    (PAG,XDATA)
                                     54 ;--------------------------------------------------------
                                     55 ; external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XSEG    (XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; absolute external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XABS    (ABS,XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; external initialized ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XISEG   (XDATA)
                                     66 	.area HOME    (CODE)
                                     67 	.area GSINIT0 (CODE)
                                     68 	.area GSINIT1 (CODE)
                                     69 	.area GSINIT2 (CODE)
                                     70 	.area GSINIT3 (CODE)
                                     71 	.area GSINIT4 (CODE)
                                     72 	.area GSINIT5 (CODE)
                                     73 	.area GSINIT  (CODE)
                                     74 	.area GSFINAL (CODE)
                                     75 	.area CSEG    (CODE)
                                     76 ;--------------------------------------------------------
                                     77 ; global & static initialisations
                                     78 ;--------------------------------------------------------
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 	.area GSFINAL (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 ;--------------------------------------------------------
                                     84 ; Home
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area HOME    (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; code
                                     90 ;--------------------------------------------------------
                                     91 	.area CSEG    (CODE)
                                     92 ;------------------------------------------------------------
                                     93 ;Allocation info for local variables in function 'calloc'
                                     94 ;------------------------------------------------------------
                                     95 ;size                      Allocated to stack - _bp -5
                                     96 ;nmemb                     Allocated to registers r6 r7 
                                     97 ;ptr                       Allocated to stack - _bp +1
                                     98 ;------------------------------------------------------------
                                     99 ;	_calloc.c:70: void __xdata * calloc (size_t nmemb, size_t size)
                                    100 ;	-----------------------------------------
                                    101 ;	 function calloc
                                    102 ;	-----------------------------------------
      000000                        103 _calloc:
                           000007   104 	ar7 = 0x07
                           000006   105 	ar6 = 0x06
                           000005   106 	ar5 = 0x05
                           000004   107 	ar4 = 0x04
                           000003   108 	ar3 = 0x03
                           000002   109 	ar2 = 0x02
                           000001   110 	ar1 = 0x01
                           000000   111 	ar0 = 0x00
      000000 C0*00            [24]  112 	push	_bp
      000002 85 81*00         [24]  113 	mov	_bp,sp
      000005 05 81            [12]  114 	inc	sp
      000007 05 81            [12]  115 	inc	sp
      000009 AE 82            [24]  116 	mov	r6,dpl
      00000B AF 83            [24]  117 	mov	r7,dph
                                    118 ;	_calloc.c:74: ptr = malloc(nmemb * size);
      00000D E5*00            [12]  119 	mov	a,_bp
      00000F 24 FB            [12]  120 	add	a,#0xfb
      000011 F8               [12]  121 	mov	r0,a
      000012 E6               [12]  122 	mov	a,@r0
      000013 C0 E0            [24]  123 	push	acc
      000015 08               [12]  124 	inc	r0
      000016 E6               [12]  125 	mov	a,@r0
      000017 C0 E0            [24]  126 	push	acc
      000019 8E 82            [24]  127 	mov	dpl,r6
      00001B 8F 83            [24]  128 	mov	dph,r7
      00001D 12r00r00         [24]  129 	lcall	__mulint
      000020 AE 82            [24]  130 	mov	r6,dpl
      000022 AF 83            [24]  131 	mov	r7,dph
      000024 15 81            [12]  132 	dec	sp
      000026 15 81            [12]  133 	dec	sp
      000028 8E 82            [24]  134 	mov	dpl,r6
      00002A 8F 83            [24]  135 	mov	dph,r7
      00002C C0 07            [24]  136 	push	ar7
      00002E C0 06            [24]  137 	push	ar6
      000030 78r00            [12]  138 	mov	r0,#_malloc
      000032 79s00            [12]  139 	mov	r1,#(_malloc >> 8)
      000034 7As00            [12]  140 	mov	r2,#(_malloc >> 16)
      000036 12r00r00         [24]  141 	lcall	__sdcc_banked_call
      000039 AC 82            [24]  142 	mov	r4,dpl
      00003B AD 83            [24]  143 	mov	r5,dph
      00003D D0 06            [24]  144 	pop	ar6
      00003F D0 07            [24]  145 	pop	ar7
      000041 A8*00            [24]  146 	mov	r0,_bp
      000043 08               [12]  147 	inc	r0
      000044 A6 04            [24]  148 	mov	@r0,ar4
      000046 08               [12]  149 	inc	r0
      000047 A6 05            [24]  150 	mov	@r0,ar5
                                    151 ;	_calloc.c:75: if (ptr)
      000049 A8*00            [24]  152 	mov	r0,_bp
      00004B 08               [12]  153 	inc	r0
      00004C E6               [12]  154 	mov	a,@r0
      00004D 08               [12]  155 	inc	r0
      00004E 46               [12]  156 	orl	a,@r0
      00004F 60 26            [24]  157 	jz	00102$
                                    158 ;	_calloc.c:77: memset(ptr, 0, nmemb * size);
      000051 A8*00            [24]  159 	mov	r0,_bp
      000053 08               [12]  160 	inc	r0
      000054 86 02            [24]  161 	mov	ar2,@r0
      000056 08               [12]  162 	inc	r0
      000057 86 03            [24]  163 	mov	ar3,@r0
      000059 7D 00            [12]  164 	mov	r5,#0x00
      00005B C0 06            [24]  165 	push	ar6
      00005D C0 07            [24]  166 	push	ar7
      00005F E4               [12]  167 	clr	a
      000060 C0 E0            [24]  168 	push	acc
      000062 8A 82            [24]  169 	mov	dpl,r2
      000064 8B 83            [24]  170 	mov	dph,r3
      000066 8D F0            [24]  171 	mov	b,r5
      000068 78r00            [12]  172 	mov	r0,#_memset
      00006A 79s00            [12]  173 	mov	r1,#(_memset >> 8)
      00006C 7As00            [12]  174 	mov	r2,#(_memset >> 16)
      00006E 12r00r00         [24]  175 	lcall	__sdcc_banked_call
      000071 15 81            [12]  176 	dec	sp
      000073 15 81            [12]  177 	dec	sp
      000075 15 81            [12]  178 	dec	sp
      000077                        179 00102$:
                                    180 ;	_calloc.c:79: return ptr;
      000077 A8*00            [24]  181 	mov	r0,_bp
      000079 08               [12]  182 	inc	r0
      00007A 86 82            [24]  183 	mov	dpl,@r0
      00007C 08               [12]  184 	inc	r0
      00007D 86 83            [24]  185 	mov	dph,@r0
      00007F 85*00 81         [24]  186 	mov	sp,_bp
      000082 D0*00            [24]  187 	pop	_bp
      000084 02r00r00         [24]  188 	ljmp	__sdcc_banked_ret
                                    189 	.area CSEG    (CODE)
                                    190 	.area CONST   (CODE)
                                    191 	.area XINIT   (CODE)
                                    192 	.area CABS    (ABS,CODE)
