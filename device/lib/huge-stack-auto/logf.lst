                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:13 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module logf
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _frexpf
                                     13 	.globl _logf
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram 
                                     35 ;--------------------------------------------------------
                                     36 ;--------------------------------------------------------
                                     37 ; indirectly addressable internal ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area ISEG    (DATA)
                                     40 ;--------------------------------------------------------
                                     41 ; absolute internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area IABS    (ABS,DATA)
                                     44 	.area IABS    (ABS,DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; bit data
                                     47 ;--------------------------------------------------------
                                     48 	.area BSEG    (BIT)
                                     49 ;--------------------------------------------------------
                                     50 ; paged external ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area PSEG    (PAG,XDATA)
                                     53 ;--------------------------------------------------------
                                     54 ; external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area XSEG    (XDATA)
                                     57 ;--------------------------------------------------------
                                     58 ; absolute external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XABS    (ABS,XDATA)
                                     61 ;--------------------------------------------------------
                                     62 ; external initialized ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XISEG   (XDATA)
                                     65 	.area HOME    (CODE)
                                     66 	.area GSINIT0 (CODE)
                                     67 	.area GSINIT1 (CODE)
                                     68 	.area GSINIT2 (CODE)
                                     69 	.area GSINIT3 (CODE)
                                     70 	.area GSINIT4 (CODE)
                                     71 	.area GSINIT5 (CODE)
                                     72 	.area GSINIT  (CODE)
                                     73 	.area GSFINAL (CODE)
                                     74 	.area CSEG    (CODE)
                                     75 ;--------------------------------------------------------
                                     76 ; global & static initialisations
                                     77 ;--------------------------------------------------------
                                     78 	.area HOME    (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 	.area GSFINAL (CODE)
                                     81 	.area GSINIT  (CODE)
                                     82 ;--------------------------------------------------------
                                     83 ; Home
                                     84 ;--------------------------------------------------------
                                     85 	.area HOME    (CODE)
                                     86 	.area HOME    (CODE)
                                     87 ;--------------------------------------------------------
                                     88 ; code
                                     89 ;--------------------------------------------------------
                                     90 	.area CSEG    (CODE)
                                     91 ;------------------------------------------------------------
                                     92 ;Allocation info for local variables in function 'logf'
                                     93 ;------------------------------------------------------------
                                     94 ;x                         Allocated to stack - _bp +1
                                     95 ;Rz                        Allocated to stack - _bp +9
                                     96 ;f                         Allocated to registers r4 r3 r6 r7 
                                     97 ;z                         Allocated to stack - _bp +13
                                     98 ;w                         Allocated to registers r7 r6 r5 r4 
                                     99 ;znum                      Allocated to stack - _bp +17
                                    100 ;zden                      Allocated to stack - _bp +21
                                    101 ;xn                        Allocated to stack - _bp +25
                                    102 ;n                         Allocated to stack - _bp +29
                                    103 ;sloc0                     Allocated to stack - _bp +5
                                    104 ;------------------------------------------------------------
                                    105 ;	logf.c:216: float logf(const float x) _FLOAT_FUNC_REENTRANT
                                    106 ;	-----------------------------------------
                                    107 ;	 function logf
                                    108 ;	-----------------------------------------
      000000                        109 _logf:
                           000007   110 	ar7 = 0x07
                           000006   111 	ar6 = 0x06
                           000005   112 	ar5 = 0x05
                           000004   113 	ar4 = 0x04
                           000003   114 	ar3 = 0x03
                           000002   115 	ar2 = 0x02
                           000001   116 	ar1 = 0x01
                           000000   117 	ar0 = 0x00
      000000 C0*00            [24]  118 	push	_bp
      000002 85 81*00         [24]  119 	mov	_bp,sp
      000005 C0 82            [24]  120 	push	dpl
      000007 C0 83            [24]  121 	push	dph
      000009 C0 F0            [24]  122 	push	b
      00000B C0 E0            [24]  123 	push	acc
      00000D E5 81            [12]  124 	mov	a,sp
      00000F 24 1A            [12]  125 	add	a,#0x1A
      000011 F5 81            [12]  126 	mov	sp,a
                                    127 ;	logf.c:226: if (x<=0.0)
      000013 E4               [12]  128 	clr	a
      000014 C0 E0            [24]  129 	push	acc
      000016 C0 E0            [24]  130 	push	acc
      000018 C0 E0            [24]  131 	push	acc
      00001A C0 E0            [24]  132 	push	acc
      00001C A8*00            [24]  133 	mov	r0,_bp
      00001E 08               [12]  134 	inc	r0
      00001F 86 82            [24]  135 	mov	dpl,@r0
      000021 08               [12]  136 	inc	r0
      000022 86 83            [24]  137 	mov	dph,@r0
      000024 08               [12]  138 	inc	r0
      000025 86 F0            [24]  139 	mov	b,@r0
      000027 08               [12]  140 	inc	r0
      000028 E6               [12]  141 	mov	a,@r0
      000029 12r00r00         [24]  142 	lcall	___fsgt
      00002C AB 82            [24]  143 	mov	r3,dpl
      00002E E5 81            [12]  144 	mov	a,sp
      000030 24 FC            [12]  145 	add	a,#0xfc
      000032 F5 81            [12]  146 	mov	sp,a
      000034 EB               [12]  147 	mov	a,r3
      000035 70 12            [24]  148 	jnz	00102$
                                    149 ;	logf.c:228: errno=EDOM;
      000037 90r00r00         [24]  150 	mov	dptr,#_errno
      00003A 74 21            [12]  151 	mov	a,#0x21
      00003C F0               [24]  152 	movx	@dptr,a
      00003D E4               [12]  153 	clr	a
      00003E A3               [24]  154 	inc	dptr
      00003F F0               [24]  155 	movx	@dptr,a
                                    156 ;	logf.c:229: return 0.0;
      000040 90 00 00         [24]  157 	mov	dptr,#(0x00&0x00ff)
      000043 E4               [12]  158 	clr	a
      000044 F5 F0            [12]  159 	mov	b,a
      000046 02r04r2B         [24]  160 	ljmp	00106$
      000049                        161 00102$:
                                    162 ;	logf.c:231: f=frexpf(x, &n);
      000049 E5*00            [12]  163 	mov	a,_bp
      00004B 24 1D            [12]  164 	add	a,#0x1D
      00004D FA               [12]  165 	mov	r2,a
      00004E 7B 00            [12]  166 	mov	r3,#0x00
      000050 7F 40            [12]  167 	mov	r7,#0x40
      000052 C0 02            [24]  168 	push	ar2
      000054 C0 03            [24]  169 	push	ar3
      000056 C0 07            [24]  170 	push	ar7
      000058 A8*00            [24]  171 	mov	r0,_bp
      00005A 08               [12]  172 	inc	r0
      00005B 86 82            [24]  173 	mov	dpl,@r0
      00005D 08               [12]  174 	inc	r0
      00005E 86 83            [24]  175 	mov	dph,@r0
      000060 08               [12]  176 	inc	r0
      000061 86 F0            [24]  177 	mov	b,@r0
      000063 08               [12]  178 	inc	r0
      000064 E6               [12]  179 	mov	a,@r0
      000065 78r00            [12]  180 	mov	r0,#_frexpf
      000067 79s00            [12]  181 	mov	r1,#(_frexpf >> 8)
      000069 7As00            [12]  182 	mov	r2,#(_frexpf >> 16)
      00006B 12r00r00         [24]  183 	lcall	__sdcc_banked_call
      00006E AC 82            [24]  184 	mov	r4,dpl
      000070 AD 83            [24]  185 	mov	r5,dph
      000072 AE F0            [24]  186 	mov	r6,b
      000074 FF               [12]  187 	mov	r7,a
      000075 15 81            [12]  188 	dec	sp
      000077 15 81            [12]  189 	dec	sp
      000079 15 81            [12]  190 	dec	sp
      00007B 8D 03            [24]  191 	mov	ar3,r5
                                    192 ;	logf.c:232: znum=f-0.5;
      00007D C0 07            [24]  193 	push	ar7
      00007F C0 06            [24]  194 	push	ar6
      000081 C0 04            [24]  195 	push	ar4
      000083 C0 03            [24]  196 	push	ar3
      000085 E4               [12]  197 	clr	a
      000086 C0 E0            [24]  198 	push	acc
      000088 C0 E0            [24]  199 	push	acc
      00008A C0 E0            [24]  200 	push	acc
      00008C 74 3F            [12]  201 	mov	a,#0x3F
      00008E C0 E0            [24]  202 	push	acc
      000090 8C 82            [24]  203 	mov	dpl,r4
      000092 8B 83            [24]  204 	mov	dph,r3
      000094 8E F0            [24]  205 	mov	b,r6
      000096 EF               [12]  206 	mov	a,r7
      000097 12r00r00         [24]  207 	lcall	___fssub
      00009A C8               [12]  208 	xch	a,r0
      00009B E5*00            [12]  209 	mov	a,_bp
      00009D 24 11            [12]  210 	add	a,#0x11
      00009F C8               [12]  211 	xch	a,r0
      0000A0 A6 82            [24]  212 	mov	@r0,dpl
      0000A2 08               [12]  213 	inc	r0
      0000A3 A6 83            [24]  214 	mov	@r0,dph
      0000A5 08               [12]  215 	inc	r0
      0000A6 A6 F0            [24]  216 	mov	@r0,b
      0000A8 08               [12]  217 	inc	r0
      0000A9 F6               [12]  218 	mov	@r0,a
      0000AA E5 81            [12]  219 	mov	a,sp
      0000AC 24 FC            [12]  220 	add	a,#0xfc
      0000AE F5 81            [12]  221 	mov	sp,a
      0000B0 D0 03            [24]  222 	pop	ar3
      0000B2 D0 04            [24]  223 	pop	ar4
      0000B4 D0 06            [24]  224 	pop	ar6
      0000B6 D0 07            [24]  225 	pop	ar7
      0000B8 E5*00            [12]  226 	mov	a,_bp
      0000BA 24 11            [12]  227 	add	a,#0x11
                                    228 ;	logf.c:233: if (f>C0)
      0000BC C0 07            [24]  229 	push	ar7
      0000BE C0 06            [24]  230 	push	ar6
      0000C0 C0 04            [24]  231 	push	ar4
      0000C2 C0 03            [24]  232 	push	ar3
      0000C4 74 F3            [12]  233 	mov	a,#0xF3
      0000C6 C0 E0            [24]  234 	push	acc
      0000C8 74 04            [12]  235 	mov	a,#0x04
      0000CA C0 E0            [24]  236 	push	acc
      0000CC 74 35            [12]  237 	mov	a,#0x35
      0000CE C0 E0            [24]  238 	push	acc
      0000D0 74 3F            [12]  239 	mov	a,#0x3F
      0000D2 C0 E0            [24]  240 	push	acc
      0000D4 8C 82            [24]  241 	mov	dpl,r4
      0000D6 8B 83            [24]  242 	mov	dph,r3
      0000D8 8E F0            [24]  243 	mov	b,r6
      0000DA EF               [12]  244 	mov	a,r7
      0000DB 12r00r00         [24]  245 	lcall	___fsgt
      0000DE AD 82            [24]  246 	mov	r5,dpl
      0000E0 E5 81            [12]  247 	mov	a,sp
      0000E2 24 FC            [12]  248 	add	a,#0xfc
      0000E4 F5 81            [12]  249 	mov	sp,a
      0000E6 D0 03            [24]  250 	pop	ar3
      0000E8 D0 04            [24]  251 	pop	ar4
      0000EA D0 06            [24]  252 	pop	ar6
      0000EC D0 07            [24]  253 	pop	ar7
      0000EE ED               [12]  254 	mov	a,r5
      0000EF 70 03            [24]  255 	jnz	00115$
      0000F1 02r01r93         [24]  256 	ljmp	00104$
      0000F4                        257 00115$:
                                    258 ;	logf.c:235: znum-=0.5;
      0000F4 C0 07            [24]  259 	push	ar7
      0000F6 C0 06            [24]  260 	push	ar6
      0000F8 C0 04            [24]  261 	push	ar4
      0000FA C0 03            [24]  262 	push	ar3
      0000FC E4               [12]  263 	clr	a
      0000FD C0 E0            [24]  264 	push	acc
      0000FF C0 E0            [24]  265 	push	acc
      000101 C0 E0            [24]  266 	push	acc
      000103 74 3F            [12]  267 	mov	a,#0x3F
      000105 C0 E0            [24]  268 	push	acc
      000107 E5*00            [12]  269 	mov	a,_bp
      000109 24 11            [12]  270 	add	a,#0x11
      00010B F8               [12]  271 	mov	r0,a
      00010C 86 82            [24]  272 	mov	dpl,@r0
      00010E 08               [12]  273 	inc	r0
      00010F 86 83            [24]  274 	mov	dph,@r0
      000111 08               [12]  275 	inc	r0
      000112 86 F0            [24]  276 	mov	b,@r0
      000114 08               [12]  277 	inc	r0
      000115 E6               [12]  278 	mov	a,@r0
      000116 12r00r00         [24]  279 	lcall	___fssub
      000119 C8               [12]  280 	xch	a,r0
      00011A E5*00            [12]  281 	mov	a,_bp
      00011C 24 05            [12]  282 	add	a,#0x05
      00011E C8               [12]  283 	xch	a,r0
      00011F A6 82            [24]  284 	mov	@r0,dpl
      000121 08               [12]  285 	inc	r0
      000122 A6 83            [24]  286 	mov	@r0,dph
      000124 08               [12]  287 	inc	r0
      000125 A6 F0            [24]  288 	mov	@r0,b
      000127 08               [12]  289 	inc	r0
      000128 F6               [12]  290 	mov	@r0,a
      000129 E5 81            [12]  291 	mov	a,sp
      00012B 24 FC            [12]  292 	add	a,#0xfc
      00012D F5 81            [12]  293 	mov	sp,a
      00012F D0 03            [24]  294 	pop	ar3
      000131 D0 04            [24]  295 	pop	ar4
      000133 D0 06            [24]  296 	pop	ar6
      000135 D0 07            [24]  297 	pop	ar7
      000137 E5*00            [12]  298 	mov	a,_bp
      000139 24 05            [12]  299 	add	a,#0x05
      00013B F8               [12]  300 	mov	r0,a
      00013C E5*00            [12]  301 	mov	a,_bp
      00013E 24 11            [12]  302 	add	a,#0x11
      000140 F9               [12]  303 	mov	r1,a
      000141 E6               [12]  304 	mov	a,@r0
      000142 F7               [12]  305 	mov	@r1,a
      000143 08               [12]  306 	inc	r0
      000144 09               [12]  307 	inc	r1
      000145 E6               [12]  308 	mov	a,@r0
      000146 F7               [12]  309 	mov	@r1,a
      000147 08               [12]  310 	inc	r0
      000148 09               [12]  311 	inc	r1
      000149 E6               [12]  312 	mov	a,@r0
      00014A F7               [12]  313 	mov	@r1,a
      00014B 08               [12]  314 	inc	r0
      00014C 09               [12]  315 	inc	r1
      00014D E6               [12]  316 	mov	a,@r0
      00014E F7               [12]  317 	mov	@r1,a
                                    318 ;	logf.c:236: zden=(f*0.5)+0.5;
      00014F C0 04            [24]  319 	push	ar4
      000151 C0 03            [24]  320 	push	ar3
      000153 C0 06            [24]  321 	push	ar6
      000155 C0 07            [24]  322 	push	ar7
      000157 90 00 00         [24]  323 	mov	dptr,#(0x00&0x00ff)
      00015A E4               [12]  324 	clr	a
      00015B F5 F0            [12]  325 	mov	b,a
      00015D 74 3F            [12]  326 	mov	a,#0x3F
      00015F 12r00r00         [24]  327 	lcall	___fsmul
      000162 AC 82            [24]  328 	mov	r4,dpl
      000164 AD 83            [24]  329 	mov	r5,dph
      000166 AE F0            [24]  330 	mov	r6,b
      000168 FF               [12]  331 	mov	r7,a
      000169 E5 81            [12]  332 	mov	a,sp
      00016B 24 FC            [12]  333 	add	a,#0xfc
      00016D F5 81            [12]  334 	mov	sp,a
      00016F E4               [12]  335 	clr	a
      000170 C0 E0            [24]  336 	push	acc
      000172 C0 E0            [24]  337 	push	acc
      000174 C0 E0            [24]  338 	push	acc
      000176 74 3F            [12]  339 	mov	a,#0x3F
      000178 C0 E0            [24]  340 	push	acc
      00017A 8C 82            [24]  341 	mov	dpl,r4
      00017C 8D 83            [24]  342 	mov	dph,r5
      00017E 8E F0            [24]  343 	mov	b,r6
      000180 EF               [12]  344 	mov	a,r7
      000181 12r00r00         [24]  345 	lcall	___fsadd
      000184 AC 82            [24]  346 	mov	r4,dpl
      000186 AD 83            [24]  347 	mov	r5,dph
      000188 AE F0            [24]  348 	mov	r6,b
      00018A FF               [12]  349 	mov	r7,a
      00018B E5 81            [12]  350 	mov	a,sp
      00018D 24 FC            [12]  351 	add	a,#0xfc
      00018F F5 81            [12]  352 	mov	sp,a
      000191 80 72            [24]  353 	sjmp	00105$
      000193                        354 00104$:
                                    355 ;	logf.c:240: n--;
      000193 E5*00            [12]  356 	mov	a,_bp
      000195 24 1D            [12]  357 	add	a,#0x1d
      000197 F8               [12]  358 	mov	r0,a
      000198 16               [12]  359 	dec	@r0
      000199 B6 FF 02         [24]  360 	cjne	@r0,#0xFF,00116$
      00019C 08               [12]  361 	inc	r0
      00019D 16               [12]  362 	dec	@r0
      00019E                        363 00116$:
                                    364 ;	logf.c:241: zden=znum*0.5+0.5;
      00019E E5*00            [12]  365 	mov	a,_bp
      0001A0 24 11            [12]  366 	add	a,#0x11
      0001A2 F8               [12]  367 	mov	r0,a
      0001A3 E6               [12]  368 	mov	a,@r0
      0001A4 C0 E0            [24]  369 	push	acc
      0001A6 08               [12]  370 	inc	r0
      0001A7 E6               [12]  371 	mov	a,@r0
      0001A8 C0 E0            [24]  372 	push	acc
      0001AA 08               [12]  373 	inc	r0
      0001AB E6               [12]  374 	mov	a,@r0
      0001AC C0 E0            [24]  375 	push	acc
      0001AE 08               [12]  376 	inc	r0
      0001AF E6               [12]  377 	mov	a,@r0
      0001B0 C0 E0            [24]  378 	push	acc
      0001B2 90 00 00         [24]  379 	mov	dptr,#(0x00&0x00ff)
      0001B5 E4               [12]  380 	clr	a
      0001B6 F5 F0            [12]  381 	mov	b,a
      0001B8 74 3F            [12]  382 	mov	a,#0x3F
      0001BA 12r00r00         [24]  383 	lcall	___fsmul
      0001BD AF 82            [24]  384 	mov	r7,dpl
      0001BF AE 83            [24]  385 	mov	r6,dph
      0001C1 AD F0            [24]  386 	mov	r5,b
      0001C3 FC               [12]  387 	mov	r4,a
      0001C4 E5 81            [12]  388 	mov	a,sp
      0001C6 24 FC            [12]  389 	add	a,#0xfc
      0001C8 F5 81            [12]  390 	mov	sp,a
      0001CA E4               [12]  391 	clr	a
      0001CB C0 E0            [24]  392 	push	acc
      0001CD C0 E0            [24]  393 	push	acc
      0001CF C0 E0            [24]  394 	push	acc
      0001D1 74 3F            [12]  395 	mov	a,#0x3F
      0001D3 C0 E0            [24]  396 	push	acc
      0001D5 8F 82            [24]  397 	mov	dpl,r7
      0001D7 8E 83            [24]  398 	mov	dph,r6
      0001D9 8D F0            [24]  399 	mov	b,r5
      0001DB EC               [12]  400 	mov	a,r4
      0001DC 12r00r00         [24]  401 	lcall	___fsadd
      0001DF C8               [12]  402 	xch	a,r0
      0001E0 E5*00            [12]  403 	mov	a,_bp
      0001E2 24 15            [12]  404 	add	a,#0x15
      0001E4 C8               [12]  405 	xch	a,r0
      0001E5 A6 82            [24]  406 	mov	@r0,dpl
      0001E7 08               [12]  407 	inc	r0
      0001E8 A6 83            [24]  408 	mov	@r0,dph
      0001EA 08               [12]  409 	inc	r0
      0001EB A6 F0            [24]  410 	mov	@r0,b
      0001ED 08               [12]  411 	inc	r0
      0001EE F6               [12]  412 	mov	@r0,a
      0001EF E5 81            [12]  413 	mov	a,sp
      0001F1 24 FC            [12]  414 	add	a,#0xfc
      0001F3 F5 81            [12]  415 	mov	sp,a
      0001F5 E5*00            [12]  416 	mov	a,_bp
      0001F7 24 15            [12]  417 	add	a,#0x15
      0001F9 F8               [12]  418 	mov	r0,a
      0001FA 86 04            [24]  419 	mov	ar4,@r0
      0001FC 08               [12]  420 	inc	r0
      0001FD 86 05            [24]  421 	mov	ar5,@r0
      0001FF 08               [12]  422 	inc	r0
      000200 86 06            [24]  423 	mov	ar6,@r0
      000202 08               [12]  424 	inc	r0
      000203 86 07            [24]  425 	mov	ar7,@r0
      000205                        426 00105$:
                                    427 ;	logf.c:243: z=znum/zden;
      000205 C0 04            [24]  428 	push	ar4
      000207 C0 05            [24]  429 	push	ar5
      000209 C0 06            [24]  430 	push	ar6
      00020B C0 07            [24]  431 	push	ar7
      00020D E5*00            [12]  432 	mov	a,_bp
      00020F 24 11            [12]  433 	add	a,#0x11
      000211 F8               [12]  434 	mov	r0,a
      000212 86 82            [24]  435 	mov	dpl,@r0
      000214 08               [12]  436 	inc	r0
      000215 86 83            [24]  437 	mov	dph,@r0
      000217 08               [12]  438 	inc	r0
      000218 86 F0            [24]  439 	mov	b,@r0
      00021A 08               [12]  440 	inc	r0
      00021B E6               [12]  441 	mov	a,@r0
      00021C 12r00r00         [24]  442 	lcall	___fsdiv
      00021F AC 82            [24]  443 	mov	r4,dpl
      000221 AD 83            [24]  444 	mov	r5,dph
      000223 AE F0            [24]  445 	mov	r6,b
      000225 FF               [12]  446 	mov	r7,a
      000226 E5 81            [12]  447 	mov	a,sp
      000228 24 FC            [12]  448 	add	a,#0xfc
      00022A F5 81            [12]  449 	mov	sp,a
      00022C E5*00            [12]  450 	mov	a,_bp
      00022E 24 0D            [12]  451 	add	a,#0x0d
      000230 F8               [12]  452 	mov	r0,a
      000231 A6 04            [24]  453 	mov	@r0,ar4
      000233 08               [12]  454 	inc	r0
      000234 A6 05            [24]  455 	mov	@r0,ar5
      000236 08               [12]  456 	inc	r0
      000237 A6 06            [24]  457 	mov	@r0,ar6
      000239 08               [12]  458 	inc	r0
      00023A A6 07            [24]  459 	mov	@r0,ar7
                                    460 ;	logf.c:244: w=z*z;
      00023C E5*00            [12]  461 	mov	a,_bp
      00023E 24 0D            [12]  462 	add	a,#0x0d
      000240 F8               [12]  463 	mov	r0,a
      000241 E6               [12]  464 	mov	a,@r0
      000242 C0 E0            [24]  465 	push	acc
      000244 08               [12]  466 	inc	r0
      000245 E6               [12]  467 	mov	a,@r0
      000246 C0 E0            [24]  468 	push	acc
      000248 08               [12]  469 	inc	r0
      000249 E6               [12]  470 	mov	a,@r0
      00024A C0 E0            [24]  471 	push	acc
      00024C 08               [12]  472 	inc	r0
      00024D E6               [12]  473 	mov	a,@r0
      00024E C0 E0            [24]  474 	push	acc
      000250 E5*00            [12]  475 	mov	a,_bp
      000252 24 0D            [12]  476 	add	a,#0x0d
      000254 F8               [12]  477 	mov	r0,a
      000255 86 82            [24]  478 	mov	dpl,@r0
      000257 08               [12]  479 	inc	r0
      000258 86 83            [24]  480 	mov	dph,@r0
      00025A 08               [12]  481 	inc	r0
      00025B 86 F0            [24]  482 	mov	b,@r0
      00025D 08               [12]  483 	inc	r0
      00025E E6               [12]  484 	mov	a,@r0
      00025F 12r00r00         [24]  485 	lcall	___fsmul
      000262 AF 82            [24]  486 	mov	r7,dpl
      000264 AE 83            [24]  487 	mov	r6,dph
      000266 AD F0            [24]  488 	mov	r5,b
      000268 FC               [12]  489 	mov	r4,a
      000269 E5 81            [12]  490 	mov	a,sp
      00026B 24 FC            [12]  491 	add	a,#0xfc
      00026D F5 81            [12]  492 	mov	sp,a
                                    493 ;	logf.c:246: Rz=z+z*(w*A(w)/B(w));
      00026F C0 07            [24]  494 	push	ar7
      000271 C0 06            [24]  495 	push	ar6
      000273 C0 05            [24]  496 	push	ar5
      000275 C0 04            [24]  497 	push	ar4
      000277 C0 07            [24]  498 	push	ar7
      000279 C0 06            [24]  499 	push	ar6
      00027B C0 05            [24]  500 	push	ar5
      00027D C0 04            [24]  501 	push	ar4
      00027F 90 7E 3D         [24]  502 	mov	dptr,#0x7E3D
      000282 75 F0 0D         [24]  503 	mov	b,#0x0D
      000285 74 BF            [12]  504 	mov	a,#0xBF
      000287 12r00r00         [24]  505 	lcall	___fsmul
      00028A C8               [12]  506 	xch	a,r0
      00028B E5*00            [12]  507 	mov	a,_bp
      00028D 24 05            [12]  508 	add	a,#0x05
      00028F C8               [12]  509 	xch	a,r0
      000290 A6 82            [24]  510 	mov	@r0,dpl
      000292 08               [12]  511 	inc	r0
      000293 A6 83            [24]  512 	mov	@r0,dph
      000295 08               [12]  513 	inc	r0
      000296 A6 F0            [24]  514 	mov	@r0,b
      000298 08               [12]  515 	inc	r0
      000299 F6               [12]  516 	mov	@r0,a
      00029A E5 81            [12]  517 	mov	a,sp
      00029C 24 FC            [12]  518 	add	a,#0xfc
      00029E F5 81            [12]  519 	mov	sp,a
      0002A0 D0 04            [24]  520 	pop	ar4
      0002A2 D0 05            [24]  521 	pop	ar5
      0002A4 D0 06            [24]  522 	pop	ar6
      0002A6 D0 07            [24]  523 	pop	ar7
      0002A8 74 3A            [12]  524 	mov	a,#0x3A
      0002AA C0 E0            [24]  525 	push	acc
      0002AC 74 3F            [12]  526 	mov	a,#0x3F
      0002AE C0 E0            [24]  527 	push	acc
      0002B0 74 D4            [12]  528 	mov	a,#0xD4
      0002B2 C0 E0            [24]  529 	push	acc
      0002B4 74 C0            [12]  530 	mov	a,#0xC0
      0002B6 C0 E0            [24]  531 	push	acc
      0002B8 8F 82            [24]  532 	mov	dpl,r7
      0002BA 8E 83            [24]  533 	mov	dph,r6
      0002BC 8D F0            [24]  534 	mov	b,r5
      0002BE EC               [12]  535 	mov	a,r4
      0002BF 12r00r00         [24]  536 	lcall	___fsadd
      0002C2 AC 82            [24]  537 	mov	r4,dpl
      0002C4 AD 83            [24]  538 	mov	r5,dph
      0002C6 AE F0            [24]  539 	mov	r6,b
      0002C8 FF               [12]  540 	mov	r7,a
      0002C9 E5 81            [12]  541 	mov	a,sp
      0002CB 24 FC            [12]  542 	add	a,#0xfc
      0002CD F5 81            [12]  543 	mov	sp,a
      0002CF C0 04            [24]  544 	push	ar4
      0002D1 C0 05            [24]  545 	push	ar5
      0002D3 C0 06            [24]  546 	push	ar6
      0002D5 C0 07            [24]  547 	push	ar7
      0002D7 E5*00            [12]  548 	mov	a,_bp
      0002D9 24 05            [12]  549 	add	a,#0x05
      0002DB F8               [12]  550 	mov	r0,a
      0002DC 86 82            [24]  551 	mov	dpl,@r0
      0002DE 08               [12]  552 	inc	r0
      0002DF 86 83            [24]  553 	mov	dph,@r0
      0002E1 08               [12]  554 	inc	r0
      0002E2 86 F0            [24]  555 	mov	b,@r0
      0002E4 08               [12]  556 	inc	r0
      0002E5 E6               [12]  557 	mov	a,@r0
      0002E6 12r00r00         [24]  558 	lcall	___fsdiv
      0002E9 AC 82            [24]  559 	mov	r4,dpl
      0002EB AD 83            [24]  560 	mov	r5,dph
      0002ED AE F0            [24]  561 	mov	r6,b
      0002EF FF               [12]  562 	mov	r7,a
      0002F0 E5 81            [12]  563 	mov	a,sp
      0002F2 24 FC            [12]  564 	add	a,#0xfc
      0002F4 F5 81            [12]  565 	mov	sp,a
      0002F6 C0 04            [24]  566 	push	ar4
      0002F8 C0 05            [24]  567 	push	ar5
      0002FA C0 06            [24]  568 	push	ar6
      0002FC C0 07            [24]  569 	push	ar7
      0002FE E5*00            [12]  570 	mov	a,_bp
      000300 24 0D            [12]  571 	add	a,#0x0d
      000302 F8               [12]  572 	mov	r0,a
      000303 86 82            [24]  573 	mov	dpl,@r0
      000305 08               [12]  574 	inc	r0
      000306 86 83            [24]  575 	mov	dph,@r0
      000308 08               [12]  576 	inc	r0
      000309 86 F0            [24]  577 	mov	b,@r0
      00030B 08               [12]  578 	inc	r0
      00030C E6               [12]  579 	mov	a,@r0
      00030D 12r00r00         [24]  580 	lcall	___fsmul
      000310 AC 82            [24]  581 	mov	r4,dpl
      000312 AD 83            [24]  582 	mov	r5,dph
      000314 AE F0            [24]  583 	mov	r6,b
      000316 FF               [12]  584 	mov	r7,a
      000317 E5 81            [12]  585 	mov	a,sp
      000319 24 FC            [12]  586 	add	a,#0xfc
      00031B F5 81            [12]  587 	mov	sp,a
      00031D C0 04            [24]  588 	push	ar4
      00031F C0 05            [24]  589 	push	ar5
      000321 C0 06            [24]  590 	push	ar6
      000323 C0 07            [24]  591 	push	ar7
      000325 E5*00            [12]  592 	mov	a,_bp
      000327 24 0D            [12]  593 	add	a,#0x0d
      000329 F8               [12]  594 	mov	r0,a
      00032A 86 82            [24]  595 	mov	dpl,@r0
      00032C 08               [12]  596 	inc	r0
      00032D 86 83            [24]  597 	mov	dph,@r0
      00032F 08               [12]  598 	inc	r0
      000330 86 F0            [24]  599 	mov	b,@r0
      000332 08               [12]  600 	inc	r0
      000333 E6               [12]  601 	mov	a,@r0
      000334 12r00r00         [24]  602 	lcall	___fsadd
      000337 C8               [12]  603 	xch	a,r0
      000338 E5*00            [12]  604 	mov	a,_bp
      00033A 24 09            [12]  605 	add	a,#0x09
      00033C C8               [12]  606 	xch	a,r0
      00033D A6 82            [24]  607 	mov	@r0,dpl
      00033F 08               [12]  608 	inc	r0
      000340 A6 83            [24]  609 	mov	@r0,dph
      000342 08               [12]  610 	inc	r0
      000343 A6 F0            [24]  611 	mov	@r0,b
      000345 08               [12]  612 	inc	r0
      000346 F6               [12]  613 	mov	@r0,a
      000347 E5 81            [12]  614 	mov	a,sp
      000349 24 FC            [12]  615 	add	a,#0xfc
      00034B F5 81            [12]  616 	mov	sp,a
                                    617 ;	logf.c:247: xn=n;
      00034D E5*00            [12]  618 	mov	a,_bp
      00034F 24 1D            [12]  619 	add	a,#0x1d
      000351 F8               [12]  620 	mov	r0,a
      000352 86 82            [24]  621 	mov	dpl,@r0
      000354 08               [12]  622 	inc	r0
      000355 86 83            [24]  623 	mov	dph,@r0
      000357 12r00r00         [24]  624 	lcall	___sint2fs
      00035A AA 82            [24]  625 	mov	r2,dpl
      00035C AB 83            [24]  626 	mov	r3,dph
      00035E AE F0            [24]  627 	mov	r6,b
      000360 FF               [12]  628 	mov	r7,a
      000361 E5*00            [12]  629 	mov	a,_bp
      000363 24 19            [12]  630 	add	a,#0x19
      000365 F8               [12]  631 	mov	r0,a
      000366 A6 02            [24]  632 	mov	@r0,ar2
      000368 08               [12]  633 	inc	r0
      000369 A6 03            [24]  634 	mov	@r0,ar3
      00036B 08               [12]  635 	inc	r0
      00036C A6 06            [24]  636 	mov	@r0,ar6
      00036E 08               [12]  637 	inc	r0
      00036F A6 07            [24]  638 	mov	@r0,ar7
                                    639 ;	logf.c:248: return ((xn*C2+Rz)+xn*C1);
      000371 E5*00            [12]  640 	mov	a,_bp
      000373 24 19            [12]  641 	add	a,#0x19
      000375 F8               [12]  642 	mov	r0,a
      000376 E6               [12]  643 	mov	a,@r0
      000377 C0 E0            [24]  644 	push	acc
      000379 08               [12]  645 	inc	r0
      00037A E6               [12]  646 	mov	a,@r0
      00037B C0 E0            [24]  647 	push	acc
      00037D 08               [12]  648 	inc	r0
      00037E E6               [12]  649 	mov	a,@r0
      00037F C0 E0            [24]  650 	push	acc
      000381 08               [12]  651 	inc	r0
      000382 E6               [12]  652 	mov	a,@r0
      000383 C0 E0            [24]  653 	push	acc
      000385 90 80 83         [24]  654 	mov	dptr,#0x8083
      000388 75 F0 5E         [24]  655 	mov	b,#0x5E
      00038B 74 B9            [12]  656 	mov	a,#0xB9
      00038D 12r00r00         [24]  657 	lcall	___fsmul
      000390 AC 82            [24]  658 	mov	r4,dpl
      000392 AD 83            [24]  659 	mov	r5,dph
      000394 AE F0            [24]  660 	mov	r6,b
      000396 FF               [12]  661 	mov	r7,a
      000397 E5 81            [12]  662 	mov	a,sp
      000399 24 FC            [12]  663 	add	a,#0xfc
      00039B F5 81            [12]  664 	mov	sp,a
      00039D E5*00            [12]  665 	mov	a,_bp
      00039F 24 09            [12]  666 	add	a,#0x09
      0003A1 F8               [12]  667 	mov	r0,a
      0003A2 E6               [12]  668 	mov	a,@r0
      0003A3 C0 E0            [24]  669 	push	acc
      0003A5 08               [12]  670 	inc	r0
      0003A6 E6               [12]  671 	mov	a,@r0
      0003A7 C0 E0            [24]  672 	push	acc
      0003A9 08               [12]  673 	inc	r0
      0003AA E6               [12]  674 	mov	a,@r0
      0003AB C0 E0            [24]  675 	push	acc
      0003AD 08               [12]  676 	inc	r0
      0003AE E6               [12]  677 	mov	a,@r0
      0003AF C0 E0            [24]  678 	push	acc
      0003B1 8C 82            [24]  679 	mov	dpl,r4
      0003B3 8D 83            [24]  680 	mov	dph,r5
      0003B5 8E F0            [24]  681 	mov	b,r6
      0003B7 EF               [12]  682 	mov	a,r7
      0003B8 12r00r00         [24]  683 	lcall	___fsadd
      0003BB C8               [12]  684 	xch	a,r0
      0003BC E5*00            [12]  685 	mov	a,_bp
      0003BE 24 05            [12]  686 	add	a,#0x05
      0003C0 C8               [12]  687 	xch	a,r0
      0003C1 A6 82            [24]  688 	mov	@r0,dpl
      0003C3 08               [12]  689 	inc	r0
      0003C4 A6 83            [24]  690 	mov	@r0,dph
      0003C6 08               [12]  691 	inc	r0
      0003C7 A6 F0            [24]  692 	mov	@r0,b
      0003C9 08               [12]  693 	inc	r0
      0003CA F6               [12]  694 	mov	@r0,a
      0003CB E5 81            [12]  695 	mov	a,sp
      0003CD 24 FC            [12]  696 	add	a,#0xfc
      0003CF F5 81            [12]  697 	mov	sp,a
      0003D1 E5*00            [12]  698 	mov	a,_bp
      0003D3 24 19            [12]  699 	add	a,#0x19
      0003D5 F8               [12]  700 	mov	r0,a
      0003D6 E6               [12]  701 	mov	a,@r0
      0003D7 C0 E0            [24]  702 	push	acc
      0003D9 08               [12]  703 	inc	r0
      0003DA E6               [12]  704 	mov	a,@r0
      0003DB C0 E0            [24]  705 	push	acc
      0003DD 08               [12]  706 	inc	r0
      0003DE E6               [12]  707 	mov	a,@r0
      0003DF C0 E0            [24]  708 	push	acc
      0003E1 08               [12]  709 	inc	r0
      0003E2 E6               [12]  710 	mov	a,@r0
      0003E3 C0 E0            [24]  711 	push	acc
      0003E5 90 80 00         [24]  712 	mov	dptr,#0x8000
      0003E8 75 F0 31         [24]  713 	mov	b,#0x31
      0003EB 74 3F            [12]  714 	mov	a,#0x3F
      0003ED 12r00r00         [24]  715 	lcall	___fsmul
      0003F0 AA 82            [24]  716 	mov	r2,dpl
      0003F2 AB 83            [24]  717 	mov	r3,dph
      0003F4 AE F0            [24]  718 	mov	r6,b
      0003F6 FF               [12]  719 	mov	r7,a
      0003F7 E5 81            [12]  720 	mov	a,sp
      0003F9 24 FC            [12]  721 	add	a,#0xfc
      0003FB F5 81            [12]  722 	mov	sp,a
      0003FD C0 02            [24]  723 	push	ar2
      0003FF C0 03            [24]  724 	push	ar3
      000401 C0 06            [24]  725 	push	ar6
      000403 C0 07            [24]  726 	push	ar7
      000405 E5*00            [12]  727 	mov	a,_bp
      000407 24 05            [12]  728 	add	a,#0x05
      000409 F8               [12]  729 	mov	r0,a
      00040A 86 82            [24]  730 	mov	dpl,@r0
      00040C 08               [12]  731 	inc	r0
      00040D 86 83            [24]  732 	mov	dph,@r0
      00040F 08               [12]  733 	inc	r0
      000410 86 F0            [24]  734 	mov	b,@r0
      000412 08               [12]  735 	inc	r0
      000413 E6               [12]  736 	mov	a,@r0
      000414 12r00r00         [24]  737 	lcall	___fsadd
      000417 AC 82            [24]  738 	mov	r4,dpl
      000419 AD 83            [24]  739 	mov	r5,dph
      00041B AE F0            [24]  740 	mov	r6,b
      00041D FF               [12]  741 	mov	r7,a
      00041E E5 81            [12]  742 	mov	a,sp
      000420 24 FC            [12]  743 	add	a,#0xfc
      000422 F5 81            [12]  744 	mov	sp,a
      000424 8C 82            [24]  745 	mov	dpl,r4
      000426 8D 83            [24]  746 	mov	dph,r5
      000428 8E F0            [24]  747 	mov	b,r6
      00042A EF               [12]  748 	mov	a,r7
      00042B                        749 00106$:
      00042B 85*00 81         [24]  750 	mov	sp,_bp
      00042E D0*00            [24]  751 	pop	_bp
      000430 02r00r00         [24]  752 	ljmp	__sdcc_banked_ret
                                    753 	.area CSEG    (CODE)
                                    754 	.area CONST   (CODE)
                                    755 	.area XINIT   (CODE)
                                    756 	.area CABS    (ABS,CODE)
