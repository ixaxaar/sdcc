                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:14 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _strpbrk
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _strchr
                                     13 	.globl _strpbrk
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram 
                                     35 ;--------------------------------------------------------
                                     36 ;--------------------------------------------------------
                                     37 ; indirectly addressable internal ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area ISEG    (DATA)
                                     40 ;--------------------------------------------------------
                                     41 ; absolute internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area IABS    (ABS,DATA)
                                     44 	.area IABS    (ABS,DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; bit data
                                     47 ;--------------------------------------------------------
                                     48 	.area BSEG    (BIT)
                                     49 ;--------------------------------------------------------
                                     50 ; paged external ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area PSEG    (PAG,XDATA)
                                     53 ;--------------------------------------------------------
                                     54 ; external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area XSEG    (XDATA)
                                     57 ;--------------------------------------------------------
                                     58 ; absolute external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XABS    (ABS,XDATA)
                                     61 ;--------------------------------------------------------
                                     62 ; external initialized ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XISEG   (XDATA)
                                     65 	.area HOME    (CODE)
                                     66 	.area GSINIT0 (CODE)
                                     67 	.area GSINIT1 (CODE)
                                     68 	.area GSINIT2 (CODE)
                                     69 	.area GSINIT3 (CODE)
                                     70 	.area GSINIT4 (CODE)
                                     71 	.area GSINIT5 (CODE)
                                     72 	.area GSINIT  (CODE)
                                     73 	.area GSFINAL (CODE)
                                     74 	.area CSEG    (CODE)
                                     75 ;--------------------------------------------------------
                                     76 ; global & static initialisations
                                     77 ;--------------------------------------------------------
                                     78 	.area HOME    (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 	.area GSFINAL (CODE)
                                     81 	.area GSINIT  (CODE)
                                     82 ;--------------------------------------------------------
                                     83 ; Home
                                     84 ;--------------------------------------------------------
                                     85 	.area HOME    (CODE)
                                     86 	.area HOME    (CODE)
                                     87 ;--------------------------------------------------------
                                     88 ; code
                                     89 ;--------------------------------------------------------
                                     90 	.area CSEG    (CODE)
                                     91 ;------------------------------------------------------------
                                     92 ;Allocation info for local variables in function 'strpbrk'
                                     93 ;------------------------------------------------------------
                                     94 ;control                   Allocated to stack - _bp -6
                                     95 ;string                    Allocated to stack - _bp +1
                                     96 ;ret                       Allocated to stack - _bp +4
                                     97 ;ch                        Allocated to registers 
                                     98 ;p                         Allocated to registers r2 r3 r4 
                                     99 ;------------------------------------------------------------
                                    100 ;	_strpbrk.c:31: char * strpbrk (
                                    101 ;	-----------------------------------------
                                    102 ;	 function strpbrk
                                    103 ;	-----------------------------------------
      000000                        104 _strpbrk:
                           000007   105 	ar7 = 0x07
                           000006   106 	ar6 = 0x06
                           000005   107 	ar5 = 0x05
                           000004   108 	ar4 = 0x04
                           000003   109 	ar3 = 0x03
                           000002   110 	ar2 = 0x02
                           000001   111 	ar1 = 0x01
                           000000   112 	ar0 = 0x00
      000000 C0*00            [24]  113 	push	_bp
      000002 85 81*00         [24]  114 	mov	_bp,sp
      000005 C0 82            [24]  115 	push	dpl
      000007 C0 83            [24]  116 	push	dph
      000009 C0 F0            [24]  117 	push	b
      00000B 05 81            [12]  118 	inc	sp
      00000D 05 81            [12]  119 	inc	sp
      00000F 05 81            [12]  120 	inc	sp
                                    121 ;	_strpbrk.c:36: char *ret = NULL;
      000011 E5*00            [12]  122 	mov	a,_bp
      000013 24 04            [12]  123 	add	a,#0x04
      000015 F8               [12]  124 	mov	r0,a
      000016 E4               [12]  125 	clr	a
      000017 F6               [12]  126 	mov	@r0,a
      000018 08               [12]  127 	inc	r0
      000019 F6               [12]  128 	mov	@r0,a
      00001A 08               [12]  129 	inc	r0
      00001B 76 00            [12]  130 	mov	@r0,#0x00
                                    131 ;	_strpbrk.c:39: while (ch = *control) {
      00001D E5*00            [12]  132 	mov	a,_bp
      00001F 24 FA            [12]  133 	add	a,#0xfa
      000021 F8               [12]  134 	mov	r0,a
      000022 86 05            [24]  135 	mov	ar5,@r0
      000024 08               [12]  136 	inc	r0
      000025 86 06            [24]  137 	mov	ar6,@r0
      000027 08               [12]  138 	inc	r0
      000028 86 07            [24]  139 	mov	ar7,@r0
      00002A                        140 00105$:
      00002A 8D 82            [24]  141 	mov	dpl,r5
      00002C 8E 83            [24]  142 	mov	dph,r6
      00002E 8F F0            [24]  143 	mov	b,r7
      000030 12r00r00         [24]  144 	lcall	__gptrget
      000033 FC               [12]  145 	mov	r4,a
      000034 60 6D            [24]  146 	jz	00107$
                                    147 ;	_strpbrk.c:40: char * p = strchr(string, ch);
      000036 C0 07            [24]  148 	push	ar7
      000038 C0 06            [24]  149 	push	ar6
      00003A C0 05            [24]  150 	push	ar5
      00003C C0 04            [24]  151 	push	ar4
      00003E A8*00            [24]  152 	mov	r0,_bp
      000040 08               [12]  153 	inc	r0
      000041 86 82            [24]  154 	mov	dpl,@r0
      000043 08               [12]  155 	inc	r0
      000044 86 83            [24]  156 	mov	dph,@r0
      000046 08               [12]  157 	inc	r0
      000047 86 F0            [24]  158 	mov	b,@r0
      000049 78r00            [12]  159 	mov	r0,#_strchr
      00004B 79s00            [12]  160 	mov	r1,#(_strchr >> 8)
      00004D 7As00            [12]  161 	mov	r2,#(_strchr >> 16)
      00004F 12r00r00         [24]  162 	lcall	__sdcc_banked_call
      000052 AA 82            [24]  163 	mov	r2,dpl
      000054 AB 83            [24]  164 	mov	r3,dph
      000056 AC F0            [24]  165 	mov	r4,b
      000058 15 81            [12]  166 	dec	sp
      00005A D0 05            [24]  167 	pop	ar5
      00005C D0 06            [24]  168 	pop	ar6
      00005E D0 07            [24]  169 	pop	ar7
                                    170 ;	_strpbrk.c:41: if (p != NULL && (ret == NULL || p < ret)) {
      000060 EA               [12]  171 	mov	a,r2
      000061 4B               [12]  172 	orl	a,r3
      000062 60 38            [24]  173 	jz	00102$
      000064 E5*00            [12]  174 	mov	a,_bp
      000066 24 04            [12]  175 	add	a,#0x04
      000068 F8               [12]  176 	mov	r0,a
      000069 E6               [12]  177 	mov	a,@r0
      00006A 08               [12]  178 	inc	r0
      00006B 46               [12]  179 	orl	a,@r0
      00006C 60 21            [24]  180 	jz	00101$
      00006E E5*00            [12]  181 	mov	a,_bp
      000070 24 04            [12]  182 	add	a,#0x04
      000072 F8               [12]  183 	mov	r0,a
      000073 E6               [12]  184 	mov	a,@r0
      000074 C0 E0            [24]  185 	push	acc
      000076 08               [12]  186 	inc	r0
      000077 E6               [12]  187 	mov	a,@r0
      000078 C0 E0            [24]  188 	push	acc
      00007A 08               [12]  189 	inc	r0
      00007B E6               [12]  190 	mov	a,@r0
      00007C C0 E0            [24]  191 	push	acc
      00007E 8A 82            [24]  192 	mov	dpl,r2
      000080 8B 83            [24]  193 	mov	dph,r3
      000082 8C F0            [24]  194 	mov	b,r4
      000084 12r00r00         [24]  195 	lcall	___gptr_cmp
      000087 15 81            [12]  196 	dec	sp
      000089 15 81            [12]  197 	dec	sp
      00008B 15 81            [12]  198 	dec	sp
      00008D 50 0D            [24]  199 	jnc	00102$
      00008F                        200 00101$:
                                    201 ;	_strpbrk.c:42: ret = p;
      00008F E5*00            [12]  202 	mov	a,_bp
      000091 24 04            [12]  203 	add	a,#0x04
      000093 F8               [12]  204 	mov	r0,a
      000094 A6 02            [24]  205 	mov	@r0,ar2
      000096 08               [12]  206 	inc	r0
      000097 A6 03            [24]  207 	mov	@r0,ar3
      000099 08               [12]  208 	inc	r0
      00009A A6 04            [24]  209 	mov	@r0,ar4
      00009C                        210 00102$:
                                    211 ;	_strpbrk.c:44: control++;
      00009C 0D               [12]  212 	inc	r5
      00009D BD 00 8A         [24]  213 	cjne	r5,#0x00,00105$
      0000A0 0E               [12]  214 	inc	r6
      0000A1 80 87            [24]  215 	sjmp	00105$
      0000A3                        216 00107$:
                                    217 ;	_strpbrk.c:47: return (ret);
      0000A3 E5*00            [12]  218 	mov	a,_bp
      0000A5 24 04            [12]  219 	add	a,#0x04
      0000A7 F8               [12]  220 	mov	r0,a
      0000A8 86 82            [24]  221 	mov	dpl,@r0
      0000AA 08               [12]  222 	inc	r0
      0000AB 86 83            [24]  223 	mov	dph,@r0
      0000AD 08               [12]  224 	inc	r0
      0000AE 86 F0            [24]  225 	mov	b,@r0
      0000B0 85*00 81         [24]  226 	mov	sp,_bp
      0000B3 D0*00            [24]  227 	pop	_bp
      0000B5 02r00r00         [24]  228 	ljmp	__sdcc_banked_ret
                                    229 	.area CSEG    (CODE)
                                    230 	.area CONST   (CODE)
                                    231 	.area XINIT   (CODE)
                                    232 	.area CABS    (ABS,CODE)
