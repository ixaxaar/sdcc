                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                              4 ; This file was generated Wed Nov 27 12:28:24 2013
                              5 ;--------------------------------------------------------
                              6 	.module _atol
                              7 	.optsdcc -mtlcs90
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _atol
                             13 ;--------------------------------------------------------
                             14 ; ram data
                             15 ;--------------------------------------------------------
                             16 	.area _DATA
                             17 ;--------------------------------------------------------
                             18 ; ram data
                             19 ;--------------------------------------------------------
                             20 	.area _INITIALIZED
                             21 ;--------------------------------------------------------
                             22 ; absolute external ram data
                             23 ;--------------------------------------------------------
                             24 	.area _DABS (ABS)
                             25 ;--------------------------------------------------------
                             26 ; global & static initialisations
                             27 ;--------------------------------------------------------
                             28 	.area _HOME
                             29 	.area _GSINIT
                             30 	.area _GSFINAL
                             31 	.area _GSINIT
                             32 ;--------------------------------------------------------
                             33 ; Home
                             34 ;--------------------------------------------------------
                             35 	.area _HOME
                             36 	.area _HOME
                             37 ;--------------------------------------------------------
                             38 ; code
                             39 ;--------------------------------------------------------
                             40 	.area _CODE
                             41 ;../_atol.c:29: long atol(char * s)
                             42 ;	---------------------------------
                             43 ; Function atol
                             44 ; ---------------------------------
   0000                      45 _atol_start::
   0000                      46 _atol:
   0000 54            [ 4]   47 	push	ix
   0001 3C 00 00      [ 4]   48 	ld	ix,#0
   0004 FE 14         [ 7]   49 	add	ix,sp
   0006 16 F4 FF      [ 7]   50 	add	sp, #-12
                             51 ;../_atol.c:31: register long rv=0; 
   0009 FE 65         [ 7]   52 	xor	a, a
   000B F4 F4 26      [17]   53 	ld	-12 (ix),a
   000E F4 F5 26      [17]   54 	ld	-11 (ix),a
   0011 F4 F6 26      [17]   55 	ld	-10 (ix),a
   0014 F4 F7 26      [17]   56 	ld	-9 (ix),a
                             57 ;../_atol.c:35: while (*s) {
   0017 F2 10 4A      [10]   58 	ld	hl, 16 (sp)
   001A                      59 00107$:
   001A E2 2A         [10]   60 	ld	d,(hl)
                             61 ;../_atol.c:38: if (*s == '-' || *s == '+') 
   001C 22            [16]   62 	ld	a,d
   001D 6A 2D         [ 4]   63 	sub	a, #0x2D
   001F CE 04         [ 7]   64 	jr	NZ,00168$
   0021 36 01         [10]   65 	ld	a,#0x01
   0023 C8 02         [11]   66 	jr	00169$
   0025                      67 00168$:
   0025 FE 65         [ 7]   68 	xor	a,a
   0027                      69 00169$:
   0027 28            [12]   70 	ld	b,a
   0028 22            [16]   71 	ld	a,d
   0029 6A 2B         [ 4]   72 	sub	a, #0x2B
   002B CE 04         [ 7]   73 	jr	NZ,00170$
   002D 36 01         [10]   74 	ld	a,#0x01
   002F C8 02         [11]   75 	jr	00171$
   0031                      76 00170$:
   0031 FE 65         [ 7]   77 	xor	a,a
   0033                      78 00171$:
   0033 F4 FF 26      [17]   79 	ld	-1 (ix),a
                             80 ;../_atol.c:35: while (*s) {
   0036 22            [16]   81 	ld	a,d
   0037 FE 66         [ 7]   82 	or	a, a
   0039 C6 25         [ 7]   83 	jr	Z,00133$
                             84 ;../_atol.c:36: if (*s <= '9' && *s >= '0')
   003B 36 39         [10]   85 	ld	a,#0x39
   003D FA 62         [10]   86 	sub	a, d
   003F EBr45r00 CC   [ 4]   87 	jp	PO, 00172$
   0043 6D 80         [ 4]   88 	xor	a, #0x80
   0045                      89 00172$:
   0045 EBr50r00 C5   [ 4]   90 	jp	M,00102$
   0049 22            [16]   91 	ld	a,d
   004A 6D 80         [ 4]   92 	xor	a, #0x80
   004C 6A B0         [ 4]   93 	sub	a, #0xB0
   004E CF 10         [11]   94 	jr	NC,00133$
                             95 ;../_atol.c:37: break;
   0050                      96 00102$:
                             97 ;../_atol.c:38: if (*s == '-' || *s == '+') 
   0050 20            [12]   98 	ld	a,b
   0051 FE 66         [ 7]   99 	or	a, a
   0053 CE 0B         [ 7]  100 	jr	NZ,00133$
   0055 F0 FF 2E      [11]  101 	ld	a,-1 (ix)
   0058 FE 66         [ 7]  102 	or	a, a
   005A CE 04         [ 7]  103 	jr	NZ,00133$
                            104 ;../_atol.c:40: s++;
   005C 92            [ 4]  105 	inc	hl
   005D 1Ar1Ar00      [ 7]  106 	jp	00107$
   0060                     107 00133$:
   0060 F6 10 42      [ 7]  108 	ld	16 (sp), hl
                            109 ;../_atol.c:43: sign = (*s == '-');
   0063 F4 FE 20      [17]  110 	ld	-2 (ix),b
                            111 ;../_atol.c:44: if (*s == '-' || *s == '+') s++;
   0066 20            [12]  112 	ld	a,b
   0067 FE 66         [ 7]  113 	or	a, a
   0069 CE 07         [ 7]  114 	jr	NZ,00110$
   006B F0 FF 2E      [11]  115 	ld	a,-1 (ix)
   006E FE 66         [ 7]  116 	or	a, a
   0070 C6 04         [ 7]  117 	jr	Z,00131$
   0072                     118 00110$:
   0072 92            [ 4]  119 	inc	hl
   0073 F6 10 42      [ 7]  120 	ld	16 (sp), hl
                            121 ;../_atol.c:46: while (*s && *s >= '0' && *s <= '9') {
   0076                     122 00131$:
   0076 F0 04 2E      [11]  123 	ld	a,4 (ix)
   0079 F4 FC 26      [17]  124 	ld	-4 (ix),a
   007C F0 05 2E      [11]  125 	ld	a,5 (ix)
   007F F4 FD 26      [17]  126 	ld	-3 (ix),a
   0082                     127 00115$:
   0082 F2 08 4A      [10]  128 	ld	hl, 8 (sp)
   0085 E2 29         [10]  129 	ld	c,(hl)
   0087 21            [10]  130 	ld	a,c
   0088 FE 66         [ 7]  131 	or	a, a
   008A EBr07r01 C6   [ 4]  132 	jp	Z,00117$
   008E 21            [10]  133 	ld	a,c
   008F 6D 80         [ 4]  134 	xor	a, #0x80
   0091 6A B0         [ 4]  135 	sub	a, #0xB0
   0093 EBr07r01 C7   [ 4]  136 	jp	C,00117$
   0097 36 39         [10]  137 	ld	a,#0x39
   0099 F9 62         [ 6]  138 	sub	a, c
   009B EBrA1r00 CC   [ 4]  139 	jp	PO, 00173$
   009F 6D 80         [ 4]  140 	xor	a, #0x80
   00A1                     141 00173$:
   00A1 EBr07r01 C5   [ 4]  142 	jp	M,00117$
                            143 ;../_atol.c:47: rv = (rv * 10) + (*s - '0');
   00A5 50            [ 4]  144 	push	bc
   00A6 F2 04 4A      [10]  145 	ld	hl, 4 (sp)
   00A9 52            [ 4]  146 	push	hl
   00AA F2 04 4A      [10]  147 	ld	hl, 4 (sp)
   00AD 52            [ 4]  148 	push	hl
   00AE 3A 00 00      [13]  149 	ld	hl,#0x0000
   00B1 52            [ 4]  150 	push	hl
   00B2 3A 0A 00      [13]  151 	ld	hl,#0x000A
   00B5 52            [ 4]  152 	push	hl
   00B6 1Cr00r00      [ 4]  153 	call	__mullong_rrx_s
   00B9 16 08 00      [ 7]  154 	add	sp, #8
   00BC 58            [ 4]  155 	pop	bc
   00BD 21            [10]  156 	ld	a,c
   00BE A2            [ 4]  157 	rla
   00BF FE 63         [ 7]  158 	sbc	a, a
   00C1 28            [12]  159 	ld	b,a
   00C2 21            [10]  160 	ld	a,c
   00C3 68 D0         [ 4]  161 	add	a,#0xD0
   00C5 29            [11]  162 	ld	c,a
   00C6 20            [12]  163 	ld	a,b
   00C7 69 FF         [ 4]  164 	adc	a,#0xFF
   00C9 28            [12]  165 	ld	b,a
   00CA F4 F8 21      [17]  166 	ld	-8 (ix),c
   00CD F4 F9 20      [17]  167 	ld	-7 (ix),b
   00D0 20            [12]  168 	ld	a,b
   00D1 A2            [ 4]  169 	rla
   00D2 FE 63         [ 7]  170 	sbc	a, a
   00D4 F4 FA 26      [17]  171 	ld	-6 (ix),a
   00D7 F4 FB 26      [17]  172 	ld	-5 (ix),a
   00DA 25            [ 4]  173 	ld	a,l
   00DB F0 F8 60      [11]  174 	add	a, -8 (ix)
   00DE 2D            [ 4]  175 	ld	l,a
   00DF 24            [ 4]  176 	ld	a,h
   00E0 F0 F9 61      [11]  177 	adc	a, -7 (ix)
   00E3 2C            [ 4]  178 	ld	h,a
   00E4 23            [ 6]  179 	ld	a,e
   00E5 F0 FA 61      [11]  180 	adc	a, -6 (ix)
   00E8 2B            [ 6]  181 	ld	e,a
   00E9 22            [16]  182 	ld	a,d
   00EA F0 FB 61      [11]  183 	adc	a, -5 (ix)
   00ED 2A            [16]  184 	ld	d,a
   00EE F4 F4 25      [17]  185 	ld	-12 (ix),l
   00F1 F4 F5 24      [17]  186 	ld	-11 (ix),h
   00F4 F4 F6 23      [17]  187 	ld	-10 (ix),e
   00F7 F4 F7 22      [17]  188 	ld	-9 (ix),d
                            189 ;../_atol.c:48: s++;
   00FA F0 FC 87      [11]  190 	inc	-4 (ix)
   00FD EBr82r00 CE   [ 4]  191 	jp	NZ,00115$
   0101 F0 FD 87      [11]  192 	inc	-3 (ix)
   0104 1Ar82r00      [ 7]  193 	jp	00115$
   0107                     194 00117$:
                            195 ;../_atol.c:51: return (sign ? -rv : rv);
   0107 F0 FE 2E      [11]  196 	ld	a,-2 (ix)
   010A FE 66         [ 7]  197 	or	a, a
   010C C6 1A         [ 7]  198 	jr	Z,00120$
   010E FE 65         [ 7]  199 	xor	a, a
   0110 F0 F4 62      [11]  200 	sub	a, -12 (ix)
   0113 2D            [ 4]  201 	ld	l,a
   0114 36 00         [10]  202 	ld	a, #0x00
   0116 F0 F5 63      [11]  203 	sbc	a, -11 (ix)
   0119 2C            [ 4]  204 	ld	h,a
   011A 36 00         [10]  205 	ld	a, #0x00
   011C F0 F6 63      [11]  206 	sbc	a, -10 (ix)
   011F 2B            [ 6]  207 	ld	e,a
   0120 36 00         [10]  208 	ld	a, #0x00
   0122 F0 F7 63      [11]  209 	sbc	a, -9 (ix)
   0125 2A            [16]  210 	ld	d,a
   0126 C8 0C         [11]  211 	jr	00121$
   0128                     212 00120$:
   0128 F0 F4 2D      [11]  213 	ld	l,-12 (ix)
   012B F0 F5 2C      [11]  214 	ld	h,-11 (ix)
   012E F0 F6 2B      [11]  215 	ld	e,-10 (ix)
   0131 F0 F7 2A      [11]  216 	ld	d,-9 (ix)
   0134                     217 00121$:
   0134 FC 3E         [17]  218 	ld	sp, ix
   0136 5C            [ 4]  219 	pop	ix
   0137 1E            [ 7]  220 	ret
   0138                     221 _atol_end::
                            222 	.area _CODE
                            223 	.area _INITIALIZER
                            224 	.area _CABS (ABS)
