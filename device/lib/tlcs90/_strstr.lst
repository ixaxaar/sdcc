                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                              4 ; This file was generated Wed Nov 27 12:28:25 2013
                              5 ;--------------------------------------------------------
                              6 	.module _strstr
                              7 	.optsdcc -mtlcs90
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _strstr
                             13 ;--------------------------------------------------------
                             14 ; ram data
                             15 ;--------------------------------------------------------
                             16 	.area _DATA
                             17 ;--------------------------------------------------------
                             18 ; ram data
                             19 ;--------------------------------------------------------
                             20 	.area _INITIALIZED
                             21 ;--------------------------------------------------------
                             22 ; absolute external ram data
                             23 ;--------------------------------------------------------
                             24 	.area _DABS (ABS)
                             25 ;--------------------------------------------------------
                             26 ; global & static initialisations
                             27 ;--------------------------------------------------------
                             28 	.area _HOME
                             29 	.area _GSINIT
                             30 	.area _GSFINAL
                             31 	.area _GSINIT
                             32 ;--------------------------------------------------------
                             33 ; Home
                             34 ;--------------------------------------------------------
                             35 	.area _HOME
                             36 	.area _HOME
                             37 ;--------------------------------------------------------
                             38 ; code
                             39 ;--------------------------------------------------------
                             40 	.area _CODE
                             41 ;../_strstr.c:31: char * strstr (
                             42 ;	---------------------------------
                             43 ; Function strstr
                             44 ; ---------------------------------
   0000                      45 _strstr_start::
   0000                      46 _strstr:
   0000 54            [ 4]   47 	push	ix
   0001 3C 00 00      [ 4]   48 	ld	ix,#0
   0004 FE 14         [ 7]   49 	add	ix,sp
   0006 16 F2 FF      [ 7]   50 	add	sp, #-14
                             51 ;../_strstr.c:36: const char * cp = str1;
   0009 F0 04 2E      [11]   52 	ld	a,4 (ix)
   000C F4 F6 26      [17]   53 	ld	-10 (ix),a
   000F F0 05 2E      [11]   54 	ld	a,5 (ix)
   0012 F4 F7 26      [17]   55 	ld	-9 (ix),a
                             56 ;../_strstr.c:40: if ( !*str2 )
   0015 F0 06 2E      [11]   57 	ld	a,6 (ix)
   0018 F4 F2 26      [17]   58 	ld	-14 (ix),a
   001B F0 07 2E      [11]   59 	ld	a,7 (ix)
   001E F4 F3 26      [17]   60 	ld	-13 (ix),a
   0021 5A            [ 4]   61 	pop	hl
   0022 52            [ 4]   62 	push	hl
   0023 E2 2E         [10]   63 	ld	a,(hl)
   0025 F4 FD 26      [17]   64 	ld	-3 (ix), a
   0028 FE 66         [ 7]   65 	or	a, a
   002A CE 06         [ 7]   66 	jr	NZ,00122$
                             67 ;../_strstr.c:41: return str1;
   002C F2 04 4A      [10]   68 	ld	hl, 4 (sp)
   002F 1ArE9r00      [ 7]   69 	jp	00113$
                             70 ;../_strstr.c:43: while (*cp)
   0032                      71 00122$:
   0032 F0 F6 2E      [11]   72 	ld	a,-10 (ix)
   0035 F4 F4 26      [17]   73 	ld	-12 (ix),a
   0038 F0 F7 2E      [11]   74 	ld	a,-9 (ix)
   003B F4 F5 26      [17]   75 	ld	-11 (ix),a
   003E                      76 00110$:
   003E F2 02 4A      [10]   77 	ld	hl, 2 (sp)
   0041 E2 2E         [10]   78 	ld	a,(hl)
   0043 F4 FD 26      [17]   79 	ld	-3 (ix), a
   0046 FE 66         [ 7]   80 	or	a, a
   0048 EBrE6r00 C6   [ 4]   81 	jp	Z,00112$
                             82 ;../_strstr.c:46: s2 = str2;
   004C F0 F2 2E      [11]   83 	ld	a,-14 (ix)
   004F F4 FE 26      [17]   84 	ld	-2 (ix),a
   0052 F0 F3 2E      [11]   85 	ld	a,-13 (ix)
   0055 F4 FF 26      [17]   86 	ld	-1 (ix),a
                             87 ;../_strstr.c:48: while ( *s1 && *s2 && !(*s1-*s2) )
   0058 F0 F4 2E      [11]   88 	ld	a,-12 (ix)
   005B F4 FB 26      [17]   89 	ld	-5 (ix),a
   005E F0 F5 2E      [11]   90 	ld	a,-11 (ix)
   0061 F4 FC 26      [17]   91 	ld	-4 (ix),a
   0064                      92 00105$:
   0064 F2 09 4A      [10]   93 	ld	hl, 9 (sp)
   0067 E2 2E         [10]   94 	ld	a,(hl)
   0069 F4 FD 26      [17]   95 	ld	-3 (ix),a
   006C F2 0C 4A      [10]   96 	ld	hl, 12 (sp)
   006F E2 2E         [10]   97 	ld	a,(hl)
   0071 F4 FA 26      [17]   98 	ld	-6 (ix),a
   0074 F0 FD 2E      [11]   99 	ld	a,-3 (ix)
   0077 FE 66         [ 7]  100 	or	a, a
   0079 EBrC3r00 C6   [ 4]  101 	jp	Z,00107$
   007D F0 FA 2E      [11]  102 	ld	a,-6 (ix)
   0080 FE 66         [ 7]  103 	or	a, a
   0082 EBrC3r00 C6   [ 4]  104 	jp	Z,00107$
   0086 F0 FD 2E      [11]  105 	ld	a,-3 (ix)
   0089 F4 F8 26      [17]  106 	ld	-8 (ix),a
   008C F0 FD 2E      [11]  107 	ld	a,-3 (ix)
   008F A2            [ 4]  108 	rla
   0090 FE 63         [ 7]  109 	sbc	a, a
   0092 F4 F9 26      [17]  110 	ld	-7 (ix),a
   0095 F0 FA 2D      [11]  111 	ld	l,-6 (ix)
   0098 F0 FA 2E      [11]  112 	ld	a,-6 (ix)
   009B A2            [ 4]  113 	rla
   009C FE 63         [ 7]  114 	sbc	a, a
   009E 2C            [ 4]  115 	ld	h,a
   009F F0 F8 2E      [11]  116 	ld	a,-8 (ix)
   00A2 FD 62               117 	sub	a, l
   00A4 2D            [ 4]  118 	ld	l,a
   00A5 F0 F9 2E      [11]  119 	ld	a,-7 (ix)
   00A8 FC 63         [17]  120 	sbc	a, h
   00AA FD 66         [19]  121 	or	a,l
   00AC CE 15         [ 7]  122 	jr	NZ,00107$
                            123 ;../_strstr.c:49: s1++, s2++;
   00AE F0 FB 87      [11]  124 	inc	-5 (ix)
   00B1 CE 03         [ 7]  125 	jr	NZ,00148$
   00B3 F0 FC 87      [11]  126 	inc	-4 (ix)
   00B6                     127 00148$:
   00B6 F0 FE 87      [11]  128 	inc	-2 (ix)
   00B9 EBr64r00 CE   [ 4]  129 	jp	NZ,00105$
   00BD F0 FF 87      [11]  130 	inc	-1 (ix)
   00C0 1Ar64r00      [ 7]  131 	jp	00105$
   00C3                     132 00107$:
                            133 ;../_strstr.c:51: if (!*s2)
   00C3 F0 FA 2E      [11]  134 	ld	a,-6 (ix)
   00C6 FE 66         [ 7]  135 	or	a, a
   00C8 CE 05         [ 7]  136 	jr	NZ,00109$
                            137 ;../_strstr.c:52: return( (char*)cp );
   00CA F2 04 4A      [10]  138 	ld	hl, 4 (sp)
   00CD C8 1A         [11]  139 	jr	00113$
   00CF                     140 00109$:
                            141 ;../_strstr.c:54: cp++;
   00CF F0 F4 87      [11]  142 	inc	-12 (ix)
   00D2 CE 03         [ 7]  143 	jr	NZ,00150$
   00D4 F0 F5 87      [11]  144 	inc	-11 (ix)
   00D7                     145 00150$:
   00D7 F0 F4 2E      [11]  146 	ld	a,-12 (ix)
   00DA F4 F6 26      [17]  147 	ld	-10 (ix),a
   00DD F0 F5 2E      [11]  148 	ld	a,-11 (ix)
   00E0 F4 F7 26      [17]  149 	ld	-9 (ix),a
   00E3 1Ar3Er00      [ 7]  150 	jp	00110$
   00E6                     151 00112$:
                            152 ;../_strstr.c:57: return (NULL) ;
   00E6 3A 00 00      [13]  153 	ld	hl,#0x0000
   00E9                     154 00113$:
   00E9 FC 3E         [17]  155 	ld	sp, ix
   00EB 5C            [ 4]  156 	pop	ix
   00EC 1E            [ 7]  157 	ret
   00ED                     158 _strstr_end::
                            159 	.area _CODE
                            160 	.area _INITIALIZER
                            161 	.area _CABS (ABS)
