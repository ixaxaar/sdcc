                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                              4 ; This file was generated Wed Nov 27 12:28:24 2013
                              5 ;--------------------------------------------------------
                              6 	.module _strpbrk
                              7 	.optsdcc -mtlcs90
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _strchr
                             13 	.globl _strpbrk
                             14 ;--------------------------------------------------------
                             15 ; ram data
                             16 ;--------------------------------------------------------
                             17 	.area _DATA
                             18 ;--------------------------------------------------------
                             19 ; ram data
                             20 ;--------------------------------------------------------
                             21 	.area _INITIALIZED
                             22 ;--------------------------------------------------------
                             23 ; absolute external ram data
                             24 ;--------------------------------------------------------
                             25 	.area _DABS (ABS)
                             26 ;--------------------------------------------------------
                             27 ; global & static initialisations
                             28 ;--------------------------------------------------------
                             29 	.area _HOME
                             30 	.area _GSINIT
                             31 	.area _GSFINAL
                             32 	.area _GSINIT
                             33 ;--------------------------------------------------------
                             34 ; Home
                             35 ;--------------------------------------------------------
                             36 	.area _HOME
                             37 	.area _HOME
                             38 ;--------------------------------------------------------
                             39 ; code
                             40 ;--------------------------------------------------------
                             41 	.area _CODE
                             42 ;../_strpbrk.c:31: char * strpbrk (
                             43 ;	---------------------------------
                             44 ; Function strpbrk
                             45 ; ---------------------------------
   0000                      46 _strpbrk_start::
   0000                      47 _strpbrk:
   0000 54            [ 4]   48 	push	ix
   0001 3C 00 00      [ 4]   49 	ld	ix,#0
   0004 FE 14         [ 7]   50 	add	ix,sp
                             51 ;../_strpbrk.c:36: char *ret = NULL;
   0006 38 00 00      [12]   52 	ld	bc,#0x0000
                             53 ;../_strpbrk.c:39: while (ch = *control) {
   0009 F2 06 4A      [10]   54 	ld	hl, 6 (sp)
   000C                      55 00105$:
   000C E2 2E         [10]   56 	ld	a, (hl)
                             57 ;../_strpbrk.c:40: char * p = strchr(string, ch);
   000E FE 66         [ 7]   58 	or	a,a
   0010 EBr44r00 C6   [ 4]   59 	jp	Z,00107$
   0014 2B            [ 6]   60 	ld	e,a
   0015 A2            [ 4]   61 	rla
   0016 FE 63         [ 7]   62 	sbc	a, a
   0018 2A            [16]   63 	ld	d,a
   0019 52            [ 4]   64 	push	hl
   001A 50            [ 4]   65 	push	bc
   001B 51            [ 4]   66 	push	de
   001C 08            [ 4]   67 	ex	de, hl
   001D F2 0A 4A      [10]   68 	ld	hl, 10 (sp)
   0020 52            [ 4]   69 	push	hl
   0021 1Cr00r00      [ 4]   70 	call	_strchr
   0024 16 04 00      [ 7]   71 	add	sp, #4
   0027 08            [ 4]   72 	ex	de,hl
   0028 58            [ 4]   73 	pop	bc
   0029 5A            [ 4]   74 	pop	hl
                             75 ;../_strpbrk.c:41: if (p != NULL && (ret == NULL || p < ret)) {
   002A 22            [16]   76 	ld	a,d
   002B FB 66         [ 4]   77 	or	a,e
   002D C6 11         [ 7]   78 	jr	Z,00102$
   002F 20            [12]   79 	ld	a,b
   0030 F9 66         [ 6]   80 	or	a,c
   0032 C6 08         [ 7]   81 	jr	Z,00101$
   0034 23            [ 6]   82 	ld	a,e
   0035 F9 62         [ 6]   83 	sub	a, c
   0037 22            [16]   84 	ld	a,d
   0038 F8 63         [11]   85 	sbc	a, b
   003A CF 04         [11]   86 	jr	NC,00102$
   003C                      87 00101$:
                             88 ;../_strpbrk.c:42: ret = p;
   003C FB 31         [ 4]   89 	ld	c, e
   003E FA 30         [10]   90 	ld	b, d
   0040                      91 00102$:
                             92 ;../_strpbrk.c:44: control++;
   0040 92            [ 4]   93 	inc	hl
   0041 1Ar0Cr00      [ 7]   94 	jp	00105$
   0044                      95 00107$:
                             96 ;../_strpbrk.c:47: return (ret);
   0044 F9 35         [ 6]   97 	ld	l, c
   0046 F8 34         [11]   98 	ld	h, b
   0048 5C            [ 4]   99 	pop	ix
   0049 1E            [ 7]  100 	ret
   004A                     101 _strpbrk_end::
                            102 	.area _CODE
                            103 	.area _INITIALIZER
                            104 	.area _CABS (ABS)
