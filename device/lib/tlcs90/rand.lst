                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                              4 ; This file was generated Wed Nov 27 12:28:24 2013
                              5 ;--------------------------------------------------------
                              6 	.module rand
                              7 	.optsdcc -mtlcs90
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _rand
                             13 	.globl _srand
                             14 ;--------------------------------------------------------
                             15 ; ram data
                             16 ;--------------------------------------------------------
                             17 	.area _DATA
                             18 ;--------------------------------------------------------
                             19 ; ram data
                             20 ;--------------------------------------------------------
                             21 	.area _INITIALIZED
   0000                      22 _next:
   0000                      23 	.ds 4
                             24 ;--------------------------------------------------------
                             25 ; absolute external ram data
                             26 ;--------------------------------------------------------
                             27 	.area _DABS (ABS)
                             28 ;--------------------------------------------------------
                             29 ; global & static initialisations
                             30 ;--------------------------------------------------------
                             31 	.area _HOME
                             32 	.area _GSINIT
                             33 	.area _GSFINAL
                             34 	.area _GSINIT
                             35 ;--------------------------------------------------------
                             36 ; Home
                             37 ;--------------------------------------------------------
                             38 	.area _HOME
                             39 	.area _HOME
                             40 ;--------------------------------------------------------
                             41 ; code
                             42 ;--------------------------------------------------------
                             43 	.area _CODE
                             44 ;../rand.c:33: int rand(void)
                             45 ;	---------------------------------
                             46 ; Function rand
                             47 ; ---------------------------------
   0000                      48 _rand_start::
   0000                      49 _rand:
                             50 ;../rand.c:35: next = next * 1103515245UL + 12345;
   0000 E3r02r00 4A   [19]   51 	ld	hl,(_next + 2)
   0004 52            [ 4]   52 	push	hl
   0005 E3r00r00 4A   [19]   53 	ld	hl,(_next)
   0009 52            [ 4]   54 	push	hl
   000A 3A C6 41      [13]   55 	ld	hl,#0x41C6
   000D 52            [ 4]   56 	push	hl
   000E 3A 6D 4E      [13]   57 	ld	hl,#0x4E6D
   0011 52            [ 4]   58 	push	hl
   0012 1Cr00r00      [ 4]   59 	call	__mullong_rrx_s
   0015 16 08 00      [ 7]   60 	add	sp, #8
   0018 FD 31                61 	ld	c,l
   001A FC 30         [17]   62 	ld	b,h
   001C 21            [10]   63 	ld	a,c
   001D 3Ar00r00      [13]   64 	ld	hl,#_next
   0020 68 39         [ 4]   65 	add	a, #0x39
   0022 EA 26         [10]   66 	ld	(hl),a
   0024 20            [12]   67 	ld	a,b
   0025 69 30         [ 4]   68 	adc	a, #0x30
   0027 92            [ 4]   69 	inc	hl
   0028 EA 26         [10]   70 	ld	(hl),a
   002A 23            [ 6]   71 	ld	a,e
   002B 69 00         [ 4]   72 	adc	a, #0x00
   002D 92            [ 4]   73 	inc	hl
   002E EA 26         [10]   74 	ld	(hl),a
   0030 22            [16]   75 	ld	a,d
   0031 69 00         [ 4]   76 	adc	a, #0x00
   0033 92            [ 4]   77 	inc	hl
   0034 EA 26         [10]   78 	ld	(hl),a
                             79 ;../rand.c:36: return (unsigned int)(next/65536) % (RAND_MAX + 1U);
   0036 56            [ 7]   80 	push	af
   0037 3Dr00r00      [ 4]   81 	ld	iy,#_next
   003A E5 2D         [11]   82 	ld	l,0 (iy)
   003C 3Dr00r00      [ 4]   83 	ld	iy,#_next
   003F F1 01 2C      [10]   84 	ld	h,1 (iy)
   0042 3Dr00r00      [ 4]   85 	ld	iy,#_next
   0045 F1 02 2B      [10]   86 	ld	e,2 (iy)
   0048 3Dr00r00      [ 4]   87 	ld	iy,#_next
   004B F1 03 2A      [10]   88 	ld	d,3 (iy)
   004E 5E            [ 7]   89 	pop	af
   004F 30 10         [12]   90 	ld	b,#0x10
   0051                      91 00103$:
   0051 FA A7         [10]   92 	srl	d
   0053 FB A3         [ 4]   93 	rr	e
   0055 FC A3         [17]   94 	rr	h
   0057 FD A3                95 	rr	l
   0059 18 F6         [12]   96 	djnz	00103$
   005B FC B7         [17]   97 	res	7, h
   005D 1E            [ 7]   98 	ret
   005E                      99 _rand_end::
                            100 ;../rand.c:39: void srand(unsigned int seed)
                            101 ;	---------------------------------
                            102 ; Function srand
                            103 ; ---------------------------------
   005E                     104 _srand_start::
   005E                     105 _srand:
                            106 ;../rand.c:41: next = seed;
   005E 3A 02 00      [13]  107 	ld	hl, #2+0
   0061 FE 70         [ 7]  108 	add	hl, sp
   0063 E2 2E         [10]  109 	ld	a, (hl)
   0065 EBr00r00 26   [ 4]  110 	ld	(#_next + 0),a
   0069 3A 03 00      [13]  111 	ld	hl, #2+1
   006C FE 70         [ 7]  112 	add	hl, sp
   006E E2 2E         [10]  113 	ld	a, (hl)
   0070 EBr01r00 26   [ 4]  114 	ld	(#_next + 1),a
   0074 3Ar02r00      [13]  115 	ld	hl,#_next + 2
   0077 EA 37 00      [10]  116 	ld	(hl), #0x00
   007A 3Ar03r00      [13]  117 	ld	hl,#_next + 3
   007D EA 37 00      [10]  118 	ld	(hl), #0x00
   0080 1E            [ 7]  119 	ret
   0081                     120 _srand_end::
                            121 	.area _CODE
                            122 	.area _INITIALIZER
   0000                     123 __xinit__next:
   0000 01 00 00 00         124 	.byte #0x01,#0x00,#0x00,#0x00	; 1
                            125 	.area _CABS (ABS)
