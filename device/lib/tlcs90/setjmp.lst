                              1 ;--------------------------------------------------------------------------
                              2 ;  setjmp.s
                              3 ;
                              4 ;  Copyright (C) 2011, Philipp Klaus Krause
                              5 ;
                              6 ;  This library is free software; you can redistribute it and/or modify it
                              7 ;  under the terms of the GNU General Public License as published by the
                              8 ;  Free Software Foundation; either version 2, or (at your option) any
                              9 ;  later version.
                             10 ;
                             11 ;  This library is distributed in the hope that it will be useful,
                             12 ;  but WITHOUT ANY WARRANTY; without even the implied warranty of
                             13 ;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
                             14 ;  GNU General Public License for more details.
                             15 ;
                             16 ;  You should have received a copy of the GNU General Public License 
                             17 ;  along with this library; see the file COPYING. If not, write to the
                             18 ;  Free Software Foundation, 51 Franklin Street, Fifth Floor, Boston,
                             19 ;   MA 02110-1301, USA.
                             20 ;
                             21 ;  As a special exception, if you link this library with other files,
                             22 ;  some of which are compiled with SDCC, to produce an executable,
                             23 ;  this library does not by itself cause the resulting executable to
                             24 ;  be covered by the GNU General Public License. This exception does
                             25 ;  not however invalidate any other reasons why the executable file
                             26 ;   might be covered by the GNU General Public License.
                             27 ;--------------------------------------------------------------------------
                             28 
                             29 	.area   _CODE
                             30 
                             31 	.globl ___setjmp
                             32 
   0000                      33 ___setjmp:
   0000 5A            [ 4]   34 	pop	hl
   0001 5D            [ 4]   35 	pop	iy
   0002 56            [ 7]   36 	push	af
   0003 52            [ 4]   37 	push	hl
                             38 
                             39 	; Store return address.
   0004 ED 25                40 	ld	0(iy), l
   0006 F5 01 24      [11]   41 	ld	1(iy), h
                             42 
                             43 	; Store stack pointer.
   0009 FE 65         [ 7]   44 	xor	a, a
   000B 2D            [ 4]   45 	ld	l, a
   000C 2C            [ 4]   46 	ld	h, a
   000D FE 70         [ 7]   47 	add	hl, sp
   000F F5 02 25      [11]   48 	ld	2(iy), l
   0012 F5 03 24      [11]   49 	ld	3(iy), h
                             50 
                             51 	; Store frame pointer.
   0015 54            [ 4]   52 	push	ix
   0016 5A            [ 4]   53 	pop	hl
   0017 F5 04 25      [11]   54 	ld	4(iy), l
   001A F5 05 24      [11]   55 	ld	5(iy), h
                             56 
                             57 	; Return 0.
   001D 2D            [ 4]   58 	ld	l, a
   001E 2C            [ 4]   59 	ld	h, a
   001F 1E            [ 7]   60 	ret
                             61 
                             62 .globl _longjmp
                             63 
   0020                      64 _longjmp:
   0020 5E            [ 7]   65 	pop	af
   0021 5D            [ 4]   66 	pop	iy
   0022 59            [ 4]   67 	pop	de
                             68 
                             69 	; Ensure that return value is non-zero.
   0023 23            [ 6]   70 	ld	a, e
   0024 FA 66         [10]   71 	or	a, d
   0026 CE 03         [ 7]   72 	jr	NZ, jump
   0028 39 01 00      [11]   73 	ld	de, #1
   002B                      74 jump:
                             75 
                             76 	; Restore frame pointer.
   002B F1 04 2D      [10]   77 	ld	l, 4(iy)
   002E F1 05 2C      [10]   78 	ld	h, 5(iy)
   0031 52            [ 4]   79 	push	hl
   0032 5C            [ 4]   80 	pop	ix
                             81 
                             82 	; Adjust stack pointer.
   0033 F1 02 2D      [10]   83 	ld	l, 2(iy)
   0036 F1 03 2C      [10]   84 	ld	h, 3(iy)
   0039 4E            [ 7]   85 	ld	sp, hl
   003A 5A            [ 4]   86 	pop	hl
                             87 
                             88 	; Move return value into hl.
   003B 08            [ 4]   89 	ex	de, hl
                             90 
                             91 	; Jump.
   003C E5 29         [11]   92 	ld	c, 0(iy)
   003E F1 01 28      [10]   93 	ld	b, 1(iy)
   0041 50            [ 4]   94 	push	bc
   0042 1E            [ 7]   95 	ret
