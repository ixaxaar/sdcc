                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                              4 ; This file was generated Wed Nov 27 12:28:28 2013
                              5 ;--------------------------------------------------------
                              6 	.module gets
                              7 	.optsdcc -mtlcs90
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _putchar
                             13 	.globl _getchar
                             14 	.globl _gets
                             15 ;--------------------------------------------------------
                             16 ; ram data
                             17 ;--------------------------------------------------------
                             18 	.area _DATA
                             19 ;--------------------------------------------------------
                             20 ; ram data
                             21 ;--------------------------------------------------------
                             22 	.area _INITIALIZED
                             23 ;--------------------------------------------------------
                             24 ; absolute external ram data
                             25 ;--------------------------------------------------------
                             26 	.area _DABS (ABS)
                             27 ;--------------------------------------------------------
                             28 ; global & static initialisations
                             29 ;--------------------------------------------------------
                             30 	.area _HOME
                             31 	.area _GSINIT
                             32 	.area _GSFINAL
                             33 	.area _GSINIT
                             34 ;--------------------------------------------------------
                             35 ; Home
                             36 ;--------------------------------------------------------
                             37 	.area _HOME
                             38 	.area _HOME
                             39 ;--------------------------------------------------------
                             40 ; code
                             41 ;--------------------------------------------------------
                             42 	.area _CODE
                             43 ;../gets.c:32: gets (char *s)
                             44 ;	---------------------------------
                             45 ; Function gets
                             46 ; ---------------------------------
   0000                      47 _gets_start::
   0000                      48 _gets:
   0000 16 FE FF      [ 7]   49 	add	sp, #-2
                             50 ;../gets.c:35: unsigned int count = 0;
   0003 3A 00 00      [13]   51 	ld	hl,#0x0000
   0006 E6 52         [ 7]   52 	ex	(sp), hl
                             53 ;../gets.c:37: while (1)
   0008                      54 00109$:
                             55 ;../gets.c:39: c = getchar ();
   0008 1Cr00r00      [ 4]   56 	call	_getchar
   000B FD 30                57 	ld	b,l
                             58 ;../gets.c:40: switch(c)
   000D 20            [12]   59 	ld	a,b
   000E 6A 08         [ 4]   60 	sub	a, #0x08
   0010 C6 15         [ 7]   61 	jr	Z,00101$
                             62 ;../gets.c:57: *s = 0;
   0012 08            [ 4]   63 	ex	de, hl
   0013 F2 04 4A      [10]   64 	ld	hl, 4 (sp)
   0016 08            [ 4]   65 	ex	de, hl
                             66 ;../gets.c:40: switch(c)
   0017 20            [12]   67 	ld	a,b
   0018 6F 0A         [ 4]   68 	cp	a,#0x0A
   001A EBr59r00 C6   [ 4]   69 	jp	Z,00105$
   001E 6A 0D         [ 4]   70 	sub	a, #0x0D
   0020 EBr59r00 C6   [ 4]   71 	jp	Z,00105$
   0024 1Ar72r00      [ 7]   72 	jp	00106$
                             73 ;../gets.c:42: case '\b': /* backspace */
   0027                      74 00101$:
                             75 ;../gets.c:43: if (count)
   0027 3A 01 00      [13]   76 	ld	hl, #0+1
   002A FE 70         [ 7]   77 	add	hl, sp
   002C E2 2E         [10]   78 	ld	a, (hl)
   002E 9A            [ 4]   79 	dec	hl
   002F E2 66         [10]   80 	or	a,(hl)
   0031 C6 D5         [ 7]   81 	jr	Z,00109$
                             82 ;../gets.c:45: putchar ('\b');
   0033 36 08         [10]   83 	ld	a,#0x08
   0035 56            [ 7]   84 	push	af
   0036 96            [ 7]   85 	inc	sp
   0037 1Cr00r00      [ 4]   86 	call	_putchar
   003A 96            [ 7]   87 	inc	sp
                             88 ;../gets.c:46: putchar (' ');
   003B 36 20         [10]   89 	ld	a,#0x20
   003D 56            [ 7]   90 	push	af
   003E 96            [ 7]   91 	inc	sp
   003F 1Cr00r00      [ 4]   92 	call	_putchar
   0042 96            [ 7]   93 	inc	sp
                             94 ;../gets.c:47: putchar ('\b');
   0043 36 08         [10]   95 	ld	a,#0x08
   0045 56            [ 7]   96 	push	af
   0046 96            [ 7]   97 	inc	sp
   0047 1Cr00r00      [ 4]   98 	call	_putchar
   004A 96            [ 7]   99 	inc	sp
                            100 ;../gets.c:48: --s;
   004B F2 04 8F      [10]  101 	dec	4 (sp)
   004E F2 04 4A      [10]  102 	ld	hl, 4 (sp)
                            103 ;../gets.c:49: --count;
   0051 5A            [ 4]  104 	pop	hl
   0052 52            [ 4]  105 	push	hl
   0053 9A            [ 4]  106 	dec	hl
   0054 E6 52         [ 7]  107 	ex	(sp), hl
                            108 ;../gets.c:51: break;
   0056 1Ar08r00      [ 7]  109 	jp	00109$
                            110 ;../gets.c:54: case '\r': /* CR or LF */
   0059                     111 00105$:
                            112 ;../gets.c:55: putchar ('\r');
   0059 51            [ 4]  113 	push	de
   005A 36 0D         [10]  114 	ld	a,#0x0D
   005C 56            [ 7]  115 	push	af
   005D 96            [ 7]  116 	inc	sp
   005E 1Cr00r00      [ 4]  117 	call	_putchar
   0061 96            [ 7]  118 	inc	sp
   0062 36 0A         [10]  119 	ld	a,#0x0A
   0064 56            [ 7]  120 	push	af
   0065 96            [ 7]  121 	inc	sp
   0066 1Cr00r00      [ 4]  122 	call	_putchar
   0069 96            [ 7]  123 	inc	sp
   006A 59            [ 4]  124 	pop	de
                            125 ;../gets.c:57: *s = 0;
   006B FE 65         [ 7]  126 	xor	a, a
   006D E9 26         [ 4]  127 	ld	(de),a
                            128 ;../gets.c:58: return s;
   006F 08            [ 4]  129 	ex	de,hl
   0070 C8 23         [11]  130 	jr	00111$
                            131 ;../gets.c:60: default:
   0072                     132 00106$:
                            133 ;../gets.c:61: *s++ = c;
   0072 20            [12]  134 	ld	a,b
   0073 E9 26         [ 4]  135 	ld	(de),a
   0075 91            [ 4]  136 	inc	de
   0076 3D 04 00      [ 4]  137 	ld	iy,#4
   0079 FE 15         [ 7]  138 	add	iy,sp
   007B ED 23               139 	ld	0 (iy),e
   007D F5 01 22      [11]  140 	ld	1 (iy),d
                            141 ;../gets.c:62: ++count;
   0080 3D 00 00      [ 4]  142 	ld	iy,#0
   0083 FE 15         [ 7]  143 	add	iy,sp
   0085 E5 87         [11]  144 	inc	0 (iy)
   0087 CE 03         [ 7]  145 	jr	NZ,00136$
   0089 F1 01 87      [10]  146 	inc	1 (iy)
   008C                     147 00136$:
                            148 ;../gets.c:63: putchar (c);
   008C 50            [ 4]  149 	push	bc
   008D 96            [ 7]  150 	inc	sp
   008E 1Cr00r00      [ 4]  151 	call	_putchar
   0091 96            [ 7]  152 	inc	sp
                            153 ;../gets.c:65: }
   0092 1Ar08r00      [ 7]  154 	jp	00109$
   0095                     155 00111$:
   0095 16 02 00      [ 7]  156 	add	sp, #2
   0098 1E            [ 7]  157 	ret
   0099                     158 _gets_end::
                            159 	.area _CODE
                            160 	.area _INITIALIZER
                            161 	.area _CABS (ABS)
