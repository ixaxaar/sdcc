                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                              4 ; This file was generated Wed Nov 27 12:28:24 2013
                              5 ;--------------------------------------------------------
                              6 	.module _atoi
                              7 	.optsdcc -mtlcs90
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _atoi
                             13 ;--------------------------------------------------------
                             14 ; ram data
                             15 ;--------------------------------------------------------
                             16 	.area _DATA
                             17 ;--------------------------------------------------------
                             18 ; ram data
                             19 ;--------------------------------------------------------
                             20 	.area _INITIALIZED
                             21 ;--------------------------------------------------------
                             22 ; absolute external ram data
                             23 ;--------------------------------------------------------
                             24 	.area _DABS (ABS)
                             25 ;--------------------------------------------------------
                             26 ; global & static initialisations
                             27 ;--------------------------------------------------------
                             28 	.area _HOME
                             29 	.area _GSINIT
                             30 	.area _GSFINAL
                             31 	.area _GSINIT
                             32 ;--------------------------------------------------------
                             33 ; Home
                             34 ;--------------------------------------------------------
                             35 	.area _HOME
                             36 	.area _HOME
                             37 ;--------------------------------------------------------
                             38 ; code
                             39 ;--------------------------------------------------------
                             40 	.area _CODE
                             41 ;../_atoi.c:29: int atoi(const char * s)
                             42 ;	---------------------------------
                             43 ; Function atoi
                             44 ; ---------------------------------
   0000                      45 _atoi_start::
   0000                      46 _atoi:
   0000 54            [ 4]   47 	push	ix
   0001 3C 00 00      [ 4]   48 	ld	ix,#0
   0004 FE 14         [ 7]   49 	add	ix,sp
   0006 16 FC FF      [ 7]   50 	add	sp, #-4
                             51 ;../_atoi.c:31: register int rv=0; 
   0009 3A 00 00      [13]   52 	ld	hl,#0x0000
   000C E6 52         [ 7]   53 	ex	(sp), hl
                             54 ;../_atoi.c:35: while (*s) {
   000E F2 08 4A      [10]   55 	ld	hl, 8 (sp)
   0011                      56 00107$:
   0011 E2 2A         [10]   57 	ld	d,(hl)
                             58 ;../_atoi.c:38: if (*s == '-' || *s == '+') 
   0013 22            [16]   59 	ld	a,d
   0014 6A 2D         [ 4]   60 	sub	a, #0x2D
   0016 CE 04         [ 7]   61 	jr	NZ,00168$
   0018 36 01         [10]   62 	ld	a,#0x01
   001A C8 02         [11]   63 	jr	00169$
   001C                      64 00168$:
   001C FE 65         [ 7]   65 	xor	a,a
   001E                      66 00169$:
   001E 28            [12]   67 	ld	b,a
   001F 22            [16]   68 	ld	a,d
   0020 6A 2B         [ 4]   69 	sub	a, #0x2B
   0022 CE 04         [ 7]   70 	jr	NZ,00170$
   0024 36 01         [10]   71 	ld	a,#0x01
   0026 C8 02         [11]   72 	jr	00171$
   0028                      73 00170$:
   0028 FE 65         [ 7]   74 	xor	a,a
   002A                      75 00171$:
   002A F4 FF 26      [17]   76 	ld	-1 (ix),a
                             77 ;../_atoi.c:35: while (*s) {
   002D 22            [16]   78 	ld	a,d
   002E FE 66         [ 7]   79 	or	a, a
   0030 C6 25         [ 7]   80 	jr	Z,00133$
                             81 ;../_atoi.c:36: if (*s <= '9' && *s >= '0')
   0032 36 39         [10]   82 	ld	a,#0x39
   0034 FA 62         [10]   83 	sub	a, d
   0036 EBr3Cr00 CC   [ 4]   84 	jp	PO, 00172$
   003A 6D 80         [ 4]   85 	xor	a, #0x80
   003C                      86 00172$:
   003C EBr47r00 C5   [ 4]   87 	jp	M,00102$
   0040 22            [16]   88 	ld	a,d
   0041 6D 80         [ 4]   89 	xor	a, #0x80
   0043 6A B0         [ 4]   90 	sub	a, #0xB0
   0045 CF 10         [11]   91 	jr	NC,00133$
                             92 ;../_atoi.c:37: break;
   0047                      93 00102$:
                             94 ;../_atoi.c:38: if (*s == '-' || *s == '+') 
   0047 20            [12]   95 	ld	a,b
   0048 FE 66         [ 7]   96 	or	a, a
   004A CE 0B         [ 7]   97 	jr	NZ,00133$
   004C F0 FF 2E      [11]   98 	ld	a,-1 (ix)
   004F FE 66         [ 7]   99 	or	a, a
   0051 CE 04         [ 7]  100 	jr	NZ,00133$
                            101 ;../_atoi.c:40: s++;
   0053 92            [ 4]  102 	inc	hl
   0054 1Ar11r00      [ 7]  103 	jp	00107$
   0057                     104 00133$:
   0057 F6 08 42      [ 7]  105 	ld	8 (sp), hl
                            106 ;../_atoi.c:43: sign = (*s == '-');
   005A F4 FE 20      [17]  107 	ld	-2 (ix),b
                            108 ;../_atoi.c:44: if (*s == '-' || *s == '+') s++;
   005D 20            [12]  109 	ld	a,b
   005E FE 66         [ 7]  110 	or	a, a
   0060 CE 07         [ 7]  111 	jr	NZ,00110$
   0062 F0 FF 2E      [11]  112 	ld	a,-1 (ix)
   0065 FE 66         [ 7]  113 	or	a, a
   0067 C6 04         [ 7]  114 	jr	Z,00131$
   0069                     115 00110$:
   0069 92            [ 4]  116 	inc	hl
   006A F6 08 42      [ 7]  117 	ld	8 (sp), hl
                            118 ;../_atoi.c:46: while (*s && *s >= '0' && *s <= '9') {
   006D                     119 00131$:
   006D 08            [ 4]  120 	ex	de, hl
   006E F2 08 4A      [10]  121 	ld	hl, 8 (sp)
   0071 08            [ 4]  122 	ex	de, hl
   0072                     123 00115$:
   0072 E1 2E         [10]  124 	ld	a,(de)
   0074 29            [11]  125 	ld	c,a
   0075 FE 66         [ 7]  126 	or	a,a
   0077 EBrB9r00 C6   [ 4]  127 	jp	Z,00117$
   007B 6D 80         [ 4]  128 	xor	a, #0x80
   007D 6A B0         [ 4]  129 	sub	a, #0xB0
   007F EBrB9r00 C7   [ 4]  130 	jp	C,00117$
   0083 36 39         [10]  131 	ld	a,#0x39
   0085 F9 62         [ 6]  132 	sub	a, c
   0087 EBr8Dr00 CC   [ 4]  133 	jp	PO, 00173$
   008B 6D 80         [ 4]  134 	xor	a, #0x80
   008D                     135 00173$:
   008D EBrB9r00 C5   [ 4]  136 	jp	M,00117$
                            137 ;../_atoi.c:47: rv = (rv * 10) + (*s - '0');
   0091 51            [ 4]  138 	push	de
   0092 08            [ 4]  139 	ex	de, hl
   0093 F2 02 4A      [10]  140 	ld	hl, 2 (sp)
   0096 08            [ 4]  141 	ex	de, hl
   0097 FB 35         [ 4]  142 	ld	l, e
   0099 FA 34         [10]  143 	ld	h, d
   009B FA 70         [10]  144 	add	hl, hl
   009D FA 70         [10]  145 	add	hl, hl
   009F F9 70         [ 6]  146 	add	hl, de
   00A1 FA 70         [10]  147 	add	hl, hl
   00A3 59            [ 4]  148 	pop	de
   00A4 21            [10]  149 	ld	a,c
   00A5 A2            [ 4]  150 	rla
   00A6 FE 63         [ 7]  151 	sbc	a, a
   00A8 28            [12]  152 	ld	b,a
   00A9 21            [10]  153 	ld	a,c
   00AA 68 D0         [ 4]  154 	add	a,#0xD0
   00AC 29            [11]  155 	ld	c,a
   00AD 20            [12]  156 	ld	a,b
   00AE 69 FF         [ 4]  157 	adc	a,#0xFF
   00B0 28            [12]  158 	ld	b,a
   00B1 F8 70         [11]  159 	add	hl,bc
   00B3 EE 42         [ 7]  160 	ld	0 (sp), hl
                            161 ;../_atoi.c:48: s++;
   00B5 91            [ 4]  162 	inc	de
   00B6 1Ar72r00      [ 7]  163 	jp	00115$
   00B9                     164 00117$:
                            165 ;../_atoi.c:51: return (sign ? -rv : rv);
   00B9 F0 FE 2E      [11]  166 	ld	a,-2 (ix)
   00BC FE 66         [ 7]  167 	or	a, a
   00BE C6 0E         [ 7]  168 	jr	Z,00120$
   00C0 FE 65         [ 7]  169 	xor	a, a
   00C2 F0 FC 62      [11]  170 	sub	a, -4 (ix)
   00C5 2D            [ 4]  171 	ld	l,a
   00C6 36 00         [10]  172 	ld	a, #0x00
   00C8 F0 FD 63      [11]  173 	sbc	a, -3 (ix)
   00CB 28            [12]  174 	ld	b,a
   00CC C8 06         [11]  175 	jr	00121$
   00CE                     176 00120$:
   00CE F0 FC 2D      [11]  177 	ld	l,-4 (ix)
   00D1 F0 FD 28      [11]  178 	ld	b,-3 (ix)
   00D4                     179 00121$:
   00D4 F8 34         [11]  180 	ld	h, b
   00D6 FC 3E         [17]  181 	ld	sp, ix
   00D8 5C            [ 4]  182 	pop	ix
   00D9 1E            [ 7]  183 	ret
   00DA                     184 _atoi_end::
                            185 	.area _CODE
                            186 	.area _INITIALIZER
                            187 	.area _CABS (ABS)
