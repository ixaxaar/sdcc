                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                              4 ; This file was generated Wed Nov 27 12:28:22 2013
                              5 ;--------------------------------------------------------
                              6 	.module floorf
                              7 	.optsdcc -mtlcs90
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _floorf
                             13 ;--------------------------------------------------------
                             14 ; ram data
                             15 ;--------------------------------------------------------
                             16 	.area _DATA
                             17 ;--------------------------------------------------------
                             18 ; ram data
                             19 ;--------------------------------------------------------
                             20 	.area _INITIALIZED
                             21 ;--------------------------------------------------------
                             22 ; absolute external ram data
                             23 ;--------------------------------------------------------
                             24 	.area _DABS (ABS)
                             25 ;--------------------------------------------------------
                             26 ; global & static initialisations
                             27 ;--------------------------------------------------------
                             28 	.area _HOME
                             29 	.area _GSINIT
                             30 	.area _GSFINAL
                             31 	.area _GSINIT
                             32 ;--------------------------------------------------------
                             33 ; Home
                             34 ;--------------------------------------------------------
                             35 	.area _HOME
                             36 	.area _HOME
                             37 ;--------------------------------------------------------
                             38 ; code
                             39 ;--------------------------------------------------------
                             40 	.area _CODE
                             41 ;../floorf.c:33: float floorf (float x) _FLOAT_FUNC_REENTRANT
                             42 ;	---------------------------------
                             43 ; Function floorf
                             44 ; ---------------------------------
   0000                      45 _floorf_start::
   0000                      46 _floorf:
   0000 54            [ 4]   47 	push	ix
   0001 3C 00 00      [ 4]   48 	ld	ix,#0
   0004 FE 14         [ 7]   49 	add	ix,sp
   0006 16 FC FF      [ 7]   50 	add	sp, #-4
                             51 ;../floorf.c:36: r=x;
   0009 F2 0A 4A      [10]   52 	ld	hl, 10 (sp)
   000C 52            [ 4]   53 	push	hl
   000D F2 0A 4A      [10]   54 	ld	hl, 10 (sp)
   0010 52            [ 4]   55 	push	hl
   0011 1Cr00r00      [ 4]   56 	call	___fs2slong
   0014 16 04 00      [ 7]   57 	add	sp, #4
   0017 F4 FC 25      [17]   58 	ld	-4 (ix),l
   001A F4 FD 24      [17]   59 	ld	-3 (ix),h
   001D F4 FE 23      [17]   60 	ld	-2 (ix),e
   0020 F4 FF 22      [17]   61 	ld	-1 (ix),d
                             62 ;../floorf.c:38: return (r+((r>x)?-1:0));
   0023 F2 02 4A      [10]   63 	ld	hl, 2 (sp)
   0026 52            [ 4]   64 	push	hl
   0027 F2 02 4A      [10]   65 	ld	hl, 2 (sp)
   002A 52            [ 4]   66 	push	hl
   002B 1Cr00r00      [ 4]   67 	call	___slong2fs
   002E 16 04 00      [ 7]   68 	add	sp, #4
   0031 FD 31                69 	ld	c,l
   0033 FC 30         [17]   70 	ld	b,h
                             71 ;../floorf.c:37: if (r<=0)
   0035 FE 65         [ 7]   72 	xor	a, a
   0037 F0 FC 67      [11]   73 	cp	a, -4 (ix)
   003A F0 FD 63      [11]   74 	sbc	a, -3 (ix)
   003D 36 00         [10]   75 	ld	a,#0x00
   003F F0 FE 63      [11]   76 	sbc	a, -2 (ix)
   0042 36 00         [10]   77 	ld	a,#0x00
   0044 F0 FF 63      [11]   78 	sbc	a, -1 (ix)
   0047 EBr4Dr00 CC   [ 4]   79 	jp	PO, 00116$
   004B 6D 80         [ 4]   80 	xor	a, #0x80
   004D                      81 00116$:
   004D EBr95r00 C5   [ 4]   82 	jp	M,00102$
                             83 ;../floorf.c:38: return (r+((r>x)?-1:0));
   0051 F2 0A 4A      [10]   84 	ld	hl, 10 (sp)
   0054 52            [ 4]   85 	push	hl
   0055 F2 0A 4A      [10]   86 	ld	hl, 10 (sp)
   0058 52            [ 4]   87 	push	hl
   0059 51            [ 4]   88 	push	de
   005A 50            [ 4]   89 	push	bc
   005B 1Cr00r00      [ 4]   90 	call	___fsgt
   005E 16 08 00      [ 7]   91 	add	sp, #8
   0061 25            [ 4]   92 	ld	a,l
   0062 FE 66         [ 7]   93 	or	a, a
   0064 C6 04         [ 7]   94 	jr	Z,00106$
   0066 31 FF         [10]   95 	ld	c,#0xFF
   0068 C8 02         [11]   96 	jr	00107$
   006A                      97 00106$:
   006A 31 00         [10]   98 	ld	c,#0x00
   006C                      99 00107$:
   006C 21            [10]  100 	ld	a,c
   006D A2            [ 4]  101 	rla
   006E FE 63         [ 7]  102 	sbc	a, a
   0070 2C            [ 4]  103 	ld	h,a
   0071 2B            [ 6]  104 	ld	e,a
   0072 2A            [16]  105 	ld	d,a
   0073 F0 FC 2E      [11]  106 	ld	a,-4 (ix)
   0076 F9 60         [ 6]  107 	add	a, c
   0078 2D            [ 4]  108 	ld	l,a
   0079 F0 FD 2E      [11]  109 	ld	a,-3 (ix)
   007C FC 61         [17]  110 	adc	a, h
   007E 2C            [ 4]  111 	ld	h,a
   007F F0 FE 2E      [11]  112 	ld	a,-2 (ix)
   0082 FB 61         [ 4]  113 	adc	a, e
   0084 2B            [ 6]  114 	ld	e,a
   0085 F0 FF 2E      [11]  115 	ld	a,-1 (ix)
   0088 FA 61         [10]  116 	adc	a, d
   008A 2A            [16]  117 	ld	d,a
   008B 51            [ 4]  118 	push	de
   008C 52            [ 4]  119 	push	hl
   008D 1Cr00r00      [ 4]  120 	call	___slong2fs
   0090 16 04 00      [ 7]  121 	add	sp, #4
   0093 C8 04         [11]  122 	jr	00104$
   0095                     123 00102$:
                            124 ;../floorf.c:40: return r;
   0095 F9 35         [ 6]  125 	ld	l,c
   0097 F8 34         [11]  126 	ld	h,b
   0099                     127 00104$:
   0099 FC 3E         [17]  128 	ld	sp, ix
   009B 5C            [ 4]  129 	pop	ix
   009C 1E            [ 7]  130 	ret
   009D                     131 _floorf_end::
                            132 	.area _CODE
                            133 	.area _INITIALIZER
                            134 	.area _CABS (ABS)
