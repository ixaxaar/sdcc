                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                              4 ; This file was generated Wed Nov 27 12:28:17 2013
                              5 ;--------------------------------------------------------
                              6 	.module _fs2sint
                              7 	.optsdcc -mtlcs90
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl ___fs2slong
                             13 	.globl ___fs2sint
                             14 ;--------------------------------------------------------
                             15 ; ram data
                             16 ;--------------------------------------------------------
                             17 	.area _DATA
                             18 ;--------------------------------------------------------
                             19 ; ram data
                             20 ;--------------------------------------------------------
                             21 	.area _INITIALIZED
                             22 ;--------------------------------------------------------
                             23 ; absolute external ram data
                             24 ;--------------------------------------------------------
                             25 	.area _DABS (ABS)
                             26 ;--------------------------------------------------------
                             27 ; global & static initialisations
                             28 ;--------------------------------------------------------
                             29 	.area _HOME
                             30 	.area _GSINIT
                             31 	.area _GSFINAL
                             32 	.area _GSINIT
                             33 ;--------------------------------------------------------
                             34 ; Home
                             35 ;--------------------------------------------------------
                             36 	.area _HOME
                             37 ;../_fs2sint.c:81: signed int __fs2sint (float f)
                             38 ;	---------------------------------
                             39 ; Function __fs2sint
                             40 ; ---------------------------------
   0000                      41 ___fs2sint_start::
   0000                      42 ___fs2sint:
   0000 54            [ 4]   43 	push	ix
   0001 3C 00 00      [ 4]   44 	ld	ix,#0
   0004 FE 14         [ 7]   45 	add	ix,sp
                             46 ;../_fs2sint.c:83: signed long sl=__fs2slong(f);
   0006 F2 06 4A      [10]   47 	ld	hl, 6 (sp)
   0009 52            [ 4]   48 	push	hl
   000A F2 06 4A      [10]   49 	ld	hl, 6 (sp)
   000D 52            [ 4]   50 	push	hl
   000E 1Cr00r00      [ 4]   51 	call	___fs2slong
   0011 16 04 00      [ 7]   52 	add	sp, #4
   0014 FD 31                53 	ld	c,l
   0016 FC 30         [17]   54 	ld	b,h
                             55 ;../_fs2sint.c:84: if (sl>=INT_MAX)
   0018 21            [10]   56 	ld	a,c
   0019 6A FF         [ 4]   57 	sub	a, #0xFF
   001B 20            [12]   58 	ld	a,b
   001C 6B 7F         [ 4]   59 	sbc	a, #0x7F
   001E 23            [ 6]   60 	ld	a,e
   001F 6B 00         [ 4]   61 	sbc	a, #0x00
   0021 22            [16]   62 	ld	a,d
   0022 A2            [ 4]   63 	rla
   0023 0E            [ 7]   64 	ccf
   0024 A3            [ 4]   65 	rra
   0025 6B 80         [ 4]   66 	sbc	a, #0x80
   0027 C7 05         [11]   67 	jr	C,00102$
                             68 ;../_fs2sint.c:85: return INT_MAX;
   0029 3A FF 7F      [13]   69 	ld	hl,#0x7FFF
   002C C8 23         [11]   70 	jr	00105$
   002E                      71 00102$:
                             72 ;../_fs2sint.c:86: if (sl<=INT_MIN)
   002E FE 65         [ 7]   73 	xor	a, a
   0030 F9 67         [ 6]   74 	cp	a, c
   0032 36 80         [10]   75 	ld	a,#0x80
   0034 F8 63         [11]   76 	sbc	a, b
   0036 36 FF         [10]   77 	ld	a,#0xFF
   0038 FB 63         [ 4]   78 	sbc	a, e
   003A 36 FF         [10]   79 	ld	a,#0xFF
   003C FA 63         [10]   80 	sbc	a, d
   003E EBr44r00 CC   [ 4]   81 	jp	PO, 00115$
   0042 6D 80         [ 4]   82 	xor	a, #0x80
   0044                      83 00115$:
   0044 EBr4Dr00 C5   [ 4]   84 	jp	M,00104$
                             85 ;../_fs2sint.c:87: return -INT_MIN;
   0048 3A 00 80      [13]   86 	ld	hl,#0x8000
   004B C8 04         [11]   87 	jr	00105$
   004D                      88 00104$:
                             89 ;../_fs2sint.c:88: return sl;
   004D F9 35         [ 6]   90 	ld	l, c
   004F F8 34         [11]   91 	ld	h, b
   0051                      92 00105$:
   0051 5C            [ 4]   93 	pop	ix
   0052 1E            [ 7]   94 	ret
   0053                      95 ___fs2sint_end::
                             96 	.area _HOME
                             97 ;--------------------------------------------------------
                             98 ; code
                             99 ;--------------------------------------------------------
                            100 	.area _CODE
                            101 	.area _CODE
                            102 	.area _INITIALIZER
                            103 	.area _CABS (ABS)
