                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:27:54 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module assert
                                      7 	.optsdcc -mmcs51 --model-medium
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl __assert
                                     13 	.globl _printf
                                     14 	.globl __assert_PARM_3
                                     15 	.globl __assert_PARM_2
                                     16 ;--------------------------------------------------------
                                     17 ; special function registers
                                     18 ;--------------------------------------------------------
                                     19 	.area RSEG    (ABS,DATA)
      000000                         20 	.org 0x0000
                                     21 ;--------------------------------------------------------
                                     22 ; special function bits
                                     23 ;--------------------------------------------------------
                                     24 	.area RSEG    (ABS,DATA)
      000000                         25 	.org 0x0000
                                     26 ;--------------------------------------------------------
                                     27 ; overlayable register banks
                                     28 ;--------------------------------------------------------
                                     29 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         30 	.ds 8
                                     31 ;--------------------------------------------------------
                                     32 ; internal ram data
                                     33 ;--------------------------------------------------------
                                     34 	.area DSEG    (DATA)
                                     35 ;--------------------------------------------------------
                                     36 ; overlayable items in internal ram 
                                     37 ;--------------------------------------------------------
                                     38 ;--------------------------------------------------------
                                     39 ; indirectly addressable internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area ISEG    (DATA)
                                     42 ;--------------------------------------------------------
                                     43 ; absolute internal ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area IABS    (ABS,DATA)
                                     46 	.area IABS    (ABS,DATA)
                                     47 ;--------------------------------------------------------
                                     48 ; bit data
                                     49 ;--------------------------------------------------------
                                     50 	.area BSEG    (BIT)
                                     51 ;--------------------------------------------------------
                                     52 ; paged external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area PSEG    (PAG,XDATA)
      000000                         55 __assert_PARM_2:
      000000                         56 	.ds 3
      000003                         57 __assert_PARM_3:
      000003                         58 	.ds 2
                                     59 ;--------------------------------------------------------
                                     60 ; external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XSEG    (XDATA)
                                     63 ;--------------------------------------------------------
                                     64 ; absolute external ram data
                                     65 ;--------------------------------------------------------
                                     66 	.area XABS    (ABS,XDATA)
                                     67 ;--------------------------------------------------------
                                     68 ; external initialized ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area XISEG   (XDATA)
                                     71 	.area HOME    (CODE)
                                     72 	.area GSINIT0 (CODE)
                                     73 	.area GSINIT1 (CODE)
                                     74 	.area GSINIT2 (CODE)
                                     75 	.area GSINIT3 (CODE)
                                     76 	.area GSINIT4 (CODE)
                                     77 	.area GSINIT5 (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area CSEG    (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; global & static initialisations
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area GSINIT  (CODE)
                                     86 	.area GSFINAL (CODE)
                                     87 	.area GSINIT  (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; Home
                                     90 ;--------------------------------------------------------
                                     91 	.area HOME    (CODE)
                                     92 	.area HOME    (CODE)
                                     93 ;--------------------------------------------------------
                                     94 ; code
                                     95 ;--------------------------------------------------------
                                     96 	.area CSEG    (CODE)
                                     97 ;------------------------------------------------------------
                                     98 ;Allocation info for local variables in function '_assert'
                                     99 ;------------------------------------------------------------
                                    100 ;	assert.c:32: void _assert(char *expr, const char *filename, unsigned int linenumber)
                                    101 ;	-----------------------------------------
                                    102 ;	 function _assert
                                    103 ;	-----------------------------------------
      000000                        104 __assert:
                           000007   105 	ar7 = 0x07
                           000006   106 	ar6 = 0x06
                           000005   107 	ar5 = 0x05
                           000004   108 	ar4 = 0x04
                           000003   109 	ar3 = 0x03
                           000002   110 	ar2 = 0x02
                           000001   111 	ar1 = 0x01
                           000000   112 	ar0 = 0x00
      000000 AD 82            [24]  113 	mov	r5,dpl
      000002 AE 83            [24]  114 	mov	r6,dph
      000004 AF F0            [24]  115 	mov	r7,b
                                    116 ;	assert.c:34: printf("Assert(%s) failed at line %u in file %s.\n",
      000006 78r00            [12]  117 	mov	r0,#__assert_PARM_2
      000008 E2               [24]  118 	movx	a,@r0
      000009 C0 E0            [24]  119 	push	acc
      00000B 08               [12]  120 	inc	r0
      00000C E2               [24]  121 	movx	a,@r0
      00000D C0 E0            [24]  122 	push	acc
      00000F 08               [12]  123 	inc	r0
      000010 E2               [24]  124 	movx	a,@r0
      000011 C0 E0            [24]  125 	push	acc
      000013 78r03            [12]  126 	mov	r0,#__assert_PARM_3
      000015 E2               [24]  127 	movx	a,@r0
      000016 C0 E0            [24]  128 	push	acc
      000018 08               [12]  129 	inc	r0
      000019 E2               [24]  130 	movx	a,@r0
      00001A C0 E0            [24]  131 	push	acc
      00001C C0 05            [24]  132 	push	ar5
      00001E C0 06            [24]  133 	push	ar6
      000020 C0 07            [24]  134 	push	ar7
      000022 74r00            [12]  135 	mov	a,#__str_0
      000024 C0 E0            [24]  136 	push	acc
      000026 74s00            [12]  137 	mov	a,#(__str_0 >> 8)
      000028 C0 E0            [24]  138 	push	acc
      00002A 74 80            [12]  139 	mov	a,#0x80
      00002C C0 E0            [24]  140 	push	acc
      00002E 12r00r00         [24]  141 	lcall	_printf
      000031 E5 81            [12]  142 	mov	a,sp
      000033 24 F5            [12]  143 	add	a,#0xf5
      000035 F5 81            [12]  144 	mov	sp,a
                                    145 ;	assert.c:36: while(1);
      000037                        146 00102$:
      000037 80 FE            [24]  147 	sjmp	00102$
                                    148 	.area CSEG    (CODE)
                                    149 	.area CONST   (CODE)
      000000                        150 __str_0:
      000000 41 73 73 65 72 74 28   151 	.ascii "Assert(%s) failed at line %u in file %s."
             25 73 29 20 66 61 69
             6C 65 64 20 61 74 20
             6C 69 6E 65 20 25 75
             20 69 6E 20 66 69 6C
             65 20 25 73 2E
      000028 0A                     152 	.db 0x0A
      000029 00                     153 	.db 0x00
                                    154 	.area XINIT   (CODE)
                                    155 	.area CABS    (ABS,CODE)
