                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:27:53 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _moduint
                                      7 	.optsdcc -mmcs51 --model-medium
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl __moduint_PARM_2
                                     13 	.globl __moduint
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram 
                                     35 ;--------------------------------------------------------
                                     36 ;--------------------------------------------------------
                                     37 ; indirectly addressable internal ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area ISEG    (DATA)
                                     40 ;--------------------------------------------------------
                                     41 ; absolute internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area IABS    (ABS,DATA)
                                     44 	.area IABS    (ABS,DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; bit data
                                     47 ;--------------------------------------------------------
                                     48 	.area BSEG    (BIT)
                                     49 ;--------------------------------------------------------
                                     50 ; paged external ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area PSEG    (PAG,XDATA)
      000000                         53 __moduint_PARM_2:
      000000                         54 	.ds 2
                                     55 ;--------------------------------------------------------
                                     56 ; external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XSEG    (XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; absolute external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XABS    (ABS,XDATA)
                                     63 ;--------------------------------------------------------
                                     64 ; external initialized ram data
                                     65 ;--------------------------------------------------------
                                     66 	.area XISEG   (XDATA)
                                     67 	.area HOME    (CODE)
                                     68 	.area GSINIT0 (CODE)
                                     69 	.area GSINIT1 (CODE)
                                     70 	.area GSINIT2 (CODE)
                                     71 	.area GSINIT3 (CODE)
                                     72 	.area GSINIT4 (CODE)
                                     73 	.area GSINIT5 (CODE)
                                     74 	.area GSINIT  (CODE)
                                     75 	.area GSFINAL (CODE)
                                     76 	.area CSEG    (CODE)
                                     77 ;--------------------------------------------------------
                                     78 ; global & static initialisations
                                     79 ;--------------------------------------------------------
                                     80 	.area HOME    (CODE)
                                     81 	.area GSINIT  (CODE)
                                     82 	.area GSFINAL (CODE)
                                     83 	.area GSINIT  (CODE)
                                     84 ;--------------------------------------------------------
                                     85 ; Home
                                     86 ;--------------------------------------------------------
                                     87 	.area HOME    (CODE)
                                     88 	.area HOME    (CODE)
                                     89 ;--------------------------------------------------------
                                     90 ; code
                                     91 ;--------------------------------------------------------
                                     92 	.area CSEG    (CODE)
                                     93 ;------------------------------------------------------------
                                     94 ;Allocation info for local variables in function '_moduint'
                                     95 ;------------------------------------------------------------
                                     96 ;	_moduint.c:173: _moduint (unsigned int a, unsigned int b)
                                     97 ;	-----------------------------------------
                                     98 ;	 function _moduint
                                     99 ;	-----------------------------------------
      000000                        100 __moduint:
                           000007   101 	ar7 = 0x07
                           000006   102 	ar6 = 0x06
                           000005   103 	ar5 = 0x05
                           000004   104 	ar4 = 0x04
                           000003   105 	ar3 = 0x03
                           000002   106 	ar2 = 0x02
                           000001   107 	ar1 = 0x01
                           000000   108 	ar0 = 0x00
      000000 AE 82            [24]  109 	mov	r6,dpl
      000002 AF 83            [24]  110 	mov	r7,dph
                                    111 ;	_moduint.c:175: unsigned char count = 0;
      000004 7D 00            [12]  112 	mov	r5,#0x00
                                    113 ;	_moduint.c:178: while (!MSB_SET(b))
      000006 7C 00            [12]  114 	mov	r4,#0x00
      000008                        115 00103$:
      000008 78r01            [12]  116 	mov	r0,#(__moduint_PARM_2 + 1)
      00000A E2               [24]  117 	movx	a,@r0
      00000B 23               [12]  118 	rl	a
      00000C 54 01            [12]  119 	anl	a,#0x01
      00000E FB               [12]  120 	mov	r3,a
      00000F 70 3E            [24]  121 	jnz	00117$
                                    122 ;	_moduint.c:180: b <<= 1;
      000011 78r01            [12]  123 	mov	r0,#(__moduint_PARM_2 + 1)
      000013 E2               [24]  124 	movx	a,@r0
      000014 F5 F0            [12]  125 	mov	b,a
      000016 18               [12]  126 	dec	r0
      000017 E2               [24]  127 	movx	a,@r0
      000018 25 E0            [12]  128 	add	a,acc
      00001A C5 F0            [12]  129 	xch	a,b
      00001C 33               [12]  130 	rlc	a
      00001D C5 F0            [12]  131 	xch	a,b
      00001F F2               [24]  132 	movx	@r0,a
      000020 08               [12]  133 	inc	r0
      000021 E5 F0            [12]  134 	mov	a,b
      000023 F2               [24]  135 	movx	@r0,a
                                    136 ;	_moduint.c:181: if (b > a)
      000024 78r00            [12]  137 	mov	r0,#__moduint_PARM_2
      000026 C3               [12]  138 	clr	c
      000027 E2               [24]  139 	movx	a,@r0
      000028 F5 F0            [12]  140 	mov	b,a
      00002A EE               [12]  141 	mov	a,r6
      00002B 95 F0            [12]  142 	subb	a,b
      00002D 08               [12]  143 	inc	r0
      00002E E2               [24]  144 	movx	a,@r0
      00002F F5 F0            [12]  145 	mov	b,a
      000031 EF               [12]  146 	mov	a,r7
      000032 95 F0            [12]  147 	subb	a,b
      000034 50 14            [24]  148 	jnc	00102$
                                    149 ;	_moduint.c:183: b >>=1;
      000036 78r00            [12]  150 	mov	r0,#__moduint_PARM_2
      000038 E2               [24]  151 	movx	a,@r0
      000039 F5 F0            [12]  152 	mov	b,a
      00003B 08               [12]  153 	inc	r0
      00003C E2               [24]  154 	movx	a,@r0
      00003D C3               [12]  155 	clr	c
      00003E 13               [12]  156 	rrc	a
      00003F C5 F0            [12]  157 	xch	a,b
      000041 13               [12]  158 	rrc	a
      000042 18               [12]  159 	dec	r0
      000043 F2               [24]  160 	movx	@r0,a
      000044 C5 F0            [12]  161 	xch	a,b
      000046 08               [12]  162 	inc	r0
      000047 F2               [24]  163 	movx	@r0,a
                                    164 ;	_moduint.c:184: break;
      000048 80 05            [24]  165 	sjmp	00117$
      00004A                        166 00102$:
                                    167 ;	_moduint.c:186: count++;
      00004A 0C               [12]  168 	inc	r4
      00004B 8C 05            [24]  169 	mov	ar5,r4
                                    170 ;	_moduint.c:188: do
      00004D 80 B9            [24]  171 	sjmp	00103$
      00004F                        172 00117$:
      00004F                        173 00108$:
                                    174 ;	_moduint.c:190: if (a >= b)
      00004F 78r00            [12]  175 	mov	r0,#__moduint_PARM_2
      000051 C3               [12]  176 	clr	c
      000052 E2               [24]  177 	movx	a,@r0
      000053 F5 F0            [12]  178 	mov	b,a
      000055 EE               [12]  179 	mov	a,r6
      000056 95 F0            [12]  180 	subb	a,b
      000058 08               [12]  181 	inc	r0
      000059 E2               [24]  182 	movx	a,@r0
      00005A F5 F0            [12]  183 	mov	b,a
      00005C EF               [12]  184 	mov	a,r7
      00005D 95 F0            [12]  185 	subb	a,b
      00005F 40 0E            [24]  186 	jc	00107$
                                    187 ;	_moduint.c:191: a -= b;
      000061 78r00            [12]  188 	mov	r0,#__moduint_PARM_2
      000063 D3               [12]  189 	setb	c
      000064 E2               [24]  190 	movx	a,@r0
      000065 9E               [12]  191 	subb	a,r6
      000066 F4               [12]  192 	cpl	a
      000067 B3               [12]  193 	cpl	c
      000068 FE               [12]  194 	mov	r6,a
      000069 B3               [12]  195 	cpl	c
      00006A 08               [12]  196 	inc	r0
      00006B E2               [24]  197 	movx	a,@r0
      00006C 9F               [12]  198 	subb	a,r7
      00006D F4               [12]  199 	cpl	a
      00006E FF               [12]  200 	mov	r7,a
      00006F                        201 00107$:
                                    202 ;	_moduint.c:192: b >>= 1;
      00006F 78r00            [12]  203 	mov	r0,#__moduint_PARM_2
      000071 E2               [24]  204 	movx	a,@r0
      000072 F5 F0            [12]  205 	mov	b,a
      000074 08               [12]  206 	inc	r0
      000075 E2               [24]  207 	movx	a,@r0
      000076 C3               [12]  208 	clr	c
      000077 13               [12]  209 	rrc	a
      000078 C5 F0            [12]  210 	xch	a,b
      00007A 13               [12]  211 	rrc	a
      00007B 18               [12]  212 	dec	r0
      00007C F2               [24]  213 	movx	@r0,a
      00007D C5 F0            [12]  214 	xch	a,b
      00007F 08               [12]  215 	inc	r0
      000080 F2               [24]  216 	movx	@r0,a
                                    217 ;	_moduint.c:194: while (count--);
      000081 8D 04            [24]  218 	mov	ar4,r5
      000083 1D               [12]  219 	dec	r5
      000084 EC               [12]  220 	mov	a,r4
      000085 70 C8            [24]  221 	jnz	00108$
                                    222 ;	_moduint.c:195: return a;
      000087 8E 82            [24]  223 	mov	dpl,r6
      000089 8F 83            [24]  224 	mov	dph,r7
      00008B 22               [24]  225 	ret
                                    226 	.area CSEG    (CODE)
                                    227 	.area CONST   (CODE)
                                    228 	.area XINIT   (CODE)
                                    229 	.area CABS    (ABS,CODE)
