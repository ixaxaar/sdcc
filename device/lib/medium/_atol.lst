                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:27:53 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _atol
                                      7 	.optsdcc -mmcs51 --model-medium
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _atol
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
      000000                         32 _atol_rv_1_2:
      000000                         33 	.ds 4
      000004                         34 _atol_sloc0_1_0:
      000004                         35 	.ds 3
      000007                         36 _atol_sloc1_1_0:
      000007                         37 	.ds 4
                                     38 ;--------------------------------------------------------
                                     39 ; overlayable items in internal ram 
                                     40 ;--------------------------------------------------------
                                     41 ;--------------------------------------------------------
                                     42 ; indirectly addressable internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area ISEG    (DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; absolute internal ram data
                                     47 ;--------------------------------------------------------
                                     48 	.area IABS    (ABS,DATA)
                                     49 	.area IABS    (ABS,DATA)
                                     50 ;--------------------------------------------------------
                                     51 ; bit data
                                     52 ;--------------------------------------------------------
                                     53 	.area BSEG    (BIT)
                                     54 ;--------------------------------------------------------
                                     55 ; paged external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area PSEG    (PAG,XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XSEG    (XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; absolute external ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XABS    (ABS,XDATA)
                                     66 ;--------------------------------------------------------
                                     67 ; external initialized ram data
                                     68 ;--------------------------------------------------------
                                     69 	.area XISEG   (XDATA)
                                     70 	.area HOME    (CODE)
                                     71 	.area GSINIT0 (CODE)
                                     72 	.area GSINIT1 (CODE)
                                     73 	.area GSINIT2 (CODE)
                                     74 	.area GSINIT3 (CODE)
                                     75 	.area GSINIT4 (CODE)
                                     76 	.area GSINIT5 (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area CSEG    (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; global & static initialisations
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area GSINIT  (CODE)
                                     85 	.area GSFINAL (CODE)
                                     86 	.area GSINIT  (CODE)
                                     87 ;--------------------------------------------------------
                                     88 ; Home
                                     89 ;--------------------------------------------------------
                                     90 	.area HOME    (CODE)
                                     91 	.area HOME    (CODE)
                                     92 ;--------------------------------------------------------
                                     93 ; code
                                     94 ;--------------------------------------------------------
                                     95 	.area CSEG    (CODE)
                                     96 ;------------------------------------------------------------
                                     97 ;Allocation info for local variables in function 'atol'
                                     98 ;------------------------------------------------------------
                                     99 ;rv                        Allocated with name '_atol_rv_1_2'
                                    100 ;sign                      Allocated to registers r5 
                                    101 ;sloc0                     Allocated with name '_atol_sloc0_1_0'
                                    102 ;sloc1                     Allocated with name '_atol_sloc1_1_0'
                                    103 ;------------------------------------------------------------
                                    104 ;	_atol.c:29: long atol(char * s)
                                    105 ;	-----------------------------------------
                                    106 ;	 function atol
                                    107 ;	-----------------------------------------
      000000                        108 _atol:
                           000007   109 	ar7 = 0x07
                           000006   110 	ar6 = 0x06
                           000005   111 	ar5 = 0x05
                           000004   112 	ar4 = 0x04
                           000003   113 	ar3 = 0x03
                           000002   114 	ar2 = 0x02
                           000001   115 	ar1 = 0x01
                           000000   116 	ar0 = 0x00
      000000 AC 82            [24]  117 	mov	r4,dpl
      000002 AB 83            [24]  118 	mov	r3,dph
      000004 AA F0            [24]  119 	mov	r2,b
                                    120 ;	_atol.c:31: register long rv=0; 
      000006 E4               [12]  121 	clr	a
      000007 F5*00            [12]  122 	mov	_atol_rv_1_2,a
      000009 F5*01            [12]  123 	mov	(_atol_rv_1_2 + 1),a
      00000B F5*02            [12]  124 	mov	(_atol_rv_1_2 + 2),a
      00000D F5*03            [12]  125 	mov	(_atol_rv_1_2 + 3),a
                                    126 ;	_atol.c:35: while (*s) {
      00000F 8C 05            [24]  127 	mov	ar5,r4
      000011 8B 06            [24]  128 	mov	ar6,r3
      000013 8A 07            [24]  129 	mov	ar7,r2
      000015                        130 00107$:
      000015 8D 82            [24]  131 	mov	dpl,r5
      000017 8E 83            [24]  132 	mov	dph,r6
      000019 8F F0            [24]  133 	mov	b,r7
      00001B 12r00r00         [24]  134 	lcall	__gptrget
      00001E FC               [12]  135 	mov	r4,a
      00001F 60 2E            [24]  136 	jz	00133$
                                    137 ;	_atol.c:36: if (*s <= '9' && *s >= '0')
      000021 C3               [12]  138 	clr	c
      000022 74 B9            [12]  139 	mov	a,#(0x39 ^ 0x80)
      000024 8C F0            [24]  140 	mov	b,r4
      000026 63 F0 80         [24]  141 	xrl	b,#0x80
      000029 95 F0            [12]  142 	subb	a,b
      00002B 40 07            [24]  143 	jc	00102$
      00002D EC               [12]  144 	mov	a,r4
      00002E 64 80            [12]  145 	xrl	a,#0x80
      000030 94 B0            [12]  146 	subb	a,#0xb0
      000032 50 1B            [24]  147 	jnc	00133$
                                    148 ;	_atol.c:37: break;
      000034                        149 00102$:
                                    150 ;	_atol.c:38: if (*s == '-' || *s == '+') 
      000034 8D 82            [24]  151 	mov	dpl,r5
      000036 8E 83            [24]  152 	mov	dph,r6
      000038 8F F0            [24]  153 	mov	b,r7
      00003A 12r00r00         [24]  154 	lcall	__gptrget
      00003D FC               [12]  155 	mov	r4,a
      00003E BC 2D 02         [24]  156 	cjne	r4,#0x2D,00160$
      000041 80 0C            [24]  157 	sjmp	00133$
      000043                        158 00160$:
      000043 BC 2B 02         [24]  159 	cjne	r4,#0x2B,00161$
      000046 80 07            [24]  160 	sjmp	00133$
      000048                        161 00161$:
                                    162 ;	_atol.c:40: s++;
      000048 0D               [12]  163 	inc	r5
      000049 BD 00 C9         [24]  164 	cjne	r5,#0x00,00107$
      00004C 0E               [12]  165 	inc	r6
      00004D 80 C6            [24]  166 	sjmp	00107$
      00004F                        167 00133$:
      00004F 8D 04            [24]  168 	mov	ar4,r5
      000051 8E 03            [24]  169 	mov	ar3,r6
      000053 8F 02            [24]  170 	mov	ar2,r7
                                    171 ;	_atol.c:43: sign = (*s == '-');
      000055 8D 82            [24]  172 	mov	dpl,r5
      000057 8E 83            [24]  173 	mov	dph,r6
      000059 8F F0            [24]  174 	mov	b,r7
      00005B 12r00r00         [24]  175 	lcall	__gptrget
      00005E FF               [12]  176 	mov	r7,a
      00005F E4               [12]  177 	clr	a
      000060 BF 2D 01         [24]  178 	cjne	r7,#0x2D,00163$
      000063 04               [12]  179 	inc	a
      000064                        180 00163$:
                                    181 ;	_atol.c:44: if (*s == '-' || *s == '+') s++;
      000064 FE               [12]  182 	mov	r6,a
      000065 FD               [12]  183 	mov	r5,a
      000066 70 03            [24]  184 	jnz	00110$
      000068 BF 2B 05         [24]  185 	cjne	r7,#0x2B,00131$
      00006B                        186 00110$:
      00006B 0C               [12]  187 	inc	r4
      00006C BC 00 01         [24]  188 	cjne	r4,#0x00,00168$
      00006F 0B               [12]  189 	inc	r3
      000070                        190 00168$:
                                    191 ;	_atol.c:46: while (*s && *s >= '0' && *s <= '9') {
      000070                        192 00131$:
      000070 8C*04            [24]  193 	mov	_atol_sloc0_1_0,r4
      000072 8B*05            [24]  194 	mov	(_atol_sloc0_1_0 + 1),r3
      000074 8A*06            [24]  195 	mov	(_atol_sloc0_1_0 + 2),r2
      000076                        196 00115$:
      000076 85*04 82         [24]  197 	mov	dpl,_atol_sloc0_1_0
      000079 85*05 83         [24]  198 	mov	dph,(_atol_sloc0_1_0 + 1)
      00007C 85*06 F0         [24]  199 	mov	b,(_atol_sloc0_1_0 + 2)
      00007F 12r00r00         [24]  200 	lcall	__gptrget
      000082 FB               [12]  201 	mov	r3,a
      000083 70 03            [24]  202 	jnz	00169$
      000085 02r00rFD         [24]  203 	ljmp	00117$
      000088                        204 00169$:
      000088 C3               [12]  205 	clr	c
      000089 EB               [12]  206 	mov	a,r3
      00008A 64 80            [12]  207 	xrl	a,#0x80
      00008C 94 B0            [12]  208 	subb	a,#0xb0
      00008E 40 6D            [24]  209 	jc	00117$
      000090 74 B9            [12]  210 	mov	a,#(0x39 ^ 0x80)
      000092 8B F0            [24]  211 	mov	b,r3
      000094 63 F0 80         [24]  212 	xrl	b,#0x80
      000097 95 F0            [12]  213 	subb	a,b
      000099 40 62            [24]  214 	jc	00117$
                                    215 ;	_atol.c:47: rv = (rv * 10) + (*s - '0');
      00009B C0 05            [24]  216 	push	ar5
      00009D 78r00            [12]  217 	mov	r0,#__mullong_PARM_2
      00009F E5*00            [12]  218 	mov	a,_atol_rv_1_2
      0000A1 F2               [24]  219 	movx	@r0,a
      0000A2 08               [12]  220 	inc	r0
      0000A3 E5*01            [12]  221 	mov	a,(_atol_rv_1_2 + 1)
      0000A5 F2               [24]  222 	movx	@r0,a
      0000A6 08               [12]  223 	inc	r0
      0000A7 E5*02            [12]  224 	mov	a,(_atol_rv_1_2 + 2)
      0000A9 F2               [24]  225 	movx	@r0,a
      0000AA 08               [12]  226 	inc	r0
      0000AB E5*03            [12]  227 	mov	a,(_atol_rv_1_2 + 3)
      0000AD F2               [24]  228 	movx	@r0,a
      0000AE 90 00 0A         [24]  229 	mov	dptr,#(0x0A&0x00ff)
      0000B1 E4               [12]  230 	clr	a
      0000B2 F5 F0            [12]  231 	mov	b,a
      0000B4 C0 05            [24]  232 	push	ar5
      0000B6 C0 03            [24]  233 	push	ar3
      0000B8 12r00r00         [24]  234 	lcall	__mullong
      0000BB 85 82*07         [24]  235 	mov	_atol_sloc1_1_0,dpl
      0000BE 85 83*08         [24]  236 	mov	(_atol_sloc1_1_0 + 1),dph
      0000C1 85 F0*09         [24]  237 	mov	(_atol_sloc1_1_0 + 2),b
      0000C4 F5*0A            [12]  238 	mov	(_atol_sloc1_1_0 + 3),a
      0000C6 D0 03            [24]  239 	pop	ar3
      0000C8 D0 05            [24]  240 	pop	ar5
      0000CA EB               [12]  241 	mov	a,r3
      0000CB 33               [12]  242 	rlc	a
      0000CC 95 E0            [12]  243 	subb	a,acc
      0000CE FC               [12]  244 	mov	r4,a
      0000CF EB               [12]  245 	mov	a,r3
      0000D0 24 D0            [12]  246 	add	a,#0xD0
      0000D2 FB               [12]  247 	mov	r3,a
      0000D3 EC               [12]  248 	mov	a,r4
      0000D4 34 FF            [12]  249 	addc	a,#0xFF
      0000D6 FC               [12]  250 	mov	r4,a
      0000D7 33               [12]  251 	rlc	a
      0000D8 95 E0            [12]  252 	subb	a,acc
      0000DA FE               [12]  253 	mov	r6,a
      0000DB FF               [12]  254 	mov	r7,a
      0000DC EB               [12]  255 	mov	a,r3
      0000DD 25*07            [12]  256 	add	a,_atol_sloc1_1_0
      0000DF F5*00            [12]  257 	mov	_atol_rv_1_2,a
      0000E1 EC               [12]  258 	mov	a,r4
      0000E2 35*08            [12]  259 	addc	a,(_atol_sloc1_1_0 + 1)
      0000E4 F5*01            [12]  260 	mov	(_atol_rv_1_2 + 1),a
      0000E6 EE               [12]  261 	mov	a,r6
      0000E7 35*09            [12]  262 	addc	a,(_atol_sloc1_1_0 + 2)
      0000E9 F5*02            [12]  263 	mov	(_atol_rv_1_2 + 2),a
      0000EB EF               [12]  264 	mov	a,r7
      0000EC 35*0A            [12]  265 	addc	a,(_atol_sloc1_1_0 + 3)
      0000EE F5*03            [12]  266 	mov	(_atol_rv_1_2 + 3),a
                                    267 ;	_atol.c:48: s++;
      0000F0 05*04            [12]  268 	inc	_atol_sloc0_1_0
      0000F2 E4               [12]  269 	clr	a
      0000F3 B5*04 02         [24]  270 	cjne	a,_atol_sloc0_1_0,00172$
      0000F6 05*05            [12]  271 	inc	(_atol_sloc0_1_0 + 1)
      0000F8                        272 00172$:
      0000F8 D0 05            [24]  273 	pop	ar5
      0000FA 02r00r76         [24]  274 	ljmp	00115$
      0000FD                        275 00117$:
                                    276 ;	_atol.c:51: return (sign ? -rv : rv);
      0000FD ED               [12]  277 	mov	a,r5
      0000FE 60 13            [24]  278 	jz	00120$
      000100 C3               [12]  279 	clr	c
      000101 E4               [12]  280 	clr	a
      000102 95*00            [12]  281 	subb	a,_atol_rv_1_2
      000104 FC               [12]  282 	mov	r4,a
      000105 E4               [12]  283 	clr	a
      000106 95*01            [12]  284 	subb	a,(_atol_rv_1_2 + 1)
      000108 FD               [12]  285 	mov	r5,a
      000109 E4               [12]  286 	clr	a
      00010A 95*02            [12]  287 	subb	a,(_atol_rv_1_2 + 2)
      00010C FE               [12]  288 	mov	r6,a
      00010D E4               [12]  289 	clr	a
      00010E 95*03            [12]  290 	subb	a,(_atol_rv_1_2 + 3)
      000110 FF               [12]  291 	mov	r7,a
      000111 80 08            [24]  292 	sjmp	00121$
      000113                        293 00120$:
      000113 AC*00            [24]  294 	mov	r4,_atol_rv_1_2
      000115 AD*01            [24]  295 	mov	r5,(_atol_rv_1_2 + 1)
      000117 AE*02            [24]  296 	mov	r6,(_atol_rv_1_2 + 2)
      000119 AF*03            [24]  297 	mov	r7,(_atol_rv_1_2 + 3)
      00011B                        298 00121$:
      00011B 8C 82            [24]  299 	mov	dpl,r4
      00011D 8D 83            [24]  300 	mov	dph,r5
      00011F 8E F0            [24]  301 	mov	b,r6
      000121 EF               [12]  302 	mov	a,r7
      000122 22               [24]  303 	ret
                                    304 	.area CSEG    (CODE)
                                    305 	.area CONST   (CODE)
                                    306 	.area XINIT   (CODE)
                                    307 	.area CABS    (ABS,CODE)
