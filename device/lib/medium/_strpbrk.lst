                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:27:53 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _strpbrk
                                      7 	.optsdcc -mmcs51 --model-medium
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _strchr
                                     13 	.globl _strpbrk_PARM_2
                                     14 	.globl _strpbrk
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram 
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; indirectly addressable internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area ISEG    (DATA)
                                     41 ;--------------------------------------------------------
                                     42 ; absolute internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area IABS    (ABS,DATA)
                                     45 	.area IABS    (ABS,DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; bit data
                                     48 ;--------------------------------------------------------
                                     49 	.area BSEG    (BIT)
                                     50 ;--------------------------------------------------------
                                     51 ; paged external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area PSEG    (PAG,XDATA)
      000000                         54 _strpbrk_PARM_2:
      000000                         55 	.ds 3
      000003                         56 _strpbrk_string_1_21:
      000003                         57 	.ds 3
      000006                         58 _strpbrk_ret_1_22:
      000006                         59 	.ds 3
                                     60 ;--------------------------------------------------------
                                     61 ; external ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XSEG    (XDATA)
                                     64 ;--------------------------------------------------------
                                     65 ; absolute external ram data
                                     66 ;--------------------------------------------------------
                                     67 	.area XABS    (ABS,XDATA)
                                     68 ;--------------------------------------------------------
                                     69 ; external initialized ram data
                                     70 ;--------------------------------------------------------
                                     71 	.area XISEG   (XDATA)
                                     72 	.area HOME    (CODE)
                                     73 	.area GSINIT0 (CODE)
                                     74 	.area GSINIT1 (CODE)
                                     75 	.area GSINIT2 (CODE)
                                     76 	.area GSINIT3 (CODE)
                                     77 	.area GSINIT4 (CODE)
                                     78 	.area GSINIT5 (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 	.area GSFINAL (CODE)
                                     81 	.area CSEG    (CODE)
                                     82 ;--------------------------------------------------------
                                     83 ; global & static initialisations
                                     84 ;--------------------------------------------------------
                                     85 	.area HOME    (CODE)
                                     86 	.area GSINIT  (CODE)
                                     87 	.area GSFINAL (CODE)
                                     88 	.area GSINIT  (CODE)
                                     89 ;--------------------------------------------------------
                                     90 ; Home
                                     91 ;--------------------------------------------------------
                                     92 	.area HOME    (CODE)
                                     93 	.area HOME    (CODE)
                                     94 ;--------------------------------------------------------
                                     95 ; code
                                     96 ;--------------------------------------------------------
                                     97 	.area CSEG    (CODE)
                                     98 ;------------------------------------------------------------
                                     99 ;Allocation info for local variables in function 'strpbrk'
                                    100 ;------------------------------------------------------------
                                    101 ;ch                        Allocated to registers r3 
                                    102 ;------------------------------------------------------------
                                    103 ;	_strpbrk.c:31: char * strpbrk (
                                    104 ;	-----------------------------------------
                                    105 ;	 function strpbrk
                                    106 ;	-----------------------------------------
      000000                        107 _strpbrk:
                           000007   108 	ar7 = 0x07
                           000006   109 	ar6 = 0x06
                           000005   110 	ar5 = 0x05
                           000004   111 	ar4 = 0x04
                           000003   112 	ar3 = 0x03
                           000002   113 	ar2 = 0x02
                           000001   114 	ar1 = 0x01
                           000000   115 	ar0 = 0x00
      000000 AF F0            [24]  116 	mov	r7,b
      000002 AE 83            [24]  117 	mov	r6,dph
      000004 E5 82            [12]  118 	mov	a,dpl
      000006 78r03            [12]  119 	mov	r0,#_strpbrk_string_1_21
      000008 F2               [24]  120 	movx	@r0,a
      000009 08               [12]  121 	inc	r0
      00000A EE               [12]  122 	mov	a,r6
      00000B F2               [24]  123 	movx	@r0,a
      00000C 08               [12]  124 	inc	r0
      00000D EF               [12]  125 	mov	a,r7
      00000E F2               [24]  126 	movx	@r0,a
                                    127 ;	_strpbrk.c:36: char *ret = NULL;
      00000F 78r06            [12]  128 	mov	r0,#_strpbrk_ret_1_22
      000011 E4               [12]  129 	clr	a
      000012 F2               [24]  130 	movx	@r0,a
      000013 08               [12]  131 	inc	r0
      000014 F2               [24]  132 	movx	@r0,a
      000015 08               [12]  133 	inc	r0
      000016 F2               [24]  134 	movx	@r0,a
                                    135 ;	_strpbrk.c:39: while (ch = *control) {
      000017 78r00            [12]  136 	mov	r0,#_strpbrk_PARM_2
      000019 E2               [24]  137 	movx	a,@r0
      00001A FD               [12]  138 	mov	r5,a
      00001B 08               [12]  139 	inc	r0
      00001C E2               [24]  140 	movx	a,@r0
      00001D FE               [12]  141 	mov	r6,a
      00001E 08               [12]  142 	inc	r0
      00001F E2               [24]  143 	movx	a,@r0
      000020 FF               [12]  144 	mov	r7,a
      000021                        145 00105$:
      000021 8D 82            [24]  146 	mov	dpl,r5
      000023 8E 83            [24]  147 	mov	dph,r6
      000025 8F F0            [24]  148 	mov	b,r7
      000027 12r00r00         [24]  149 	lcall	__gptrget
      00002A FC               [12]  150 	mov	r4,a
      00002B FB               [12]  151 	mov	r3,a
      00002C 60 64            [24]  152 	jz	00107$
                                    153 ;	_strpbrk.c:40: char * p = strchr(string, ch);
      00002E 78r00            [12]  154 	mov	r0,#_strchr_PARM_2
      000030 EB               [12]  155 	mov	a,r3
      000031 F2               [24]  156 	movx	@r0,a
      000032 78r03            [12]  157 	mov	r0,#_strpbrk_string_1_21
      000034 E2               [24]  158 	movx	a,@r0
      000035 F5 82            [12]  159 	mov	dpl,a
      000037 08               [12]  160 	inc	r0
      000038 E2               [24]  161 	movx	a,@r0
      000039 F5 83            [12]  162 	mov	dph,a
      00003B 08               [12]  163 	inc	r0
      00003C E2               [24]  164 	movx	a,@r0
      00003D F5 F0            [12]  165 	mov	b,a
      00003F C0 07            [24]  166 	push	ar7
      000041 C0 06            [24]  167 	push	ar6
      000043 C0 05            [24]  168 	push	ar5
      000045 12r00r00         [24]  169 	lcall	_strchr
      000048 AA 82            [24]  170 	mov	r2,dpl
      00004A AB 83            [24]  171 	mov	r3,dph
      00004C AC F0            [24]  172 	mov	r4,b
      00004E D0 05            [24]  173 	pop	ar5
      000050 D0 06            [24]  174 	pop	ar6
      000052 D0 07            [24]  175 	pop	ar7
                                    176 ;	_strpbrk.c:41: if (p != NULL && (ret == NULL || p < ret)) {
      000054 EA               [12]  177 	mov	a,r2
      000055 4B               [12]  178 	orl	a,r3
      000056 60 33            [24]  179 	jz	00102$
      000058 78r06            [12]  180 	mov	r0,#_strpbrk_ret_1_22
      00005A E2               [24]  181 	movx	a,@r0
      00005B F5 F0            [12]  182 	mov	b,a
      00005D 08               [12]  183 	inc	r0
      00005E E2               [24]  184 	movx	a,@r0
      00005F 45 F0            [12]  185 	orl	a,b
      000061 60 1E            [24]  186 	jz	00101$
      000063 78r06            [12]  187 	mov	r0,#_strpbrk_ret_1_22
      000065 E2               [24]  188 	movx	a,@r0
      000066 C0 E0            [24]  189 	push	acc
      000068 08               [12]  190 	inc	r0
      000069 E2               [24]  191 	movx	a,@r0
      00006A C0 E0            [24]  192 	push	acc
      00006C 08               [12]  193 	inc	r0
      00006D E2               [24]  194 	movx	a,@r0
      00006E C0 E0            [24]  195 	push	acc
      000070 8A 82            [24]  196 	mov	dpl,r2
      000072 8B 83            [24]  197 	mov	dph,r3
      000074 8C F0            [24]  198 	mov	b,r4
      000076 12r00r00         [24]  199 	lcall	___gptr_cmp
      000079 15 81            [12]  200 	dec	sp
      00007B 15 81            [12]  201 	dec	sp
      00007D 15 81            [12]  202 	dec	sp
      00007F 50 0A            [24]  203 	jnc	00102$
      000081                        204 00101$:
                                    205 ;	_strpbrk.c:42: ret = p;
      000081 78r06            [12]  206 	mov	r0,#_strpbrk_ret_1_22
      000083 EA               [12]  207 	mov	a,r2
      000084 F2               [24]  208 	movx	@r0,a
      000085 08               [12]  209 	inc	r0
      000086 EB               [12]  210 	mov	a,r3
      000087 F2               [24]  211 	movx	@r0,a
      000088 08               [12]  212 	inc	r0
      000089 EC               [12]  213 	mov	a,r4
      00008A F2               [24]  214 	movx	@r0,a
      00008B                        215 00102$:
                                    216 ;	_strpbrk.c:44: control++;
      00008B 0D               [12]  217 	inc	r5
      00008C BD 00 92         [24]  218 	cjne	r5,#0x00,00105$
      00008F 0E               [12]  219 	inc	r6
      000090 80 8F            [24]  220 	sjmp	00105$
      000092                        221 00107$:
                                    222 ;	_strpbrk.c:47: return (ret);
      000092 78r06            [12]  223 	mov	r0,#_strpbrk_ret_1_22
      000094 E2               [24]  224 	movx	a,@r0
      000095 F5 82            [12]  225 	mov	dpl,a
      000097 08               [12]  226 	inc	r0
      000098 E2               [24]  227 	movx	a,@r0
      000099 F5 83            [12]  228 	mov	dph,a
      00009B 08               [12]  229 	inc	r0
      00009C E2               [24]  230 	movx	a,@r0
      00009D F5 F0            [12]  231 	mov	b,a
      00009F 22               [24]  232 	ret
                                    233 	.area CSEG    (CODE)
                                    234 	.area CONST   (CODE)
                                    235 	.area XINIT   (CODE)
                                    236 	.area CABS    (ABS,CODE)
