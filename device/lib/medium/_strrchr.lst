                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:27:53 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _strrchr
                                      7 	.optsdcc -mmcs51 --model-medium
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _strrchr_PARM_2
                                     13 	.globl _strrchr
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram 
                                     35 ;--------------------------------------------------------
                                     36 ;--------------------------------------------------------
                                     37 ; indirectly addressable internal ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area ISEG    (DATA)
                                     40 ;--------------------------------------------------------
                                     41 ; absolute internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area IABS    (ABS,DATA)
                                     44 	.area IABS    (ABS,DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; bit data
                                     47 ;--------------------------------------------------------
                                     48 	.area BSEG    (BIT)
                                     49 ;--------------------------------------------------------
                                     50 ; paged external ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area PSEG    (PAG,XDATA)
      000000                         53 _strrchr_PARM_2:
      000000                         54 	.ds 1
      000001                         55 _strrchr_start_1_22:
      000001                         56 	.ds 3
                                     57 ;--------------------------------------------------------
                                     58 ; external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XSEG    (XDATA)
                                     61 ;--------------------------------------------------------
                                     62 ; absolute external ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XABS    (ABS,XDATA)
                                     65 ;--------------------------------------------------------
                                     66 ; external initialized ram data
                                     67 ;--------------------------------------------------------
                                     68 	.area XISEG   (XDATA)
                                     69 	.area HOME    (CODE)
                                     70 	.area GSINIT0 (CODE)
                                     71 	.area GSINIT1 (CODE)
                                     72 	.area GSINIT2 (CODE)
                                     73 	.area GSINIT3 (CODE)
                                     74 	.area GSINIT4 (CODE)
                                     75 	.area GSINIT5 (CODE)
                                     76 	.area GSINIT  (CODE)
                                     77 	.area GSFINAL (CODE)
                                     78 	.area CSEG    (CODE)
                                     79 ;--------------------------------------------------------
                                     80 ; global & static initialisations
                                     81 ;--------------------------------------------------------
                                     82 	.area HOME    (CODE)
                                     83 	.area GSINIT  (CODE)
                                     84 	.area GSFINAL (CODE)
                                     85 	.area GSINIT  (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; Home
                                     88 ;--------------------------------------------------------
                                     89 	.area HOME    (CODE)
                                     90 	.area HOME    (CODE)
                                     91 ;--------------------------------------------------------
                                     92 ; code
                                     93 ;--------------------------------------------------------
                                     94 	.area CSEG    (CODE)
                                     95 ;------------------------------------------------------------
                                     96 ;Allocation info for local variables in function 'strrchr'
                                     97 ;------------------------------------------------------------
                                     98 ;	_strrchr.c:32: char * strrchr (
                                     99 ;	-----------------------------------------
                                    100 ;	 function strrchr
                                    101 ;	-----------------------------------------
      000000                        102 _strrchr:
                           000007   103 	ar7 = 0x07
                           000006   104 	ar6 = 0x06
                           000005   105 	ar5 = 0x05
                           000004   106 	ar4 = 0x04
                           000003   107 	ar3 = 0x03
                           000002   108 	ar2 = 0x02
                           000001   109 	ar1 = 0x01
                           000000   110 	ar0 = 0x00
      000000 AD 82            [24]  111 	mov	r5,dpl
      000002 AE 83            [24]  112 	mov	r6,dph
      000004 AF F0            [24]  113 	mov	r7,b
                                    114 ;	_strrchr.c:43: const char * start = string;
      000006 78r01            [12]  115 	mov	r0,#_strrchr_start_1_22
      000008 ED               [12]  116 	mov	a,r5
      000009 F2               [24]  117 	movx	@r0,a
      00000A 08               [12]  118 	inc	r0
      00000B EE               [12]  119 	mov	a,r6
      00000C F2               [24]  120 	movx	@r0,a
      00000D 08               [12]  121 	inc	r0
      00000E EF               [12]  122 	mov	a,r7
      00000F F2               [24]  123 	movx	@r0,a
                                    124 ;	_strrchr.c:45: while (*string++)                       /* find end of string */
      000010                        125 00101$:
      000010 8D 82            [24]  126 	mov	dpl,r5
      000012 8E 83            [24]  127 	mov	dph,r6
      000014 8F F0            [24]  128 	mov	b,r7
      000016 12r00r00         [24]  129 	lcall	__gptrget
      000019 FC               [12]  130 	mov	r4,a
      00001A A3               [24]  131 	inc	dptr
      00001B AD 82            [24]  132 	mov	r5,dpl
      00001D AE 83            [24]  133 	mov	r6,dph
      00001F EC               [12]  134 	mov	a,r4
      000020 70 EE            [24]  135 	jnz	00101$
                                    136 ;	_strrchr.c:48: while (--string != start && *string != ch)
      000022                        137 00105$:
      000022 1D               [12]  138 	dec	r5
      000023 BD FF 01         [24]  139 	cjne	r5,#0xFF,00129$
      000026 1E               [12]  140 	dec	r6
      000027                        141 00129$:
      000027 78r01            [12]  142 	mov	r0,#_strrchr_start_1_22
      000029 C0 05            [24]  143 	push	ar5
      00002B C0 06            [24]  144 	push	ar6
      00002D C0 07            [24]  145 	push	ar7
      00002F E2               [24]  146 	movx	a,@r0
      000030 F5 82            [12]  147 	mov	dpl,a
      000032 08               [12]  148 	inc	r0
      000033 E2               [24]  149 	movx	a,@r0
      000034 F5 83            [12]  150 	mov	dph,a
      000036 08               [12]  151 	inc	r0
      000037 E2               [24]  152 	movx	a,@r0
      000038 F5 F0            [12]  153 	mov	b,a
      00003A 12r00r00         [24]  154 	lcall	___gptr_cmp
      00003D 15 81            [12]  155 	dec	sp
      00003F 15 81            [12]  156 	dec	sp
      000041 15 81            [12]  157 	dec	sp
      000043 60 10            [24]  158 	jz	00107$
      000045 8D 82            [24]  159 	mov	dpl,r5
      000047 8E 83            [24]  160 	mov	dph,r6
      000049 8F F0            [24]  161 	mov	b,r7
      00004B 12r00r00         [24]  162 	lcall	__gptrget
      00004E FC               [12]  163 	mov	r4,a
      00004F 78r00            [12]  164 	mov	r0,#_strrchr_PARM_2
      000051 E2               [24]  165 	movx	a,@r0
      000052 B5 04 CD         [24]  166 	cjne	a,ar4,00105$
      000055                        167 00107$:
                                    168 ;	_strrchr.c:51: if (*string == ch)                /* char found ? */
      000055 8D 82            [24]  169 	mov	dpl,r5
      000057 8E 83            [24]  170 	mov	dph,r6
      000059 8F F0            [24]  171 	mov	b,r7
      00005B 12r00r00         [24]  172 	lcall	__gptrget
      00005E FC               [12]  173 	mov	r4,a
      00005F 78r00            [12]  174 	mov	r0,#_strrchr_PARM_2
      000061 E2               [24]  175 	movx	a,@r0
      000062 B5 04 07         [24]  176 	cjne	a,ar4,00109$
                                    177 ;	_strrchr.c:52: return( (char *)string );
      000065 8D 82            [24]  178 	mov	dpl,r5
      000067 8E 83            [24]  179 	mov	dph,r6
      000069 8F F0            [24]  180 	mov	b,r7
      00006B 22               [24]  181 	ret
      00006C                        182 00109$:
                                    183 ;	_strrchr.c:54: return (NULL) ;
      00006C 90 00 00         [24]  184 	mov	dptr,#0x0000
      00006F 75 F0 00         [24]  185 	mov	b,#0x00
      000072 22               [24]  186 	ret
                                    187 	.area CSEG    (CODE)
                                    188 	.area CONST   (CODE)
                                    189 	.area XINIT   (CODE)
                                    190 	.area CABS    (ABS,CODE)
