                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:27:52 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module powf
                                      7 	.optsdcc -mmcs51 --model-medium
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _logf
                                     13 	.globl _expf
                                     14 	.globl _powf_PARM_2
                                     15 	.globl _powf
                                     16 ;--------------------------------------------------------
                                     17 ; special function registers
                                     18 ;--------------------------------------------------------
                                     19 	.area RSEG    (ABS,DATA)
      000000                         20 	.org 0x0000
                                     21 ;--------------------------------------------------------
                                     22 ; special function bits
                                     23 ;--------------------------------------------------------
                                     24 	.area RSEG    (ABS,DATA)
      000000                         25 	.org 0x0000
                                     26 ;--------------------------------------------------------
                                     27 ; overlayable register banks
                                     28 ;--------------------------------------------------------
                                     29 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         30 	.ds 8
                                     31 ;--------------------------------------------------------
                                     32 ; internal ram data
                                     33 ;--------------------------------------------------------
                                     34 	.area DSEG    (DATA)
                                     35 ;--------------------------------------------------------
                                     36 ; overlayable items in internal ram 
                                     37 ;--------------------------------------------------------
                                     38 ;--------------------------------------------------------
                                     39 ; indirectly addressable internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area ISEG    (DATA)
                                     42 ;--------------------------------------------------------
                                     43 ; absolute internal ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area IABS    (ABS,DATA)
                                     46 	.area IABS    (ABS,DATA)
                                     47 ;--------------------------------------------------------
                                     48 ; bit data
                                     49 ;--------------------------------------------------------
                                     50 	.area BSEG    (BIT)
                                     51 ;--------------------------------------------------------
                                     52 ; paged external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area PSEG    (PAG,XDATA)
      000000                         55 _powf_PARM_2:
      000000                         56 	.ds 4
                                     57 ;--------------------------------------------------------
                                     58 ; external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XSEG    (XDATA)
                                     61 ;--------------------------------------------------------
                                     62 ; absolute external ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XABS    (ABS,XDATA)
                                     65 ;--------------------------------------------------------
                                     66 ; external initialized ram data
                                     67 ;--------------------------------------------------------
                                     68 	.area XISEG   (XDATA)
                                     69 	.area HOME    (CODE)
                                     70 	.area GSINIT0 (CODE)
                                     71 	.area GSINIT1 (CODE)
                                     72 	.area GSINIT2 (CODE)
                                     73 	.area GSINIT3 (CODE)
                                     74 	.area GSINIT4 (CODE)
                                     75 	.area GSINIT5 (CODE)
                                     76 	.area GSINIT  (CODE)
                                     77 	.area GSFINAL (CODE)
                                     78 	.area CSEG    (CODE)
                                     79 ;--------------------------------------------------------
                                     80 ; global & static initialisations
                                     81 ;--------------------------------------------------------
                                     82 	.area HOME    (CODE)
                                     83 	.area GSINIT  (CODE)
                                     84 	.area GSFINAL (CODE)
                                     85 	.area GSINIT  (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; Home
                                     88 ;--------------------------------------------------------
                                     89 	.area HOME    (CODE)
                                     90 	.area HOME    (CODE)
                                     91 ;--------------------------------------------------------
                                     92 ; code
                                     93 ;--------------------------------------------------------
                                     94 	.area CSEG    (CODE)
                                     95 ;------------------------------------------------------------
                                     96 ;Allocation info for local variables in function 'powf'
                                     97 ;------------------------------------------------------------
                                     98 ;	powf.c:35: float powf(const float x, const float y)
                                     99 ;	-----------------------------------------
                                    100 ;	 function powf
                                    101 ;	-----------------------------------------
      000000                        102 _powf:
                           000007   103 	ar7 = 0x07
                           000006   104 	ar6 = 0x06
                           000005   105 	ar5 = 0x05
                           000004   106 	ar4 = 0x04
                           000003   107 	ar3 = 0x03
                           000002   108 	ar2 = 0x02
                           000001   109 	ar1 = 0x01
                           000000   110 	ar0 = 0x00
      000000 AC 82            [24]  111 	mov	r4,dpl
      000002 AD 83            [24]  112 	mov	r5,dph
      000004 AE F0            [24]  113 	mov	r6,b
      000006 FF               [12]  114 	mov	r7,a
                                    115 ;	powf.c:37: if(y == 0.0) return 1.0;
      000007 78r00            [12]  116 	mov	r0,#_powf_PARM_2
      000009 E2               [24]  117 	movx	a,@r0
      00000A F5 F0            [12]  118 	mov	b,a
      00000C 08               [12]  119 	inc	r0
      00000D E2               [24]  120 	movx	a,@r0
      00000E 42 F0            [12]  121 	orl	b,a
      000010 08               [12]  122 	inc	r0
      000011 E2               [24]  123 	movx	a,@r0
      000012 42 F0            [12]  124 	orl	b,a
      000014 08               [12]  125 	inc	r0
      000015 E2               [24]  126 	movx	a,@r0
      000016 54 7F            [12]  127 	anl	a,#0x7F
      000018 45 F0            [12]  128 	orl	a,b
      00001A 70 09            [24]  129 	jnz	00102$
      00001C 90 00 00         [24]  130 	mov	dptr,#0x0000
      00001F 75 F0 80         [24]  131 	mov	b,#0x80
      000022 74 3F            [12]  132 	mov	a,#0x3F
      000024 22               [24]  133 	ret
      000025                        134 00102$:
                                    135 ;	powf.c:38: if(y==1.0) return x;
      000025 C0 07            [24]  136 	push	ar7
      000027 C0 06            [24]  137 	push	ar6
      000029 C0 05            [24]  138 	push	ar5
      00002B C0 04            [24]  139 	push	ar4
      00002D E4               [12]  140 	clr	a
      00002E C0 E0            [24]  141 	push	acc
      000030 C0 E0            [24]  142 	push	acc
      000032 74 80            [12]  143 	mov	a,#0x80
      000034 C0 E0            [24]  144 	push	acc
      000036 74 3F            [12]  145 	mov	a,#0x3F
      000038 C0 E0            [24]  146 	push	acc
      00003A 78r00            [12]  147 	mov	r0,#_powf_PARM_2
      00003C E2               [24]  148 	movx	a,@r0
      00003D F5 82            [12]  149 	mov	dpl,a
      00003F 08               [12]  150 	inc	r0
      000040 E2               [24]  151 	movx	a,@r0
      000041 F5 83            [12]  152 	mov	dph,a
      000043 08               [12]  153 	inc	r0
      000044 E2               [24]  154 	movx	a,@r0
      000045 F5 F0            [12]  155 	mov	b,a
      000047 08               [12]  156 	inc	r0
      000048 E2               [24]  157 	movx	a,@r0
      000049 12r00r00         [24]  158 	lcall	___fseq
      00004C AB 82            [24]  159 	mov	r3,dpl
      00004E E5 81            [12]  160 	mov	a,sp
      000050 24 FC            [12]  161 	add	a,#0xfc
      000052 F5 81            [12]  162 	mov	sp,a
      000054 D0 04            [24]  163 	pop	ar4
      000056 D0 05            [24]  164 	pop	ar5
      000058 D0 06            [24]  165 	pop	ar6
      00005A D0 07            [24]  166 	pop	ar7
      00005C EB               [12]  167 	mov	a,r3
      00005D 60 08            [24]  168 	jz	00104$
      00005F 8C 82            [24]  169 	mov	dpl,r4
      000061 8D 83            [24]  170 	mov	dph,r5
      000063 8E F0            [24]  171 	mov	b,r6
      000065 EF               [12]  172 	mov	a,r7
      000066 22               [24]  173 	ret
      000067                        174 00104$:
                                    175 ;	powf.c:39: if(x <= 0.0) return 0.0;
      000067 C0 07            [24]  176 	push	ar7
      000069 C0 06            [24]  177 	push	ar6
      00006B C0 05            [24]  178 	push	ar5
      00006D C0 04            [24]  179 	push	ar4
      00006F E4               [12]  180 	clr	a
      000070 C0 E0            [24]  181 	push	acc
      000072 C0 E0            [24]  182 	push	acc
      000074 C0 E0            [24]  183 	push	acc
      000076 C0 E0            [24]  184 	push	acc
      000078 8C 82            [24]  185 	mov	dpl,r4
      00007A 8D 83            [24]  186 	mov	dph,r5
      00007C 8E F0            [24]  187 	mov	b,r6
      00007E EF               [12]  188 	mov	a,r7
      00007F 12r00r00         [24]  189 	lcall	___fsgt
      000082 AB 82            [24]  190 	mov	r3,dpl
      000084 E5 81            [12]  191 	mov	a,sp
      000086 24 FC            [12]  192 	add	a,#0xfc
      000088 F5 81            [12]  193 	mov	sp,a
      00008A D0 04            [24]  194 	pop	ar4
      00008C D0 05            [24]  195 	pop	ar5
      00008E D0 06            [24]  196 	pop	ar6
      000090 D0 07            [24]  197 	pop	ar7
      000092 EB               [12]  198 	mov	a,r3
      000093 70 07            [24]  199 	jnz	00106$
      000095 90 00 00         [24]  200 	mov	dptr,#(0x00&0x00ff)
      000098 E4               [12]  201 	clr	a
      000099 F5 F0            [12]  202 	mov	b,a
      00009B 22               [24]  203 	ret
      00009C                        204 00106$:
                                    205 ;	powf.c:40: return expf(logf(x) * y);
      00009C 8C 82            [24]  206 	mov	dpl,r4
      00009E 8D 83            [24]  207 	mov	dph,r5
      0000A0 8E F0            [24]  208 	mov	b,r6
      0000A2 EF               [12]  209 	mov	a,r7
      0000A3 12r00r00         [24]  210 	lcall	_logf
      0000A6 AC 82            [24]  211 	mov	r4,dpl
      0000A8 AD 83            [24]  212 	mov	r5,dph
      0000AA AE F0            [24]  213 	mov	r6,b
      0000AC FF               [12]  214 	mov	r7,a
      0000AD 78r00            [12]  215 	mov	r0,#_powf_PARM_2
      0000AF E2               [24]  216 	movx	a,@r0
      0000B0 C0 E0            [24]  217 	push	acc
      0000B2 08               [12]  218 	inc	r0
      0000B3 E2               [24]  219 	movx	a,@r0
      0000B4 C0 E0            [24]  220 	push	acc
      0000B6 08               [12]  221 	inc	r0
      0000B7 E2               [24]  222 	movx	a,@r0
      0000B8 C0 E0            [24]  223 	push	acc
      0000BA 08               [12]  224 	inc	r0
      0000BB E2               [24]  225 	movx	a,@r0
      0000BC C0 E0            [24]  226 	push	acc
      0000BE 8C 82            [24]  227 	mov	dpl,r4
      0000C0 8D 83            [24]  228 	mov	dph,r5
      0000C2 8E F0            [24]  229 	mov	b,r6
      0000C4 EF               [12]  230 	mov	a,r7
      0000C5 12r00r00         [24]  231 	lcall	___fsmul
      0000C8 AC 82            [24]  232 	mov	r4,dpl
      0000CA AD 83            [24]  233 	mov	r5,dph
      0000CC AE F0            [24]  234 	mov	r6,b
      0000CE FF               [12]  235 	mov	r7,a
      0000CF E5 81            [12]  236 	mov	a,sp
      0000D1 24 FC            [12]  237 	add	a,#0xfc
      0000D3 F5 81            [12]  238 	mov	sp,a
      0000D5 8C 82            [24]  239 	mov	dpl,r4
      0000D7 8D 83            [24]  240 	mov	dph,r5
      0000D9 8E F0            [24]  241 	mov	b,r6
      0000DB EF               [12]  242 	mov	a,r7
      0000DC 02r00r00         [24]  243 	ljmp	_expf
                                    244 	.area CSEG    (CODE)
                                    245 	.area CONST   (CODE)
                                    246 	.area XINIT   (CODE)
                                    247 	.area CABS    (ABS,CODE)
