                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:27:53 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _strtok
                                      7 	.optsdcc -mmcs51 --model-medium
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _strchr
                                     13 	.globl _strtok_PARM_2
                                     14 	.globl _strtok
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram 
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; indirectly addressable internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area ISEG    (DATA)
                                     41 ;--------------------------------------------------------
                                     42 ; absolute internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area IABS    (ABS,DATA)
                                     45 	.area IABS    (ABS,DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; bit data
                                     48 ;--------------------------------------------------------
                                     49 	.area BSEG    (BIT)
                                     50 ;--------------------------------------------------------
                                     51 ; paged external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area PSEG    (PAG,XDATA)
      000000                         54 _strtok_PARM_2:
      000000                         55 	.ds 3
      000003                         56 _strtok_s_1_22:
      000003                         57 	.ds 3
                                     58 ;--------------------------------------------------------
                                     59 ; external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XSEG    (XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; absolute external ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XABS    (ABS,XDATA)
                                     66 ;--------------------------------------------------------
                                     67 ; external initialized ram data
                                     68 ;--------------------------------------------------------
                                     69 	.area XISEG   (XDATA)
                                     70 	.area HOME    (CODE)
                                     71 	.area GSINIT0 (CODE)
                                     72 	.area GSINIT1 (CODE)
                                     73 	.area GSINIT2 (CODE)
                                     74 	.area GSINIT3 (CODE)
                                     75 	.area GSINIT4 (CODE)
                                     76 	.area GSINIT5 (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area CSEG    (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; global & static initialisations
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area GSINIT  (CODE)
                                     85 	.area GSFINAL (CODE)
                                     86 	.area GSINIT  (CODE)
                                     87 ;--------------------------------------------------------
                                     88 ; Home
                                     89 ;--------------------------------------------------------
                                     90 	.area HOME    (CODE)
                                     91 	.area HOME    (CODE)
                                     92 ;--------------------------------------------------------
                                     93 ; code
                                     94 ;--------------------------------------------------------
                                     95 	.area CSEG    (CODE)
                                     96 ;------------------------------------------------------------
                                     97 ;Allocation info for local variables in function 'strtok'
                                     98 ;------------------------------------------------------------
                                     99 ;	_strtok.c:36: char * strtok (
                                    100 ;	-----------------------------------------
                                    101 ;	 function strtok
                                    102 ;	-----------------------------------------
      000000                        103 _strtok:
                           000007   104 	ar7 = 0x07
                           000006   105 	ar6 = 0x06
                           000005   106 	ar5 = 0x05
                           000004   107 	ar4 = 0x04
                           000003   108 	ar3 = 0x03
                           000002   109 	ar2 = 0x02
                           000001   110 	ar1 = 0x01
                           000000   111 	ar0 = 0x00
      000000 AD 82            [24]  112 	mov	r5,dpl
      000002 AE 83            [24]  113 	mov	r6,dph
      000004 AF F0            [24]  114 	mov	r7,b
                                    115 ;	_strtok.c:43: if ( str )
      000006 ED               [12]  116 	mov	a,r5
      000007 4E               [12]  117 	orl	a,r6
      000008 60 0A            [24]  118 	jz	00102$
                                    119 ;	_strtok.c:44: s = str ;
      00000A 78r03            [12]  120 	mov	r0,#_strtok_s_1_22
      00000C ED               [12]  121 	mov	a,r5
      00000D F2               [24]  122 	movx	@r0,a
      00000E 08               [12]  123 	inc	r0
      00000F EE               [12]  124 	mov	a,r6
      000010 F2               [24]  125 	movx	@r0,a
      000011 08               [12]  126 	inc	r0
      000012 EF               [12]  127 	mov	a,r7
      000013 F2               [24]  128 	movx	@r0,a
      000014                        129 00102$:
                                    130 ;	_strtok.c:45: if ( !s )
      000014 78r03            [12]  131 	mov	r0,#_strtok_s_1_22
      000016 E2               [24]  132 	movx	a,@r0
      000017 F5 F0            [12]  133 	mov	b,a
      000019 08               [12]  134 	inc	r0
      00001A E2               [24]  135 	movx	a,@r0
      00001B 45 F0            [12]  136 	orl	a,b
                                    137 ;	_strtok.c:46: return NULL;
      00001D 70 06            [24]  138 	jnz	00108$
      00001F 90 00 00         [24]  139 	mov	dptr,#0x0000
      000022 F5 F0            [12]  140 	mov	b,a
      000024 22               [24]  141 	ret
                                    142 ;	_strtok.c:48: while (*s) {
      000025                        143 00108$:
      000025 78r03            [12]  144 	mov	r0,#_strtok_s_1_22
      000027 E2               [24]  145 	movx	a,@r0
      000028 FD               [12]  146 	mov	r5,a
      000029 08               [12]  147 	inc	r0
      00002A E2               [24]  148 	movx	a,@r0
      00002B FE               [12]  149 	mov	r6,a
      00002C 08               [12]  150 	inc	r0
      00002D E2               [24]  151 	movx	a,@r0
      00002E FF               [12]  152 	mov	r7,a
      00002F 8D 82            [24]  153 	mov	dpl,r5
      000031 8E 83            [24]  154 	mov	dph,r6
      000033 8F F0            [24]  155 	mov	b,r7
      000035 12r00r00         [24]  156 	lcall	__gptrget
      000038 FF               [12]  157 	mov	r7,a
      000039 60 2B            [24]  158 	jz	00110$
                                    159 ;	_strtok.c:49: if (strchr(control,*s))
      00003B 78r00            [12]  160 	mov	r0,#_strchr_PARM_2
      00003D EF               [12]  161 	mov	a,r7
      00003E F2               [24]  162 	movx	@r0,a
      00003F 78r00            [12]  163 	mov	r0,#_strtok_PARM_2
      000041 E2               [24]  164 	movx	a,@r0
      000042 F5 82            [12]  165 	mov	dpl,a
      000044 08               [12]  166 	inc	r0
      000045 E2               [24]  167 	movx	a,@r0
      000046 F5 83            [12]  168 	mov	dph,a
      000048 08               [12]  169 	inc	r0
      000049 E2               [24]  170 	movx	a,@r0
      00004A F5 F0            [12]  171 	mov	b,a
      00004C 12r00r00         [24]  172 	lcall	_strchr
      00004F AD 82            [24]  173 	mov	r5,dpl
      000051 AE 83            [24]  174 	mov	r6,dph
      000053 AF F0            [24]  175 	mov	r7,b
      000055 ED               [12]  176 	mov	a,r5
      000056 4E               [12]  177 	orl	a,r6
      000057 60 0D            [24]  178 	jz	00110$
                                    179 ;	_strtok.c:50: s++;
      000059 78r03            [12]  180 	mov	r0,#_strtok_s_1_22
      00005B E2               [24]  181 	movx	a,@r0
      00005C 24 01            [12]  182 	add	a,#0x01
      00005E F2               [24]  183 	movx	@r0,a
      00005F 08               [12]  184 	inc	r0
      000060 E2               [24]  185 	movx	a,@r0
      000061 34 00            [12]  186 	addc	a,#0x00
      000063 F2               [24]  187 	movx	@r0,a
                                    188 ;	_strtok.c:52: break;
      000064 80 BF            [24]  189 	sjmp	00108$
      000066                        190 00110$:
                                    191 ;	_strtok.c:55: s1 = s ;
      000066 78r03            [12]  192 	mov	r0,#_strtok_s_1_22
      000068 E2               [24]  193 	movx	a,@r0
      000069 FD               [12]  194 	mov	r5,a
      00006A 08               [12]  195 	inc	r0
      00006B E2               [24]  196 	movx	a,@r0
      00006C FE               [12]  197 	mov	r6,a
      00006D 08               [12]  198 	inc	r0
      00006E E2               [24]  199 	movx	a,@r0
      00006F FF               [12]  200 	mov	r7,a
                                    201 ;	_strtok.c:57: while (*s) {
      000070                        202 00113$:
      000070 78r03            [12]  203 	mov	r0,#_strtok_s_1_22
      000072 E2               [24]  204 	movx	a,@r0
      000073 FA               [12]  205 	mov	r2,a
      000074 08               [12]  206 	inc	r0
      000075 E2               [24]  207 	movx	a,@r0
      000076 FB               [12]  208 	mov	r3,a
      000077 08               [12]  209 	inc	r0
      000078 E2               [24]  210 	movx	a,@r0
      000079 FC               [12]  211 	mov	r4,a
      00007A 8A 82            [24]  212 	mov	dpl,r2
      00007C 8B 83            [24]  213 	mov	dph,r3
      00007E 8C F0            [24]  214 	mov	b,r4
      000080 12r00r00         [24]  215 	lcall	__gptrget
      000083 FC               [12]  216 	mov	r4,a
      000084 60 5D            [24]  217 	jz	00115$
                                    218 ;	_strtok.c:58: if (strchr(control,*s)) {
      000086 78r00            [12]  219 	mov	r0,#_strchr_PARM_2
      000088 EC               [12]  220 	mov	a,r4
      000089 F2               [24]  221 	movx	@r0,a
      00008A 78r00            [12]  222 	mov	r0,#_strtok_PARM_2
      00008C E2               [24]  223 	movx	a,@r0
      00008D F5 82            [12]  224 	mov	dpl,a
      00008F 08               [12]  225 	inc	r0
      000090 E2               [24]  226 	movx	a,@r0
      000091 F5 83            [12]  227 	mov	dph,a
      000093 08               [12]  228 	inc	r0
      000094 E2               [24]  229 	movx	a,@r0
      000095 F5 F0            [12]  230 	mov	b,a
      000097 C0 07            [24]  231 	push	ar7
      000099 C0 06            [24]  232 	push	ar6
      00009B C0 05            [24]  233 	push	ar5
      00009D 12r00r00         [24]  234 	lcall	_strchr
      0000A0 AA 82            [24]  235 	mov	r2,dpl
      0000A2 AB 83            [24]  236 	mov	r3,dph
      0000A4 AC F0            [24]  237 	mov	r4,b
      0000A6 D0 05            [24]  238 	pop	ar5
      0000A8 D0 06            [24]  239 	pop	ar6
      0000AA D0 07            [24]  240 	pop	ar7
      0000AC EA               [12]  241 	mov	a,r2
      0000AD 4B               [12]  242 	orl	a,r3
      0000AE 60 26            [24]  243 	jz	00112$
                                    244 ;	_strtok.c:59: *s++ = '\0';
      0000B0 78r03            [12]  245 	mov	r0,#_strtok_s_1_22
      0000B2 E2               [24]  246 	movx	a,@r0
      0000B3 FA               [12]  247 	mov	r2,a
      0000B4 08               [12]  248 	inc	r0
      0000B5 E2               [24]  249 	movx	a,@r0
      0000B6 FB               [12]  250 	mov	r3,a
      0000B7 08               [12]  251 	inc	r0
      0000B8 E2               [24]  252 	movx	a,@r0
      0000B9 FC               [12]  253 	mov	r4,a
      0000BA 8A 82            [24]  254 	mov	dpl,r2
      0000BC 8B 83            [24]  255 	mov	dph,r3
      0000BE 8C F0            [24]  256 	mov	b,r4
      0000C0 E4               [12]  257 	clr	a
      0000C1 12r00r00         [24]  258 	lcall	__gptrput
      0000C4 78r03            [12]  259 	mov	r0,#_strtok_s_1_22
      0000C6 E2               [24]  260 	movx	a,@r0
      0000C7 24 01            [12]  261 	add	a,#0x01
      0000C9 F2               [24]  262 	movx	@r0,a
      0000CA 08               [12]  263 	inc	r0
      0000CB E2               [24]  264 	movx	a,@r0
      0000CC 34 00            [12]  265 	addc	a,#0x00
      0000CE F2               [24]  266 	movx	@r0,a
                                    267 ;	_strtok.c:60: return s1 ;
      0000CF 8D 82            [24]  268 	mov	dpl,r5
      0000D1 8E 83            [24]  269 	mov	dph,r6
      0000D3 8F F0            [24]  270 	mov	b,r7
      0000D5 22               [24]  271 	ret
      0000D6                        272 00112$:
                                    273 ;	_strtok.c:62: s++ ;
      0000D6 78r03            [12]  274 	mov	r0,#_strtok_s_1_22
      0000D8 E2               [24]  275 	movx	a,@r0
      0000D9 24 01            [12]  276 	add	a,#0x01
      0000DB F2               [24]  277 	movx	@r0,a
      0000DC 08               [12]  278 	inc	r0
      0000DD E2               [24]  279 	movx	a,@r0
      0000DE 34 00            [12]  280 	addc	a,#0x00
      0000E0 F2               [24]  281 	movx	@r0,a
      0000E1 80 8D            [24]  282 	sjmp	00113$
      0000E3                        283 00115$:
                                    284 ;	_strtok.c:65: s = NULL;
      0000E3 78r03            [12]  285 	mov	r0,#_strtok_s_1_22
      0000E5 E4               [12]  286 	clr	a
      0000E6 F2               [24]  287 	movx	@r0,a
      0000E7 08               [12]  288 	inc	r0
      0000E8 F2               [24]  289 	movx	@r0,a
      0000E9 08               [12]  290 	inc	r0
      0000EA F2               [24]  291 	movx	@r0,a
                                    292 ;	_strtok.c:67: if (*s1)
      0000EB 8D 82            [24]  293 	mov	dpl,r5
      0000ED 8E 83            [24]  294 	mov	dph,r6
      0000EF 8F F0            [24]  295 	mov	b,r7
      0000F1 12r00r00         [24]  296 	lcall	__gptrget
      0000F4 60 07            [24]  297 	jz	00117$
                                    298 ;	_strtok.c:68: return s1;
      0000F6 8D 82            [24]  299 	mov	dpl,r5
      0000F8 8E 83            [24]  300 	mov	dph,r6
      0000FA 8F F0            [24]  301 	mov	b,r7
      0000FC 22               [24]  302 	ret
      0000FD                        303 00117$:
                                    304 ;	_strtok.c:70: return NULL;
      0000FD 90 00 00         [24]  305 	mov	dptr,#0x0000
      000100 75 F0 00         [24]  306 	mov	b,#0x00
      000103 22               [24]  307 	ret
                                    308 	.area CSEG    (CODE)
                                    309 	.area CONST   (CODE)
                                    310 	.area XINIT   (CODE)
                                    311 	.area CABS    (ABS,CODE)
