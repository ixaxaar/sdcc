                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:27:53 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _memcpy
                                      7 	.optsdcc -mmcs51 --model-medium
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _memcpy_PARM_3
                                     13 	.globl _memcpy_PARM_2
                                     14 	.globl _memcpy
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram 
                                     36 ;--------------------------------------------------------
                                     37 	.area	OSEG    (OVR,DATA)
      000000                         38 _memcpy_sloc0_1_0:
      000000                         39 	.ds 3
      000003                         40 _memcpy_sloc1_1_0:
      000003                         41 	.ds 2
                                     42 ;--------------------------------------------------------
                                     43 ; indirectly addressable internal ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area ISEG    (DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; absolute internal ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area IABS    (ABS,DATA)
                                     50 	.area IABS    (ABS,DATA)
                                     51 ;--------------------------------------------------------
                                     52 ; bit data
                                     53 ;--------------------------------------------------------
                                     54 	.area BSEG    (BIT)
                                     55 ;--------------------------------------------------------
                                     56 ; paged external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area PSEG    (PAG,XDATA)
      000000                         59 _memcpy_PARM_2:
      000000                         60 	.ds 3
      000003                         61 _memcpy_PARM_3:
      000003                         62 	.ds 2
      000005                         63 _memcpy_ret_1_22:
      000005                         64 	.ds 3
                                     65 ;--------------------------------------------------------
                                     66 ; external ram data
                                     67 ;--------------------------------------------------------
                                     68 	.area XSEG    (XDATA)
                                     69 ;--------------------------------------------------------
                                     70 ; absolute external ram data
                                     71 ;--------------------------------------------------------
                                     72 	.area XABS    (ABS,XDATA)
                                     73 ;--------------------------------------------------------
                                     74 ; external initialized ram data
                                     75 ;--------------------------------------------------------
                                     76 	.area XISEG   (XDATA)
                                     77 	.area HOME    (CODE)
                                     78 	.area GSINIT0 (CODE)
                                     79 	.area GSINIT1 (CODE)
                                     80 	.area GSINIT2 (CODE)
                                     81 	.area GSINIT3 (CODE)
                                     82 	.area GSINIT4 (CODE)
                                     83 	.area GSINIT5 (CODE)
                                     84 	.area GSINIT  (CODE)
                                     85 	.area GSFINAL (CODE)
                                     86 	.area CSEG    (CODE)
                                     87 ;--------------------------------------------------------
                                     88 ; global & static initialisations
                                     89 ;--------------------------------------------------------
                                     90 	.area HOME    (CODE)
                                     91 	.area GSINIT  (CODE)
                                     92 	.area GSFINAL (CODE)
                                     93 	.area GSINIT  (CODE)
                                     94 ;--------------------------------------------------------
                                     95 ; Home
                                     96 ;--------------------------------------------------------
                                     97 	.area HOME    (CODE)
                                     98 	.area HOME    (CODE)
                                     99 ;--------------------------------------------------------
                                    100 ; code
                                    101 ;--------------------------------------------------------
                                    102 	.area CSEG    (CODE)
                                    103 ;------------------------------------------------------------
                                    104 ;Allocation info for local variables in function 'memcpy'
                                    105 ;------------------------------------------------------------
                                    106 ;sloc0                     Allocated with name '_memcpy_sloc0_1_0'
                                    107 ;sloc1                     Allocated with name '_memcpy_sloc1_1_0'
                                    108 ;------------------------------------------------------------
                                    109 ;	_memcpy.c:36: void * memcpy (
                                    110 ;	-----------------------------------------
                                    111 ;	 function memcpy
                                    112 ;	-----------------------------------------
      000000                        113 _memcpy:
                           000007   114 	ar7 = 0x07
                           000006   115 	ar6 = 0x06
                           000005   116 	ar5 = 0x05
                           000004   117 	ar4 = 0x04
                           000003   118 	ar3 = 0x03
                           000002   119 	ar2 = 0x02
                           000001   120 	ar1 = 0x01
                           000000   121 	ar0 = 0x00
      000000 AD 82            [24]  122 	mov	r5,dpl
      000002 AE 83            [24]  123 	mov	r6,dph
      000004 AF F0            [24]  124 	mov	r7,b
                                    125 ;	_memcpy.c:42: void * ret = dst;
      000006 78r05            [12]  126 	mov	r0,#_memcpy_ret_1_22
      000008 ED               [12]  127 	mov	a,r5
      000009 F2               [24]  128 	movx	@r0,a
      00000A 08               [12]  129 	inc	r0
      00000B EE               [12]  130 	mov	a,r6
      00000C F2               [24]  131 	movx	@r0,a
      00000D 08               [12]  132 	inc	r0
      00000E EF               [12]  133 	mov	a,r7
      00000F F2               [24]  134 	movx	@r0,a
                                    135 ;	_memcpy.c:43: char * d = dst;
                                    136 ;	_memcpy.c:44: char * s = src;
      000010 78r00            [12]  137 	mov	r0,#_memcpy_PARM_2
      000012 E2               [24]  138 	movx	a,@r0
      000013 F5*00            [12]  139 	mov	_memcpy_sloc0_1_0,a
      000015 08               [12]  140 	inc	r0
      000016 E2               [24]  141 	movx	a,@r0
      000017 F5*01            [12]  142 	mov	(_memcpy_sloc0_1_0 + 1),a
      000019 08               [12]  143 	inc	r0
      00001A E2               [24]  144 	movx	a,@r0
      00001B F5*02            [12]  145 	mov	(_memcpy_sloc0_1_0 + 2),a
                                    146 ;	_memcpy.c:49: while (acount--) {
      00001D 78r03            [12]  147 	mov	r0,#_memcpy_PARM_3
      00001F E2               [24]  148 	movx	a,@r0
      000020 F5*03            [12]  149 	mov	_memcpy_sloc1_1_0,a
      000022 08               [12]  150 	inc	r0
      000023 E2               [24]  151 	movx	a,@r0
      000024 F5*04            [12]  152 	mov	(_memcpy_sloc1_1_0 + 1),a
      000026                        153 00101$:
      000026 AB*03            [24]  154 	mov	r3,_memcpy_sloc1_1_0
      000028 AC*04            [24]  155 	mov	r4,(_memcpy_sloc1_1_0 + 1)
      00002A 15*03            [12]  156 	dec	_memcpy_sloc1_1_0
      00002C 74 FF            [12]  157 	mov	a,#0xFF
      00002E B5*03 02         [24]  158 	cjne	a,_memcpy_sloc1_1_0,00113$
      000031 15*04            [12]  159 	dec	(_memcpy_sloc1_1_0 + 1)
      000033                        160 00113$:
      000033 EB               [12]  161 	mov	a,r3
      000034 4C               [12]  162 	orl	a,r4
      000035 60 25            [24]  163 	jz	00103$
                                    164 ;	_memcpy.c:50: *d++ = *s++;
      000037 85*00 82         [24]  165 	mov	dpl,_memcpy_sloc0_1_0
      00003A 85*01 83         [24]  166 	mov	dph,(_memcpy_sloc0_1_0 + 1)
      00003D 85*02 F0         [24]  167 	mov	b,(_memcpy_sloc0_1_0 + 2)
      000040 12r00r00         [24]  168 	lcall	__gptrget
      000043 FC               [12]  169 	mov	r4,a
      000044 A3               [24]  170 	inc	dptr
      000045 85 82*00         [24]  171 	mov	_memcpy_sloc0_1_0,dpl
      000048 85 83*01         [24]  172 	mov	(_memcpy_sloc0_1_0 + 1),dph
      00004B 8D 82            [24]  173 	mov	dpl,r5
      00004D 8E 83            [24]  174 	mov	dph,r6
      00004F 8F F0            [24]  175 	mov	b,r7
      000051 EC               [12]  176 	mov	a,r4
      000052 12r00r00         [24]  177 	lcall	__gptrput
      000055 A3               [24]  178 	inc	dptr
      000056 AD 82            [24]  179 	mov	r5,dpl
      000058 AE 83            [24]  180 	mov	r6,dph
      00005A 80 CA            [24]  181 	sjmp	00101$
      00005C                        182 00103$:
                                    183 ;	_memcpy.c:53: return(ret);
      00005C 78r05            [12]  184 	mov	r0,#_memcpy_ret_1_22
      00005E E2               [24]  185 	movx	a,@r0
      00005F F5 82            [12]  186 	mov	dpl,a
      000061 08               [12]  187 	inc	r0
      000062 E2               [24]  188 	movx	a,@r0
      000063 F5 83            [12]  189 	mov	dph,a
      000065 08               [12]  190 	inc	r0
      000066 E2               [24]  191 	movx	a,@r0
      000067 F5 F0            [12]  192 	mov	b,a
      000069 22               [24]  193 	ret
                                    194 	.area CSEG    (CODE)
                                    195 	.area CONST   (CODE)
                                    196 	.area XINIT   (CODE)
                                    197 	.area CABS    (ABS,CODE)
