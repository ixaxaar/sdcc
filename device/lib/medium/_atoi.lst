                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:27:53 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _atoi
                                      7 	.optsdcc -mmcs51 --model-medium
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _atoi
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
      000000                         32 _atoi_rv_1_2:
      000000                         33 	.ds 2
      000002                         34 _atoi_sloc0_1_0:
      000002                         35 	.ds 1
      000003                         36 _atoi_sloc1_1_0:
      000003                         37 	.ds 2
                                     38 ;--------------------------------------------------------
                                     39 ; overlayable items in internal ram 
                                     40 ;--------------------------------------------------------
                                     41 ;--------------------------------------------------------
                                     42 ; indirectly addressable internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area ISEG    (DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; absolute internal ram data
                                     47 ;--------------------------------------------------------
                                     48 	.area IABS    (ABS,DATA)
                                     49 	.area IABS    (ABS,DATA)
                                     50 ;--------------------------------------------------------
                                     51 ; bit data
                                     52 ;--------------------------------------------------------
                                     53 	.area BSEG    (BIT)
                                     54 ;--------------------------------------------------------
                                     55 ; paged external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area PSEG    (PAG,XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XSEG    (XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; absolute external ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XABS    (ABS,XDATA)
                                     66 ;--------------------------------------------------------
                                     67 ; external initialized ram data
                                     68 ;--------------------------------------------------------
                                     69 	.area XISEG   (XDATA)
                                     70 	.area HOME    (CODE)
                                     71 	.area GSINIT0 (CODE)
                                     72 	.area GSINIT1 (CODE)
                                     73 	.area GSINIT2 (CODE)
                                     74 	.area GSINIT3 (CODE)
                                     75 	.area GSINIT4 (CODE)
                                     76 	.area GSINIT5 (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area CSEG    (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; global & static initialisations
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area GSINIT  (CODE)
                                     85 	.area GSFINAL (CODE)
                                     86 	.area GSINIT  (CODE)
                                     87 ;--------------------------------------------------------
                                     88 ; Home
                                     89 ;--------------------------------------------------------
                                     90 	.area HOME    (CODE)
                                     91 	.area HOME    (CODE)
                                     92 ;--------------------------------------------------------
                                     93 ; code
                                     94 ;--------------------------------------------------------
                                     95 	.area CSEG    (CODE)
                                     96 ;------------------------------------------------------------
                                     97 ;Allocation info for local variables in function 'atoi'
                                     98 ;------------------------------------------------------------
                                     99 ;rv                        Allocated with name '_atoi_rv_1_2'
                                    100 ;sign                      Allocated to registers r2 
                                    101 ;sloc0                     Allocated with name '_atoi_sloc0_1_0'
                                    102 ;sloc1                     Allocated with name '_atoi_sloc1_1_0'
                                    103 ;------------------------------------------------------------
                                    104 ;	_atoi.c:29: int atoi(const char * s)
                                    105 ;	-----------------------------------------
                                    106 ;	 function atoi
                                    107 ;	-----------------------------------------
      000000                        108 _atoi:
                           000007   109 	ar7 = 0x07
                           000006   110 	ar6 = 0x06
                           000005   111 	ar5 = 0x05
                           000004   112 	ar4 = 0x04
                           000003   113 	ar3 = 0x03
                           000002   114 	ar2 = 0x02
                           000001   115 	ar1 = 0x01
                           000000   116 	ar0 = 0x00
      000000 AD 82            [24]  117 	mov	r5,dpl
      000002 AE 83            [24]  118 	mov	r6,dph
      000004 AF F0            [24]  119 	mov	r7,b
                                    120 ;	_atoi.c:31: register int rv=0; 
      000006 E4               [12]  121 	clr	a
      000007 F5*00            [12]  122 	mov	_atoi_rv_1_2,a
      000009 F5*01            [12]  123 	mov	(_atoi_rv_1_2 + 1),a
                                    124 ;	_atoi.c:35: while (*s) {
      00000B 8D 02            [24]  125 	mov	ar2,r5
      00000D 8E 03            [24]  126 	mov	ar3,r6
      00000F 8F 04            [24]  127 	mov	ar4,r7
      000011                        128 00107$:
      000011 8A 82            [24]  129 	mov	dpl,r2
      000013 8B 83            [24]  130 	mov	dph,r3
      000015 8C F0            [24]  131 	mov	b,r4
      000017 12r00r00         [24]  132 	lcall	__gptrget
      00001A F5*02            [12]  133 	mov	_atoi_sloc0_1_0,a
      00001C 60 35            [24]  134 	jz	00133$
                                    135 ;	_atoi.c:36: if (*s <= '9' && *s >= '0')
      00001E C3               [12]  136 	clr	c
      00001F 74 B9            [12]  137 	mov	a,#(0x39 ^ 0x80)
      000021 85*02 F0         [24]  138 	mov	b,_atoi_sloc0_1_0
      000024 63 F0 80         [24]  139 	xrl	b,#0x80
      000027 95 F0            [12]  140 	subb	a,b
      000029 40 08            [24]  141 	jc	00102$
      00002B E5*02            [12]  142 	mov	a,_atoi_sloc0_1_0
      00002D 64 80            [12]  143 	xrl	a,#0x80
      00002F 94 B0            [12]  144 	subb	a,#0xb0
      000031 50 20            [24]  145 	jnc	00133$
                                    146 ;	_atoi.c:37: break;
      000033                        147 00102$:
                                    148 ;	_atoi.c:38: if (*s == '-' || *s == '+') 
      000033 8A 82            [24]  149 	mov	dpl,r2
      000035 8B 83            [24]  150 	mov	dph,r3
      000037 8C F0            [24]  151 	mov	b,r4
      000039 12r00r00         [24]  152 	lcall	__gptrget
      00003C F5*02            [12]  153 	mov	_atoi_sloc0_1_0,a
      00003E 74 2D            [12]  154 	mov	a,#0x2D
      000040 B5*02 02         [24]  155 	cjne	a,_atoi_sloc0_1_0,00160$
      000043 80 0E            [24]  156 	sjmp	00133$
      000045                        157 00160$:
      000045 74 2B            [12]  158 	mov	a,#0x2B
      000047 B5*02 02         [24]  159 	cjne	a,_atoi_sloc0_1_0,00161$
      00004A 80 07            [24]  160 	sjmp	00133$
      00004C                        161 00161$:
                                    162 ;	_atoi.c:40: s++;
      00004C 0A               [12]  163 	inc	r2
      00004D BA 00 C1         [24]  164 	cjne	r2,#0x00,00107$
      000050 0B               [12]  165 	inc	r3
      000051 80 BE            [24]  166 	sjmp	00107$
      000053                        167 00133$:
      000053 8A 05            [24]  168 	mov	ar5,r2
      000055 8B 06            [24]  169 	mov	ar6,r3
      000057 8C 07            [24]  170 	mov	ar7,r4
                                    171 ;	_atoi.c:43: sign = (*s == '-');
      000059 8A 82            [24]  172 	mov	dpl,r2
      00005B 8B 83            [24]  173 	mov	dph,r3
      00005D 8C F0            [24]  174 	mov	b,r4
      00005F 12r00r00         [24]  175 	lcall	__gptrget
      000062 FC               [12]  176 	mov	r4,a
      000063 E4               [12]  177 	clr	a
      000064 BC 2D 01         [24]  178 	cjne	r4,#0x2D,00163$
      000067 04               [12]  179 	inc	a
      000068                        180 00163$:
                                    181 ;	_atoi.c:44: if (*s == '-' || *s == '+') s++;
      000068 FB               [12]  182 	mov	r3,a
      000069 FA               [12]  183 	mov	r2,a
      00006A 70 03            [24]  184 	jnz	00110$
      00006C BC 2B 05         [24]  185 	cjne	r4,#0x2B,00131$
      00006F                        186 00110$:
      00006F 0D               [12]  187 	inc	r5
      000070 BD 00 01         [24]  188 	cjne	r5,#0x00,00168$
      000073 0E               [12]  189 	inc	r6
      000074                        190 00168$:
                                    191 ;	_atoi.c:46: while (*s && *s >= '0' && *s <= '9') {
      000074                        192 00131$:
      000074                        193 00115$:
      000074 8D 82            [24]  194 	mov	dpl,r5
      000076 8E 83            [24]  195 	mov	dph,r6
      000078 8F F0            [24]  196 	mov	b,r7
      00007A 12r00r00         [24]  197 	lcall	__gptrget
      00007D FC               [12]  198 	mov	r4,a
      00007E 60 5F            [24]  199 	jz	00117$
      000080 C3               [12]  200 	clr	c
      000081 EC               [12]  201 	mov	a,r4
      000082 64 80            [12]  202 	xrl	a,#0x80
      000084 94 B0            [12]  203 	subb	a,#0xb0
      000086 40 57            [24]  204 	jc	00117$
      000088 74 B9            [12]  205 	mov	a,#(0x39 ^ 0x80)
      00008A 8C F0            [24]  206 	mov	b,r4
      00008C 63 F0 80         [24]  207 	xrl	b,#0x80
      00008F 95 F0            [12]  208 	subb	a,b
      000091 40 4C            [24]  209 	jc	00117$
                                    210 ;	_atoi.c:47: rv = (rv * 10) + (*s - '0');
      000093 C0 02            [24]  211 	push	ar2
      000095 78r00            [12]  212 	mov	r0,#__mulint_PARM_2
      000097 E5*00            [12]  213 	mov	a,_atoi_rv_1_2
      000099 F2               [24]  214 	movx	@r0,a
      00009A 08               [12]  215 	inc	r0
      00009B E5*01            [12]  216 	mov	a,(_atoi_rv_1_2 + 1)
      00009D F2               [24]  217 	movx	@r0,a
      00009E 90 00 0A         [24]  218 	mov	dptr,#0x000A
      0000A1 C0 07            [24]  219 	push	ar7
      0000A3 C0 06            [24]  220 	push	ar6
      0000A5 C0 05            [24]  221 	push	ar5
      0000A7 C0 04            [24]  222 	push	ar4
      0000A9 C0 02            [24]  223 	push	ar2
      0000AB 12r00r00         [24]  224 	lcall	__mulint
      0000AE 85 82*03         [24]  225 	mov	_atoi_sloc1_1_0,dpl
      0000B1 85 83*04         [24]  226 	mov	(_atoi_sloc1_1_0 + 1),dph
      0000B4 D0 02            [24]  227 	pop	ar2
      0000B6 D0 04            [24]  228 	pop	ar4
      0000B8 D0 05            [24]  229 	pop	ar5
      0000BA D0 06            [24]  230 	pop	ar6
      0000BC D0 07            [24]  231 	pop	ar7
      0000BE EC               [12]  232 	mov	a,r4
      0000BF FB               [12]  233 	mov	r3,a
      0000C0 33               [12]  234 	rlc	a
      0000C1 95 E0            [12]  235 	subb	a,acc
      0000C3 FC               [12]  236 	mov	r4,a
      0000C4 EB               [12]  237 	mov	a,r3
      0000C5 24 D0            [12]  238 	add	a,#0xD0
      0000C7 FB               [12]  239 	mov	r3,a
      0000C8 EC               [12]  240 	mov	a,r4
      0000C9 34 FF            [12]  241 	addc	a,#0xFF
      0000CB FC               [12]  242 	mov	r4,a
      0000CC EB               [12]  243 	mov	a,r3
      0000CD 25*03            [12]  244 	add	a,_atoi_sloc1_1_0
      0000CF F5*00            [12]  245 	mov	_atoi_rv_1_2,a
      0000D1 EC               [12]  246 	mov	a,r4
      0000D2 35*04            [12]  247 	addc	a,(_atoi_sloc1_1_0 + 1)
      0000D4 F5*01            [12]  248 	mov	(_atoi_rv_1_2 + 1),a
                                    249 ;	_atoi.c:48: s++;
      0000D6 0D               [12]  250 	inc	r5
      0000D7 BD 00 01         [24]  251 	cjne	r5,#0x00,00172$
      0000DA 0E               [12]  252 	inc	r6
      0000DB                        253 00172$:
      0000DB D0 02            [24]  254 	pop	ar2
      0000DD 80 95            [24]  255 	sjmp	00115$
      0000DF                        256 00117$:
                                    257 ;	_atoi.c:51: return (sign ? -rv : rv);
      0000DF EA               [12]  258 	mov	a,r2
      0000E0 60 0B            [24]  259 	jz	00120$
      0000E2 C3               [12]  260 	clr	c
      0000E3 E4               [12]  261 	clr	a
      0000E4 95*00            [12]  262 	subb	a,_atoi_rv_1_2
      0000E6 FE               [12]  263 	mov	r6,a
      0000E7 E4               [12]  264 	clr	a
      0000E8 95*01            [12]  265 	subb	a,(_atoi_rv_1_2 + 1)
      0000EA FF               [12]  266 	mov	r7,a
      0000EB 80 04            [24]  267 	sjmp	00121$
      0000ED                        268 00120$:
      0000ED AE*00            [24]  269 	mov	r6,_atoi_rv_1_2
      0000EF AF*01            [24]  270 	mov	r7,(_atoi_rv_1_2 + 1)
      0000F1                        271 00121$:
      0000F1 8E 82            [24]  272 	mov	dpl,r6
      0000F3 8F 83            [24]  273 	mov	dph,r7
      0000F5 22               [24]  274 	ret
                                    275 	.area CSEG    (CODE)
                                    276 	.area CONST   (CODE)
                                    277 	.area XINIT   (CODE)
                                    278 	.area CABS    (ABS,CODE)
