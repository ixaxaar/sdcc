                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:27:53 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _strncat
                                      7 	.optsdcc -mmcs51 --model-medium
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _strncat_PARM_3
                                     13 	.globl _strncat_PARM_2
                                     14 	.globl _strncat
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram 
                                     36 ;--------------------------------------------------------
                                     37 	.area	OSEG    (OVR,DATA)
      000000                         38 _strncat_sloc0_1_0:
      000000                         39 	.ds 3
      000003                         40 _strncat_sloc1_1_0:
      000003                         41 	.ds 2
                                     42 ;--------------------------------------------------------
                                     43 ; indirectly addressable internal ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area ISEG    (DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; absolute internal ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area IABS    (ABS,DATA)
                                     50 	.area IABS    (ABS,DATA)
                                     51 ;--------------------------------------------------------
                                     52 ; bit data
                                     53 ;--------------------------------------------------------
                                     54 	.area BSEG    (BIT)
                                     55 ;--------------------------------------------------------
                                     56 ; paged external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area PSEG    (PAG,XDATA)
      000000                         59 _strncat_PARM_2:
      000000                         60 	.ds 3
      000003                         61 _strncat_PARM_3:
      000003                         62 	.ds 2
      000005                         63 _strncat_front_1_21:
      000005                         64 	.ds 3
      000008                         65 _strncat_start_1_22:
      000008                         66 	.ds 3
                                     67 ;--------------------------------------------------------
                                     68 ; external ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area XSEG    (XDATA)
                                     71 ;--------------------------------------------------------
                                     72 ; absolute external ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area XABS    (ABS,XDATA)
                                     75 ;--------------------------------------------------------
                                     76 ; external initialized ram data
                                     77 ;--------------------------------------------------------
                                     78 	.area XISEG   (XDATA)
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT0 (CODE)
                                     81 	.area GSINIT1 (CODE)
                                     82 	.area GSINIT2 (CODE)
                                     83 	.area GSINIT3 (CODE)
                                     84 	.area GSINIT4 (CODE)
                                     85 	.area GSINIT5 (CODE)
                                     86 	.area GSINIT  (CODE)
                                     87 	.area GSFINAL (CODE)
                                     88 	.area CSEG    (CODE)
                                     89 ;--------------------------------------------------------
                                     90 ; global & static initialisations
                                     91 ;--------------------------------------------------------
                                     92 	.area HOME    (CODE)
                                     93 	.area GSINIT  (CODE)
                                     94 	.area GSFINAL (CODE)
                                     95 	.area GSINIT  (CODE)
                                     96 ;--------------------------------------------------------
                                     97 ; Home
                                     98 ;--------------------------------------------------------
                                     99 	.area HOME    (CODE)
                                    100 	.area HOME    (CODE)
                                    101 ;--------------------------------------------------------
                                    102 ; code
                                    103 ;--------------------------------------------------------
                                    104 	.area CSEG    (CODE)
                                    105 ;------------------------------------------------------------
                                    106 ;Allocation info for local variables in function 'strncat'
                                    107 ;------------------------------------------------------------
                                    108 ;sloc0                     Allocated with name '_strncat_sloc0_1_0'
                                    109 ;sloc1                     Allocated with name '_strncat_sloc1_1_0'
                                    110 ;------------------------------------------------------------
                                    111 ;	_strncat.c:31: char * strncat (
                                    112 ;	-----------------------------------------
                                    113 ;	 function strncat
                                    114 ;	-----------------------------------------
      000000                        115 _strncat:
                           000007   116 	ar7 = 0x07
                           000006   117 	ar6 = 0x06
                           000005   118 	ar5 = 0x05
                           000004   119 	ar4 = 0x04
                           000003   120 	ar3 = 0x03
                           000002   121 	ar2 = 0x02
                           000001   122 	ar1 = 0x01
                           000000   123 	ar0 = 0x00
      000000 AF F0            [24]  124 	mov	r7,b
      000002 AE 83            [24]  125 	mov	r6,dph
      000004 E5 82            [12]  126 	mov	a,dpl
      000006 78r05            [12]  127 	mov	r0,#_strncat_front_1_21
      000008 F2               [24]  128 	movx	@r0,a
      000009 08               [12]  129 	inc	r0
      00000A EE               [12]  130 	mov	a,r6
      00000B F2               [24]  131 	movx	@r0,a
      00000C 08               [12]  132 	inc	r0
      00000D EF               [12]  133 	mov	a,r7
      00000E F2               [24]  134 	movx	@r0,a
                                    135 ;	_strncat.c:37: char *start = front;
      00000F 78r05            [12]  136 	mov	r0,#_strncat_front_1_21
      000011 79r08            [12]  137 	mov	r1,#_strncat_start_1_22
      000013 E2               [24]  138 	movx	a,@r0
      000014 F3               [24]  139 	movx	@r1,a
      000015 08               [12]  140 	inc	r0
      000016 E2               [24]  141 	movx	a,@r0
      000017 09               [12]  142 	inc	r1
      000018 F3               [24]  143 	movx	@r1,a
      000019 08               [12]  144 	inc	r0
      00001A E2               [24]  145 	movx	a,@r0
      00001B 09               [12]  146 	inc	r1
      00001C F3               [24]  147 	movx	@r1,a
                                    148 ;	_strncat.c:39: while (*front++);
      00001D 78r05            [12]  149 	mov	r0,#_strncat_front_1_21
      00001F E2               [24]  150 	movx	a,@r0
      000020 F5*00            [12]  151 	mov	_strncat_sloc0_1_0,a
      000022 08               [12]  152 	inc	r0
      000023 E2               [24]  153 	movx	a,@r0
      000024 F5*01            [12]  154 	mov	(_strncat_sloc0_1_0 + 1),a
      000026 08               [12]  155 	inc	r0
      000027 E2               [24]  156 	movx	a,@r0
      000028 F5*02            [12]  157 	mov	(_strncat_sloc0_1_0 + 2),a
      00002A                        158 00101$:
      00002A 85*00 82         [24]  159 	mov	dpl,_strncat_sloc0_1_0
      00002D 85*01 83         [24]  160 	mov	dph,(_strncat_sloc0_1_0 + 1)
      000030 85*02 F0         [24]  161 	mov	b,(_strncat_sloc0_1_0 + 2)
      000033 12r00r00         [24]  162 	lcall	__gptrget
      000036 FC               [12]  163 	mov	r4,a
      000037 A3               [24]  164 	inc	dptr
      000038 85 82*00         [24]  165 	mov	_strncat_sloc0_1_0,dpl
      00003B 85 83*01         [24]  166 	mov	(_strncat_sloc0_1_0 + 1),dph
      00003E EC               [12]  167 	mov	a,r4
      00003F 70 E9            [24]  168 	jnz	00101$
                                    169 ;	_strncat.c:41: front--;
      000041 78r05            [12]  170 	mov	r0,#_strncat_front_1_21
      000043 E5*00            [12]  171 	mov	a,_strncat_sloc0_1_0
      000045 24 FF            [12]  172 	add	a,#0xFF
      000047 F2               [24]  173 	movx	@r0,a
      000048 E5*01            [12]  174 	mov	a,(_strncat_sloc0_1_0 + 1)
      00004A 34 FF            [12]  175 	addc	a,#0xFF
      00004C 08               [12]  176 	inc	r0
      00004D F2               [24]  177 	movx	@r0,a
      00004E 08               [12]  178 	inc	r0
      00004F E5*02            [12]  179 	mov	a,(_strncat_sloc0_1_0 + 2)
      000051 F2               [24]  180 	movx	@r0,a
                                    181 ;	_strncat.c:43: while (count--)
      000052 78r00            [12]  182 	mov	r0,#_strncat_PARM_2
      000054 E2               [24]  183 	movx	a,@r0
      000055 FA               [12]  184 	mov	r2,a
      000056 08               [12]  185 	inc	r0
      000057 E2               [24]  186 	movx	a,@r0
      000058 FB               [12]  187 	mov	r3,a
      000059 08               [12]  188 	inc	r0
      00005A E2               [24]  189 	movx	a,@r0
      00005B FC               [12]  190 	mov	r4,a
      00005C 78r05            [12]  191 	mov	r0,#_strncat_front_1_21
      00005E E2               [24]  192 	movx	a,@r0
      00005F F5*00            [12]  193 	mov	_strncat_sloc0_1_0,a
      000061 08               [12]  194 	inc	r0
      000062 E2               [24]  195 	movx	a,@r0
      000063 F5*01            [12]  196 	mov	(_strncat_sloc0_1_0 + 1),a
      000065 08               [12]  197 	inc	r0
      000066 E2               [24]  198 	movx	a,@r0
      000067 F5*02            [12]  199 	mov	(_strncat_sloc0_1_0 + 2),a
      000069 78r03            [12]  200 	mov	r0,#_strncat_PARM_3
      00006B E2               [24]  201 	movx	a,@r0
      00006C F5*03            [12]  202 	mov	_strncat_sloc1_1_0,a
      00006E 08               [12]  203 	inc	r0
      00006F E2               [24]  204 	movx	a,@r0
      000070 F5*04            [12]  205 	mov	(_strncat_sloc1_1_0 + 1),a
      000072                        206 00106$:
      000072 AE*03            [24]  207 	mov	r6,_strncat_sloc1_1_0
      000074 AF*04            [24]  208 	mov	r7,(_strncat_sloc1_1_0 + 1)
      000076 15*03            [12]  209 	dec	_strncat_sloc1_1_0
      000078 74 FF            [12]  210 	mov	a,#0xFF
      00007A B5*03 02         [24]  211 	cjne	a,_strncat_sloc1_1_0,00128$
      00007D 15*04            [12]  212 	dec	(_strncat_sloc1_1_0 + 1)
      00007F                        213 00128$:
      00007F EE               [12]  214 	mov	a,r6
      000080 4F               [12]  215 	orl	a,r7
      000081 60 41            [24]  216 	jz	00108$
                                    217 ;	_strncat.c:44: if (!(*front++ = *back++))
      000083 8A 82            [24]  218 	mov	dpl,r2
      000085 8B 83            [24]  219 	mov	dph,r3
      000087 8C F0            [24]  220 	mov	b,r4
      000089 12r00r00         [24]  221 	lcall	__gptrget
      00008C FF               [12]  222 	mov	r7,a
      00008D A3               [24]  223 	inc	dptr
      00008E AA 82            [24]  224 	mov	r2,dpl
      000090 AB 83            [24]  225 	mov	r3,dph
      000092 85*00 82         [24]  226 	mov	dpl,_strncat_sloc0_1_0
      000095 85*01 83         [24]  227 	mov	dph,(_strncat_sloc0_1_0 + 1)
      000098 85*02 F0         [24]  228 	mov	b,(_strncat_sloc0_1_0 + 2)
      00009B EF               [12]  229 	mov	a,r7
      00009C 12r00r00         [24]  230 	lcall	__gptrput
      00009F A3               [24]  231 	inc	dptr
      0000A0 85 82*00         [24]  232 	mov	_strncat_sloc0_1_0,dpl
      0000A3 85 83*01         [24]  233 	mov	(_strncat_sloc0_1_0 + 1),dph
      0000A6 78r05            [12]  234 	mov	r0,#_strncat_front_1_21
      0000A8 E5*00            [12]  235 	mov	a,_strncat_sloc0_1_0
      0000AA F2               [24]  236 	movx	@r0,a
      0000AB 08               [12]  237 	inc	r0
      0000AC E5*01            [12]  238 	mov	a,(_strncat_sloc0_1_0 + 1)
      0000AE F2               [24]  239 	movx	@r0,a
      0000AF 08               [12]  240 	inc	r0
      0000B0 E5*02            [12]  241 	mov	a,(_strncat_sloc0_1_0 + 2)
      0000B2 F2               [24]  242 	movx	@r0,a
      0000B3 EF               [12]  243 	mov	a,r7
      0000B4 70 BC            [24]  244 	jnz	00106$
                                    245 ;	_strncat.c:45: return(start);
      0000B6 78r08            [12]  246 	mov	r0,#_strncat_start_1_22
      0000B8 E2               [24]  247 	movx	a,@r0
      0000B9 F5 82            [12]  248 	mov	dpl,a
      0000BB 08               [12]  249 	inc	r0
      0000BC E2               [24]  250 	movx	a,@r0
      0000BD F5 83            [12]  251 	mov	dph,a
      0000BF 08               [12]  252 	inc	r0
      0000C0 E2               [24]  253 	movx	a,@r0
      0000C1 F5 F0            [12]  254 	mov	b,a
      0000C3 22               [24]  255 	ret
      0000C4                        256 00108$:
                                    257 ;	_strncat.c:47: *front = '\0';
      0000C4 78r05            [12]  258 	mov	r0,#_strncat_front_1_21
      0000C6 E2               [24]  259 	movx	a,@r0
      0000C7 F5 82            [12]  260 	mov	dpl,a
      0000C9 08               [12]  261 	inc	r0
      0000CA E2               [24]  262 	movx	a,@r0
      0000CB F5 83            [12]  263 	mov	dph,a
      0000CD 08               [12]  264 	inc	r0
      0000CE E2               [24]  265 	movx	a,@r0
      0000CF F5 F0            [12]  266 	mov	b,a
      0000D1 E4               [12]  267 	clr	a
      0000D2 12r00r00         [24]  268 	lcall	__gptrput
                                    269 ;	_strncat.c:48: return(start);
      0000D5 78r08            [12]  270 	mov	r0,#_strncat_start_1_22
      0000D7 E2               [24]  271 	movx	a,@r0
      0000D8 F5 82            [12]  272 	mov	dpl,a
      0000DA 08               [12]  273 	inc	r0
      0000DB E2               [24]  274 	movx	a,@r0
      0000DC F5 83            [12]  275 	mov	dph,a
      0000DE 08               [12]  276 	inc	r0
      0000DF E2               [24]  277 	movx	a,@r0
      0000E0 F5 F0            [12]  278 	mov	b,a
      0000E2 22               [24]  279 	ret
                                    280 	.area CSEG    (CODE)
                                    281 	.area CONST   (CODE)
                                    282 	.area XINIT   (CODE)
                                    283 	.area CABS    (ABS,CODE)
