                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:27:53 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _memcmp
                                      7 	.optsdcc -mmcs51 --model-medium
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _memcmp_PARM_3
                                     13 	.globl _memcmp_PARM_2
                                     14 	.globl _memcmp
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram 
                                     36 ;--------------------------------------------------------
                                     37 	.area	OSEG    (OVR,DATA)
      000000                         38 _memcmp_sloc0_1_0:
      000000                         39 	.ds 3
      000003                         40 _memcmp_sloc1_1_0:
      000003                         41 	.ds 3
                                     42 ;--------------------------------------------------------
                                     43 ; indirectly addressable internal ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area ISEG    (DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; absolute internal ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area IABS    (ABS,DATA)
                                     50 	.area IABS    (ABS,DATA)
                                     51 ;--------------------------------------------------------
                                     52 ; bit data
                                     53 ;--------------------------------------------------------
                                     54 	.area BSEG    (BIT)
                                     55 ;--------------------------------------------------------
                                     56 ; paged external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area PSEG    (PAG,XDATA)
      000000                         59 _memcmp_PARM_2:
      000000                         60 	.ds 3
      000003                         61 _memcmp_PARM_3:
      000003                         62 	.ds 2
                                     63 ;--------------------------------------------------------
                                     64 ; external ram data
                                     65 ;--------------------------------------------------------
                                     66 	.area XSEG    (XDATA)
                                     67 ;--------------------------------------------------------
                                     68 ; absolute external ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area XABS    (ABS,XDATA)
                                     71 ;--------------------------------------------------------
                                     72 ; external initialized ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area XISEG   (XDATA)
                                     75 	.area HOME    (CODE)
                                     76 	.area GSINIT0 (CODE)
                                     77 	.area GSINIT1 (CODE)
                                     78 	.area GSINIT2 (CODE)
                                     79 	.area GSINIT3 (CODE)
                                     80 	.area GSINIT4 (CODE)
                                     81 	.area GSINIT5 (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 	.area GSFINAL (CODE)
                                     84 	.area CSEG    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; global & static initialisations
                                     87 ;--------------------------------------------------------
                                     88 	.area HOME    (CODE)
                                     89 	.area GSINIT  (CODE)
                                     90 	.area GSFINAL (CODE)
                                     91 	.area GSINIT  (CODE)
                                     92 ;--------------------------------------------------------
                                     93 ; Home
                                     94 ;--------------------------------------------------------
                                     95 	.area HOME    (CODE)
                                     96 	.area HOME    (CODE)
                                     97 ;--------------------------------------------------------
                                     98 ; code
                                     99 ;--------------------------------------------------------
                                    100 	.area CSEG    (CODE)
                                    101 ;------------------------------------------------------------
                                    102 ;Allocation info for local variables in function 'memcmp'
                                    103 ;------------------------------------------------------------
                                    104 ;sloc0                     Allocated with name '_memcmp_sloc0_1_0'
                                    105 ;sloc1                     Allocated with name '_memcmp_sloc1_1_0'
                                    106 ;------------------------------------------------------------
                                    107 ;	_memcmp.c:31: int memcmp (
                                    108 ;	-----------------------------------------
                                    109 ;	 function memcmp
                                    110 ;	-----------------------------------------
      000000                        111 _memcmp:
                           000007   112 	ar7 = 0x07
                           000006   113 	ar6 = 0x06
                           000005   114 	ar5 = 0x05
                           000004   115 	ar4 = 0x04
                           000003   116 	ar3 = 0x03
                           000002   117 	ar2 = 0x02
                           000001   118 	ar1 = 0x01
                           000000   119 	ar0 = 0x00
      000000 AD 82            [24]  120 	mov	r5,dpl
      000002 AE 83            [24]  121 	mov	r6,dph
      000004 AF F0            [24]  122 	mov	r7,b
                                    123 ;	_memcmp.c:37: if (!count)
      000006 78r03            [12]  124 	mov	r0,#_memcmp_PARM_3
      000008 E2               [24]  125 	movx	a,@r0
      000009 F5 F0            [12]  126 	mov	b,a
      00000B 08               [12]  127 	inc	r0
      00000C E2               [24]  128 	movx	a,@r0
      00000D 45 F0            [12]  129 	orl	a,b
      00000F 70 04            [24]  130 	jnz	00112$
                                    131 ;	_memcmp.c:38: return(0);
      000011 90 00 00         [24]  132 	mov	dptr,#0x0000
      000014 22               [24]  133 	ret
                                    134 ;	_memcmp.c:40: while ( --count && *((char *)buf1) == *((char *)buf2) ) {
      000015                        135 00112$:
      000015 78r03            [12]  136 	mov	r0,#_memcmp_PARM_3
      000017 E2               [24]  137 	movx	a,@r0
      000018 FB               [12]  138 	mov	r3,a
      000019 08               [12]  139 	inc	r0
      00001A E2               [24]  140 	movx	a,@r0
      00001B FC               [12]  141 	mov	r4,a
      00001C                        142 00104$:
      00001C 1B               [12]  143 	dec	r3
      00001D BB FF 01         [24]  144 	cjne	r3,#0xFF,00123$
      000020 1C               [12]  145 	dec	r4
      000021                        146 00123$:
      000021 EB               [12]  147 	mov	a,r3
      000022 4C               [12]  148 	orl	a,r4
      000023 60 69            [24]  149 	jz	00106$
      000025 C0 03            [24]  150 	push	ar3
      000027 C0 04            [24]  151 	push	ar4
      000029 8D*00            [24]  152 	mov	_memcmp_sloc0_1_0,r5
      00002B 8E*01            [24]  153 	mov	(_memcmp_sloc0_1_0 + 1),r6
      00002D 8F*02            [24]  154 	mov	(_memcmp_sloc0_1_0 + 2),r7
      00002F 85*00 82         [24]  155 	mov	dpl,_memcmp_sloc0_1_0
      000032 85*01 83         [24]  156 	mov	dph,(_memcmp_sloc0_1_0 + 1)
      000035 85*02 F0         [24]  157 	mov	b,(_memcmp_sloc0_1_0 + 2)
      000038 12r00r00         [24]  158 	lcall	__gptrget
      00003B FA               [12]  159 	mov	r2,a
      00003C 78r00            [12]  160 	mov	r0,#_memcmp_PARM_2
      00003E E2               [24]  161 	movx	a,@r0
      00003F F5*03            [12]  162 	mov	_memcmp_sloc1_1_0,a
      000041 08               [12]  163 	inc	r0
      000042 E2               [24]  164 	movx	a,@r0
      000043 F5*04            [12]  165 	mov	(_memcmp_sloc1_1_0 + 1),a
      000045 08               [12]  166 	inc	r0
      000046 E2               [24]  167 	movx	a,@r0
      000047 F5*05            [12]  168 	mov	(_memcmp_sloc1_1_0 + 2),a
      000049 85*03 82         [24]  169 	mov	dpl,_memcmp_sloc1_1_0
      00004C 85*04 83         [24]  170 	mov	dph,(_memcmp_sloc1_1_0 + 1)
      00004F 85*05 F0         [24]  171 	mov	b,(_memcmp_sloc1_1_0 + 2)
      000052 12r00r00         [24]  172 	lcall	__gptrget
      000055 FC               [12]  173 	mov	r4,a
      000056 EA               [12]  174 	mov	a,r2
      000057 B5 04 02         [24]  175 	cjne	a,ar4,00125$
      00005A 80 06            [24]  176 	sjmp	00126$
      00005C                        177 00125$:
      00005C D0 04            [24]  178 	pop	ar4
      00005E D0 03            [24]  179 	pop	ar3
      000060 80 2C            [24]  180 	sjmp	00106$
      000062                        181 00126$:
                                    182 ;	_memcmp.c:41: buf1 = (char *)buf1 + 1;
      000062 74 01            [12]  183 	mov	a,#0x01
      000064 25*00            [12]  184 	add	a,_memcmp_sloc0_1_0
      000066 FA               [12]  185 	mov	r2,a
      000067 E4               [12]  186 	clr	a
      000068 35*01            [12]  187 	addc	a,(_memcmp_sloc0_1_0 + 1)
      00006A FB               [12]  188 	mov	r3,a
      00006B AC*02            [24]  189 	mov	r4,(_memcmp_sloc0_1_0 + 2)
      00006D 8A 05            [24]  190 	mov	ar5,r2
      00006F 8B 06            [24]  191 	mov	ar6,r3
      000071 8C 07            [24]  192 	mov	ar7,r4
                                    193 ;	_memcmp.c:42: buf2 = (char *)buf2 + 1;
      000073 74 01            [12]  194 	mov	a,#0x01
      000075 25*03            [12]  195 	add	a,_memcmp_sloc1_1_0
      000077 FA               [12]  196 	mov	r2,a
      000078 E4               [12]  197 	clr	a
      000079 35*04            [12]  198 	addc	a,(_memcmp_sloc1_1_0 + 1)
      00007B FB               [12]  199 	mov	r3,a
      00007C AC*05            [24]  200 	mov	r4,(_memcmp_sloc1_1_0 + 2)
      00007E 78r00            [12]  201 	mov	r0,#_memcmp_PARM_2
      000080 EA               [12]  202 	mov	a,r2
      000081 F2               [24]  203 	movx	@r0,a
      000082 08               [12]  204 	inc	r0
      000083 EB               [12]  205 	mov	a,r3
      000084 F2               [24]  206 	movx	@r0,a
      000085 08               [12]  207 	inc	r0
      000086 EC               [12]  208 	mov	a,r4
      000087 F2               [24]  209 	movx	@r0,a
      000088 D0 04            [24]  210 	pop	ar4
      00008A D0 03            [24]  211 	pop	ar3
      00008C 80 8E            [24]  212 	sjmp	00104$
      00008E                        213 00106$:
                                    214 ;	_memcmp.c:45: return( *((unsigned char *)buf1) - *((unsigned char *)buf2) );
      00008E 8D 82            [24]  215 	mov	dpl,r5
      000090 8E 83            [24]  216 	mov	dph,r6
      000092 8F F0            [24]  217 	mov	b,r7
      000094 12r00r00         [24]  218 	lcall	__gptrget
      000097 FD               [12]  219 	mov	r5,a
      000098 7F 00            [12]  220 	mov	r7,#0x00
      00009A 78r00            [12]  221 	mov	r0,#_memcmp_PARM_2
      00009C E2               [24]  222 	movx	a,@r0
      00009D FB               [12]  223 	mov	r3,a
      00009E 08               [12]  224 	inc	r0
      00009F E2               [24]  225 	movx	a,@r0
      0000A0 FC               [12]  226 	mov	r4,a
      0000A1 08               [12]  227 	inc	r0
      0000A2 E2               [24]  228 	movx	a,@r0
      0000A3 FE               [12]  229 	mov	r6,a
      0000A4 8B 82            [24]  230 	mov	dpl,r3
      0000A6 8C 83            [24]  231 	mov	dph,r4
      0000A8 8E F0            [24]  232 	mov	b,r6
      0000AA 12r00r00         [24]  233 	lcall	__gptrget
      0000AD FB               [12]  234 	mov	r3,a
      0000AE 7E 00            [12]  235 	mov	r6,#0x00
      0000B0 ED               [12]  236 	mov	a,r5
      0000B1 C3               [12]  237 	clr	c
      0000B2 9B               [12]  238 	subb	a,r3
      0000B3 F5 82            [12]  239 	mov	dpl,a
      0000B5 EF               [12]  240 	mov	a,r7
      0000B6 9E               [12]  241 	subb	a,r6
      0000B7 F5 83            [12]  242 	mov	dph,a
      0000B9 22               [24]  243 	ret
                                    244 	.area CSEG    (CODE)
                                    245 	.area CONST   (CODE)
                                    246 	.area XINIT   (CODE)
                                    247 	.area CABS    (ABS,CODE)
