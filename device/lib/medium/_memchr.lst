                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:27:53 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _memchr
                                      7 	.optsdcc -mmcs51 --model-medium
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _memchr_PARM_3
                                     13 	.globl _memchr_PARM_2
                                     14 	.globl _memchr
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram 
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; indirectly addressable internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area ISEG    (DATA)
                                     41 ;--------------------------------------------------------
                                     42 ; absolute internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area IABS    (ABS,DATA)
                                     45 	.area IABS    (ABS,DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; bit data
                                     48 ;--------------------------------------------------------
                                     49 	.area BSEG    (BIT)
                                     50 ;--------------------------------------------------------
                                     51 ; paged external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area PSEG    (PAG,XDATA)
      000000                         54 _memchr_PARM_2:
      000000                         55 	.ds 2
      000002                         56 _memchr_PARM_3:
      000002                         57 	.ds 2
      000004                         58 _memchr_p_1_22:
      000004                         59 	.ds 3
      000007                         60 _memchr_end_1_22:
      000007                         61 	.ds 3
                                     62 ;--------------------------------------------------------
                                     63 ; external ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XSEG    (XDATA)
                                     66 ;--------------------------------------------------------
                                     67 ; absolute external ram data
                                     68 ;--------------------------------------------------------
                                     69 	.area XABS    (ABS,XDATA)
                                     70 ;--------------------------------------------------------
                                     71 ; external initialized ram data
                                     72 ;--------------------------------------------------------
                                     73 	.area XISEG   (XDATA)
                                     74 	.area HOME    (CODE)
                                     75 	.area GSINIT0 (CODE)
                                     76 	.area GSINIT1 (CODE)
                                     77 	.area GSINIT2 (CODE)
                                     78 	.area GSINIT3 (CODE)
                                     79 	.area GSINIT4 (CODE)
                                     80 	.area GSINIT5 (CODE)
                                     81 	.area GSINIT  (CODE)
                                     82 	.area GSFINAL (CODE)
                                     83 	.area CSEG    (CODE)
                                     84 ;--------------------------------------------------------
                                     85 ; global & static initialisations
                                     86 ;--------------------------------------------------------
                                     87 	.area HOME    (CODE)
                                     88 	.area GSINIT  (CODE)
                                     89 	.area GSFINAL (CODE)
                                     90 	.area GSINIT  (CODE)
                                     91 ;--------------------------------------------------------
                                     92 ; Home
                                     93 ;--------------------------------------------------------
                                     94 	.area HOME    (CODE)
                                     95 	.area HOME    (CODE)
                                     96 ;--------------------------------------------------------
                                     97 ; code
                                     98 ;--------------------------------------------------------
                                     99 	.area CSEG    (CODE)
                                    100 ;------------------------------------------------------------
                                    101 ;Allocation info for local variables in function 'memchr'
                                    102 ;------------------------------------------------------------
                                    103 ;	_memchr.c:31: void *memchr(const void *s, int c, size_t n)
                                    104 ;	-----------------------------------------
                                    105 ;	 function memchr
                                    106 ;	-----------------------------------------
      000000                        107 _memchr:
                           000007   108 	ar7 = 0x07
                           000006   109 	ar6 = 0x06
                           000005   110 	ar5 = 0x05
                           000004   111 	ar4 = 0x04
                           000003   112 	ar3 = 0x03
                           000002   113 	ar2 = 0x02
                           000001   114 	ar1 = 0x01
                           000000   115 	ar0 = 0x00
      000000 AD 82            [24]  116 	mov	r5,dpl
      000002 AE 83            [24]  117 	mov	r6,dph
      000004 AF F0            [24]  118 	mov	r7,b
                                    119 ;	_memchr.c:33: unsigned char *p = (unsigned char *)s;
      000006 78r04            [12]  120 	mov	r0,#_memchr_p_1_22
      000008 ED               [12]  121 	mov	a,r5
      000009 F2               [24]  122 	movx	@r0,a
      00000A 08               [12]  123 	inc	r0
      00000B EE               [12]  124 	mov	a,r6
      00000C F2               [24]  125 	movx	@r0,a
      00000D 08               [12]  126 	inc	r0
      00000E EF               [12]  127 	mov	a,r7
      00000F F2               [24]  128 	movx	@r0,a
                                    129 ;	_memchr.c:34: unsigned char *end = p + n;
      000010 78r04            [12]  130 	mov	r0,#_memchr_p_1_22
      000012 79r02            [12]  131 	mov	r1,#_memchr_PARM_3
      000014 E3               [24]  132 	movx	a,@r1
      000015 C5 F0            [12]  133 	xch	a,b
      000017 E2               [24]  134 	movx	a,@r0
      000018 25 F0            [12]  135 	add	a,b
      00001A C0 E0            [24]  136 	push	acc
      00001C 09               [12]  137 	inc	r1
      00001D E3               [24]  138 	movx	a,@r1
      00001E C5 F0            [12]  139 	xch	a,b
      000020 08               [12]  140 	inc	r0
      000021 E2               [24]  141 	movx	a,@r0
      000022 35 F0            [12]  142 	addc	a,b
      000024 C0 E0            [24]  143 	push	acc
      000026 08               [12]  144 	inc	r0
      000027 E2               [24]  145 	movx	a,@r0
      000028 C0 E0            [24]  146 	push	acc
      00002A 78r09            [12]  147 	mov	r0,#(_memchr_end_1_22 + 2)
      00002C D0 E0            [24]  148 	pop	acc
      00002E F2               [24]  149 	movx	@r0,a
      00002F 18               [12]  150 	dec	r0
      000030 D0 E0            [24]  151 	pop	acc
      000032 F2               [24]  152 	movx	@r0,a
      000033 18               [12]  153 	dec	r0
      000034 D0 E0            [24]  154 	pop	acc
      000036 F2               [24]  155 	movx	@r0,a
                                    156 ;	_memchr.c:38: return(0);
      000037 78r04            [12]  157 	mov	r0,#_memchr_p_1_22
      000039 E2               [24]  158 	movx	a,@r0
      00003A FA               [12]  159 	mov	r2,a
      00003B 08               [12]  160 	inc	r0
      00003C E2               [24]  161 	movx	a,@r0
      00003D FB               [12]  162 	mov	r3,a
      00003E 08               [12]  163 	inc	r0
      00003F E2               [24]  164 	movx	a,@r0
      000040 FC               [12]  165 	mov	r4,a
      000041                        166 00105$:
                                    167 ;	_memchr.c:35: for(; p != end; p++)
      000041 78r07            [12]  168 	mov	r0,#_memchr_end_1_22
      000043 C0 02            [24]  169 	push	ar2
      000045 C0 03            [24]  170 	push	ar3
      000047 C0 04            [24]  171 	push	ar4
      000049 E2               [24]  172 	movx	a,@r0
      00004A F5 82            [12]  173 	mov	dpl,a
      00004C 08               [12]  174 	inc	r0
      00004D E2               [24]  175 	movx	a,@r0
      00004E F5 83            [12]  176 	mov	dph,a
      000050 08               [12]  177 	inc	r0
      000051 E2               [24]  178 	movx	a,@r0
      000052 F5 F0            [12]  179 	mov	b,a
      000054 12r00r00         [24]  180 	lcall	___gptr_cmp
      000057 15 81            [12]  181 	dec	sp
      000059 15 81            [12]  182 	dec	sp
      00005B 15 81            [12]  183 	dec	sp
      00005D 60 3D            [24]  184 	jz	00103$
                                    185 ;	_memchr.c:36: if(*p == c)
      00005F 8A 82            [24]  186 	mov	dpl,r2
      000061 8B 83            [24]  187 	mov	dph,r3
      000063 8C F0            [24]  188 	mov	b,r4
      000065 12r00r00         [24]  189 	lcall	__gptrget
      000068 FF               [12]  190 	mov	r7,a
      000069 7E 00            [12]  191 	mov	r6,#0x00
      00006B 78r00            [12]  192 	mov	r0,#_memchr_PARM_2
      00006D E2               [24]  193 	movx	a,@r0
      00006E B5 07 07         [24]  194 	cjne	a,ar7,00119$
      000071 08               [12]  195 	inc	r0
      000072 E2               [24]  196 	movx	a,@r0
      000073 B5 06 02         [24]  197 	cjne	a,ar6,00119$
      000076 80 02            [24]  198 	sjmp	00120$
      000078                        199 00119$:
      000078 80 11            [24]  200 	sjmp	00106$
      00007A                        201 00120$:
                                    202 ;	_memchr.c:37: return((void *)p);
      00007A 78r04            [12]  203 	mov	r0,#_memchr_p_1_22
      00007C E2               [24]  204 	movx	a,@r0
      00007D FD               [12]  205 	mov	r5,a
      00007E 08               [12]  206 	inc	r0
      00007F E2               [24]  207 	movx	a,@r0
      000080 FE               [12]  208 	mov	r6,a
      000081 08               [12]  209 	inc	r0
      000082 E2               [24]  210 	movx	a,@r0
      000083 FF               [12]  211 	mov	r7,a
      000084 8D 82            [24]  212 	mov	dpl,r5
      000086 8E 83            [24]  213 	mov	dph,r6
      000088 8F F0            [24]  214 	mov	b,r7
      00008A 22               [24]  215 	ret
      00008B                        216 00106$:
                                    217 ;	_memchr.c:35: for(; p != end; p++)
      00008B 0A               [12]  218 	inc	r2
      00008C BA 00 01         [24]  219 	cjne	r2,#0x00,00121$
      00008F 0B               [12]  220 	inc	r3
      000090                        221 00121$:
      000090 78r04            [12]  222 	mov	r0,#_memchr_p_1_22
      000092 EA               [12]  223 	mov	a,r2
      000093 F2               [24]  224 	movx	@r0,a
      000094 08               [12]  225 	inc	r0
      000095 EB               [12]  226 	mov	a,r3
      000096 F2               [24]  227 	movx	@r0,a
      000097 08               [12]  228 	inc	r0
      000098 EC               [12]  229 	mov	a,r4
      000099 F2               [24]  230 	movx	@r0,a
      00009A 80 A5            [24]  231 	sjmp	00105$
      00009C                        232 00103$:
                                    233 ;	_memchr.c:38: return(0);
      00009C 90 00 00         [24]  234 	mov	dptr,#0x0000
      00009F 75 F0 00         [24]  235 	mov	b,#0x00
      0000A2 22               [24]  236 	ret
                                    237 	.area CSEG    (CODE)
                                    238 	.area CONST   (CODE)
                                    239 	.area XINIT   (CODE)
                                    240 	.area CABS    (ABS,CODE)
