                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:03 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _modulong
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in internal ram 
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; indirectly addressable internal ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area ISEG    (DATA)
                                     38 ;--------------------------------------------------------
                                     39 ; absolute internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area IABS    (ABS,DATA)
                                     42 	.area IABS    (ABS,DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; bit data
                                     45 ;--------------------------------------------------------
                                     46 	.area BSEG    (BIT)
                                     47 ;--------------------------------------------------------
                                     48 ; paged external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area PSEG    (PAG,XDATA)
                                     51 ;--------------------------------------------------------
                                     52 ; external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area XSEG    (XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XABS    (ABS,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; external initialized ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XISEG   (XDATA)
                                     63 	.area HOME    (CODE)
                                     64 	.area GSINIT0 (CODE)
                                     65 	.area GSINIT1 (CODE)
                                     66 	.area GSINIT2 (CODE)
                                     67 	.area GSINIT3 (CODE)
                                     68 	.area GSINIT4 (CODE)
                                     69 	.area GSINIT5 (CODE)
                                     70 	.area GSINIT  (CODE)
                                     71 	.area GSFINAL (CODE)
                                     72 	.area CSEG    (CODE)
                                     73 ;--------------------------------------------------------
                                     74 ; global & static initialisations
                                     75 ;--------------------------------------------------------
                                     76 	.area HOME    (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; Home
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area HOME    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; code
                                     87 ;--------------------------------------------------------
                                     88 	.area CSEG    (CODE)
                                     89 ;------------------------------------------------------------
                                     90 ;Allocation info for local variables in function '_modlong_dummy'
                                     91 ;------------------------------------------------------------
                                     92 ;	_modulong.c:191: _modlong_dummy (void) __naked
                                     93 ;	-----------------------------------------
                                     94 ;	 function _modlong_dummy
                                     95 ;	-----------------------------------------
      000000                         96 __modlong_dummy:
                                     97 ;	naked function: no prologue.
                                     98 ;	_modulong.c:332: __endasm;
                                     99 	.globl __modulong
      000000                        100 	__modulong:
                           000002   101 	ar2 = 2 ; BUG register set is not considered
                           000003   102 	ar3 = 3
                           000004   103 	ar4 = 4
                           000005   104 	ar5 = 5
                                    105 	.globl __modlong ; entry point for __modslong
                                    106 ; parameter a comes in a, b, dph, dpl
      000000 F9               [12]  107 	mov r1,a ; save parameter r1
      000001 E5 81            [12]  108 	mov a,sp
      000003 24 FB            [12]  109 	add a,#-2-3 ; 2 bytes return address, 3 bytes param b
      000005 F8               [12]  110 	mov r0,a ; r1 points to r2
      000006 86 02            [24]  111 	mov ar2,@r0 ; load r2
      000008 08               [12]  112 	inc r0 ; r0 points to r3
      000009 86 03            [24]  113 	mov ar3,@r0 ; r3
      00000B 08               [12]  114 	inc r0
      00000C 86 04            [24]  115 	mov ar4,@r0 ; r4
      00000E 08               [12]  116 	inc r0
      00000F 86 05            [24]  117 	mov ar5,@r0 ; r5
      000011                        118 	__modlong:
                                    119 ; entry point for __modslong
                                    120 ; a in r1, b, dph, dpl
                                    121 ; b in r5, r4, r3, r2
      000011 78 00            [12]  122 	mov r0,#0
      000013 EA               [12]  123 	mov a,r2 ; b == 0? avoid endless loop
      000014 4B               [12]  124 	orl a,r3
      000015 4C               [12]  125 	orl a,r4
      000016 4D               [12]  126 	orl a,r5
      000017 60 58            [24]  127 	jz div_by_0
      000019 78 00            [12]  128 	mov r0,#0
      00001B C3               [12]  129 	clr c ; when loop1 jumps immediately to loop2
      00001C                        130 	loop1:
      00001C 08               [12]  131 	inc r0
      00001D ED               [12]  132 	mov a,r5 ; if (!MSB_SET(b))
      00001E 20 E7 27         [24]  133 	jb acc.7,loop2
      000021 EA               [12]  134 	mov a,r2 ; b <<= 1
      000022 25 E0            [12]  135 	add a,acc
      000024 FA               [12]  136 	mov r2,a
      000025 EB               [12]  137 	mov a,r3
      000026 33               [12]  138 	rlc a
      000027 FB               [12]  139 	mov r3,a
      000028 EC               [12]  140 	mov a,r4
      000029 33               [12]  141 	rlc a
      00002A FC               [12]  142 	mov r4,a
      00002B ED               [12]  143 	mov a,r5
      00002C 33               [12]  144 	rlc a
      00002D FD               [12]  145 	mov r5,a
      00002E E5 82            [12]  146 	mov a,dpl ; a - b
      000030 9A               [12]  147 	subb a,r2 ; here carry is always clear
      000031 E5 83            [12]  148 	mov a,dph
      000033 9B               [12]  149 	subb a,r3
      000034 E5 F0            [12]  150 	mov a,b
      000036 9C               [12]  151 	subb a,r4
      000037 E9               [12]  152 	mov a,r1
      000038 9D               [12]  153 	subb a,r5
      000039 50 E1            [24]  154 	jnc loop1
      00003B C3               [12]  155 	clr c
      00003C ED               [12]  156 	mov a,r5 ; b >>= 1;
      00003D 13               [12]  157 	rrc a
      00003E FD               [12]  158 	mov r5,a
      00003F EC               [12]  159 	mov a,r4
      000040 13               [12]  160 	rrc a
      000041 FC               [12]  161 	mov r4,a
      000042 EB               [12]  162 	mov a,r3
      000043 13               [12]  163 	rrc a
      000044 FB               [12]  164 	mov r3,a
      000045 EA               [12]  165 	mov a,r2
      000046 13               [12]  166 	rrc a
      000047 FA               [12]  167 	mov r2,a
      000048                        168 	loop2:
                                    169 ; clr c never set
      000048 E5 82            [12]  170 	mov a,dpl ; a - b
      00004A 9A               [12]  171 	subb a,r2
      00004B E5 83            [12]  172 	mov a,dph
      00004D 9B               [12]  173 	subb a,r3
      00004E FE               [12]  174 	mov r6,a ; d1
      00004F E5 F0            [12]  175 	mov a,b
      000051 9C               [12]  176 	subb a,r4
      000052 FF               [12]  177 	mov r7,a ; d2
      000053 E9               [12]  178 	mov a,r1
      000054 9D               [12]  179 	subb a,r5
      000055 40 0A            [24]  180 	jc smaller ; a >= b?
      000057 F9               [12]  181 	mov r1,a ; -> yes; a = a - b;
      000058 8F F0            [24]  182 	mov b,r7
      00005A 8E 83            [24]  183 	mov dph,r6
      00005C E5 82            [12]  184 	mov a,dpl
      00005E 9A               [12]  185 	subb a,r2
      00005F F5 82            [12]  186 	mov dpl,a
      000061                        187 	smaller:
                                    188 ; -> no
      000061 C3               [12]  189 	clr c
      000062 ED               [12]  190 	mov a,r5 ; b >>= 1;
      000063 13               [12]  191 	rrc a
      000064 FD               [12]  192 	mov r5,a
      000065 EC               [12]  193 	mov a,r4
      000066 13               [12]  194 	rrc a
      000067 FC               [12]  195 	mov r4,a
      000068 EB               [12]  196 	mov a,r3
      000069 13               [12]  197 	rrc a
      00006A FB               [12]  198 	mov r3,a
      00006B EA               [12]  199 	mov a,r2
      00006C 13               [12]  200 	rrc a
      00006D FA               [12]  201 	mov r2,a
      00006E D8 D8            [24]  202 	djnz r0,loop2
      000070 E9               [12]  203 	mov a,r1 ; prepare the return value
      000071                        204 	div_by_0:
      000071 22               [24]  205 	ret
                                    206 ;	naked function: no epilogue.
                                    207 	.area CSEG    (CODE)
                                    208 	.area CONST   (CODE)
                                    209 	.area XINIT   (CODE)
                                    210 	.area CABS    (ABS,CODE)
