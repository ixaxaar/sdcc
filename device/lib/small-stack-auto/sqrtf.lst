                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:03 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module sqrtf
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _ldexpf
                                     13 	.globl _frexpf
                                     14 	.globl _sqrtf
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram 
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; indirectly addressable internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area ISEG    (DATA)
                                     41 ;--------------------------------------------------------
                                     42 ; absolute internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area IABS    (ABS,DATA)
                                     45 	.area IABS    (ABS,DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; bit data
                                     48 ;--------------------------------------------------------
                                     49 	.area BSEG    (BIT)
                                     50 ;--------------------------------------------------------
                                     51 ; paged external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area PSEG    (PAG,XDATA)
                                     54 ;--------------------------------------------------------
                                     55 ; external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XSEG    (XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; absolute external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XABS    (ABS,XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; external initialized ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XISEG   (XDATA)
                                     66 	.area HOME    (CODE)
                                     67 	.area GSINIT0 (CODE)
                                     68 	.area GSINIT1 (CODE)
                                     69 	.area GSINIT2 (CODE)
                                     70 	.area GSINIT3 (CODE)
                                     71 	.area GSINIT4 (CODE)
                                     72 	.area GSINIT5 (CODE)
                                     73 	.area GSINIT  (CODE)
                                     74 	.area GSFINAL (CODE)
                                     75 	.area CSEG    (CODE)
                                     76 ;--------------------------------------------------------
                                     77 ; global & static initialisations
                                     78 ;--------------------------------------------------------
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 	.area GSFINAL (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 ;--------------------------------------------------------
                                     84 ; Home
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area HOME    (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; code
                                     90 ;--------------------------------------------------------
                                     91 	.area CSEG    (CODE)
                                     92 ;------------------------------------------------------------
                                     93 ;Allocation info for local variables in function 'sqrtf'
                                     94 ;------------------------------------------------------------
                                     95 ;x                         Allocated to stack - _bp +1
                                     96 ;f                         Allocated to stack - _bp +9
                                     97 ;y                         Allocated to stack - _bp +13
                                     98 ;n                         Allocated to stack - _bp +17
                                     99 ;sloc0                     Allocated to stack - _bp +5
                                    100 ;------------------------------------------------------------
                                    101 ;	sqrtf.c:37: float sqrtf(const float x) _FLOAT_FUNC_REENTRANT
                                    102 ;	-----------------------------------------
                                    103 ;	 function sqrtf
                                    104 ;	-----------------------------------------
      000000                        105 _sqrtf:
                           000007   106 	ar7 = 0x07
                           000006   107 	ar6 = 0x06
                           000005   108 	ar5 = 0x05
                           000004   109 	ar4 = 0x04
                           000003   110 	ar3 = 0x03
                           000002   111 	ar2 = 0x02
                           000001   112 	ar1 = 0x01
                           000000   113 	ar0 = 0x00
      000000 C0*00            [24]  114 	push	_bp
      000002 85 81*00         [24]  115 	mov	_bp,sp
      000005 C0 82            [24]  116 	push	dpl
      000007 C0 83            [24]  117 	push	dph
      000009 C0 F0            [24]  118 	push	b
      00000B C0 E0            [24]  119 	push	acc
      00000D E5 81            [12]  120 	mov	a,sp
      00000F 24 0E            [12]  121 	add	a,#0x0E
      000011 F5 81            [12]  122 	mov	sp,a
                                    123 ;	sqrtf.c:42: if (x==0.0) return x;
      000013 A8*00            [24]  124 	mov	r0,_bp
      000015 08               [12]  125 	inc	r0
      000016 86 F0            [24]  126 	mov	b,@r0
      000018 08               [12]  127 	inc	r0
      000019 E6               [12]  128 	mov	a,@r0
      00001A 42 F0            [12]  129 	orl	b,a
      00001C 08               [12]  130 	inc	r0
      00001D E6               [12]  131 	mov	a,@r0
      00001E 42 F0            [12]  132 	orl	b,a
      000020 08               [12]  133 	inc	r0
      000021 E6               [12]  134 	mov	a,@r0
      000022 54 7F            [12]  135 	anl	a,#0x7F
      000024 45 F0            [12]  136 	orl	a,b
      000026 70 10            [24]  137 	jnz	00107$
      000028 A8*00            [24]  138 	mov	r0,_bp
      00002A 08               [12]  139 	inc	r0
      00002B 86 82            [24]  140 	mov	dpl,@r0
      00002D 08               [12]  141 	inc	r0
      00002E 86 83            [24]  142 	mov	dph,@r0
      000030 08               [12]  143 	inc	r0
      000031 86 F0            [24]  144 	mov	b,@r0
      000033 08               [12]  145 	inc	r0
      000034 E6               [12]  146 	mov	a,@r0
      000035 02r02rD1         [24]  147 	ljmp	00111$
      000038                        148 00107$:
                                    149 ;	sqrtf.c:43: else if (x==1.0) return 1.0;
      000038 E4               [12]  150 	clr	a
      000039 C0 E0            [24]  151 	push	acc
      00003B C0 E0            [24]  152 	push	acc
      00003D 74 80            [12]  153 	mov	a,#0x80
      00003F C0 E0            [24]  154 	push	acc
      000041 74 3F            [12]  155 	mov	a,#0x3F
      000043 C0 E0            [24]  156 	push	acc
      000045 A8*00            [24]  157 	mov	r0,_bp
      000047 08               [12]  158 	inc	r0
      000048 86 82            [24]  159 	mov	dpl,@r0
      00004A 08               [12]  160 	inc	r0
      00004B 86 83            [24]  161 	mov	dph,@r0
      00004D 08               [12]  162 	inc	r0
      00004E 86 F0            [24]  163 	mov	b,@r0
      000050 08               [12]  164 	inc	r0
      000051 E6               [12]  165 	mov	a,@r0
      000052 12r00r00         [24]  166 	lcall	___fseq
      000055 AB 82            [24]  167 	mov	r3,dpl
      000057 E5 81            [12]  168 	mov	a,sp
      000059 24 FC            [12]  169 	add	a,#0xfc
      00005B F5 81            [12]  170 	mov	sp,a
      00005D EB               [12]  171 	mov	a,r3
      00005E 60 0B            [24]  172 	jz	00104$
      000060 90 00 00         [24]  173 	mov	dptr,#0x0000
      000063 75 F0 80         [24]  174 	mov	b,#0x80
      000066 74 3F            [12]  175 	mov	a,#0x3F
      000068 02r02rD1         [24]  176 	ljmp	00111$
      00006B                        177 00104$:
                                    178 ;	sqrtf.c:44: else if (x<0.0)
      00006B E4               [12]  179 	clr	a
      00006C C0 E0            [24]  180 	push	acc
      00006E C0 E0            [24]  181 	push	acc
      000070 C0 E0            [24]  182 	push	acc
      000072 C0 E0            [24]  183 	push	acc
      000074 A8*00            [24]  184 	mov	r0,_bp
      000076 08               [12]  185 	inc	r0
      000077 86 82            [24]  186 	mov	dpl,@r0
      000079 08               [12]  187 	inc	r0
      00007A 86 83            [24]  188 	mov	dph,@r0
      00007C 08               [12]  189 	inc	r0
      00007D 86 F0            [24]  190 	mov	b,@r0
      00007F 08               [12]  191 	inc	r0
      000080 E6               [12]  192 	mov	a,@r0
      000081 12r00r00         [24]  193 	lcall	___fslt
      000084 AB 82            [24]  194 	mov	r3,dpl
      000086 E5 81            [12]  195 	mov	a,sp
      000088 24 FC            [12]  196 	add	a,#0xfc
      00008A F5 81            [12]  197 	mov	sp,a
      00008C EB               [12]  198 	mov	a,r3
      00008D 60 0F            [24]  199 	jz	00108$
                                    200 ;	sqrtf.c:46: errno=EDOM;
      00008F 75*00 21         [24]  201 	mov	_errno,#0x21
      000092 75*01 00         [24]  202 	mov	(_errno + 1),#0x00
                                    203 ;	sqrtf.c:47: return 0.0;
      000095 90 00 00         [24]  204 	mov	dptr,#(0x00&0x00ff)
      000098 E4               [12]  205 	clr	a
      000099 F5 F0            [12]  206 	mov	b,a
      00009B 02r02rD1         [24]  207 	ljmp	00111$
      00009E                        208 00108$:
                                    209 ;	sqrtf.c:49: f=frexpf(x, &n);
      00009E E5*00            [12]  210 	mov	a,_bp
      0000A0 24 11            [12]  211 	add	a,#0x11
      0000A2 FA               [12]  212 	mov	r2,a
      0000A3 7B 00            [12]  213 	mov	r3,#0x00
      0000A5 7F 40            [12]  214 	mov	r7,#0x40
      0000A7 C0 02            [24]  215 	push	ar2
      0000A9 C0 03            [24]  216 	push	ar3
      0000AB C0 07            [24]  217 	push	ar7
      0000AD A8*00            [24]  218 	mov	r0,_bp
      0000AF 08               [12]  219 	inc	r0
      0000B0 86 82            [24]  220 	mov	dpl,@r0
      0000B2 08               [12]  221 	inc	r0
      0000B3 86 83            [24]  222 	mov	dph,@r0
      0000B5 08               [12]  223 	inc	r0
      0000B6 86 F0            [24]  224 	mov	b,@r0
      0000B8 08               [12]  225 	inc	r0
      0000B9 E6               [12]  226 	mov	a,@r0
      0000BA 12r00r00         [24]  227 	lcall	_frexpf
      0000BD AC 82            [24]  228 	mov	r4,dpl
      0000BF AD 83            [24]  229 	mov	r5,dph
      0000C1 AE F0            [24]  230 	mov	r6,b
      0000C3 FF               [12]  231 	mov	r7,a
      0000C4 15 81            [12]  232 	dec	sp
      0000C6 15 81            [12]  233 	dec	sp
      0000C8 15 81            [12]  234 	dec	sp
      0000CA E5*00            [12]  235 	mov	a,_bp
      0000CC 24 09            [12]  236 	add	a,#0x09
      0000CE F8               [12]  237 	mov	r0,a
      0000CF A6 04            [24]  238 	mov	@r0,ar4
      0000D1 08               [12]  239 	inc	r0
      0000D2 A6 05            [24]  240 	mov	@r0,ar5
      0000D4 08               [12]  241 	inc	r0
      0000D5 A6 06            [24]  242 	mov	@r0,ar6
      0000D7 08               [12]  243 	inc	r0
      0000D8 A6 07            [24]  244 	mov	@r0,ar7
                                    245 ;	sqrtf.c:50: y=0.41731+0.59016*f; /*Educated guess*/
      0000DA E5*00            [12]  246 	mov	a,_bp
      0000DC 24 09            [12]  247 	add	a,#0x09
      0000DE F8               [12]  248 	mov	r0,a
      0000DF E6               [12]  249 	mov	a,@r0
      0000E0 C0 E0            [24]  250 	push	acc
      0000E2 08               [12]  251 	inc	r0
      0000E3 E6               [12]  252 	mov	a,@r0
      0000E4 C0 E0            [24]  253 	push	acc
      0000E6 08               [12]  254 	inc	r0
      0000E7 E6               [12]  255 	mov	a,@r0
      0000E8 C0 E0            [24]  256 	push	acc
      0000EA 08               [12]  257 	inc	r0
      0000EB E6               [12]  258 	mov	a,@r0
      0000EC C0 E0            [24]  259 	push	acc
      0000EE 90 14 BA         [24]  260 	mov	dptr,#0x14BA
      0000F1 75 F0 17         [24]  261 	mov	b,#0x17
      0000F4 74 3F            [12]  262 	mov	a,#0x3F
      0000F6 12r00r00         [24]  263 	lcall	___fsmul
      0000F9 AA 82            [24]  264 	mov	r2,dpl
      0000FB AB 83            [24]  265 	mov	r3,dph
      0000FD AE F0            [24]  266 	mov	r6,b
      0000FF FF               [12]  267 	mov	r7,a
      000100 E5 81            [12]  268 	mov	a,sp
      000102 24 FC            [12]  269 	add	a,#0xfc
      000104 F5 81            [12]  270 	mov	sp,a
      000106 74 A8            [12]  271 	mov	a,#0xA8
      000108 C0 E0            [24]  272 	push	acc
      00010A 04               [12]  273 	inc	a
      00010B C0 E0            [24]  274 	push	acc
      00010D 74 D5            [12]  275 	mov	a,#0xD5
      00010F C0 E0            [24]  276 	push	acc
      000111 74 3E            [12]  277 	mov	a,#0x3E
      000113 C0 E0            [24]  278 	push	acc
      000115 8A 82            [24]  279 	mov	dpl,r2
      000117 8B 83            [24]  280 	mov	dph,r3
      000119 8E F0            [24]  281 	mov	b,r6
      00011B EF               [12]  282 	mov	a,r7
      00011C 12r00r00         [24]  283 	lcall	___fsadd
      00011F AC 82            [24]  284 	mov	r4,dpl
      000121 AD 83            [24]  285 	mov	r5,dph
      000123 AE F0            [24]  286 	mov	r6,b
      000125 FF               [12]  287 	mov	r7,a
      000126 E5 81            [12]  288 	mov	a,sp
      000128 24 FC            [12]  289 	add	a,#0xfc
      00012A F5 81            [12]  290 	mov	sp,a
      00012C E5*00            [12]  291 	mov	a,_bp
      00012E 24 0D            [12]  292 	add	a,#0x0d
      000130 F8               [12]  293 	mov	r0,a
      000131 A6 04            [24]  294 	mov	@r0,ar4
      000133 08               [12]  295 	inc	r0
      000134 A6 05            [24]  296 	mov	@r0,ar5
      000136 08               [12]  297 	inc	r0
      000137 A6 06            [24]  298 	mov	@r0,ar6
      000139 08               [12]  299 	inc	r0
      00013A A6 07            [24]  300 	mov	@r0,ar7
                                    301 ;	sqrtf.c:52: y+=f/y;
      00013C E5*00            [12]  302 	mov	a,_bp
      00013E 24 0D            [12]  303 	add	a,#0x0d
      000140 F8               [12]  304 	mov	r0,a
      000141 E6               [12]  305 	mov	a,@r0
      000142 C0 E0            [24]  306 	push	acc
      000144 08               [12]  307 	inc	r0
      000145 E6               [12]  308 	mov	a,@r0
      000146 C0 E0            [24]  309 	push	acc
      000148 08               [12]  310 	inc	r0
      000149 E6               [12]  311 	mov	a,@r0
      00014A C0 E0            [24]  312 	push	acc
      00014C 08               [12]  313 	inc	r0
      00014D E6               [12]  314 	mov	a,@r0
      00014E C0 E0            [24]  315 	push	acc
      000150 E5*00            [12]  316 	mov	a,_bp
      000152 24 09            [12]  317 	add	a,#0x09
      000154 F8               [12]  318 	mov	r0,a
      000155 86 82            [24]  319 	mov	dpl,@r0
      000157 08               [12]  320 	inc	r0
      000158 86 83            [24]  321 	mov	dph,@r0
      00015A 08               [12]  322 	inc	r0
      00015B 86 F0            [24]  323 	mov	b,@r0
      00015D 08               [12]  324 	inc	r0
      00015E E6               [12]  325 	mov	a,@r0
      00015F 12r00r00         [24]  326 	lcall	___fsdiv
      000162 AA 82            [24]  327 	mov	r2,dpl
      000164 AB 83            [24]  328 	mov	r3,dph
      000166 AE F0            [24]  329 	mov	r6,b
      000168 FF               [12]  330 	mov	r7,a
      000169 E5 81            [12]  331 	mov	a,sp
      00016B 24 FC            [12]  332 	add	a,#0xfc
      00016D F5 81            [12]  333 	mov	sp,a
      00016F C0 02            [24]  334 	push	ar2
      000171 C0 03            [24]  335 	push	ar3
      000173 C0 06            [24]  336 	push	ar6
      000175 C0 07            [24]  337 	push	ar7
      000177 E5*00            [12]  338 	mov	a,_bp
      000179 24 0D            [12]  339 	add	a,#0x0d
      00017B F8               [12]  340 	mov	r0,a
      00017C 86 82            [24]  341 	mov	dpl,@r0
      00017E 08               [12]  342 	inc	r0
      00017F 86 83            [24]  343 	mov	dph,@r0
      000181 08               [12]  344 	inc	r0
      000182 86 F0            [24]  345 	mov	b,@r0
      000184 08               [12]  346 	inc	r0
      000185 E6               [12]  347 	mov	a,@r0
      000186 12r00r00         [24]  348 	lcall	___fsadd
      000189 AC 82            [24]  349 	mov	r4,dpl
      00018B AD 83            [24]  350 	mov	r5,dph
      00018D AE F0            [24]  351 	mov	r6,b
      00018F FF               [12]  352 	mov	r7,a
      000190 E5 81            [12]  353 	mov	a,sp
      000192 24 FC            [12]  354 	add	a,#0xfc
      000194 F5 81            [12]  355 	mov	sp,a
      000196 E5*00            [12]  356 	mov	a,_bp
      000198 24 0D            [12]  357 	add	a,#0x0d
      00019A F8               [12]  358 	mov	r0,a
      00019B A6 04            [24]  359 	mov	@r0,ar4
      00019D 08               [12]  360 	inc	r0
      00019E A6 05            [24]  361 	mov	@r0,ar5
      0001A0 08               [12]  362 	inc	r0
      0001A1 A6 06            [24]  363 	mov	@r0,ar6
      0001A3 08               [12]  364 	inc	r0
      0001A4 A6 07            [24]  365 	mov	@r0,ar7
                                    366 ;	sqrtf.c:53: y=ldexpf(y, -2) + f/y; /*Faster version of 0.25 * y + f/y*/
      0001A6 74 FE            [12]  367 	mov	a,#0xFE
      0001A8 C0 E0            [24]  368 	push	acc
      0001AA 04               [12]  369 	inc	a
      0001AB C0 E0            [24]  370 	push	acc
      0001AD E5*00            [12]  371 	mov	a,_bp
      0001AF 24 0D            [12]  372 	add	a,#0x0d
      0001B1 F8               [12]  373 	mov	r0,a
      0001B2 86 82            [24]  374 	mov	dpl,@r0
      0001B4 08               [12]  375 	inc	r0
      0001B5 86 83            [24]  376 	mov	dph,@r0
      0001B7 08               [12]  377 	inc	r0
      0001B8 86 F0            [24]  378 	mov	b,@r0
      0001BA 08               [12]  379 	inc	r0
      0001BB E6               [12]  380 	mov	a,@r0
      0001BC 12r00r00         [24]  381 	lcall	_ldexpf
      0001BF C8               [12]  382 	xch	a,r0
      0001C0 E5*00            [12]  383 	mov	a,_bp
      0001C2 24 05            [12]  384 	add	a,#0x05
      0001C4 C8               [12]  385 	xch	a,r0
      0001C5 A6 82            [24]  386 	mov	@r0,dpl
      0001C7 08               [12]  387 	inc	r0
      0001C8 A6 83            [24]  388 	mov	@r0,dph
      0001CA 08               [12]  389 	inc	r0
      0001CB A6 F0            [24]  390 	mov	@r0,b
      0001CD 08               [12]  391 	inc	r0
      0001CE F6               [12]  392 	mov	@r0,a
      0001CF 15 81            [12]  393 	dec	sp
      0001D1 15 81            [12]  394 	dec	sp
      0001D3 E5*00            [12]  395 	mov	a,_bp
      0001D5 24 0D            [12]  396 	add	a,#0x0d
      0001D7 F8               [12]  397 	mov	r0,a
      0001D8 E6               [12]  398 	mov	a,@r0
      0001D9 C0 E0            [24]  399 	push	acc
      0001DB 08               [12]  400 	inc	r0
      0001DC E6               [12]  401 	mov	a,@r0
      0001DD C0 E0            [24]  402 	push	acc
      0001DF 08               [12]  403 	inc	r0
      0001E0 E6               [12]  404 	mov	a,@r0
      0001E1 C0 E0            [24]  405 	push	acc
      0001E3 08               [12]  406 	inc	r0
      0001E4 E6               [12]  407 	mov	a,@r0
      0001E5 C0 E0            [24]  408 	push	acc
      0001E7 E5*00            [12]  409 	mov	a,_bp
      0001E9 24 09            [12]  410 	add	a,#0x09
      0001EB F8               [12]  411 	mov	r0,a
      0001EC 86 82            [24]  412 	mov	dpl,@r0
      0001EE 08               [12]  413 	inc	r0
      0001EF 86 83            [24]  414 	mov	dph,@r0
      0001F1 08               [12]  415 	inc	r0
      0001F2 86 F0            [24]  416 	mov	b,@r0
      0001F4 08               [12]  417 	inc	r0
      0001F5 E6               [12]  418 	mov	a,@r0
      0001F6 12r00r00         [24]  419 	lcall	___fsdiv
      0001F9 AA 82            [24]  420 	mov	r2,dpl
      0001FB AB 83            [24]  421 	mov	r3,dph
      0001FD AE F0            [24]  422 	mov	r6,b
      0001FF FF               [12]  423 	mov	r7,a
      000200 E5 81            [12]  424 	mov	a,sp
      000202 24 FC            [12]  425 	add	a,#0xfc
      000204 F5 81            [12]  426 	mov	sp,a
      000206 C0 02            [24]  427 	push	ar2
      000208 C0 03            [24]  428 	push	ar3
      00020A C0 06            [24]  429 	push	ar6
      00020C C0 07            [24]  430 	push	ar7
      00020E E5*00            [12]  431 	mov	a,_bp
      000210 24 05            [12]  432 	add	a,#0x05
      000212 F8               [12]  433 	mov	r0,a
      000213 86 82            [24]  434 	mov	dpl,@r0
      000215 08               [12]  435 	inc	r0
      000216 86 83            [24]  436 	mov	dph,@r0
      000218 08               [12]  437 	inc	r0
      000219 86 F0            [24]  438 	mov	b,@r0
      00021B 08               [12]  439 	inc	r0
      00021C E6               [12]  440 	mov	a,@r0
      00021D 12r00r00         [24]  441 	lcall	___fsadd
      000220 AC 82            [24]  442 	mov	r4,dpl
      000222 AD 83            [24]  443 	mov	r5,dph
      000224 AE F0            [24]  444 	mov	r6,b
      000226 FF               [12]  445 	mov	r7,a
      000227 E5 81            [12]  446 	mov	a,sp
      000229 24 FC            [12]  447 	add	a,#0xfc
      00022B F5 81            [12]  448 	mov	sp,a
      00022D E5*00            [12]  449 	mov	a,_bp
      00022F 24 0D            [12]  450 	add	a,#0x0d
      000231 F8               [12]  451 	mov	r0,a
      000232 A6 04            [24]  452 	mov	@r0,ar4
      000234 08               [12]  453 	inc	r0
      000235 A6 05            [24]  454 	mov	@r0,ar5
      000237 08               [12]  455 	inc	r0
      000238 A6 06            [24]  456 	mov	@r0,ar6
      00023A 08               [12]  457 	inc	r0
      00023B A6 07            [24]  458 	mov	@r0,ar7
                                    459 ;	sqrtf.c:55: if (n&1)
      00023D E5*00            [12]  460 	mov	a,_bp
      00023F 24 11            [12]  461 	add	a,#0x11
      000241 F8               [12]  462 	mov	r0,a
      000242 E6               [12]  463 	mov	a,@r0
      000243 30 E0 47         [24]  464 	jnb	acc.0,00110$
                                    465 ;	sqrtf.c:57: y*=0.7071067812;
      000246 E5*00            [12]  466 	mov	a,_bp
      000248 24 0D            [12]  467 	add	a,#0x0d
      00024A F8               [12]  468 	mov	r0,a
      00024B E6               [12]  469 	mov	a,@r0
      00024C C0 E0            [24]  470 	push	acc
      00024E 08               [12]  471 	inc	r0
      00024F E6               [12]  472 	mov	a,@r0
      000250 C0 E0            [24]  473 	push	acc
      000252 08               [12]  474 	inc	r0
      000253 E6               [12]  475 	mov	a,@r0
      000254 C0 E0            [24]  476 	push	acc
      000256 08               [12]  477 	inc	r0
      000257 E6               [12]  478 	mov	a,@r0
      000258 C0 E0            [24]  479 	push	acc
      00025A 90 04 F3         [24]  480 	mov	dptr,#0x04F3
      00025D 75 F0 35         [24]  481 	mov	b,#0x35
      000260 74 3F            [12]  482 	mov	a,#0x3F
      000262 12r00r00         [24]  483 	lcall	___fsmul
      000265 AC 82            [24]  484 	mov	r4,dpl
      000267 AD 83            [24]  485 	mov	r5,dph
      000269 AE F0            [24]  486 	mov	r6,b
      00026B FF               [12]  487 	mov	r7,a
      00026C E5 81            [12]  488 	mov	a,sp
      00026E 24 FC            [12]  489 	add	a,#0xfc
      000270 F5 81            [12]  490 	mov	sp,a
      000272 E5*00            [12]  491 	mov	a,_bp
      000274 24 0D            [12]  492 	add	a,#0x0d
      000276 F8               [12]  493 	mov	r0,a
      000277 A6 04            [24]  494 	mov	@r0,ar4
      000279 08               [12]  495 	inc	r0
      00027A A6 05            [24]  496 	mov	@r0,ar5
      00027C 08               [12]  497 	inc	r0
      00027D A6 06            [24]  498 	mov	@r0,ar6
      00027F 08               [12]  499 	inc	r0
      000280 A6 07            [24]  500 	mov	@r0,ar7
                                    501 ;	sqrtf.c:58: ++n;
      000282 E5*00            [12]  502 	mov	a,_bp
      000284 24 11            [12]  503 	add	a,#0x11
      000286 F8               [12]  504 	mov	r0,a
      000287 06               [12]  505 	inc	@r0
      000288 B6 00 02         [24]  506 	cjne	@r0,#0x00,00129$
      00028B 08               [12]  507 	inc	r0
      00028C 06               [12]  508 	inc	@r0
      00028D                        509 00129$:
      00028D                        510 00110$:
                                    511 ;	sqrtf.c:60: return ldexpf(y, n/2);
      00028D 74 02            [12]  512 	mov	a,#0x02
      00028F C0 E0            [24]  513 	push	acc
      000291 E4               [12]  514 	clr	a
      000292 C0 E0            [24]  515 	push	acc
      000294 E5*00            [12]  516 	mov	a,_bp
      000296 24 11            [12]  517 	add	a,#0x11
      000298 F8               [12]  518 	mov	r0,a
      000299 86 82            [24]  519 	mov	dpl,@r0
      00029B 08               [12]  520 	inc	r0
      00029C 86 83            [24]  521 	mov	dph,@r0
      00029E 12r00r00         [24]  522 	lcall	__divsint
      0002A1 AE 82            [24]  523 	mov	r6,dpl
      0002A3 AF 83            [24]  524 	mov	r7,dph
      0002A5 15 81            [12]  525 	dec	sp
      0002A7 15 81            [12]  526 	dec	sp
      0002A9 C0 06            [24]  527 	push	ar6
      0002AB C0 07            [24]  528 	push	ar7
      0002AD E5*00            [12]  529 	mov	a,_bp
      0002AF 24 0D            [12]  530 	add	a,#0x0d
      0002B1 F8               [12]  531 	mov	r0,a
      0002B2 86 82            [24]  532 	mov	dpl,@r0
      0002B4 08               [12]  533 	inc	r0
      0002B5 86 83            [24]  534 	mov	dph,@r0
      0002B7 08               [12]  535 	inc	r0
      0002B8 86 F0            [24]  536 	mov	b,@r0
      0002BA 08               [12]  537 	inc	r0
      0002BB E6               [12]  538 	mov	a,@r0
      0002BC 12r00r00         [24]  539 	lcall	_ldexpf
      0002BF AC 82            [24]  540 	mov	r4,dpl
      0002C1 AD 83            [24]  541 	mov	r5,dph
      0002C3 AE F0            [24]  542 	mov	r6,b
      0002C5 FF               [12]  543 	mov	r7,a
      0002C6 15 81            [12]  544 	dec	sp
      0002C8 15 81            [12]  545 	dec	sp
      0002CA 8C 82            [24]  546 	mov	dpl,r4
      0002CC 8D 83            [24]  547 	mov	dph,r5
      0002CE 8E F0            [24]  548 	mov	b,r6
      0002D0 EF               [12]  549 	mov	a,r7
      0002D1                        550 00111$:
      0002D1 85*00 81         [24]  551 	mov	sp,_bp
      0002D4 D0*00            [24]  552 	pop	_bp
      0002D6 22               [24]  553 	ret
                                    554 	.area CSEG    (CODE)
                                    555 	.area CONST   (CODE)
                                    556 	.area XINIT   (CODE)
                                    557 	.area CABS    (ABS,CODE)
