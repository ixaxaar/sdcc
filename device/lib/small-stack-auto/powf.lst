                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:02 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module powf
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _logf
                                     13 	.globl _expf
                                     14 	.globl _powf
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram 
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; indirectly addressable internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area ISEG    (DATA)
                                     41 ;--------------------------------------------------------
                                     42 ; absolute internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area IABS    (ABS,DATA)
                                     45 	.area IABS    (ABS,DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; bit data
                                     48 ;--------------------------------------------------------
                                     49 	.area BSEG    (BIT)
                                     50 ;--------------------------------------------------------
                                     51 ; paged external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area PSEG    (PAG,XDATA)
                                     54 ;--------------------------------------------------------
                                     55 ; external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XSEG    (XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; absolute external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XABS    (ABS,XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; external initialized ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XISEG   (XDATA)
                                     66 	.area HOME    (CODE)
                                     67 	.area GSINIT0 (CODE)
                                     68 	.area GSINIT1 (CODE)
                                     69 	.area GSINIT2 (CODE)
                                     70 	.area GSINIT3 (CODE)
                                     71 	.area GSINIT4 (CODE)
                                     72 	.area GSINIT5 (CODE)
                                     73 	.area GSINIT  (CODE)
                                     74 	.area GSFINAL (CODE)
                                     75 	.area CSEG    (CODE)
                                     76 ;--------------------------------------------------------
                                     77 ; global & static initialisations
                                     78 ;--------------------------------------------------------
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 	.area GSFINAL (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 ;--------------------------------------------------------
                                     84 ; Home
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area HOME    (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; code
                                     90 ;--------------------------------------------------------
                                     91 	.area CSEG    (CODE)
                                     92 ;------------------------------------------------------------
                                     93 ;Allocation info for local variables in function 'powf'
                                     94 ;------------------------------------------------------------
                                     95 ;y                         Allocated to stack - _bp -6
                                     96 ;x                         Allocated to registers r4 r5 r6 r7 
                                     97 ;------------------------------------------------------------
                                     98 ;	powf.c:35: float powf(const float x, const float y)
                                     99 ;	-----------------------------------------
                                    100 ;	 function powf
                                    101 ;	-----------------------------------------
      000000                        102 _powf:
                           000007   103 	ar7 = 0x07
                           000006   104 	ar6 = 0x06
                           000005   105 	ar5 = 0x05
                           000004   106 	ar4 = 0x04
                           000003   107 	ar3 = 0x03
                           000002   108 	ar2 = 0x02
                           000001   109 	ar1 = 0x01
                           000000   110 	ar0 = 0x00
      000000 C0*00            [24]  111 	push	_bp
      000002 85 81*00         [24]  112 	mov	_bp,sp
      000005 AC 82            [24]  113 	mov	r4,dpl
      000007 AD 83            [24]  114 	mov	r5,dph
      000009 AE F0            [24]  115 	mov	r6,b
      00000B FF               [12]  116 	mov	r7,a
                                    117 ;	powf.c:37: if(y == 0.0) return 1.0;
      00000C E5*00            [12]  118 	mov	a,_bp
      00000E 24 FA            [12]  119 	add	a,#0xfa
      000010 F8               [12]  120 	mov	r0,a
      000011 86 F0            [24]  121 	mov	b,@r0
      000013 08               [12]  122 	inc	r0
      000014 E6               [12]  123 	mov	a,@r0
      000015 42 F0            [12]  124 	orl	b,a
      000017 08               [12]  125 	inc	r0
      000018 E6               [12]  126 	mov	a,@r0
      000019 42 F0            [12]  127 	orl	b,a
      00001B 08               [12]  128 	inc	r0
      00001C E6               [12]  129 	mov	a,@r0
      00001D 54 7F            [12]  130 	anl	a,#0x7F
      00001F 45 F0            [12]  131 	orl	a,b
      000021 70 0B            [24]  132 	jnz	00102$
      000023 90 00 00         [24]  133 	mov	dptr,#0x0000
      000026 75 F0 80         [24]  134 	mov	b,#0x80
      000029 74 3F            [12]  135 	mov	a,#0x3F
      00002B 02r00rF5         [24]  136 	ljmp	00107$
      00002E                        137 00102$:
                                    138 ;	powf.c:38: if(y==1.0) return x;
      00002E C0 07            [24]  139 	push	ar7
      000030 C0 06            [24]  140 	push	ar6
      000032 C0 05            [24]  141 	push	ar5
      000034 C0 04            [24]  142 	push	ar4
      000036 E4               [12]  143 	clr	a
      000037 C0 E0            [24]  144 	push	acc
      000039 C0 E0            [24]  145 	push	acc
      00003B 74 80            [12]  146 	mov	a,#0x80
      00003D C0 E0            [24]  147 	push	acc
      00003F 74 3F            [12]  148 	mov	a,#0x3F
      000041 C0 E0            [24]  149 	push	acc
      000043 E5*00            [12]  150 	mov	a,_bp
      000045 24 FA            [12]  151 	add	a,#0xfa
      000047 F8               [12]  152 	mov	r0,a
      000048 86 82            [24]  153 	mov	dpl,@r0
      00004A 08               [12]  154 	inc	r0
      00004B 86 83            [24]  155 	mov	dph,@r0
      00004D 08               [12]  156 	inc	r0
      00004E 86 F0            [24]  157 	mov	b,@r0
      000050 08               [12]  158 	inc	r0
      000051 E6               [12]  159 	mov	a,@r0
      000052 12r00r00         [24]  160 	lcall	___fseq
      000055 AB 82            [24]  161 	mov	r3,dpl
      000057 E5 81            [12]  162 	mov	a,sp
      000059 24 FC            [12]  163 	add	a,#0xfc
      00005B F5 81            [12]  164 	mov	sp,a
      00005D D0 04            [24]  165 	pop	ar4
      00005F D0 05            [24]  166 	pop	ar5
      000061 D0 06            [24]  167 	pop	ar6
      000063 D0 07            [24]  168 	pop	ar7
      000065 EB               [12]  169 	mov	a,r3
      000066 60 0A            [24]  170 	jz	00104$
      000068 8C 82            [24]  171 	mov	dpl,r4
      00006A 8D 83            [24]  172 	mov	dph,r5
      00006C 8E F0            [24]  173 	mov	b,r6
      00006E EF               [12]  174 	mov	a,r7
      00006F 02r00rF5         [24]  175 	ljmp	00107$
      000072                        176 00104$:
                                    177 ;	powf.c:39: if(x <= 0.0) return 0.0;
      000072 C0 07            [24]  178 	push	ar7
      000074 C0 06            [24]  179 	push	ar6
      000076 C0 05            [24]  180 	push	ar5
      000078 C0 04            [24]  181 	push	ar4
      00007A E4               [12]  182 	clr	a
      00007B C0 E0            [24]  183 	push	acc
      00007D C0 E0            [24]  184 	push	acc
      00007F C0 E0            [24]  185 	push	acc
      000081 C0 E0            [24]  186 	push	acc
      000083 8C 82            [24]  187 	mov	dpl,r4
      000085 8D 83            [24]  188 	mov	dph,r5
      000087 8E F0            [24]  189 	mov	b,r6
      000089 EF               [12]  190 	mov	a,r7
      00008A 12r00r00         [24]  191 	lcall	___fsgt
      00008D AB 82            [24]  192 	mov	r3,dpl
      00008F E5 81            [12]  193 	mov	a,sp
      000091 24 FC            [12]  194 	add	a,#0xfc
      000093 F5 81            [12]  195 	mov	sp,a
      000095 D0 04            [24]  196 	pop	ar4
      000097 D0 05            [24]  197 	pop	ar5
      000099 D0 06            [24]  198 	pop	ar6
      00009B D0 07            [24]  199 	pop	ar7
      00009D EB               [12]  200 	mov	a,r3
      00009E 70 08            [24]  201 	jnz	00106$
      0000A0 90 00 00         [24]  202 	mov	dptr,#(0x00&0x00ff)
      0000A3 E4               [12]  203 	clr	a
      0000A4 F5 F0            [12]  204 	mov	b,a
      0000A6 80 4D            [24]  205 	sjmp	00107$
      0000A8                        206 00106$:
                                    207 ;	powf.c:40: return expf(logf(x) * y);
      0000A8 8C 82            [24]  208 	mov	dpl,r4
      0000AA 8D 83            [24]  209 	mov	dph,r5
      0000AC 8E F0            [24]  210 	mov	b,r6
      0000AE EF               [12]  211 	mov	a,r7
      0000AF 12r00r00         [24]  212 	lcall	_logf
      0000B2 AC 82            [24]  213 	mov	r4,dpl
      0000B4 AD 83            [24]  214 	mov	r5,dph
      0000B6 AE F0            [24]  215 	mov	r6,b
      0000B8 FF               [12]  216 	mov	r7,a
      0000B9 E5*00            [12]  217 	mov	a,_bp
      0000BB 24 FA            [12]  218 	add	a,#0xfa
      0000BD F8               [12]  219 	mov	r0,a
      0000BE E6               [12]  220 	mov	a,@r0
      0000BF C0 E0            [24]  221 	push	acc
      0000C1 08               [12]  222 	inc	r0
      0000C2 E6               [12]  223 	mov	a,@r0
      0000C3 C0 E0            [24]  224 	push	acc
      0000C5 08               [12]  225 	inc	r0
      0000C6 E6               [12]  226 	mov	a,@r0
      0000C7 C0 E0            [24]  227 	push	acc
      0000C9 08               [12]  228 	inc	r0
      0000CA E6               [12]  229 	mov	a,@r0
      0000CB C0 E0            [24]  230 	push	acc
      0000CD 8C 82            [24]  231 	mov	dpl,r4
      0000CF 8D 83            [24]  232 	mov	dph,r5
      0000D1 8E F0            [24]  233 	mov	b,r6
      0000D3 EF               [12]  234 	mov	a,r7
      0000D4 12r00r00         [24]  235 	lcall	___fsmul
      0000D7 AC 82            [24]  236 	mov	r4,dpl
      0000D9 AD 83            [24]  237 	mov	r5,dph
      0000DB AE F0            [24]  238 	mov	r6,b
      0000DD FF               [12]  239 	mov	r7,a
      0000DE E5 81            [12]  240 	mov	a,sp
      0000E0 24 FC            [12]  241 	add	a,#0xfc
      0000E2 F5 81            [12]  242 	mov	sp,a
      0000E4 8C 82            [24]  243 	mov	dpl,r4
      0000E6 8D 83            [24]  244 	mov	dph,r5
      0000E8 8E F0            [24]  245 	mov	b,r6
      0000EA EF               [12]  246 	mov	a,r7
      0000EB 12r00r00         [24]  247 	lcall	_expf
      0000EE AC 82            [24]  248 	mov	r4,dpl
      0000F0 AD 83            [24]  249 	mov	r5,dph
      0000F2 AE F0            [24]  250 	mov	r6,b
      0000F4 FF               [12]  251 	mov	r7,a
      0000F5                        252 00107$:
      0000F5 D0*00            [24]  253 	pop	_bp
      0000F7 22               [24]  254 	ret
                                    255 	.area CSEG    (CODE)
                                    256 	.area CONST   (CODE)
                                    257 	.area XINIT   (CODE)
                                    258 	.area CABS    (ABS,CODE)
