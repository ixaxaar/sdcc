                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:04 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module rand
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _rand
                                     13 	.globl _srand
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
      000000                         33 _next:
      000000                         34 	.ds 4
                                     35 ;--------------------------------------------------------
                                     36 ; overlayable items in internal ram 
                                     37 ;--------------------------------------------------------
                                     38 ;--------------------------------------------------------
                                     39 ; indirectly addressable internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area ISEG    (DATA)
                                     42 ;--------------------------------------------------------
                                     43 ; absolute internal ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area IABS    (ABS,DATA)
                                     46 	.area IABS    (ABS,DATA)
                                     47 ;--------------------------------------------------------
                                     48 ; bit data
                                     49 ;--------------------------------------------------------
                                     50 	.area BSEG    (BIT)
                                     51 ;--------------------------------------------------------
                                     52 ; paged external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area PSEG    (PAG,XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XSEG    (XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; absolute external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XABS    (ABS,XDATA)
                                     63 ;--------------------------------------------------------
                                     64 ; external initialized ram data
                                     65 ;--------------------------------------------------------
                                     66 	.area XISEG   (XDATA)
                                     67 	.area HOME    (CODE)
                                     68 	.area GSINIT0 (CODE)
                                     69 	.area GSINIT1 (CODE)
                                     70 	.area GSINIT2 (CODE)
                                     71 	.area GSINIT3 (CODE)
                                     72 	.area GSINIT4 (CODE)
                                     73 	.area GSINIT5 (CODE)
                                     74 	.area GSINIT  (CODE)
                                     75 	.area GSFINAL (CODE)
                                     76 	.area CSEG    (CODE)
                                     77 ;--------------------------------------------------------
                                     78 ; global & static initialisations
                                     79 ;--------------------------------------------------------
                                     80 	.area HOME    (CODE)
                                     81 	.area GSINIT  (CODE)
                                     82 	.area GSFINAL (CODE)
                                     83 	.area GSINIT  (CODE)
                                     84 ;	rand.c:31: static unsigned long int next = 1;
      000000 75*00 01         [24]   85 	mov	_next,#0x01
      000003 E4               [12]   86 	clr	a
      000004 F5*01            [12]   87 	mov	(_next + 1),a
      000006 F5*02            [12]   88 	mov	(_next + 2),a
      000008 F5*03            [12]   89 	mov	(_next + 3),a
                                     90 ;--------------------------------------------------------
                                     91 ; Home
                                     92 ;--------------------------------------------------------
                                     93 	.area HOME    (CODE)
                                     94 	.area HOME    (CODE)
                                     95 ;--------------------------------------------------------
                                     96 ; code
                                     97 ;--------------------------------------------------------
                                     98 	.area CSEG    (CODE)
                                     99 ;------------------------------------------------------------
                                    100 ;Allocation info for local variables in function 'rand'
                                    101 ;------------------------------------------------------------
                                    102 ;	rand.c:33: int rand(void)
                                    103 ;	-----------------------------------------
                                    104 ;	 function rand
                                    105 ;	-----------------------------------------
      000000                        106 _rand:
                           000007   107 	ar7 = 0x07
                           000006   108 	ar6 = 0x06
                           000005   109 	ar5 = 0x05
                           000004   110 	ar4 = 0x04
                           000003   111 	ar3 = 0x03
                           000002   112 	ar2 = 0x02
                           000001   113 	ar1 = 0x01
                           000000   114 	ar0 = 0x00
                                    115 ;	rand.c:35: next = next * 1103515245UL + 12345;
      000000 C0*00            [24]  116 	push	_next
      000002 C0*01            [24]  117 	push	(_next + 1)
      000004 C0*02            [24]  118 	push	(_next + 2)
      000006 C0*03            [24]  119 	push	(_next + 3)
      000008 90 4E 6D         [24]  120 	mov	dptr,#0x4E6D
      00000B 75 F0 C6         [24]  121 	mov	b,#0xC6
      00000E 74 41            [12]  122 	mov	a,#0x41
      000010 12r00r00         [24]  123 	lcall	__mullong
      000013 AC 82            [24]  124 	mov	r4,dpl
      000015 AD 83            [24]  125 	mov	r5,dph
      000017 AE F0            [24]  126 	mov	r6,b
      000019 FF               [12]  127 	mov	r7,a
      00001A E5 81            [12]  128 	mov	a,sp
      00001C 24 FC            [12]  129 	add	a,#0xfc
      00001E F5 81            [12]  130 	mov	sp,a
      000020 74 39            [12]  131 	mov	a,#0x39
      000022 2C               [12]  132 	add	a,r4
      000023 F5*00            [12]  133 	mov	_next,a
      000025 74 30            [12]  134 	mov	a,#0x30
      000027 3D               [12]  135 	addc	a,r5
      000028 F5*01            [12]  136 	mov	(_next + 1),a
      00002A E4               [12]  137 	clr	a
      00002B 3E               [12]  138 	addc	a,r6
      00002C F5*02            [12]  139 	mov	(_next + 2),a
      00002E E4               [12]  140 	clr	a
      00002F 3F               [12]  141 	addc	a,r7
      000030 F5*03            [12]  142 	mov	(_next + 3),a
                                    143 ;	rand.c:36: return (unsigned int)(next/65536) % (RAND_MAX + 1U);
      000032 AC*02            [24]  144 	mov	r4,(_next + 2)
      000034 AD*03            [24]  145 	mov	r5,(_next + 3)
      000036 8C 82            [24]  146 	mov	dpl,r4
      000038 74 7F            [12]  147 	mov	a,#0x7F
      00003A 5D               [12]  148 	anl	a,r5
      00003B F5 83            [12]  149 	mov	dph,a
      00003D 22               [24]  150 	ret
                                    151 ;------------------------------------------------------------
                                    152 ;Allocation info for local variables in function 'srand'
                                    153 ;------------------------------------------------------------
                                    154 ;seed                      Allocated to registers r6 r7 
                                    155 ;------------------------------------------------------------
                                    156 ;	rand.c:39: void srand(unsigned int seed)
                                    157 ;	-----------------------------------------
                                    158 ;	 function srand
                                    159 ;	-----------------------------------------
      00003E                        160 _srand:
      00003E AE 82            [24]  161 	mov	r6,dpl
      000040 AF 83            [24]  162 	mov	r7,dph
                                    163 ;	rand.c:41: next = seed;
      000042 8E*00            [24]  164 	mov	_next,r6
      000044 8F*01            [24]  165 	mov	(_next + 1),r7
      000046 75*02 00         [24]  166 	mov	(_next + 2),#0x00
      000049 75*03 00         [24]  167 	mov	(_next + 3),#0x00
      00004C 22               [24]  168 	ret
                                    169 	.area CSEG    (CODE)
                                    170 	.area CONST   (CODE)
                                    171 	.area XINIT   (CODE)
                                    172 	.area CABS    (ABS,CODE)
