                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:03 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module logf
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _frexpf
                                     13 	.globl _logf
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram 
                                     35 ;--------------------------------------------------------
                                     36 ;--------------------------------------------------------
                                     37 ; indirectly addressable internal ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area ISEG    (DATA)
                                     40 ;--------------------------------------------------------
                                     41 ; absolute internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area IABS    (ABS,DATA)
                                     44 	.area IABS    (ABS,DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; bit data
                                     47 ;--------------------------------------------------------
                                     48 	.area BSEG    (BIT)
                                     49 ;--------------------------------------------------------
                                     50 ; paged external ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area PSEG    (PAG,XDATA)
                                     53 ;--------------------------------------------------------
                                     54 ; external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area XSEG    (XDATA)
                                     57 ;--------------------------------------------------------
                                     58 ; absolute external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XABS    (ABS,XDATA)
                                     61 ;--------------------------------------------------------
                                     62 ; external initialized ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XISEG   (XDATA)
                                     65 	.area HOME    (CODE)
                                     66 	.area GSINIT0 (CODE)
                                     67 	.area GSINIT1 (CODE)
                                     68 	.area GSINIT2 (CODE)
                                     69 	.area GSINIT3 (CODE)
                                     70 	.area GSINIT4 (CODE)
                                     71 	.area GSINIT5 (CODE)
                                     72 	.area GSINIT  (CODE)
                                     73 	.area GSFINAL (CODE)
                                     74 	.area CSEG    (CODE)
                                     75 ;--------------------------------------------------------
                                     76 ; global & static initialisations
                                     77 ;--------------------------------------------------------
                                     78 	.area HOME    (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 	.area GSFINAL (CODE)
                                     81 	.area GSINIT  (CODE)
                                     82 ;--------------------------------------------------------
                                     83 ; Home
                                     84 ;--------------------------------------------------------
                                     85 	.area HOME    (CODE)
                                     86 	.area HOME    (CODE)
                                     87 ;--------------------------------------------------------
                                     88 ; code
                                     89 ;--------------------------------------------------------
                                     90 	.area CSEG    (CODE)
                                     91 ;------------------------------------------------------------
                                     92 ;Allocation info for local variables in function 'logf'
                                     93 ;------------------------------------------------------------
                                     94 ;x                         Allocated to stack - _bp +1
                                     95 ;Rz                        Allocated to stack - _bp +9
                                     96 ;f                         Allocated to registers r4 r3 r6 r7 
                                     97 ;z                         Allocated to stack - _bp +13
                                     98 ;w                         Allocated to registers r7 r6 r5 r4 
                                     99 ;znum                      Allocated to stack - _bp +17
                                    100 ;zden                      Allocated to stack - _bp +21
                                    101 ;xn                        Allocated to stack - _bp +25
                                    102 ;n                         Allocated to stack - _bp +29
                                    103 ;sloc0                     Allocated to stack - _bp +5
                                    104 ;------------------------------------------------------------
                                    105 ;	logf.c:216: float logf(const float x) _FLOAT_FUNC_REENTRANT
                                    106 ;	-----------------------------------------
                                    107 ;	 function logf
                                    108 ;	-----------------------------------------
      000000                        109 _logf:
                           000007   110 	ar7 = 0x07
                           000006   111 	ar6 = 0x06
                           000005   112 	ar5 = 0x05
                           000004   113 	ar4 = 0x04
                           000003   114 	ar3 = 0x03
                           000002   115 	ar2 = 0x02
                           000001   116 	ar1 = 0x01
                           000000   117 	ar0 = 0x00
      000000 C0*00            [24]  118 	push	_bp
      000002 85 81*00         [24]  119 	mov	_bp,sp
      000005 C0 82            [24]  120 	push	dpl
      000007 C0 83            [24]  121 	push	dph
      000009 C0 F0            [24]  122 	push	b
      00000B C0 E0            [24]  123 	push	acc
      00000D E5 81            [12]  124 	mov	a,sp
      00000F 24 1A            [12]  125 	add	a,#0x1A
      000011 F5 81            [12]  126 	mov	sp,a
                                    127 ;	logf.c:226: if (x<=0.0)
      000013 E4               [12]  128 	clr	a
      000014 C0 E0            [24]  129 	push	acc
      000016 C0 E0            [24]  130 	push	acc
      000018 C0 E0            [24]  131 	push	acc
      00001A C0 E0            [24]  132 	push	acc
      00001C A8*00            [24]  133 	mov	r0,_bp
      00001E 08               [12]  134 	inc	r0
      00001F 86 82            [24]  135 	mov	dpl,@r0
      000021 08               [12]  136 	inc	r0
      000022 86 83            [24]  137 	mov	dph,@r0
      000024 08               [12]  138 	inc	r0
      000025 86 F0            [24]  139 	mov	b,@r0
      000027 08               [12]  140 	inc	r0
      000028 E6               [12]  141 	mov	a,@r0
      000029 12r00r00         [24]  142 	lcall	___fsgt
      00002C AB 82            [24]  143 	mov	r3,dpl
      00002E E5 81            [12]  144 	mov	a,sp
      000030 24 FC            [12]  145 	add	a,#0xfc
      000032 F5 81            [12]  146 	mov	sp,a
      000034 EB               [12]  147 	mov	a,r3
                                    148 ;	logf.c:228: errno=EDOM;
      000035 70 0E            [24]  149 	jnz	00102$
      000037 75*00 21         [24]  150 	mov	_errno,#0x21
      00003A F5*01            [12]  151 	mov	(_errno + 1),a
                                    152 ;	logf.c:229: return 0.0;
      00003C 90 00 00         [24]  153 	mov	dptr,#(0x00&0x00ff)
      00003F E4               [12]  154 	clr	a
      000040 F5 F0            [12]  155 	mov	b,a
      000042 02r04r28         [24]  156 	ljmp	00106$
      000045                        157 00102$:
                                    158 ;	logf.c:231: f=frexpf(x, &n);
      000045 E5*00            [12]  159 	mov	a,_bp
      000047 24 1D            [12]  160 	add	a,#0x1D
      000049 FA               [12]  161 	mov	r2,a
      00004A 7B 00            [12]  162 	mov	r3,#0x00
      00004C 7F 40            [12]  163 	mov	r7,#0x40
      00004E C0 02            [24]  164 	push	ar2
      000050 C0 03            [24]  165 	push	ar3
      000052 C0 07            [24]  166 	push	ar7
      000054 A8*00            [24]  167 	mov	r0,_bp
      000056 08               [12]  168 	inc	r0
      000057 86 82            [24]  169 	mov	dpl,@r0
      000059 08               [12]  170 	inc	r0
      00005A 86 83            [24]  171 	mov	dph,@r0
      00005C 08               [12]  172 	inc	r0
      00005D 86 F0            [24]  173 	mov	b,@r0
      00005F 08               [12]  174 	inc	r0
      000060 E6               [12]  175 	mov	a,@r0
      000061 12r00r00         [24]  176 	lcall	_frexpf
      000064 AC 82            [24]  177 	mov	r4,dpl
      000066 AD 83            [24]  178 	mov	r5,dph
      000068 AE F0            [24]  179 	mov	r6,b
      00006A FF               [12]  180 	mov	r7,a
      00006B 15 81            [12]  181 	dec	sp
      00006D 15 81            [12]  182 	dec	sp
      00006F 15 81            [12]  183 	dec	sp
      000071 8D 03            [24]  184 	mov	ar3,r5
                                    185 ;	logf.c:232: znum=f-0.5;
      000073 C0 07            [24]  186 	push	ar7
      000075 C0 06            [24]  187 	push	ar6
      000077 C0 04            [24]  188 	push	ar4
      000079 C0 03            [24]  189 	push	ar3
      00007B E4               [12]  190 	clr	a
      00007C C0 E0            [24]  191 	push	acc
      00007E C0 E0            [24]  192 	push	acc
      000080 C0 E0            [24]  193 	push	acc
      000082 74 3F            [12]  194 	mov	a,#0x3F
      000084 C0 E0            [24]  195 	push	acc
      000086 8C 82            [24]  196 	mov	dpl,r4
      000088 8B 83            [24]  197 	mov	dph,r3
      00008A 8E F0            [24]  198 	mov	b,r6
      00008C EF               [12]  199 	mov	a,r7
      00008D 12r00r00         [24]  200 	lcall	___fssub
      000090 C8               [12]  201 	xch	a,r0
      000091 E5*00            [12]  202 	mov	a,_bp
      000093 24 11            [12]  203 	add	a,#0x11
      000095 C8               [12]  204 	xch	a,r0
      000096 A6 82            [24]  205 	mov	@r0,dpl
      000098 08               [12]  206 	inc	r0
      000099 A6 83            [24]  207 	mov	@r0,dph
      00009B 08               [12]  208 	inc	r0
      00009C A6 F0            [24]  209 	mov	@r0,b
      00009E 08               [12]  210 	inc	r0
      00009F F6               [12]  211 	mov	@r0,a
      0000A0 E5 81            [12]  212 	mov	a,sp
      0000A2 24 FC            [12]  213 	add	a,#0xfc
      0000A4 F5 81            [12]  214 	mov	sp,a
      0000A6 D0 03            [24]  215 	pop	ar3
      0000A8 D0 04            [24]  216 	pop	ar4
      0000AA D0 06            [24]  217 	pop	ar6
      0000AC D0 07            [24]  218 	pop	ar7
      0000AE E5*00            [12]  219 	mov	a,_bp
      0000B0 24 11            [12]  220 	add	a,#0x11
                                    221 ;	logf.c:233: if (f>C0)
      0000B2 C0 07            [24]  222 	push	ar7
      0000B4 C0 06            [24]  223 	push	ar6
      0000B6 C0 04            [24]  224 	push	ar4
      0000B8 C0 03            [24]  225 	push	ar3
      0000BA 74 F3            [12]  226 	mov	a,#0xF3
      0000BC C0 E0            [24]  227 	push	acc
      0000BE 74 04            [12]  228 	mov	a,#0x04
      0000C0 C0 E0            [24]  229 	push	acc
      0000C2 74 35            [12]  230 	mov	a,#0x35
      0000C4 C0 E0            [24]  231 	push	acc
      0000C6 74 3F            [12]  232 	mov	a,#0x3F
      0000C8 C0 E0            [24]  233 	push	acc
      0000CA 8C 82            [24]  234 	mov	dpl,r4
      0000CC 8B 83            [24]  235 	mov	dph,r3
      0000CE 8E F0            [24]  236 	mov	b,r6
      0000D0 EF               [12]  237 	mov	a,r7
      0000D1 12r00r00         [24]  238 	lcall	___fsgt
      0000D4 AD 82            [24]  239 	mov	r5,dpl
      0000D6 E5 81            [12]  240 	mov	a,sp
      0000D8 24 FC            [12]  241 	add	a,#0xfc
      0000DA F5 81            [12]  242 	mov	sp,a
      0000DC D0 03            [24]  243 	pop	ar3
      0000DE D0 04            [24]  244 	pop	ar4
      0000E0 D0 06            [24]  245 	pop	ar6
      0000E2 D0 07            [24]  246 	pop	ar7
      0000E4 ED               [12]  247 	mov	a,r5
      0000E5 70 03            [24]  248 	jnz	00115$
      0000E7 02r01r89         [24]  249 	ljmp	00104$
      0000EA                        250 00115$:
                                    251 ;	logf.c:235: znum-=0.5;
      0000EA C0 07            [24]  252 	push	ar7
      0000EC C0 06            [24]  253 	push	ar6
      0000EE C0 04            [24]  254 	push	ar4
      0000F0 C0 03            [24]  255 	push	ar3
      0000F2 E4               [12]  256 	clr	a
      0000F3 C0 E0            [24]  257 	push	acc
      0000F5 C0 E0            [24]  258 	push	acc
      0000F7 C0 E0            [24]  259 	push	acc
      0000F9 74 3F            [12]  260 	mov	a,#0x3F
      0000FB C0 E0            [24]  261 	push	acc
      0000FD E5*00            [12]  262 	mov	a,_bp
      0000FF 24 11            [12]  263 	add	a,#0x11
      000101 F8               [12]  264 	mov	r0,a
      000102 86 82            [24]  265 	mov	dpl,@r0
      000104 08               [12]  266 	inc	r0
      000105 86 83            [24]  267 	mov	dph,@r0
      000107 08               [12]  268 	inc	r0
      000108 86 F0            [24]  269 	mov	b,@r0
      00010A 08               [12]  270 	inc	r0
      00010B E6               [12]  271 	mov	a,@r0
      00010C 12r00r00         [24]  272 	lcall	___fssub
      00010F C8               [12]  273 	xch	a,r0
      000110 E5*00            [12]  274 	mov	a,_bp
      000112 24 05            [12]  275 	add	a,#0x05
      000114 C8               [12]  276 	xch	a,r0
      000115 A6 82            [24]  277 	mov	@r0,dpl
      000117 08               [12]  278 	inc	r0
      000118 A6 83            [24]  279 	mov	@r0,dph
      00011A 08               [12]  280 	inc	r0
      00011B A6 F0            [24]  281 	mov	@r0,b
      00011D 08               [12]  282 	inc	r0
      00011E F6               [12]  283 	mov	@r0,a
      00011F E5 81            [12]  284 	mov	a,sp
      000121 24 FC            [12]  285 	add	a,#0xfc
      000123 F5 81            [12]  286 	mov	sp,a
      000125 D0 03            [24]  287 	pop	ar3
      000127 D0 04            [24]  288 	pop	ar4
      000129 D0 06            [24]  289 	pop	ar6
      00012B D0 07            [24]  290 	pop	ar7
      00012D E5*00            [12]  291 	mov	a,_bp
      00012F 24 05            [12]  292 	add	a,#0x05
      000131 F8               [12]  293 	mov	r0,a
      000132 E5*00            [12]  294 	mov	a,_bp
      000134 24 11            [12]  295 	add	a,#0x11
      000136 F9               [12]  296 	mov	r1,a
      000137 E6               [12]  297 	mov	a,@r0
      000138 F7               [12]  298 	mov	@r1,a
      000139 08               [12]  299 	inc	r0
      00013A 09               [12]  300 	inc	r1
      00013B E6               [12]  301 	mov	a,@r0
      00013C F7               [12]  302 	mov	@r1,a
      00013D 08               [12]  303 	inc	r0
      00013E 09               [12]  304 	inc	r1
      00013F E6               [12]  305 	mov	a,@r0
      000140 F7               [12]  306 	mov	@r1,a
      000141 08               [12]  307 	inc	r0
      000142 09               [12]  308 	inc	r1
      000143 E6               [12]  309 	mov	a,@r0
      000144 F7               [12]  310 	mov	@r1,a
                                    311 ;	logf.c:236: zden=(f*0.5)+0.5;
      000145 C0 04            [24]  312 	push	ar4
      000147 C0 03            [24]  313 	push	ar3
      000149 C0 06            [24]  314 	push	ar6
      00014B C0 07            [24]  315 	push	ar7
      00014D 90 00 00         [24]  316 	mov	dptr,#(0x00&0x00ff)
      000150 E4               [12]  317 	clr	a
      000151 F5 F0            [12]  318 	mov	b,a
      000153 74 3F            [12]  319 	mov	a,#0x3F
      000155 12r00r00         [24]  320 	lcall	___fsmul
      000158 AC 82            [24]  321 	mov	r4,dpl
      00015A AD 83            [24]  322 	mov	r5,dph
      00015C AE F0            [24]  323 	mov	r6,b
      00015E FF               [12]  324 	mov	r7,a
      00015F E5 81            [12]  325 	mov	a,sp
      000161 24 FC            [12]  326 	add	a,#0xfc
      000163 F5 81            [12]  327 	mov	sp,a
      000165 E4               [12]  328 	clr	a
      000166 C0 E0            [24]  329 	push	acc
      000168 C0 E0            [24]  330 	push	acc
      00016A C0 E0            [24]  331 	push	acc
      00016C 74 3F            [12]  332 	mov	a,#0x3F
      00016E C0 E0            [24]  333 	push	acc
      000170 8C 82            [24]  334 	mov	dpl,r4
      000172 8D 83            [24]  335 	mov	dph,r5
      000174 8E F0            [24]  336 	mov	b,r6
      000176 EF               [12]  337 	mov	a,r7
      000177 12r00r00         [24]  338 	lcall	___fsadd
      00017A AC 82            [24]  339 	mov	r4,dpl
      00017C AD 83            [24]  340 	mov	r5,dph
      00017E AE F0            [24]  341 	mov	r6,b
      000180 FF               [12]  342 	mov	r7,a
      000181 E5 81            [12]  343 	mov	a,sp
      000183 24 FC            [12]  344 	add	a,#0xfc
      000185 F5 81            [12]  345 	mov	sp,a
      000187 80 72            [24]  346 	sjmp	00105$
      000189                        347 00104$:
                                    348 ;	logf.c:240: n--;
      000189 E5*00            [12]  349 	mov	a,_bp
      00018B 24 1D            [12]  350 	add	a,#0x1d
      00018D F8               [12]  351 	mov	r0,a
      00018E 16               [12]  352 	dec	@r0
      00018F B6 FF 02         [24]  353 	cjne	@r0,#0xFF,00116$
      000192 08               [12]  354 	inc	r0
      000193 16               [12]  355 	dec	@r0
      000194                        356 00116$:
                                    357 ;	logf.c:241: zden=znum*0.5+0.5;
      000194 E5*00            [12]  358 	mov	a,_bp
      000196 24 11            [12]  359 	add	a,#0x11
      000198 F8               [12]  360 	mov	r0,a
      000199 E6               [12]  361 	mov	a,@r0
      00019A C0 E0            [24]  362 	push	acc
      00019C 08               [12]  363 	inc	r0
      00019D E6               [12]  364 	mov	a,@r0
      00019E C0 E0            [24]  365 	push	acc
      0001A0 08               [12]  366 	inc	r0
      0001A1 E6               [12]  367 	mov	a,@r0
      0001A2 C0 E0            [24]  368 	push	acc
      0001A4 08               [12]  369 	inc	r0
      0001A5 E6               [12]  370 	mov	a,@r0
      0001A6 C0 E0            [24]  371 	push	acc
      0001A8 90 00 00         [24]  372 	mov	dptr,#(0x00&0x00ff)
      0001AB E4               [12]  373 	clr	a
      0001AC F5 F0            [12]  374 	mov	b,a
      0001AE 74 3F            [12]  375 	mov	a,#0x3F
      0001B0 12r00r00         [24]  376 	lcall	___fsmul
      0001B3 AF 82            [24]  377 	mov	r7,dpl
      0001B5 AE 83            [24]  378 	mov	r6,dph
      0001B7 AD F0            [24]  379 	mov	r5,b
      0001B9 FC               [12]  380 	mov	r4,a
      0001BA E5 81            [12]  381 	mov	a,sp
      0001BC 24 FC            [12]  382 	add	a,#0xfc
      0001BE F5 81            [12]  383 	mov	sp,a
      0001C0 E4               [12]  384 	clr	a
      0001C1 C0 E0            [24]  385 	push	acc
      0001C3 C0 E0            [24]  386 	push	acc
      0001C5 C0 E0            [24]  387 	push	acc
      0001C7 74 3F            [12]  388 	mov	a,#0x3F
      0001C9 C0 E0            [24]  389 	push	acc
      0001CB 8F 82            [24]  390 	mov	dpl,r7
      0001CD 8E 83            [24]  391 	mov	dph,r6
      0001CF 8D F0            [24]  392 	mov	b,r5
      0001D1 EC               [12]  393 	mov	a,r4
      0001D2 12r00r00         [24]  394 	lcall	___fsadd
      0001D5 C8               [12]  395 	xch	a,r0
      0001D6 E5*00            [12]  396 	mov	a,_bp
      0001D8 24 15            [12]  397 	add	a,#0x15
      0001DA C8               [12]  398 	xch	a,r0
      0001DB A6 82            [24]  399 	mov	@r0,dpl
      0001DD 08               [12]  400 	inc	r0
      0001DE A6 83            [24]  401 	mov	@r0,dph
      0001E0 08               [12]  402 	inc	r0
      0001E1 A6 F0            [24]  403 	mov	@r0,b
      0001E3 08               [12]  404 	inc	r0
      0001E4 F6               [12]  405 	mov	@r0,a
      0001E5 E5 81            [12]  406 	mov	a,sp
      0001E7 24 FC            [12]  407 	add	a,#0xfc
      0001E9 F5 81            [12]  408 	mov	sp,a
      0001EB E5*00            [12]  409 	mov	a,_bp
      0001ED 24 15            [12]  410 	add	a,#0x15
      0001EF F8               [12]  411 	mov	r0,a
      0001F0 86 04            [24]  412 	mov	ar4,@r0
      0001F2 08               [12]  413 	inc	r0
      0001F3 86 05            [24]  414 	mov	ar5,@r0
      0001F5 08               [12]  415 	inc	r0
      0001F6 86 06            [24]  416 	mov	ar6,@r0
      0001F8 08               [12]  417 	inc	r0
      0001F9 86 07            [24]  418 	mov	ar7,@r0
      0001FB                        419 00105$:
                                    420 ;	logf.c:243: z=znum/zden;
      0001FB C0 04            [24]  421 	push	ar4
      0001FD C0 05            [24]  422 	push	ar5
      0001FF C0 06            [24]  423 	push	ar6
      000201 C0 07            [24]  424 	push	ar7
      000203 E5*00            [12]  425 	mov	a,_bp
      000205 24 11            [12]  426 	add	a,#0x11
      000207 F8               [12]  427 	mov	r0,a
      000208 86 82            [24]  428 	mov	dpl,@r0
      00020A 08               [12]  429 	inc	r0
      00020B 86 83            [24]  430 	mov	dph,@r0
      00020D 08               [12]  431 	inc	r0
      00020E 86 F0            [24]  432 	mov	b,@r0
      000210 08               [12]  433 	inc	r0
      000211 E6               [12]  434 	mov	a,@r0
      000212 12r00r00         [24]  435 	lcall	___fsdiv
      000215 AC 82            [24]  436 	mov	r4,dpl
      000217 AD 83            [24]  437 	mov	r5,dph
      000219 AE F0            [24]  438 	mov	r6,b
      00021B FF               [12]  439 	mov	r7,a
      00021C E5 81            [12]  440 	mov	a,sp
      00021E 24 FC            [12]  441 	add	a,#0xfc
      000220 F5 81            [12]  442 	mov	sp,a
      000222 E5*00            [12]  443 	mov	a,_bp
      000224 24 0D            [12]  444 	add	a,#0x0d
      000226 F8               [12]  445 	mov	r0,a
      000227 A6 04            [24]  446 	mov	@r0,ar4
      000229 08               [12]  447 	inc	r0
      00022A A6 05            [24]  448 	mov	@r0,ar5
      00022C 08               [12]  449 	inc	r0
      00022D A6 06            [24]  450 	mov	@r0,ar6
      00022F 08               [12]  451 	inc	r0
      000230 A6 07            [24]  452 	mov	@r0,ar7
                                    453 ;	logf.c:244: w=z*z;
      000232 E5*00            [12]  454 	mov	a,_bp
      000234 24 0D            [12]  455 	add	a,#0x0d
      000236 F8               [12]  456 	mov	r0,a
      000237 E6               [12]  457 	mov	a,@r0
      000238 C0 E0            [24]  458 	push	acc
      00023A 08               [12]  459 	inc	r0
      00023B E6               [12]  460 	mov	a,@r0
      00023C C0 E0            [24]  461 	push	acc
      00023E 08               [12]  462 	inc	r0
      00023F E6               [12]  463 	mov	a,@r0
      000240 C0 E0            [24]  464 	push	acc
      000242 08               [12]  465 	inc	r0
      000243 E6               [12]  466 	mov	a,@r0
      000244 C0 E0            [24]  467 	push	acc
      000246 E5*00            [12]  468 	mov	a,_bp
      000248 24 0D            [12]  469 	add	a,#0x0d
      00024A F8               [12]  470 	mov	r0,a
      00024B 86 82            [24]  471 	mov	dpl,@r0
      00024D 08               [12]  472 	inc	r0
      00024E 86 83            [24]  473 	mov	dph,@r0
      000250 08               [12]  474 	inc	r0
      000251 86 F0            [24]  475 	mov	b,@r0
      000253 08               [12]  476 	inc	r0
      000254 E6               [12]  477 	mov	a,@r0
      000255 12r00r00         [24]  478 	lcall	___fsmul
      000258 AF 82            [24]  479 	mov	r7,dpl
      00025A AE 83            [24]  480 	mov	r6,dph
      00025C AD F0            [24]  481 	mov	r5,b
      00025E FC               [12]  482 	mov	r4,a
      00025F E5 81            [12]  483 	mov	a,sp
      000261 24 FC            [12]  484 	add	a,#0xfc
      000263 F5 81            [12]  485 	mov	sp,a
                                    486 ;	logf.c:246: Rz=z+z*(w*A(w)/B(w));
      000265 C0 07            [24]  487 	push	ar7
      000267 C0 06            [24]  488 	push	ar6
      000269 C0 05            [24]  489 	push	ar5
      00026B C0 04            [24]  490 	push	ar4
      00026D C0 07            [24]  491 	push	ar7
      00026F C0 06            [24]  492 	push	ar6
      000271 C0 05            [24]  493 	push	ar5
      000273 C0 04            [24]  494 	push	ar4
      000275 90 7E 3D         [24]  495 	mov	dptr,#0x7E3D
      000278 75 F0 0D         [24]  496 	mov	b,#0x0D
      00027B 74 BF            [12]  497 	mov	a,#0xBF
      00027D 12r00r00         [24]  498 	lcall	___fsmul
      000280 C8               [12]  499 	xch	a,r0
      000281 E5*00            [12]  500 	mov	a,_bp
      000283 24 05            [12]  501 	add	a,#0x05
      000285 C8               [12]  502 	xch	a,r0
      000286 A6 82            [24]  503 	mov	@r0,dpl
      000288 08               [12]  504 	inc	r0
      000289 A6 83            [24]  505 	mov	@r0,dph
      00028B 08               [12]  506 	inc	r0
      00028C A6 F0            [24]  507 	mov	@r0,b
      00028E 08               [12]  508 	inc	r0
      00028F F6               [12]  509 	mov	@r0,a
      000290 E5 81            [12]  510 	mov	a,sp
      000292 24 FC            [12]  511 	add	a,#0xfc
      000294 F5 81            [12]  512 	mov	sp,a
      000296 D0 04            [24]  513 	pop	ar4
      000298 D0 05            [24]  514 	pop	ar5
      00029A D0 06            [24]  515 	pop	ar6
      00029C D0 07            [24]  516 	pop	ar7
      00029E 74 3A            [12]  517 	mov	a,#0x3A
      0002A0 C0 E0            [24]  518 	push	acc
      0002A2 74 3F            [12]  519 	mov	a,#0x3F
      0002A4 C0 E0            [24]  520 	push	acc
      0002A6 74 D4            [12]  521 	mov	a,#0xD4
      0002A8 C0 E0            [24]  522 	push	acc
      0002AA 74 C0            [12]  523 	mov	a,#0xC0
      0002AC C0 E0            [24]  524 	push	acc
      0002AE 8F 82            [24]  525 	mov	dpl,r7
      0002B0 8E 83            [24]  526 	mov	dph,r6
      0002B2 8D F0            [24]  527 	mov	b,r5
      0002B4 EC               [12]  528 	mov	a,r4
      0002B5 12r00r00         [24]  529 	lcall	___fsadd
      0002B8 AC 82            [24]  530 	mov	r4,dpl
      0002BA AD 83            [24]  531 	mov	r5,dph
      0002BC AE F0            [24]  532 	mov	r6,b
      0002BE FF               [12]  533 	mov	r7,a
      0002BF E5 81            [12]  534 	mov	a,sp
      0002C1 24 FC            [12]  535 	add	a,#0xfc
      0002C3 F5 81            [12]  536 	mov	sp,a
      0002C5 C0 04            [24]  537 	push	ar4
      0002C7 C0 05            [24]  538 	push	ar5
      0002C9 C0 06            [24]  539 	push	ar6
      0002CB C0 07            [24]  540 	push	ar7
      0002CD E5*00            [12]  541 	mov	a,_bp
      0002CF 24 05            [12]  542 	add	a,#0x05
      0002D1 F8               [12]  543 	mov	r0,a
      0002D2 86 82            [24]  544 	mov	dpl,@r0
      0002D4 08               [12]  545 	inc	r0
      0002D5 86 83            [24]  546 	mov	dph,@r0
      0002D7 08               [12]  547 	inc	r0
      0002D8 86 F0            [24]  548 	mov	b,@r0
      0002DA 08               [12]  549 	inc	r0
      0002DB E6               [12]  550 	mov	a,@r0
      0002DC 12r00r00         [24]  551 	lcall	___fsdiv
      0002DF AC 82            [24]  552 	mov	r4,dpl
      0002E1 AD 83            [24]  553 	mov	r5,dph
      0002E3 AE F0            [24]  554 	mov	r6,b
      0002E5 FF               [12]  555 	mov	r7,a
      0002E6 E5 81            [12]  556 	mov	a,sp
      0002E8 24 FC            [12]  557 	add	a,#0xfc
      0002EA F5 81            [12]  558 	mov	sp,a
      0002EC C0 04            [24]  559 	push	ar4
      0002EE C0 05            [24]  560 	push	ar5
      0002F0 C0 06            [24]  561 	push	ar6
      0002F2 C0 07            [24]  562 	push	ar7
      0002F4 E5*00            [12]  563 	mov	a,_bp
      0002F6 24 0D            [12]  564 	add	a,#0x0d
      0002F8 F8               [12]  565 	mov	r0,a
      0002F9 86 82            [24]  566 	mov	dpl,@r0
      0002FB 08               [12]  567 	inc	r0
      0002FC 86 83            [24]  568 	mov	dph,@r0
      0002FE 08               [12]  569 	inc	r0
      0002FF 86 F0            [24]  570 	mov	b,@r0
      000301 08               [12]  571 	inc	r0
      000302 E6               [12]  572 	mov	a,@r0
      000303 12r00r00         [24]  573 	lcall	___fsmul
      000306 AC 82            [24]  574 	mov	r4,dpl
      000308 AD 83            [24]  575 	mov	r5,dph
      00030A AE F0            [24]  576 	mov	r6,b
      00030C FF               [12]  577 	mov	r7,a
      00030D E5 81            [12]  578 	mov	a,sp
      00030F 24 FC            [12]  579 	add	a,#0xfc
      000311 F5 81            [12]  580 	mov	sp,a
      000313 C0 04            [24]  581 	push	ar4
      000315 C0 05            [24]  582 	push	ar5
      000317 C0 06            [24]  583 	push	ar6
      000319 C0 07            [24]  584 	push	ar7
      00031B E5*00            [12]  585 	mov	a,_bp
      00031D 24 0D            [12]  586 	add	a,#0x0d
      00031F F8               [12]  587 	mov	r0,a
      000320 86 82            [24]  588 	mov	dpl,@r0
      000322 08               [12]  589 	inc	r0
      000323 86 83            [24]  590 	mov	dph,@r0
      000325 08               [12]  591 	inc	r0
      000326 86 F0            [24]  592 	mov	b,@r0
      000328 08               [12]  593 	inc	r0
      000329 E6               [12]  594 	mov	a,@r0
      00032A 12r00r00         [24]  595 	lcall	___fsadd
      00032D AC 82            [24]  596 	mov	r4,dpl
      00032F AD 83            [24]  597 	mov	r5,dph
      000331 AE F0            [24]  598 	mov	r6,b
      000333 FF               [12]  599 	mov	r7,a
      000334 E5 81            [12]  600 	mov	a,sp
      000336 24 FC            [12]  601 	add	a,#0xfc
      000338 F5 81            [12]  602 	mov	sp,a
      00033A E5*00            [12]  603 	mov	a,_bp
      00033C 24 09            [12]  604 	add	a,#0x09
      00033E F8               [12]  605 	mov	r0,a
      00033F A6 04            [24]  606 	mov	@r0,ar4
      000341 08               [12]  607 	inc	r0
      000342 A6 05            [24]  608 	mov	@r0,ar5
      000344 08               [12]  609 	inc	r0
      000345 A6 06            [24]  610 	mov	@r0,ar6
      000347 08               [12]  611 	inc	r0
      000348 A6 07            [24]  612 	mov	@r0,ar7
                                    613 ;	logf.c:247: xn=n;
      00034A E5*00            [12]  614 	mov	a,_bp
      00034C 24 1D            [12]  615 	add	a,#0x1d
      00034E F8               [12]  616 	mov	r0,a
      00034F 86 82            [24]  617 	mov	dpl,@r0
      000351 08               [12]  618 	inc	r0
      000352 86 83            [24]  619 	mov	dph,@r0
      000354 12r00r00         [24]  620 	lcall	___sint2fs
      000357 AC 82            [24]  621 	mov	r4,dpl
      000359 AD 83            [24]  622 	mov	r5,dph
      00035B AE F0            [24]  623 	mov	r6,b
      00035D FF               [12]  624 	mov	r7,a
      00035E E5*00            [12]  625 	mov	a,_bp
      000360 24 19            [12]  626 	add	a,#0x19
      000362 F8               [12]  627 	mov	r0,a
      000363 A6 04            [24]  628 	mov	@r0,ar4
      000365 08               [12]  629 	inc	r0
      000366 A6 05            [24]  630 	mov	@r0,ar5
      000368 08               [12]  631 	inc	r0
      000369 A6 06            [24]  632 	mov	@r0,ar6
      00036B 08               [12]  633 	inc	r0
      00036C A6 07            [24]  634 	mov	@r0,ar7
                                    635 ;	logf.c:248: return ((xn*C2+Rz)+xn*C1);
      00036E E5*00            [12]  636 	mov	a,_bp
      000370 24 19            [12]  637 	add	a,#0x19
      000372 F8               [12]  638 	mov	r0,a
      000373 E6               [12]  639 	mov	a,@r0
      000374 C0 E0            [24]  640 	push	acc
      000376 08               [12]  641 	inc	r0
      000377 E6               [12]  642 	mov	a,@r0
      000378 C0 E0            [24]  643 	push	acc
      00037A 08               [12]  644 	inc	r0
      00037B E6               [12]  645 	mov	a,@r0
      00037C C0 E0            [24]  646 	push	acc
      00037E 08               [12]  647 	inc	r0
      00037F E6               [12]  648 	mov	a,@r0
      000380 C0 E0            [24]  649 	push	acc
      000382 90 80 83         [24]  650 	mov	dptr,#0x8083
      000385 75 F0 5E         [24]  651 	mov	b,#0x5E
      000388 74 B9            [12]  652 	mov	a,#0xB9
      00038A 12r00r00         [24]  653 	lcall	___fsmul
      00038D AA 82            [24]  654 	mov	r2,dpl
      00038F AB 83            [24]  655 	mov	r3,dph
      000391 AE F0            [24]  656 	mov	r6,b
      000393 FF               [12]  657 	mov	r7,a
      000394 E5 81            [12]  658 	mov	a,sp
      000396 24 FC            [12]  659 	add	a,#0xfc
      000398 F5 81            [12]  660 	mov	sp,a
      00039A E5*00            [12]  661 	mov	a,_bp
      00039C 24 09            [12]  662 	add	a,#0x09
      00039E F8               [12]  663 	mov	r0,a
      00039F E6               [12]  664 	mov	a,@r0
      0003A0 C0 E0            [24]  665 	push	acc
      0003A2 08               [12]  666 	inc	r0
      0003A3 E6               [12]  667 	mov	a,@r0
      0003A4 C0 E0            [24]  668 	push	acc
      0003A6 08               [12]  669 	inc	r0
      0003A7 E6               [12]  670 	mov	a,@r0
      0003A8 C0 E0            [24]  671 	push	acc
      0003AA 08               [12]  672 	inc	r0
      0003AB E6               [12]  673 	mov	a,@r0
      0003AC C0 E0            [24]  674 	push	acc
      0003AE 8A 82            [24]  675 	mov	dpl,r2
      0003B0 8B 83            [24]  676 	mov	dph,r3
      0003B2 8E F0            [24]  677 	mov	b,r6
      0003B4 EF               [12]  678 	mov	a,r7
      0003B5 12r00r00         [24]  679 	lcall	___fsadd
      0003B8 C8               [12]  680 	xch	a,r0
      0003B9 E5*00            [12]  681 	mov	a,_bp
      0003BB 24 05            [12]  682 	add	a,#0x05
      0003BD C8               [12]  683 	xch	a,r0
      0003BE A6 82            [24]  684 	mov	@r0,dpl
      0003C0 08               [12]  685 	inc	r0
      0003C1 A6 83            [24]  686 	mov	@r0,dph
      0003C3 08               [12]  687 	inc	r0
      0003C4 A6 F0            [24]  688 	mov	@r0,b
      0003C6 08               [12]  689 	inc	r0
      0003C7 F6               [12]  690 	mov	@r0,a
      0003C8 E5 81            [12]  691 	mov	a,sp
      0003CA 24 FC            [12]  692 	add	a,#0xfc
      0003CC F5 81            [12]  693 	mov	sp,a
      0003CE E5*00            [12]  694 	mov	a,_bp
      0003D0 24 19            [12]  695 	add	a,#0x19
      0003D2 F8               [12]  696 	mov	r0,a
      0003D3 E6               [12]  697 	mov	a,@r0
      0003D4 C0 E0            [24]  698 	push	acc
      0003D6 08               [12]  699 	inc	r0
      0003D7 E6               [12]  700 	mov	a,@r0
      0003D8 C0 E0            [24]  701 	push	acc
      0003DA 08               [12]  702 	inc	r0
      0003DB E6               [12]  703 	mov	a,@r0
      0003DC C0 E0            [24]  704 	push	acc
      0003DE 08               [12]  705 	inc	r0
      0003DF E6               [12]  706 	mov	a,@r0
      0003E0 C0 E0            [24]  707 	push	acc
      0003E2 90 80 00         [24]  708 	mov	dptr,#0x8000
      0003E5 75 F0 31         [24]  709 	mov	b,#0x31
      0003E8 74 3F            [12]  710 	mov	a,#0x3F
      0003EA 12r00r00         [24]  711 	lcall	___fsmul
      0003ED AA 82            [24]  712 	mov	r2,dpl
      0003EF AB 83            [24]  713 	mov	r3,dph
      0003F1 AE F0            [24]  714 	mov	r6,b
      0003F3 FF               [12]  715 	mov	r7,a
      0003F4 E5 81            [12]  716 	mov	a,sp
      0003F6 24 FC            [12]  717 	add	a,#0xfc
      0003F8 F5 81            [12]  718 	mov	sp,a
      0003FA C0 02            [24]  719 	push	ar2
      0003FC C0 03            [24]  720 	push	ar3
      0003FE C0 06            [24]  721 	push	ar6
      000400 C0 07            [24]  722 	push	ar7
      000402 E5*00            [12]  723 	mov	a,_bp
      000404 24 05            [12]  724 	add	a,#0x05
      000406 F8               [12]  725 	mov	r0,a
      000407 86 82            [24]  726 	mov	dpl,@r0
      000409 08               [12]  727 	inc	r0
      00040A 86 83            [24]  728 	mov	dph,@r0
      00040C 08               [12]  729 	inc	r0
      00040D 86 F0            [24]  730 	mov	b,@r0
      00040F 08               [12]  731 	inc	r0
      000410 E6               [12]  732 	mov	a,@r0
      000411 12r00r00         [24]  733 	lcall	___fsadd
      000414 AC 82            [24]  734 	mov	r4,dpl
      000416 AD 83            [24]  735 	mov	r5,dph
      000418 AE F0            [24]  736 	mov	r6,b
      00041A FF               [12]  737 	mov	r7,a
      00041B E5 81            [12]  738 	mov	a,sp
      00041D 24 FC            [12]  739 	add	a,#0xfc
      00041F F5 81            [12]  740 	mov	sp,a
      000421 8C 82            [24]  741 	mov	dpl,r4
      000423 8D 83            [24]  742 	mov	dph,r5
      000425 8E F0            [24]  743 	mov	b,r6
      000427 EF               [12]  744 	mov	a,r7
      000428                        745 00106$:
      000428 85*00 81         [24]  746 	mov	sp,_bp
      00042B D0*00            [24]  747 	pop	_bp
      00042D 22               [24]  748 	ret
                                    749 	.area CSEG    (CODE)
                                    750 	.area CONST   (CODE)
                                    751 	.area XINIT   (CODE)
                                    752 	.area CABS    (ABS,CODE)
