                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:04 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _strncpy
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _strncpy
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram 
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
                                     48 ;--------------------------------------------------------
                                     49 ; paged external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area PSEG    (PAG,XDATA)
                                     52 ;--------------------------------------------------------
                                     53 ; external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area XSEG    (XDATA)
                                     56 ;--------------------------------------------------------
                                     57 ; absolute external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XABS    (ABS,XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; external initialized ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XISEG   (XDATA)
                                     64 	.area HOME    (CODE)
                                     65 	.area GSINIT0 (CODE)
                                     66 	.area GSINIT1 (CODE)
                                     67 	.area GSINIT2 (CODE)
                                     68 	.area GSINIT3 (CODE)
                                     69 	.area GSINIT4 (CODE)
                                     70 	.area GSINIT5 (CODE)
                                     71 	.area GSINIT  (CODE)
                                     72 	.area GSFINAL (CODE)
                                     73 	.area CSEG    (CODE)
                                     74 ;--------------------------------------------------------
                                     75 ; global & static initialisations
                                     76 ;--------------------------------------------------------
                                     77 	.area HOME    (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; Home
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area HOME    (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; code
                                     88 ;--------------------------------------------------------
                                     89 	.area CSEG    (CODE)
                                     90 ;------------------------------------------------------------
                                     91 ;Allocation info for local variables in function 'strncpy'
                                     92 ;------------------------------------------------------------
                                     93 ;s                         Allocated to stack - _bp -5
                                     94 ;n                         Allocated to stack - _bp -7
                                     95 ;d                         Allocated to stack - _bp +1
                                     96 ;d1                        Allocated to stack - _bp +7
                                     97 ;sloc0                     Allocated to stack - _bp +4
                                     98 ;------------------------------------------------------------
                                     99 ;	_strncpy.c:33: char *strncpy (
                                    100 ;	-----------------------------------------
                                    101 ;	 function strncpy
                                    102 ;	-----------------------------------------
      000000                        103 _strncpy:
                           000007   104 	ar7 = 0x07
                           000006   105 	ar6 = 0x06
                           000005   106 	ar5 = 0x05
                           000004   107 	ar4 = 0x04
                           000003   108 	ar3 = 0x03
                           000002   109 	ar2 = 0x02
                           000001   110 	ar1 = 0x01
                           000000   111 	ar0 = 0x00
      000000 C0*00            [24]  112 	push	_bp
      000002 E5 81            [12]  113 	mov	a,sp
      000004 F5*00            [12]  114 	mov	_bp,a
      000006 24 09            [12]  115 	add	a,#0x09
      000008 F5 81            [12]  116 	mov	sp,a
      00000A AD 82            [24]  117 	mov	r5,dpl
      00000C AE 83            [24]  118 	mov	r6,dph
      00000E AF F0            [24]  119 	mov	r7,b
                                    120 ;	_strncpy.c:38: register char * d1 =  d;
      000010 E5*00            [12]  121 	mov	a,_bp
      000012 24 07            [12]  122 	add	a,#0x07
      000014 F8               [12]  123 	mov	r0,a
      000015 A6 05            [24]  124 	mov	@r0,ar5
      000017 08               [12]  125 	inc	r0
      000018 A6 06            [24]  126 	mov	@r0,ar6
      00001A 08               [12]  127 	inc	r0
      00001B A6 07            [24]  128 	mov	@r0,ar7
                                    129 ;	_strncpy.c:40: while ( n && *s )
      00001D E5*00            [12]  130 	mov	a,_bp
      00001F 24 F9            [12]  131 	add	a,#0xf9
      000021 F8               [12]  132 	mov	r0,a
      000022 86 03            [24]  133 	mov	ar3,@r0
      000024 08               [12]  134 	inc	r0
      000025 86 04            [24]  135 	mov	ar4,@r0
      000027 E5*00            [12]  136 	mov	a,_bp
      000029 24 FB            [12]  137 	add	a,#0xfb
      00002B F8               [12]  138 	mov	r0,a
      00002C E5*00            [12]  139 	mov	a,_bp
      00002E 24 04            [12]  140 	add	a,#0x04
      000030 F9               [12]  141 	mov	r1,a
      000031 E6               [12]  142 	mov	a,@r0
      000032 F7               [12]  143 	mov	@r1,a
      000033 08               [12]  144 	inc	r0
      000034 09               [12]  145 	inc	r1
      000035 E6               [12]  146 	mov	a,@r0
      000036 F7               [12]  147 	mov	@r1,a
      000037 08               [12]  148 	inc	r0
      000038 09               [12]  149 	inc	r1
      000039 E6               [12]  150 	mov	a,@r0
      00003A F7               [12]  151 	mov	@r1,a
      00003B                        152 00102$:
      00003B EB               [12]  153 	mov	a,r3
      00003C 4C               [12]  154 	orl	a,r4
      00003D 60 34            [24]  155 	jz	00114$
      00003F E5*00            [12]  156 	mov	a,_bp
      000041 24 04            [12]  157 	add	a,#0x04
      000043 F8               [12]  158 	mov	r0,a
      000044 86 82            [24]  159 	mov	dpl,@r0
      000046 08               [12]  160 	inc	r0
      000047 86 83            [24]  161 	mov	dph,@r0
      000049 08               [12]  162 	inc	r0
      00004A 86 F0            [24]  163 	mov	b,@r0
      00004C 12r00r00         [24]  164 	lcall	__gptrget
      00004F FA               [12]  165 	mov	r2,a
      000050 60 21            [24]  166 	jz	00114$
                                    167 ;	_strncpy.c:42: n-- ;
      000052 1B               [12]  168 	dec	r3
      000053 BB FF 01         [24]  169 	cjne	r3,#0xFF,00129$
      000056 1C               [12]  170 	dec	r4
      000057                        171 00129$:
                                    172 ;	_strncpy.c:43: *d++ = *s++ ;
      000057 E5*00            [12]  173 	mov	a,_bp
      000059 24 04            [12]  174 	add	a,#0x04
      00005B F8               [12]  175 	mov	r0,a
      00005C 06               [12]  176 	inc	@r0
      00005D B6 00 02         [24]  177 	cjne	@r0,#0x00,00130$
      000060 08               [12]  178 	inc	r0
      000061 06               [12]  179 	inc	@r0
      000062                        180 00130$:
      000062 8D 82            [24]  181 	mov	dpl,r5
      000064 8E 83            [24]  182 	mov	dph,r6
      000066 8F F0            [24]  183 	mov	b,r7
      000068 EA               [12]  184 	mov	a,r2
      000069 12r00r00         [24]  185 	lcall	__gptrput
      00006C A3               [24]  186 	inc	dptr
      00006D AD 82            [24]  187 	mov	r5,dpl
      00006F AE 83            [24]  188 	mov	r6,dph
                                    189 ;	_strncpy.c:45: while ( n-- )
      000071 80 C8            [24]  190 	sjmp	00102$
      000073                        191 00114$:
      000073 A8*00            [24]  192 	mov	r0,_bp
      000075 08               [12]  193 	inc	r0
      000076 A6 05            [24]  194 	mov	@r0,ar5
      000078 08               [12]  195 	inc	r0
      000079 A6 06            [24]  196 	mov	@r0,ar6
      00007B 08               [12]  197 	inc	r0
      00007C A6 07            [24]  198 	mov	@r0,ar7
      00007E                        199 00105$:
      00007E 8B 02            [24]  200 	mov	ar2,r3
      000080 8C 07            [24]  201 	mov	ar7,r4
      000082 1B               [12]  202 	dec	r3
      000083 BB FF 01         [24]  203 	cjne	r3,#0xFF,00131$
      000086 1C               [12]  204 	dec	r4
      000087                        205 00131$:
      000087 EA               [12]  206 	mov	a,r2
      000088 4F               [12]  207 	orl	a,r7
      000089 60 19            [24]  208 	jz	00107$
                                    209 ;	_strncpy.c:47: *d++ = '\0' ;
      00008B A8*00            [24]  210 	mov	r0,_bp
      00008D 08               [12]  211 	inc	r0
      00008E 86 82            [24]  212 	mov	dpl,@r0
      000090 08               [12]  213 	inc	r0
      000091 86 83            [24]  214 	mov	dph,@r0
      000093 08               [12]  215 	inc	r0
      000094 86 F0            [24]  216 	mov	b,@r0
      000096 E4               [12]  217 	clr	a
      000097 12r00r00         [24]  218 	lcall	__gptrput
      00009A A3               [24]  219 	inc	dptr
      00009B 18               [12]  220 	dec	r0
      00009C 18               [12]  221 	dec	r0
      00009D A6 82            [24]  222 	mov	@r0,dpl
      00009F 08               [12]  223 	inc	r0
      0000A0 A6 83            [24]  224 	mov	@r0,dph
      0000A2 80 DA            [24]  225 	sjmp	00105$
      0000A4                        226 00107$:
                                    227 ;	_strncpy.c:49: return d1;
      0000A4 E5*00            [12]  228 	mov	a,_bp
      0000A6 24 07            [12]  229 	add	a,#0x07
      0000A8 F8               [12]  230 	mov	r0,a
      0000A9 86 82            [24]  231 	mov	dpl,@r0
      0000AB 08               [12]  232 	inc	r0
      0000AC 86 83            [24]  233 	mov	dph,@r0
      0000AE 08               [12]  234 	inc	r0
      0000AF 86 F0            [24]  235 	mov	b,@r0
      0000B1 85*00 81         [24]  236 	mov	sp,_bp
      0000B4 D0*00            [24]  237 	pop	_bp
      0000B6 22               [24]  238 	ret
                                    239 	.area CSEG    (CODE)
                                    240 	.area CONST   (CODE)
                                    241 	.area XINIT   (CODE)
                                    242 	.area CABS    (ABS,CODE)
