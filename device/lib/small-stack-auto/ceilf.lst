                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:03 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module ceilf
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _ceilf
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram 
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
                                     48 ;--------------------------------------------------------
                                     49 ; paged external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area PSEG    (PAG,XDATA)
                                     52 ;--------------------------------------------------------
                                     53 ; external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area XSEG    (XDATA)
                                     56 ;--------------------------------------------------------
                                     57 ; absolute external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XABS    (ABS,XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; external initialized ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XISEG   (XDATA)
                                     64 	.area HOME    (CODE)
                                     65 	.area GSINIT0 (CODE)
                                     66 	.area GSINIT1 (CODE)
                                     67 	.area GSINIT2 (CODE)
                                     68 	.area GSINIT3 (CODE)
                                     69 	.area GSINIT4 (CODE)
                                     70 	.area GSINIT5 (CODE)
                                     71 	.area GSINIT  (CODE)
                                     72 	.area GSFINAL (CODE)
                                     73 	.area CSEG    (CODE)
                                     74 ;--------------------------------------------------------
                                     75 ; global & static initialisations
                                     76 ;--------------------------------------------------------
                                     77 	.area HOME    (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; Home
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area HOME    (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; code
                                     88 ;--------------------------------------------------------
                                     89 	.area CSEG    (CODE)
                                     90 ;------------------------------------------------------------
                                     91 ;Allocation info for local variables in function 'ceilf'
                                     92 ;------------------------------------------------------------
                                     93 ;x                         Allocated to stack - _bp +1
                                     94 ;r                         Allocated to stack - _bp +9
                                     95 ;sloc0                     Allocated to stack - _bp +5
                                     96 ;------------------------------------------------------------
                                     97 ;	ceilf.c:33: float ceilf(float x) _FLOAT_FUNC_REENTRANT
                                     98 ;	-----------------------------------------
                                     99 ;	 function ceilf
                                    100 ;	-----------------------------------------
      000000                        101 _ceilf:
                           000007   102 	ar7 = 0x07
                           000006   103 	ar6 = 0x06
                           000005   104 	ar5 = 0x05
                           000004   105 	ar4 = 0x04
                           000003   106 	ar3 = 0x03
                           000002   107 	ar2 = 0x02
                           000001   108 	ar1 = 0x01
                           000000   109 	ar0 = 0x00
      000000 C0*00            [24]  110 	push	_bp
      000002 85 81*00         [24]  111 	mov	_bp,sp
      000005 C0 82            [24]  112 	push	dpl
      000007 C0 83            [24]  113 	push	dph
      000009 C0 F0            [24]  114 	push	b
      00000B C0 E0            [24]  115 	push	acc
      00000D E5 81            [12]  116 	mov	a,sp
      00000F 24 08            [12]  117 	add	a,#0x08
      000011 F5 81            [12]  118 	mov	sp,a
                                    119 ;	ceilf.c:36: r=x;
      000013 A8*00            [24]  120 	mov	r0,_bp
      000015 08               [12]  121 	inc	r0
      000016 86 82            [24]  122 	mov	dpl,@r0
      000018 08               [12]  123 	inc	r0
      000019 86 83            [24]  124 	mov	dph,@r0
      00001B 08               [12]  125 	inc	r0
      00001C 86 F0            [24]  126 	mov	b,@r0
      00001E 08               [12]  127 	inc	r0
      00001F E6               [12]  128 	mov	a,@r0
      000020 12r00r00         [24]  129 	lcall	___fs2slong
      000023 AF 82            [24]  130 	mov	r7,dpl
      000025 AE 83            [24]  131 	mov	r6,dph
      000027 AD F0            [24]  132 	mov	r5,b
      000029 FC               [12]  133 	mov	r4,a
      00002A E5*00            [12]  134 	mov	a,_bp
      00002C 24 09            [12]  135 	add	a,#0x09
      00002E F8               [12]  136 	mov	r0,a
      00002F A6 07            [24]  137 	mov	@r0,ar7
      000031 08               [12]  138 	inc	r0
      000032 A6 06            [24]  139 	mov	@r0,ar6
      000034 08               [12]  140 	inc	r0
      000035 A6 05            [24]  141 	mov	@r0,ar5
      000037 08               [12]  142 	inc	r0
      000038 A6 04            [24]  143 	mov	@r0,ar4
                                    144 ;	ceilf.c:37: if (r<0)
      00003A E5*00            [12]  145 	mov	a,_bp
      00003C 24 09            [12]  146 	add	a,#0x09
      00003E F8               [12]  147 	mov	r0,a
      00003F 08               [12]  148 	inc	r0
      000040 08               [12]  149 	inc	r0
      000041 08               [12]  150 	inc	r0
      000042 E6               [12]  151 	mov	a,@r0
      000043 30 E7 33         [24]  152 	jnb	acc.7,00102$
                                    153 ;	ceilf.c:38: return r;
      000046 E5*00            [12]  154 	mov	a,_bp
      000048 24 09            [12]  155 	add	a,#0x09
      00004A F8               [12]  156 	mov	r0,a
      00004B 86 82            [24]  157 	mov	dpl,@r0
      00004D 08               [12]  158 	inc	r0
      00004E 86 83            [24]  159 	mov	dph,@r0
      000050 08               [12]  160 	inc	r0
      000051 86 F0            [24]  161 	mov	b,@r0
      000053 08               [12]  162 	inc	r0
      000054 E6               [12]  163 	mov	a,@r0
      000055 12r00r00         [24]  164 	lcall	___slong2fs
      000058 C8               [12]  165 	xch	a,r0
      000059 E5*00            [12]  166 	mov	a,_bp
      00005B 24 05            [12]  167 	add	a,#0x05
      00005D C8               [12]  168 	xch	a,r0
      00005E A6 82            [24]  169 	mov	@r0,dpl
      000060 08               [12]  170 	inc	r0
      000061 A6 83            [24]  171 	mov	@r0,dph
      000063 08               [12]  172 	inc	r0
      000064 A6 F0            [24]  173 	mov	@r0,b
      000066 08               [12]  174 	inc	r0
      000067 F6               [12]  175 	mov	@r0,a
      000068 E5*00            [12]  176 	mov	a,_bp
      00006A 24 05            [12]  177 	add	a,#0x05
      00006C F8               [12]  178 	mov	r0,a
      00006D 86 82            [24]  179 	mov	dpl,@r0
      00006F 08               [12]  180 	inc	r0
      000070 86 83            [24]  181 	mov	dph,@r0
      000072 08               [12]  182 	inc	r0
      000073 86 F0            [24]  183 	mov	b,@r0
      000075 08               [12]  184 	inc	r0
      000076 E6               [12]  185 	mov	a,@r0
      000077 80 70            [24]  186 	sjmp	00104$
      000079                        187 00102$:
                                    188 ;	ceilf.c:40: return (r+((r<x)?1:0));
      000079 E5*00            [12]  189 	mov	a,_bp
      00007B 24 09            [12]  190 	add	a,#0x09
      00007D F8               [12]  191 	mov	r0,a
      00007E 86 82            [24]  192 	mov	dpl,@r0
      000080 08               [12]  193 	inc	r0
      000081 86 83            [24]  194 	mov	dph,@r0
      000083 08               [12]  195 	inc	r0
      000084 86 F0            [24]  196 	mov	b,@r0
      000086 08               [12]  197 	inc	r0
      000087 E6               [12]  198 	mov	a,@r0
      000088 12r00r00         [24]  199 	lcall	___slong2fs
      00008B AC 82            [24]  200 	mov	r4,dpl
      00008D AD 83            [24]  201 	mov	r5,dph
      00008F AE F0            [24]  202 	mov	r6,b
      000091 FF               [12]  203 	mov	r7,a
      000092 A8*00            [24]  204 	mov	r0,_bp
      000094 08               [12]  205 	inc	r0
      000095 E6               [12]  206 	mov	a,@r0
      000096 C0 E0            [24]  207 	push	acc
      000098 08               [12]  208 	inc	r0
      000099 E6               [12]  209 	mov	a,@r0
      00009A C0 E0            [24]  210 	push	acc
      00009C 08               [12]  211 	inc	r0
      00009D E6               [12]  212 	mov	a,@r0
      00009E C0 E0            [24]  213 	push	acc
      0000A0 08               [12]  214 	inc	r0
      0000A1 E6               [12]  215 	mov	a,@r0
      0000A2 C0 E0            [24]  216 	push	acc
      0000A4 8C 82            [24]  217 	mov	dpl,r4
      0000A6 8D 83            [24]  218 	mov	dph,r5
      0000A8 8E F0            [24]  219 	mov	b,r6
      0000AA EF               [12]  220 	mov	a,r7
      0000AB 12r00r00         [24]  221 	lcall	___fslt
      0000AE AF 82            [24]  222 	mov	r7,dpl
      0000B0 E5 81            [12]  223 	mov	a,sp
      0000B2 24 FC            [12]  224 	add	a,#0xfc
      0000B4 F5 81            [12]  225 	mov	sp,a
      0000B6 EF               [12]  226 	mov	a,r7
      0000B7 60 04            [24]  227 	jz	00106$
      0000B9 7F 01            [12]  228 	mov	r7,#0x01
      0000BB 80 02            [24]  229 	sjmp	00107$
      0000BD                        230 00106$:
      0000BD 7F 00            [12]  231 	mov	r7,#0x00
      0000BF                        232 00107$:
      0000BF E4               [12]  233 	clr	a
      0000C0 FE               [12]  234 	mov	r6,a
      0000C1 33               [12]  235 	rlc	a
      0000C2 95 E0            [12]  236 	subb	a,acc
      0000C4 FD               [12]  237 	mov	r5,a
      0000C5 FC               [12]  238 	mov	r4,a
      0000C6 E5*00            [12]  239 	mov	a,_bp
      0000C8 24 09            [12]  240 	add	a,#0x09
      0000CA F8               [12]  241 	mov	r0,a
      0000CB EF               [12]  242 	mov	a,r7
      0000CC 26               [12]  243 	add	a,@r0
      0000CD FF               [12]  244 	mov	r7,a
      0000CE EE               [12]  245 	mov	a,r6
      0000CF 08               [12]  246 	inc	r0
      0000D0 36               [12]  247 	addc	a,@r0
      0000D1 FE               [12]  248 	mov	r6,a
      0000D2 ED               [12]  249 	mov	a,r5
      0000D3 08               [12]  250 	inc	r0
      0000D4 36               [12]  251 	addc	a,@r0
      0000D5 FD               [12]  252 	mov	r5,a
      0000D6 EC               [12]  253 	mov	a,r4
      0000D7 08               [12]  254 	inc	r0
      0000D8 36               [12]  255 	addc	a,@r0
      0000D9 8F 82            [24]  256 	mov	dpl,r7
      0000DB 8E 83            [24]  257 	mov	dph,r6
      0000DD 8D F0            [24]  258 	mov	b,r5
      0000DF 12r00r00         [24]  259 	lcall	___slong2fs
      0000E2 AC 82            [24]  260 	mov	r4,dpl
      0000E4 AD 83            [24]  261 	mov	r5,dph
      0000E6 AE F0            [24]  262 	mov	r6,b
      0000E8 FF               [12]  263 	mov	r7,a
      0000E9                        264 00104$:
      0000E9 85*00 81         [24]  265 	mov	sp,_bp
      0000EC D0*00            [24]  266 	pop	_bp
      0000EE 22               [24]  267 	ret
                                    268 	.area CSEG    (CODE)
                                    269 	.area CONST   (CODE)
                                    270 	.area XINIT   (CODE)
                                    271 	.area CABS    (ABS,CODE)
