                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:03 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module atan2f
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _fabsf
                                     13 	.globl _atanf
                                     14 	.globl _atan2f
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram 
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; indirectly addressable internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area ISEG    (DATA)
                                     41 ;--------------------------------------------------------
                                     42 ; absolute internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area IABS    (ABS,DATA)
                                     45 	.area IABS    (ABS,DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; bit data
                                     48 ;--------------------------------------------------------
                                     49 	.area BSEG    (BIT)
                                     50 ;--------------------------------------------------------
                                     51 ; paged external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area PSEG    (PAG,XDATA)
                                     54 ;--------------------------------------------------------
                                     55 ; external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XSEG    (XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; absolute external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XABS    (ABS,XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; external initialized ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XISEG   (XDATA)
                                     66 	.area HOME    (CODE)
                                     67 	.area GSINIT0 (CODE)
                                     68 	.area GSINIT1 (CODE)
                                     69 	.area GSINIT2 (CODE)
                                     70 	.area GSINIT3 (CODE)
                                     71 	.area GSINIT4 (CODE)
                                     72 	.area GSINIT5 (CODE)
                                     73 	.area GSINIT  (CODE)
                                     74 	.area GSFINAL (CODE)
                                     75 	.area CSEG    (CODE)
                                     76 ;--------------------------------------------------------
                                     77 ; global & static initialisations
                                     78 ;--------------------------------------------------------
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 	.area GSFINAL (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 ;--------------------------------------------------------
                                     84 ; Home
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area HOME    (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; code
                                     90 ;--------------------------------------------------------
                                     91 	.area CSEG    (CODE)
                                     92 ;------------------------------------------------------------
                                     93 ;Allocation info for local variables in function 'atan2f'
                                     94 ;------------------------------------------------------------
                                     95 ;y                         Allocated to stack - _bp -6
                                     96 ;x                         Allocated to stack - _bp +1
                                     97 ;r                         Allocated to stack - _bp +9
                                     98 ;sloc0                     Allocated to stack - _bp +5
                                     99 ;------------------------------------------------------------
                                    100 ;	atan2f.c:34: float atan2f(const float x, const float y)
                                    101 ;	-----------------------------------------
                                    102 ;	 function atan2f
                                    103 ;	-----------------------------------------
      000000                        104 _atan2f:
                           000007   105 	ar7 = 0x07
                           000006   106 	ar6 = 0x06
                           000005   107 	ar5 = 0x05
                           000004   108 	ar4 = 0x04
                           000003   109 	ar3 = 0x03
                           000002   110 	ar2 = 0x02
                           000001   111 	ar1 = 0x01
                           000000   112 	ar0 = 0x00
      000000 C0*00            [24]  113 	push	_bp
      000002 85 81*00         [24]  114 	mov	_bp,sp
      000005 C0 82            [24]  115 	push	dpl
      000007 C0 83            [24]  116 	push	dph
      000009 C0 F0            [24]  117 	push	b
      00000B C0 E0            [24]  118 	push	acc
      00000D E5 81            [12]  119 	mov	a,sp
      00000F 24 08            [12]  120 	add	a,#0x08
      000011 F5 81            [12]  121 	mov	sp,a
                                    122 ;	atan2f.c:38: if ((x==0.0) && (y==0.0))
      000013 A8*00            [24]  123 	mov	r0,_bp
      000015 08               [12]  124 	inc	r0
      000016 86 F0            [24]  125 	mov	b,@r0
      000018 08               [12]  126 	inc	r0
      000019 E6               [12]  127 	mov	a,@r0
      00001A 42 F0            [12]  128 	orl	b,a
      00001C 08               [12]  129 	inc	r0
      00001D E6               [12]  130 	mov	a,@r0
      00001E 42 F0            [12]  131 	orl	b,a
      000020 08               [12]  132 	inc	r0
      000021 E6               [12]  133 	mov	a,@r0
      000022 54 7F            [12]  134 	anl	a,#0x7F
      000024 45 F0            [12]  135 	orl	a,b
      000026 70 25            [24]  136 	jnz	00102$
      000028 E5*00            [12]  137 	mov	a,_bp
      00002A 24 FA            [12]  138 	add	a,#0xfa
      00002C F8               [12]  139 	mov	r0,a
      00002D 86 F0            [24]  140 	mov	b,@r0
      00002F 08               [12]  141 	inc	r0
      000030 E6               [12]  142 	mov	a,@r0
      000031 42 F0            [12]  143 	orl	b,a
      000033 08               [12]  144 	inc	r0
      000034 E6               [12]  145 	mov	a,@r0
      000035 42 F0            [12]  146 	orl	b,a
      000037 08               [12]  147 	inc	r0
      000038 E6               [12]  148 	mov	a,@r0
      000039 54 7F            [12]  149 	anl	a,#0x7F
      00003B 45 F0            [12]  150 	orl	a,b
                                    151 ;	atan2f.c:40: errno=EDOM;
      00003D 70 0E            [24]  152 	jnz	00102$
      00003F 75*00 21         [24]  153 	mov	_errno,#0x21
      000042 F5*01            [12]  154 	mov	(_errno + 1),a
                                    155 ;	atan2f.c:41: return 0.0;
      000044 90 00 00         [24]  156 	mov	dptr,#(0x00&0x00ff)
      000047 E4               [12]  157 	clr	a
      000048 F5 F0            [12]  158 	mov	b,a
      00004A 02r02r6F         [24]  159 	ljmp	00109$
      00004D                        160 00102$:
                                    161 ;	atan2f.c:44: if(fabsf(y)>=fabsf(x))
      00004D E5*00            [12]  162 	mov	a,_bp
      00004F 24 FA            [12]  163 	add	a,#0xfa
      000051 F8               [12]  164 	mov	r0,a
      000052 86 82            [24]  165 	mov	dpl,@r0
      000054 08               [12]  166 	inc	r0
      000055 86 83            [24]  167 	mov	dph,@r0
      000057 08               [12]  168 	inc	r0
      000058 86 F0            [24]  169 	mov	b,@r0
      00005A 08               [12]  170 	inc	r0
      00005B E6               [12]  171 	mov	a,@r0
      00005C 12r00r00         [24]  172 	lcall	_fabsf
      00005F C8               [12]  173 	xch	a,r0
      000060 E5*00            [12]  174 	mov	a,_bp
      000062 24 05            [12]  175 	add	a,#0x05
      000064 C8               [12]  176 	xch	a,r0
      000065 A6 82            [24]  177 	mov	@r0,dpl
      000067 08               [12]  178 	inc	r0
      000068 A6 83            [24]  179 	mov	@r0,dph
      00006A 08               [12]  180 	inc	r0
      00006B A6 F0            [24]  181 	mov	@r0,b
      00006D 08               [12]  182 	inc	r0
      00006E F6               [12]  183 	mov	@r0,a
      00006F A8*00            [24]  184 	mov	r0,_bp
      000071 08               [12]  185 	inc	r0
      000072 86 82            [24]  186 	mov	dpl,@r0
      000074 08               [12]  187 	inc	r0
      000075 86 83            [24]  188 	mov	dph,@r0
      000077 08               [12]  189 	inc	r0
      000078 86 F0            [24]  190 	mov	b,@r0
      00007A 08               [12]  191 	inc	r0
      00007B E6               [12]  192 	mov	a,@r0
      00007C 12r00r00         [24]  193 	lcall	_fabsf
      00007F AC 82            [24]  194 	mov	r4,dpl
      000081 AD 83            [24]  195 	mov	r5,dph
      000083 AE F0            [24]  196 	mov	r6,b
      000085 FF               [12]  197 	mov	r7,a
      000086 C0 04            [24]  198 	push	ar4
      000088 C0 05            [24]  199 	push	ar5
      00008A C0 06            [24]  200 	push	ar6
      00008C C0 07            [24]  201 	push	ar7
      00008E E5*00            [12]  202 	mov	a,_bp
      000090 24 05            [12]  203 	add	a,#0x05
      000092 F8               [12]  204 	mov	r0,a
      000093 86 82            [24]  205 	mov	dpl,@r0
      000095 08               [12]  206 	inc	r0
      000096 86 83            [24]  207 	mov	dph,@r0
      000098 08               [12]  208 	inc	r0
      000099 86 F0            [24]  209 	mov	b,@r0
      00009B 08               [12]  210 	inc	r0
      00009C E6               [12]  211 	mov	a,@r0
      00009D 12r00r00         [24]  212 	lcall	___fslt
      0000A0 AF 82            [24]  213 	mov	r7,dpl
      0000A2 E5 81            [12]  214 	mov	a,sp
      0000A4 24 FC            [12]  215 	add	a,#0xfc
      0000A6 F5 81            [12]  216 	mov	sp,a
      0000A8 EF               [12]  217 	mov	a,r7
      0000A9 60 03            [24]  218 	jz	00135$
      0000AB 02r01r9F         [24]  219 	ljmp	00107$
      0000AE                        220 00135$:
                                    221 ;	atan2f.c:46: r=atanf(x/y);
      0000AE E5*00            [12]  222 	mov	a,_bp
      0000B0 24 FA            [12]  223 	add	a,#0xfa
      0000B2 F8               [12]  224 	mov	r0,a
      0000B3 E6               [12]  225 	mov	a,@r0
      0000B4 C0 E0            [24]  226 	push	acc
      0000B6 08               [12]  227 	inc	r0
      0000B7 E6               [12]  228 	mov	a,@r0
      0000B8 C0 E0            [24]  229 	push	acc
      0000BA 08               [12]  230 	inc	r0
      0000BB E6               [12]  231 	mov	a,@r0
      0000BC C0 E0            [24]  232 	push	acc
      0000BE 08               [12]  233 	inc	r0
      0000BF E6               [12]  234 	mov	a,@r0
      0000C0 C0 E0            [24]  235 	push	acc
      0000C2 A8*00            [24]  236 	mov	r0,_bp
      0000C4 08               [12]  237 	inc	r0
      0000C5 86 82            [24]  238 	mov	dpl,@r0
      0000C7 08               [12]  239 	inc	r0
      0000C8 86 83            [24]  240 	mov	dph,@r0
      0000CA 08               [12]  241 	inc	r0
      0000CB 86 F0            [24]  242 	mov	b,@r0
      0000CD 08               [12]  243 	inc	r0
      0000CE E6               [12]  244 	mov	a,@r0
      0000CF 12r00r00         [24]  245 	lcall	___fsdiv
      0000D2 AC 82            [24]  246 	mov	r4,dpl
      0000D4 AD 83            [24]  247 	mov	r5,dph
      0000D6 AE F0            [24]  248 	mov	r6,b
      0000D8 FF               [12]  249 	mov	r7,a
      0000D9 E5 81            [12]  250 	mov	a,sp
      0000DB 24 FC            [12]  251 	add	a,#0xfc
      0000DD F5 81            [12]  252 	mov	sp,a
      0000DF 8C 82            [24]  253 	mov	dpl,r4
      0000E1 8D 83            [24]  254 	mov	dph,r5
      0000E3 8E F0            [24]  255 	mov	b,r6
      0000E5 EF               [12]  256 	mov	a,r7
      0000E6 12r00r00         [24]  257 	lcall	_atanf
      0000E9 AC 82            [24]  258 	mov	r4,dpl
      0000EB AD 83            [24]  259 	mov	r5,dph
      0000ED AE F0            [24]  260 	mov	r6,b
      0000EF FF               [12]  261 	mov	r7,a
      0000F0 E5*00            [12]  262 	mov	a,_bp
      0000F2 24 09            [12]  263 	add	a,#0x09
      0000F4 F8               [12]  264 	mov	r0,a
      0000F5 A6 04            [24]  265 	mov	@r0,ar4
      0000F7 08               [12]  266 	inc	r0
      0000F8 A6 05            [24]  267 	mov	@r0,ar5
      0000FA 08               [12]  268 	inc	r0
      0000FB A6 06            [24]  269 	mov	@r0,ar6
      0000FD 08               [12]  270 	inc	r0
      0000FE A6 07            [24]  271 	mov	@r0,ar7
                                    272 ;	atan2f.c:47: if(y<0.0) r+=(x>=0?PI:-PI);
      000100 E4               [12]  273 	clr	a
      000101 C0 E0            [24]  274 	push	acc
      000103 C0 E0            [24]  275 	push	acc
      000105 C0 E0            [24]  276 	push	acc
      000107 C0 E0            [24]  277 	push	acc
      000109 E5*00            [12]  278 	mov	a,_bp
      00010B 24 FA            [12]  279 	add	a,#0xfa
      00010D F8               [12]  280 	mov	r0,a
      00010E 86 82            [24]  281 	mov	dpl,@r0
      000110 08               [12]  282 	inc	r0
      000111 86 83            [24]  283 	mov	dph,@r0
      000113 08               [12]  284 	inc	r0
      000114 86 F0            [24]  285 	mov	b,@r0
      000116 08               [12]  286 	inc	r0
      000117 E6               [12]  287 	mov	a,@r0
      000118 12r00r00         [24]  288 	lcall	___fslt
      00011B AB 82            [24]  289 	mov	r3,dpl
      00011D E5 81            [12]  290 	mov	a,sp
      00011F 24 FC            [12]  291 	add	a,#0xfc
      000121 F5 81            [12]  292 	mov	sp,a
      000123 EB               [12]  293 	mov	a,r3
      000124 70 03            [24]  294 	jnz	00136$
      000126 02r02r60         [24]  295 	ljmp	00108$
      000129                        296 00136$:
      000129 E4               [12]  297 	clr	a
      00012A C0 E0            [24]  298 	push	acc
      00012C C0 E0            [24]  299 	push	acc
      00012E C0 E0            [24]  300 	push	acc
      000130 C0 E0            [24]  301 	push	acc
      000132 A8*00            [24]  302 	mov	r0,_bp
      000134 08               [12]  303 	inc	r0
      000135 86 82            [24]  304 	mov	dpl,@r0
      000137 08               [12]  305 	inc	r0
      000138 86 83            [24]  306 	mov	dph,@r0
      00013A 08               [12]  307 	inc	r0
      00013B 86 F0            [24]  308 	mov	b,@r0
      00013D 08               [12]  309 	inc	r0
      00013E E6               [12]  310 	mov	a,@r0
      00013F 12r00r00         [24]  311 	lcall	___fslt
      000142 AB 82            [24]  312 	mov	r3,dpl
      000144 E5 81            [12]  313 	mov	a,sp
      000146 24 FC            [12]  314 	add	a,#0xfc
      000148 F5 81            [12]  315 	mov	sp,a
      00014A EB               [12]  316 	mov	a,r3
      00014B B4 01 00         [24]  317 	cjne	a,#0x01,00137$
      00014E                        318 00137$:
      00014E E4               [12]  319 	clr	a
      00014F 33               [12]  320 	rlc	a
      000150 FB               [12]  321 	mov	r3,a
      000151 60 0A            [24]  322 	jz	00111$
      000153 7A DB            [12]  323 	mov	r2,#0xDB
      000155 7B 0F            [12]  324 	mov	r3,#0x0F
      000157 7E 49            [12]  325 	mov	r6,#0x49
      000159 7F 40            [12]  326 	mov	r7,#0x40
      00015B 80 08            [24]  327 	sjmp	00112$
      00015D                        328 00111$:
      00015D 7A DB            [12]  329 	mov	r2,#0xDB
      00015F 7B 0F            [12]  330 	mov	r3,#0x0F
      000161 7E 49            [12]  331 	mov	r6,#0x49
      000163 7F C0            [12]  332 	mov	r7,#0xC0
      000165                        333 00112$:
      000165 C0 02            [24]  334 	push	ar2
      000167 C0 03            [24]  335 	push	ar3
      000169 C0 06            [24]  336 	push	ar6
      00016B C0 07            [24]  337 	push	ar7
      00016D E5*00            [12]  338 	mov	a,_bp
      00016F 24 09            [12]  339 	add	a,#0x09
      000171 F8               [12]  340 	mov	r0,a
      000172 86 82            [24]  341 	mov	dpl,@r0
      000174 08               [12]  342 	inc	r0
      000175 86 83            [24]  343 	mov	dph,@r0
      000177 08               [12]  344 	inc	r0
      000178 86 F0            [24]  345 	mov	b,@r0
      00017A 08               [12]  346 	inc	r0
      00017B E6               [12]  347 	mov	a,@r0
      00017C 12r00r00         [24]  348 	lcall	___fsadd
      00017F AC 82            [24]  349 	mov	r4,dpl
      000181 AD 83            [24]  350 	mov	r5,dph
      000183 AE F0            [24]  351 	mov	r6,b
      000185 FF               [12]  352 	mov	r7,a
      000186 E5 81            [12]  353 	mov	a,sp
      000188 24 FC            [12]  354 	add	a,#0xfc
      00018A F5 81            [12]  355 	mov	sp,a
      00018C E5*00            [12]  356 	mov	a,_bp
      00018E 24 09            [12]  357 	add	a,#0x09
      000190 F8               [12]  358 	mov	r0,a
      000191 A6 04            [24]  359 	mov	@r0,ar4
      000193 08               [12]  360 	inc	r0
      000194 A6 05            [24]  361 	mov	@r0,ar5
      000196 08               [12]  362 	inc	r0
      000197 A6 06            [24]  363 	mov	@r0,ar6
      000199 08               [12]  364 	inc	r0
      00019A A6 07            [24]  365 	mov	@r0,ar7
      00019C 02r02r60         [24]  366 	ljmp	00108$
      00019F                        367 00107$:
                                    368 ;	atan2f.c:51: r=-atanf(y/x);
      00019F A8*00            [24]  369 	mov	r0,_bp
      0001A1 08               [12]  370 	inc	r0
      0001A2 E6               [12]  371 	mov	a,@r0
      0001A3 C0 E0            [24]  372 	push	acc
      0001A5 08               [12]  373 	inc	r0
      0001A6 E6               [12]  374 	mov	a,@r0
      0001A7 C0 E0            [24]  375 	push	acc
      0001A9 08               [12]  376 	inc	r0
      0001AA E6               [12]  377 	mov	a,@r0
      0001AB C0 E0            [24]  378 	push	acc
      0001AD 08               [12]  379 	inc	r0
      0001AE E6               [12]  380 	mov	a,@r0
      0001AF C0 E0            [24]  381 	push	acc
      0001B1 E5*00            [12]  382 	mov	a,_bp
      0001B3 24 FA            [12]  383 	add	a,#0xfa
      0001B5 F8               [12]  384 	mov	r0,a
      0001B6 86 82            [24]  385 	mov	dpl,@r0
      0001B8 08               [12]  386 	inc	r0
      0001B9 86 83            [24]  387 	mov	dph,@r0
      0001BB 08               [12]  388 	inc	r0
      0001BC 86 F0            [24]  389 	mov	b,@r0
      0001BE 08               [12]  390 	inc	r0
      0001BF E6               [12]  391 	mov	a,@r0
      0001C0 12r00r00         [24]  392 	lcall	___fsdiv
      0001C3 AC 82            [24]  393 	mov	r4,dpl
      0001C5 AD 83            [24]  394 	mov	r5,dph
      0001C7 AE F0            [24]  395 	mov	r6,b
      0001C9 FF               [12]  396 	mov	r7,a
      0001CA E5 81            [12]  397 	mov	a,sp
      0001CC 24 FC            [12]  398 	add	a,#0xfc
      0001CE F5 81            [12]  399 	mov	sp,a
      0001D0 8C 82            [24]  400 	mov	dpl,r4
      0001D2 8D 83            [24]  401 	mov	dph,r5
      0001D4 8E F0            [24]  402 	mov	b,r6
      0001D6 EF               [12]  403 	mov	a,r7
      0001D7 12r00r00         [24]  404 	lcall	_atanf
      0001DA AC 82            [24]  405 	mov	r4,dpl
      0001DC AD 83            [24]  406 	mov	r5,dph
      0001DE AE F0            [24]  407 	mov	r6,b
      0001E0 B2 E7            [12]  408 	cpl	acc.7
      0001E2 FF               [12]  409 	mov	r7,a
      0001E3 E5*00            [12]  410 	mov	a,_bp
      0001E5 24 09            [12]  411 	add	a,#0x09
      0001E7 F8               [12]  412 	mov	r0,a
      0001E8 A6 04            [24]  413 	mov	@r0,ar4
      0001EA 08               [12]  414 	inc	r0
      0001EB A6 05            [24]  415 	mov	@r0,ar5
      0001ED 08               [12]  416 	inc	r0
      0001EE A6 06            [24]  417 	mov	@r0,ar6
      0001F0 08               [12]  418 	inc	r0
      0001F1 A6 07            [24]  419 	mov	@r0,ar7
                                    420 ;	atan2f.c:52: r+=(x<0.0?-HALF_PI:HALF_PI);
      0001F3 E4               [12]  421 	clr	a
      0001F4 C0 E0            [24]  422 	push	acc
      0001F6 C0 E0            [24]  423 	push	acc
      0001F8 C0 E0            [24]  424 	push	acc
      0001FA C0 E0            [24]  425 	push	acc
      0001FC A8*00            [24]  426 	mov	r0,_bp
      0001FE 08               [12]  427 	inc	r0
      0001FF 86 82            [24]  428 	mov	dpl,@r0
      000201 08               [12]  429 	inc	r0
      000202 86 83            [24]  430 	mov	dph,@r0
      000204 08               [12]  431 	inc	r0
      000205 86 F0            [24]  432 	mov	b,@r0
      000207 08               [12]  433 	inc	r0
      000208 E6               [12]  434 	mov	a,@r0
      000209 12r00r00         [24]  435 	lcall	___fslt
      00020C AF 82            [24]  436 	mov	r7,dpl
      00020E E5 81            [12]  437 	mov	a,sp
      000210 24 FC            [12]  438 	add	a,#0xfc
      000212 F5 81            [12]  439 	mov	sp,a
      000214 EF               [12]  440 	mov	a,r7
      000215 60 0A            [24]  441 	jz	00113$
      000217 7C DB            [12]  442 	mov	r4,#0xDB
      000219 7D 0F            [12]  443 	mov	r5,#0x0F
      00021B 7E C9            [12]  444 	mov	r6,#0xC9
      00021D 7F BF            [12]  445 	mov	r7,#0xBF
      00021F 80 08            [24]  446 	sjmp	00114$
      000221                        447 00113$:
      000221 7C DB            [12]  448 	mov	r4,#0xDB
      000223 7D 0F            [12]  449 	mov	r5,#0x0F
      000225 7E C9            [12]  450 	mov	r6,#0xC9
      000227 7F 3F            [12]  451 	mov	r7,#0x3F
      000229                        452 00114$:
      000229 C0 04            [24]  453 	push	ar4
      00022B C0 05            [24]  454 	push	ar5
      00022D C0 06            [24]  455 	push	ar6
      00022F C0 07            [24]  456 	push	ar7
      000231 E5*00            [12]  457 	mov	a,_bp
      000233 24 09            [12]  458 	add	a,#0x09
      000235 F8               [12]  459 	mov	r0,a
      000236 86 82            [24]  460 	mov	dpl,@r0
      000238 08               [12]  461 	inc	r0
      000239 86 83            [24]  462 	mov	dph,@r0
      00023B 08               [12]  463 	inc	r0
      00023C 86 F0            [24]  464 	mov	b,@r0
      00023E 08               [12]  465 	inc	r0
      00023F E6               [12]  466 	mov	a,@r0
      000240 12r00r00         [24]  467 	lcall	___fsadd
      000243 AC 82            [24]  468 	mov	r4,dpl
      000245 AD 83            [24]  469 	mov	r5,dph
      000247 AE F0            [24]  470 	mov	r6,b
      000249 FF               [12]  471 	mov	r7,a
      00024A E5 81            [12]  472 	mov	a,sp
      00024C 24 FC            [12]  473 	add	a,#0xfc
      00024E F5 81            [12]  474 	mov	sp,a
      000250 E5*00            [12]  475 	mov	a,_bp
      000252 24 09            [12]  476 	add	a,#0x09
      000254 F8               [12]  477 	mov	r0,a
      000255 A6 04            [24]  478 	mov	@r0,ar4
      000257 08               [12]  479 	inc	r0
      000258 A6 05            [24]  480 	mov	@r0,ar5
      00025A 08               [12]  481 	inc	r0
      00025B A6 06            [24]  482 	mov	@r0,ar6
      00025D 08               [12]  483 	inc	r0
      00025E A6 07            [24]  484 	mov	@r0,ar7
      000260                        485 00108$:
                                    486 ;	atan2f.c:54: return r;
      000260 E5*00            [12]  487 	mov	a,_bp
      000262 24 09            [12]  488 	add	a,#0x09
      000264 F8               [12]  489 	mov	r0,a
      000265 86 82            [24]  490 	mov	dpl,@r0
      000267 08               [12]  491 	inc	r0
      000268 86 83            [24]  492 	mov	dph,@r0
      00026A 08               [12]  493 	inc	r0
      00026B 86 F0            [24]  494 	mov	b,@r0
      00026D 08               [12]  495 	inc	r0
      00026E E6               [12]  496 	mov	a,@r0
      00026F                        497 00109$:
      00026F 85*00 81         [24]  498 	mov	sp,_bp
      000272 D0*00            [24]  499 	pop	_bp
      000274 22               [24]  500 	ret
                                    501 	.area CSEG    (CODE)
                                    502 	.area CONST   (CODE)
                                    503 	.area XINIT   (CODE)
                                    504 	.area CABS    (ABS,CODE)
