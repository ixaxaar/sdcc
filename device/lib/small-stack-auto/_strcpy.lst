                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:05 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _strcpy
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _strcpy
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram 
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
                                     48 ;--------------------------------------------------------
                                     49 ; paged external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area PSEG    (PAG,XDATA)
                                     52 ;--------------------------------------------------------
                                     53 ; external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area XSEG    (XDATA)
                                     56 ;--------------------------------------------------------
                                     57 ; absolute external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XABS    (ABS,XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; external initialized ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XISEG   (XDATA)
                                     64 	.area HOME    (CODE)
                                     65 	.area GSINIT0 (CODE)
                                     66 	.area GSINIT1 (CODE)
                                     67 	.area GSINIT2 (CODE)
                                     68 	.area GSINIT3 (CODE)
                                     69 	.area GSINIT4 (CODE)
                                     70 	.area GSINIT5 (CODE)
                                     71 	.area GSINIT  (CODE)
                                     72 	.area GSFINAL (CODE)
                                     73 	.area CSEG    (CODE)
                                     74 ;--------------------------------------------------------
                                     75 ; global & static initialisations
                                     76 ;--------------------------------------------------------
                                     77 	.area HOME    (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; Home
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area HOME    (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; code
                                     88 ;--------------------------------------------------------
                                     89 	.area CSEG    (CODE)
                                     90 ;------------------------------------------------------------
                                     91 ;Allocation info for local variables in function 'strcpy'
                                     92 ;------------------------------------------------------------
                                     93 ;s                         Allocated to stack - _bp -5
                                     94 ;d                         Allocated to stack - _bp +1
                                     95 ;d1                        Allocated to stack - _bp +4
                                     96 ;------------------------------------------------------------
                                     97 ;	_strcpy.c:34: char * strcpy (
                                     98 ;	-----------------------------------------
                                     99 ;	 function strcpy
                                    100 ;	-----------------------------------------
      000000                        101 _strcpy:
                           000007   102 	ar7 = 0x07
                           000006   103 	ar6 = 0x06
                           000005   104 	ar5 = 0x05
                           000004   105 	ar4 = 0x04
                           000003   106 	ar3 = 0x03
                           000002   107 	ar2 = 0x02
                           000001   108 	ar1 = 0x01
                           000000   109 	ar0 = 0x00
      000000 C0*00            [24]  110 	push	_bp
      000002 85 81*00         [24]  111 	mov	_bp,sp
      000005 C0 82            [24]  112 	push	dpl
      000007 C0 83            [24]  113 	push	dph
      000009 C0 F0            [24]  114 	push	b
      00000B 05 81            [12]  115 	inc	sp
      00000D 05 81            [12]  116 	inc	sp
      00000F 05 81            [12]  117 	inc	sp
                                    118 ;	_strcpy.c:48: while (*d1++ = *s++) ;
      000011 E5*00            [12]  119 	mov	a,_bp
      000013 24 FB            [12]  120 	add	a,#0xfb
      000015 F8               [12]  121 	mov	r0,a
      000016 86 02            [24]  122 	mov	ar2,@r0
      000018 08               [12]  123 	inc	r0
      000019 86 03            [24]  124 	mov	ar3,@r0
      00001B 08               [12]  125 	inc	r0
      00001C 86 04            [24]  126 	mov	ar4,@r0
      00001E A8*00            [24]  127 	mov	r0,_bp
      000020 08               [12]  128 	inc	r0
      000021 E5*00            [12]  129 	mov	a,_bp
      000023 24 04            [12]  130 	add	a,#0x04
      000025 F9               [12]  131 	mov	r1,a
      000026 E6               [12]  132 	mov	a,@r0
      000027 F7               [12]  133 	mov	@r1,a
      000028 08               [12]  134 	inc	r0
      000029 09               [12]  135 	inc	r1
      00002A E6               [12]  136 	mov	a,@r0
      00002B F7               [12]  137 	mov	@r1,a
      00002C 08               [12]  138 	inc	r0
      00002D 09               [12]  139 	inc	r1
      00002E E6               [12]  140 	mov	a,@r0
      00002F F7               [12]  141 	mov	@r1,a
      000030                        142 00101$:
      000030 8A 82            [24]  143 	mov	dpl,r2
      000032 8B 83            [24]  144 	mov	dph,r3
      000034 8C F0            [24]  145 	mov	b,r4
      000036 12r00r00         [24]  146 	lcall	__gptrget
      000039 FF               [12]  147 	mov	r7,a
      00003A A3               [24]  148 	inc	dptr
      00003B AA 82            [24]  149 	mov	r2,dpl
      00003D AB 83            [24]  150 	mov	r3,dph
      00003F E5*00            [12]  151 	mov	a,_bp
      000041 24 04            [12]  152 	add	a,#0x04
      000043 F8               [12]  153 	mov	r0,a
      000044 86 82            [24]  154 	mov	dpl,@r0
      000046 08               [12]  155 	inc	r0
      000047 86 83            [24]  156 	mov	dph,@r0
      000049 08               [12]  157 	inc	r0
      00004A 86 F0            [24]  158 	mov	b,@r0
      00004C EF               [12]  159 	mov	a,r7
      00004D 12r00r00         [24]  160 	lcall	__gptrput
      000050 A3               [24]  161 	inc	dptr
      000051 18               [12]  162 	dec	r0
      000052 18               [12]  163 	dec	r0
      000053 A6 82            [24]  164 	mov	@r0,dpl
      000055 08               [12]  165 	inc	r0
      000056 A6 83            [24]  166 	mov	@r0,dph
      000058 EF               [12]  167 	mov	a,r7
      000059 70 D5            [24]  168 	jnz	00101$
                                    169 ;	_strcpy.c:50: return d;
      00005B A8*00            [24]  170 	mov	r0,_bp
      00005D 08               [12]  171 	inc	r0
      00005E 86 82            [24]  172 	mov	dpl,@r0
      000060 08               [12]  173 	inc	r0
      000061 86 83            [24]  174 	mov	dph,@r0
      000063 08               [12]  175 	inc	r0
      000064 86 F0            [24]  176 	mov	b,@r0
      000066 85*00 81         [24]  177 	mov	sp,_bp
      000069 D0*00            [24]  178 	pop	_bp
      00006B 22               [24]  179 	ret
                                    180 	.area CSEG    (CODE)
                                    181 	.area CONST   (CODE)
                                    182 	.area XINIT   (CODE)
                                    183 	.area CABS    (ABS,CODE)
