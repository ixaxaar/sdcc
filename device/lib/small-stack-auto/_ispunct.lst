                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:04 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _ispunct
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _isspace
                                     13 	.globl _isprint
                                     14 	.globl _isupper
                                     15 	.globl _islower
                                     16 	.globl _isdigit
                                     17 	.globl _ispunct
                                     18 ;--------------------------------------------------------
                                     19 ; special function registers
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; special function bits
                                     25 ;--------------------------------------------------------
                                     26 	.area RSEG    (ABS,DATA)
      000000                         27 	.org 0x0000
                                     28 ;--------------------------------------------------------
                                     29 ; overlayable register banks
                                     30 ;--------------------------------------------------------
                                     31 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         32 	.ds 8
                                     33 ;--------------------------------------------------------
                                     34 ; internal ram data
                                     35 ;--------------------------------------------------------
                                     36 	.area DSEG    (DATA)
                                     37 ;--------------------------------------------------------
                                     38 ; overlayable items in internal ram 
                                     39 ;--------------------------------------------------------
                                     40 ;--------------------------------------------------------
                                     41 ; indirectly addressable internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area ISEG    (DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; absolute internal ram data
                                     46 ;--------------------------------------------------------
                                     47 	.area IABS    (ABS,DATA)
                                     48 	.area IABS    (ABS,DATA)
                                     49 ;--------------------------------------------------------
                                     50 ; bit data
                                     51 ;--------------------------------------------------------
                                     52 	.area BSEG    (BIT)
                                     53 ;--------------------------------------------------------
                                     54 ; paged external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area PSEG    (PAG,XDATA)
                                     57 ;--------------------------------------------------------
                                     58 ; external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XSEG    (XDATA)
                                     61 ;--------------------------------------------------------
                                     62 ; absolute external ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XABS    (ABS,XDATA)
                                     65 ;--------------------------------------------------------
                                     66 ; external initialized ram data
                                     67 ;--------------------------------------------------------
                                     68 	.area XISEG   (XDATA)
                                     69 	.area HOME    (CODE)
                                     70 	.area GSINIT0 (CODE)
                                     71 	.area GSINIT1 (CODE)
                                     72 	.area GSINIT2 (CODE)
                                     73 	.area GSINIT3 (CODE)
                                     74 	.area GSINIT4 (CODE)
                                     75 	.area GSINIT5 (CODE)
                                     76 	.area GSINIT  (CODE)
                                     77 	.area GSFINAL (CODE)
                                     78 	.area CSEG    (CODE)
                                     79 ;--------------------------------------------------------
                                     80 ; global & static initialisations
                                     81 ;--------------------------------------------------------
                                     82 	.area HOME    (CODE)
                                     83 	.area GSINIT  (CODE)
                                     84 	.area GSFINAL (CODE)
                                     85 	.area GSINIT  (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; Home
                                     88 ;--------------------------------------------------------
                                     89 	.area HOME    (CODE)
                                     90 	.area HOME    (CODE)
                                     91 ;--------------------------------------------------------
                                     92 ; code
                                     93 ;--------------------------------------------------------
                                     94 	.area CSEG    (CODE)
                                     95 ;------------------------------------------------------------
                                     96 ;Allocation info for local variables in function 'ispunct'
                                     97 ;------------------------------------------------------------
                                     98 ;c                         Allocated to registers r7 
                                     99 ;------------------------------------------------------------
                                    100 ;	_ispunct.c:31: char ispunct (unsigned char c)
                                    101 ;	-----------------------------------------
                                    102 ;	 function ispunct
                                    103 ;	-----------------------------------------
      000000                        104 _ispunct:
                           000007   105 	ar7 = 0x07
                           000006   106 	ar6 = 0x06
                           000005   107 	ar5 = 0x05
                           000004   108 	ar4 = 0x04
                           000003   109 	ar3 = 0x03
                           000002   110 	ar2 = 0x02
                           000001   111 	ar1 = 0x01
                           000000   112 	ar0 = 0x00
                                    113 ;	_ispunct.c:33: if ( isprint (c) &&
      000000 AF 82            [24]  114 	mov  r7,dpl
      000002 C0 07            [24]  115 	push	ar7
      000004 12r00r00         [24]  116 	lcall	_isprint
      000007 E5 82            [12]  117 	mov	a,dpl
      000009 D0 07            [24]  118 	pop	ar7
      00000B 60 34            [24]  119 	jz	00102$
                                    120 ;	_ispunct.c:34: !islower(c) &&
      00000D 8F 82            [24]  121 	mov	dpl,r7
      00000F C0 07            [24]  122 	push	ar7
      000011 12r00r00         [24]  123 	lcall	_islower
      000014 E5 82            [12]  124 	mov	a,dpl
      000016 D0 07            [24]  125 	pop	ar7
      000018 70 27            [24]  126 	jnz	00102$
                                    127 ;	_ispunct.c:35: !isupper(c) &&
      00001A 8F 82            [24]  128 	mov	dpl,r7
      00001C C0 07            [24]  129 	push	ar7
      00001E 12r00r00         [24]  130 	lcall	_isupper
      000021 E5 82            [12]  131 	mov	a,dpl
      000023 D0 07            [24]  132 	pop	ar7
      000025 70 1A            [24]  133 	jnz	00102$
                                    134 ;	_ispunct.c:36: !isspace(c) &&
      000027 8F 82            [24]  135 	mov	dpl,r7
      000029 C0 07            [24]  136 	push	ar7
      00002B 12r00r00         [24]  137 	lcall	_isspace
      00002E E5 82            [12]  138 	mov	a,dpl
      000030 D0 07            [24]  139 	pop	ar7
      000032 70 0D            [24]  140 	jnz	00102$
                                    141 ;	_ispunct.c:37: !isdigit(c) )
      000034 8F 82            [24]  142 	mov	dpl,r7
      000036 12r00r00         [24]  143 	lcall	_isdigit
      000039 E5 82            [12]  144 	mov	a,dpl
      00003B 70 04            [24]  145 	jnz	00102$
                                    146 ;	_ispunct.c:38: return 1;
      00003D 75 82 01         [24]  147 	mov	dpl,#0x01
      000040 22               [24]  148 	ret
      000041                        149 00102$:
                                    150 ;	_ispunct.c:39: return 0;
      000041 75 82 00         [24]  151 	mov	dpl,#0x00
      000044 22               [24]  152 	ret
                                    153 	.area CSEG    (CODE)
                                    154 	.area CONST   (CODE)
                                    155 	.area XINIT   (CODE)
                                    156 	.area CABS    (ABS,CODE)
