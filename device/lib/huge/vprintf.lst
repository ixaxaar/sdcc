                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:02 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module vprintf
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _putchar
                                     13 	.globl __print_format
                                     14 	.globl _vprintf_PARM_2
                                     15 	.globl _vprintf
                                     16 	.globl _printf
                                     17 ;--------------------------------------------------------
                                     18 ; special function registers
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; special function bits
                                     24 ;--------------------------------------------------------
                                     25 	.area RSEG    (ABS,DATA)
      000000                         26 	.org 0x0000
                                     27 ;--------------------------------------------------------
                                     28 ; overlayable register banks
                                     29 ;--------------------------------------------------------
                                     30 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         31 	.ds 8
                                     32 ;--------------------------------------------------------
                                     33 ; internal ram data
                                     34 ;--------------------------------------------------------
                                     35 	.area DSEG    (DATA)
                                     36 ;--------------------------------------------------------
                                     37 ; overlayable items in internal ram 
                                     38 ;--------------------------------------------------------
                                     39 ;--------------------------------------------------------
                                     40 ; indirectly addressable internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area ISEG    (DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; absolute internal ram data
                                     45 ;--------------------------------------------------------
                                     46 	.area IABS    (ABS,DATA)
                                     47 	.area IABS    (ABS,DATA)
                                     48 ;--------------------------------------------------------
                                     49 ; bit data
                                     50 ;--------------------------------------------------------
                                     51 	.area BSEG    (BIT)
                                     52 ;--------------------------------------------------------
                                     53 ; paged external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area PSEG    (PAG,XDATA)
                                     56 ;--------------------------------------------------------
                                     57 ; external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XSEG    (XDATA)
      000000                         60 _vprintf_PARM_2:
      000000                         61 	.ds 1
      000001                         62 _vprintf_format_1_14:
      000001                         63 	.ds 3
                                     64 ;--------------------------------------------------------
                                     65 ; absolute external ram data
                                     66 ;--------------------------------------------------------
                                     67 	.area XABS    (ABS,XDATA)
                                     68 ;--------------------------------------------------------
                                     69 ; external initialized ram data
                                     70 ;--------------------------------------------------------
                                     71 	.area XISEG   (XDATA)
                                     72 	.area HOME    (CODE)
                                     73 	.area GSINIT0 (CODE)
                                     74 	.area GSINIT1 (CODE)
                                     75 	.area GSINIT2 (CODE)
                                     76 	.area GSINIT3 (CODE)
                                     77 	.area GSINIT4 (CODE)
                                     78 	.area GSINIT5 (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 	.area GSFINAL (CODE)
                                     81 	.area CSEG    (CODE)
                                     82 ;--------------------------------------------------------
                                     83 ; global & static initialisations
                                     84 ;--------------------------------------------------------
                                     85 	.area HOME    (CODE)
                                     86 	.area GSINIT  (CODE)
                                     87 	.area GSFINAL (CODE)
                                     88 	.area GSINIT  (CODE)
                                     89 ;--------------------------------------------------------
                                     90 ; Home
                                     91 ;--------------------------------------------------------
                                     92 	.area HOME    (CODE)
                                     93 	.area HOME    (CODE)
                                     94 ;--------------------------------------------------------
                                     95 ; code
                                     96 ;--------------------------------------------------------
                                     97 	.area CSEG    (CODE)
                                     98 ;------------------------------------------------------------
                                     99 ;Allocation info for local variables in function 'put_char_to_stdout'
                                    100 ;------------------------------------------------------------
                                    101 ;p                         Allocated to stack - _bp -6
                                    102 ;c                         Allocated to registers r7 
                                    103 ;------------------------------------------------------------
                                    104 ;	vprintf.c:34: put_char_to_stdout (char c, void* p) _REENTRANT
                                    105 ;	-----------------------------------------
                                    106 ;	 function put_char_to_stdout
                                    107 ;	-----------------------------------------
      000000                        108 _put_char_to_stdout:
                           000007   109 	ar7 = 0x07
                           000006   110 	ar6 = 0x06
                           000005   111 	ar5 = 0x05
                           000004   112 	ar4 = 0x04
                           000003   113 	ar3 = 0x03
                           000002   114 	ar2 = 0x02
                           000001   115 	ar1 = 0x01
                           000000   116 	ar0 = 0x00
      000000 C0*00            [24]  117 	push	_bp
      000002 85 81*00         [24]  118 	mov	_bp,sp
                                    119 ;	vprintf.c:37: putchar (c);
      000005 78r00            [12]  120 	mov	r0,#_putchar
      000007 79s00            [12]  121 	mov	r1,#(_putchar >> 8)
      000009 7As00            [12]  122 	mov	r2,#(_putchar >> 16)
      00000B 12r00r00         [24]  123 	lcall	__sdcc_banked_call
      00000E D0*00            [24]  124 	pop	_bp
      000010 02r00r00         [24]  125 	ljmp	__sdcc_banked_ret
                                    126 ;------------------------------------------------------------
                                    127 ;Allocation info for local variables in function 'vprintf'
                                    128 ;------------------------------------------------------------
                                    129 ;ap                        Allocated with name '_vprintf_PARM_2'
                                    130 ;format                    Allocated with name '_vprintf_format_1_14'
                                    131 ;------------------------------------------------------------
                                    132 ;	vprintf.c:41: vprintf (const char *format, va_list ap)
                                    133 ;	-----------------------------------------
                                    134 ;	 function vprintf
                                    135 ;	-----------------------------------------
      000013                        136 _vprintf:
      000013 AF F0            [24]  137 	mov	r7,b
      000015 AE 83            [24]  138 	mov	r6,dph
      000017 E5 82            [12]  139 	mov	a,dpl
      000019 90r00r01         [24]  140 	mov	dptr,#_vprintf_format_1_14
      00001C F0               [24]  141 	movx	@dptr,a
      00001D EE               [12]  142 	mov	a,r6
      00001E A3               [24]  143 	inc	dptr
      00001F F0               [24]  144 	movx	@dptr,a
      000020 EF               [12]  145 	mov	a,r7
      000021 A3               [24]  146 	inc	dptr
      000022 F0               [24]  147 	movx	@dptr,a
                                    148 ;	vprintf.c:43: return _print_format (put_char_to_stdout, NULL, format, ap);
      000023 90r00r01         [24]  149 	mov	dptr,#_vprintf_format_1_14
      000026 E0               [24]  150 	movx	a,@dptr
      000027 FD               [12]  151 	mov	r5,a
      000028 A3               [24]  152 	inc	dptr
      000029 E0               [24]  153 	movx	a,@dptr
      00002A FE               [12]  154 	mov	r6,a
      00002B A3               [24]  155 	inc	dptr
      00002C E0               [24]  156 	movx	a,@dptr
      00002D FF               [12]  157 	mov	r7,a
      00002E 90r00r00         [24]  158 	mov	dptr,#_vprintf_PARM_2
      000031 E0               [24]  159 	movx	a,@dptr
      000032 FC               [12]  160 	mov	r4,a
      000033 90r00r00         [24]  161 	mov	dptr,#__print_format_PARM_2
      000036 E4               [12]  162 	clr	a
      000037 F0               [24]  163 	movx	@dptr,a
      000038 A3               [24]  164 	inc	dptr
      000039 F0               [24]  165 	movx	@dptr,a
      00003A A3               [24]  166 	inc	dptr
      00003B F0               [24]  167 	movx	@dptr,a
      00003C 90r00r00         [24]  168 	mov	dptr,#__print_format_PARM_3
      00003F ED               [12]  169 	mov	a,r5
      000040 F0               [24]  170 	movx	@dptr,a
      000041 EE               [12]  171 	mov	a,r6
      000042 A3               [24]  172 	inc	dptr
      000043 F0               [24]  173 	movx	@dptr,a
      000044 EF               [12]  174 	mov	a,r7
      000045 A3               [24]  175 	inc	dptr
      000046 F0               [24]  176 	movx	@dptr,a
      000047 90r00r00         [24]  177 	mov	dptr,#__print_format_PARM_4
      00004A EC               [12]  178 	mov	a,r4
      00004B F0               [24]  179 	movx	@dptr,a
      00004C 90r00r00         [24]  180 	mov	dptr,#_put_char_to_stdout
      00004F 75 F0s00         [24]  181 	mov	b,#(_put_char_to_stdout >> 16)
      000052 78r00            [12]  182 	mov	r0,#__print_format
      000054 79s00            [12]  183 	mov	r1,#(__print_format >> 8)
      000056 7As00            [12]  184 	mov	r2,#(__print_format >> 16)
      000058 12r00r00         [24]  185 	lcall	__sdcc_banked_call
      00005B AE 82            [24]  186 	mov	r6,dpl
      00005D AF 83            [24]  187 	mov  r7,dph
      00005F 02r00r00         [24]  188 	ljmp	__sdcc_banked_ret
                                    189 ;------------------------------------------------------------
                                    190 ;Allocation info for local variables in function 'printf'
                                    191 ;------------------------------------------------------------
                                    192 ;format                    Allocated to stack - _bp -6
                                    193 ;arg                       Allocated to registers r7 
                                    194 ;i                         Allocated to registers r6 r7 
                                    195 ;------------------------------------------------------------
                                    196 ;	vprintf.c:47: printf (const char *format, ...)
                                    197 ;	-----------------------------------------
                                    198 ;	 function printf
                                    199 ;	-----------------------------------------
      000062                        200 _printf:
      000062 C0*00            [24]  201 	push	_bp
      000064 85 81*00         [24]  202 	mov	_bp,sp
                                    203 ;	vprintf.c:52: va_start (arg, format);
      000067 E5*00            [12]  204 	mov	a,_bp
      000069 24 FA            [12]  205 	add	a,#0xFA
      00006B FF               [12]  206 	mov	r7,a
                                    207 ;	vprintf.c:53: i = _print_format (put_char_to_stdout, NULL, format, arg);
      00006C 90r00r00         [24]  208 	mov	dptr,#__print_format_PARM_2
      00006F E4               [12]  209 	clr	a
      000070 F0               [24]  210 	movx	@dptr,a
      000071 A3               [24]  211 	inc	dptr
      000072 F0               [24]  212 	movx	@dptr,a
      000073 A3               [24]  213 	inc	dptr
      000074 F0               [24]  214 	movx	@dptr,a
      000075 E5*00            [12]  215 	mov	a,_bp
      000077 24 FA            [12]  216 	add	a,#0xfa
      000079 F8               [12]  217 	mov	r0,a
      00007A 90r00r00         [24]  218 	mov	dptr,#__print_format_PARM_3
      00007D E6               [12]  219 	mov	a,@r0
      00007E F0               [24]  220 	movx	@dptr,a
      00007F 08               [12]  221 	inc	r0
      000080 E6               [12]  222 	mov	a,@r0
      000081 A3               [24]  223 	inc	dptr
      000082 F0               [24]  224 	movx	@dptr,a
      000083 08               [12]  225 	inc	r0
      000084 E6               [12]  226 	mov	a,@r0
      000085 A3               [24]  227 	inc	dptr
      000086 F0               [24]  228 	movx	@dptr,a
      000087 90r00r00         [24]  229 	mov	dptr,#__print_format_PARM_4
      00008A EF               [12]  230 	mov	a,r7
      00008B F0               [24]  231 	movx	@dptr,a
      00008C 90r00r00         [24]  232 	mov	dptr,#_put_char_to_stdout
      00008F 75 F0s00         [24]  233 	mov	b,#(_put_char_to_stdout >> 16)
      000092 78r00            [12]  234 	mov	r0,#__print_format
      000094 79s00            [12]  235 	mov	r1,#(__print_format >> 8)
      000096 7As00            [12]  236 	mov	r2,#(__print_format >> 16)
      000098 12r00r00         [24]  237 	lcall	__sdcc_banked_call
                                    238 ;	vprintf.c:56: return i;
      00009B AE 82            [24]  239 	mov	r6,dpl
      00009D AF 83            [24]  240 	mov  r7,dph
      00009F D0*00            [24]  241 	pop	_bp
      0000A1 02r00r00         [24]  242 	ljmp	__sdcc_banked_ret
                                    243 	.area CSEG    (CODE)
                                    244 	.area CONST   (CODE)
                                    245 	.area XINIT   (CODE)
                                    246 	.area CABS    (ABS,CODE)
