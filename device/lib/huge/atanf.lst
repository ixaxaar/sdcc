                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:27:59 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module atanf
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _fabsf
                                     13 	.globl _atanf
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram 
                                     35 ;--------------------------------------------------------
                                     36 ;--------------------------------------------------------
                                     37 ; indirectly addressable internal ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area ISEG    (DATA)
                                     40 ;--------------------------------------------------------
                                     41 ; absolute internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area IABS    (ABS,DATA)
                                     44 	.area IABS    (ABS,DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; bit data
                                     47 ;--------------------------------------------------------
                                     48 	.area BSEG    (BIT)
                                     49 ;--------------------------------------------------------
                                     50 ; paged external ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area PSEG    (PAG,XDATA)
                                     53 ;--------------------------------------------------------
                                     54 ; external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area XSEG    (XDATA)
                                     57 ;--------------------------------------------------------
                                     58 ; absolute external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XABS    (ABS,XDATA)
                                     61 ;--------------------------------------------------------
                                     62 ; external initialized ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XISEG   (XDATA)
                                     65 	.area HOME    (CODE)
                                     66 	.area GSINIT0 (CODE)
                                     67 	.area GSINIT1 (CODE)
                                     68 	.area GSINIT2 (CODE)
                                     69 	.area GSINIT3 (CODE)
                                     70 	.area GSINIT4 (CODE)
                                     71 	.area GSINIT5 (CODE)
                                     72 	.area GSINIT  (CODE)
                                     73 	.area GSFINAL (CODE)
                                     74 	.area CSEG    (CODE)
                                     75 ;--------------------------------------------------------
                                     76 ; global & static initialisations
                                     77 ;--------------------------------------------------------
                                     78 	.area HOME    (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 	.area GSFINAL (CODE)
                                     81 	.area GSINIT  (CODE)
                                     82 ;--------------------------------------------------------
                                     83 ; Home
                                     84 ;--------------------------------------------------------
                                     85 	.area HOME    (CODE)
                                     86 	.area HOME    (CODE)
                                     87 ;--------------------------------------------------------
                                     88 ; code
                                     89 ;--------------------------------------------------------
                                     90 	.area CSEG    (CODE)
                                     91 ;------------------------------------------------------------
                                     92 ;Allocation info for local variables in function 'atanf'
                                     93 ;------------------------------------------------------------
                                     94 ;x                         Allocated to stack - _bp +1
                                     95 ;f                         Allocated to stack - _bp +9
                                     96 ;r                         Allocated to stack - _bp +13
                                     97 ;g                         Allocated to registers r7 r6 r5 r4 
                                     98 ;n                         Allocated to stack - _bp +17
                                     99 ;sloc0                     Allocated to stack - _bp +5
                                    100 ;sloc1                     Allocated to stack - _bp +23
                                    101 ;------------------------------------------------------------
                                    102 ;	atanf.c:55: float atanf(const float x) _FLOAT_FUNC_REENTRANT
                                    103 ;	-----------------------------------------
                                    104 ;	 function atanf
                                    105 ;	-----------------------------------------
      000000                        106 _atanf:
                           000007   107 	ar7 = 0x07
                           000006   108 	ar6 = 0x06
                           000005   109 	ar5 = 0x05
                           000004   110 	ar4 = 0x04
                           000003   111 	ar3 = 0x03
                           000002   112 	ar2 = 0x02
                           000001   113 	ar1 = 0x01
                           000000   114 	ar0 = 0x00
      000000 C0*00            [24]  115 	push	_bp
      000002 85 81*00         [24]  116 	mov	_bp,sp
      000005 C0 82            [24]  117 	push	dpl
      000007 C0 83            [24]  118 	push	dph
      000009 C0 F0            [24]  119 	push	b
      00000B C0 E0            [24]  120 	push	acc
      00000D E5 81            [12]  121 	mov	a,sp
      00000F 24 0E            [12]  122 	add	a,#0x0E
      000011 F5 81            [12]  123 	mov	sp,a
                                    124 ;	atanf.c:58: int n=0;
      000013 E5*00            [12]  125 	mov	a,_bp
      000015 24 11            [12]  126 	add	a,#0x11
      000017 F8               [12]  127 	mov	r0,a
      000018 E4               [12]  128 	clr	a
      000019 F6               [12]  129 	mov	@r0,a
      00001A 08               [12]  130 	inc	r0
      00001B F6               [12]  131 	mov	@r0,a
                                    132 ;	atanf.c:61: f=fabsf(x);
      00001C A8*00            [24]  133 	mov	r0,_bp
      00001E 08               [12]  134 	inc	r0
      00001F 86 82            [24]  135 	mov	dpl,@r0
      000021 08               [12]  136 	inc	r0
      000022 86 83            [24]  137 	mov	dph,@r0
      000024 08               [12]  138 	inc	r0
      000025 86 F0            [24]  139 	mov	b,@r0
      000027 08               [12]  140 	inc	r0
      000028 E6               [12]  141 	mov	a,@r0
      000029 78r00            [12]  142 	mov	r0,#_fabsf
      00002B 79s00            [12]  143 	mov	r1,#(_fabsf >> 8)
      00002D 7As00            [12]  144 	mov	r2,#(_fabsf >> 16)
      00002F 12r00r00         [24]  145 	lcall	__sdcc_banked_call
      000032 AF 82            [24]  146 	mov	r7,dpl
      000034 AE 83            [24]  147 	mov	r6,dph
      000036 AD F0            [24]  148 	mov	r5,b
      000038 FC               [12]  149 	mov	r4,a
      000039 E5*00            [12]  150 	mov	a,_bp
      00003B 24 09            [12]  151 	add	a,#0x09
      00003D F8               [12]  152 	mov	r0,a
      00003E A6 07            [24]  153 	mov	@r0,ar7
      000040 08               [12]  154 	inc	r0
      000041 A6 06            [24]  155 	mov	@r0,ar6
      000043 08               [12]  156 	inc	r0
      000044 A6 05            [24]  157 	mov	@r0,ar5
      000046 08               [12]  158 	inc	r0
      000047 A6 04            [24]  159 	mov	@r0,ar4
                                    160 ;	atanf.c:62: if(f>1.0)
      000049 E4               [12]  161 	clr	a
      00004A C0 E0            [24]  162 	push	acc
      00004C C0 E0            [24]  163 	push	acc
      00004E 74 80            [12]  164 	mov	a,#0x80
      000050 C0 E0            [24]  165 	push	acc
      000052 74 3F            [12]  166 	mov	a,#0x3F
      000054 C0 E0            [24]  167 	push	acc
      000056 E5*00            [12]  168 	mov	a,_bp
      000058 24 09            [12]  169 	add	a,#0x09
      00005A F8               [12]  170 	mov	r0,a
      00005B 86 82            [24]  171 	mov	dpl,@r0
      00005D 08               [12]  172 	inc	r0
      00005E 86 83            [24]  173 	mov	dph,@r0
      000060 08               [12]  174 	inc	r0
      000061 86 F0            [24]  175 	mov	b,@r0
      000063 08               [12]  176 	inc	r0
      000064 E6               [12]  177 	mov	a,@r0
      000065 12r00r00         [24]  178 	lcall	___fsgt
      000068 AB 82            [24]  179 	mov	r3,dpl
      00006A E5 81            [12]  180 	mov	a,sp
      00006C 24 FC            [12]  181 	add	a,#0xfc
      00006E F5 81            [12]  182 	mov	sp,a
      000070 EB               [12]  183 	mov	a,r3
      000071 60 46            [24]  184 	jz	00102$
                                    185 ;	atanf.c:64: f=1.0/f;
      000073 E5*00            [12]  186 	mov	a,_bp
      000075 24 09            [12]  187 	add	a,#0x09
      000077 F8               [12]  188 	mov	r0,a
      000078 E6               [12]  189 	mov	a,@r0
      000079 C0 E0            [24]  190 	push	acc
      00007B 08               [12]  191 	inc	r0
      00007C E6               [12]  192 	mov	a,@r0
      00007D C0 E0            [24]  193 	push	acc
      00007F 08               [12]  194 	inc	r0
      000080 E6               [12]  195 	mov	a,@r0
      000081 C0 E0            [24]  196 	push	acc
      000083 08               [12]  197 	inc	r0
      000084 E6               [12]  198 	mov	a,@r0
      000085 C0 E0            [24]  199 	push	acc
      000087 90 00 00         [24]  200 	mov	dptr,#0x0000
      00008A 75 F0 80         [24]  201 	mov	b,#0x80
      00008D 74 3F            [12]  202 	mov	a,#0x3F
      00008F 12r00r00         [24]  203 	lcall	___fsdiv
      000092 AF 82            [24]  204 	mov	r7,dpl
      000094 AE 83            [24]  205 	mov	r6,dph
      000096 AD F0            [24]  206 	mov	r5,b
      000098 FC               [12]  207 	mov	r4,a
      000099 E5 81            [12]  208 	mov	a,sp
      00009B 24 FC            [12]  209 	add	a,#0xfc
      00009D F5 81            [12]  210 	mov	sp,a
      00009F E5*00            [12]  211 	mov	a,_bp
      0000A1 24 09            [12]  212 	add	a,#0x09
      0000A3 F8               [12]  213 	mov	r0,a
      0000A4 A6 07            [24]  214 	mov	@r0,ar7
      0000A6 08               [12]  215 	inc	r0
      0000A7 A6 06            [24]  216 	mov	@r0,ar6
      0000A9 08               [12]  217 	inc	r0
      0000AA A6 05            [24]  218 	mov	@r0,ar5
      0000AC 08               [12]  219 	inc	r0
      0000AD A6 04            [24]  220 	mov	@r0,ar4
                                    221 ;	atanf.c:65: n=2;
      0000AF E5*00            [12]  222 	mov	a,_bp
      0000B1 24 11            [12]  223 	add	a,#0x11
      0000B3 F8               [12]  224 	mov	r0,a
      0000B4 76 02            [12]  225 	mov	@r0,#0x02
      0000B6 08               [12]  226 	inc	r0
      0000B7 76 00            [12]  227 	mov	@r0,#0x00
      0000B9                        228 00102$:
                                    229 ;	atanf.c:67: if(f>K1)
      0000B9 74 A3            [12]  230 	mov	a,#0xA3
      0000BB C0 E0            [24]  231 	push	acc
      0000BD 74 30            [12]  232 	mov	a,#0x30
      0000BF C0 E0            [24]  233 	push	acc
      0000C1 74 89            [12]  234 	mov	a,#0x89
      0000C3 C0 E0            [24]  235 	push	acc
      0000C5 74 3E            [12]  236 	mov	a,#0x3E
      0000C7 C0 E0            [24]  237 	push	acc
      0000C9 E5*00            [12]  238 	mov	a,_bp
      0000CB 24 09            [12]  239 	add	a,#0x09
      0000CD F8               [12]  240 	mov	r0,a
      0000CE 86 82            [24]  241 	mov	dpl,@r0
      0000D0 08               [12]  242 	inc	r0
      0000D1 86 83            [24]  243 	mov	dph,@r0
      0000D3 08               [12]  244 	inc	r0
      0000D4 86 F0            [24]  245 	mov	b,@r0
      0000D6 08               [12]  246 	inc	r0
      0000D7 E6               [12]  247 	mov	a,@r0
      0000D8 12r00r00         [24]  248 	lcall	___fsgt
      0000DB AB 82            [24]  249 	mov	r3,dpl
      0000DD E5 81            [12]  250 	mov	a,sp
      0000DF 24 FC            [12]  251 	add	a,#0xfc
      0000E1 F5 81            [12]  252 	mov	sp,a
      0000E3 EB               [12]  253 	mov	a,r3
      0000E4 70 03            [24]  254 	jnz	00130$
      0000E6 02r01rDE         [24]  255 	ljmp	00104$
      0000E9                        256 00130$:
                                    257 ;	atanf.c:69: f=((K2*f-1.0)+f)/(K3+f);
      0000E9 E5*00            [12]  258 	mov	a,_bp
      0000EB 24 09            [12]  259 	add	a,#0x09
      0000ED F8               [12]  260 	mov	r0,a
      0000EE E6               [12]  261 	mov	a,@r0
      0000EF C0 E0            [24]  262 	push	acc
      0000F1 08               [12]  263 	inc	r0
      0000F2 E6               [12]  264 	mov	a,@r0
      0000F3 C0 E0            [24]  265 	push	acc
      0000F5 08               [12]  266 	inc	r0
      0000F6 E6               [12]  267 	mov	a,@r0
      0000F7 C0 E0            [24]  268 	push	acc
      0000F9 08               [12]  269 	inc	r0
      0000FA E6               [12]  270 	mov	a,@r0
      0000FB C0 E0            [24]  271 	push	acc
      0000FD 90 67 AF         [24]  272 	mov	dptr,#0x67AF
      000100 75 F0 3B         [24]  273 	mov	b,#0x3B
      000103 74 3F            [12]  274 	mov	a,#0x3F
      000105 12r00r00         [24]  275 	lcall	___fsmul
      000108 AA 82            [24]  276 	mov	r2,dpl
      00010A AB 83            [24]  277 	mov	r3,dph
      00010C AE F0            [24]  278 	mov	r6,b
      00010E FF               [12]  279 	mov	r7,a
      00010F E5 81            [12]  280 	mov	a,sp
      000111 24 FC            [12]  281 	add	a,#0xfc
      000113 F5 81            [12]  282 	mov	sp,a
      000115 E4               [12]  283 	clr	a
      000116 C0 E0            [24]  284 	push	acc
      000118 C0 E0            [24]  285 	push	acc
      00011A 74 80            [12]  286 	mov	a,#0x80
      00011C C0 E0            [24]  287 	push	acc
      00011E 74 3F            [12]  288 	mov	a,#0x3F
      000120 C0 E0            [24]  289 	push	acc
      000122 8A 82            [24]  290 	mov	dpl,r2
      000124 8B 83            [24]  291 	mov	dph,r3
      000126 8E F0            [24]  292 	mov	b,r6
      000128 EF               [12]  293 	mov	a,r7
      000129 12r00r00         [24]  294 	lcall	___fssub
      00012C AC 82            [24]  295 	mov	r4,dpl
      00012E AD 83            [24]  296 	mov	r5,dph
      000130 AE F0            [24]  297 	mov	r6,b
      000132 FF               [12]  298 	mov	r7,a
      000133 E5 81            [12]  299 	mov	a,sp
      000135 24 FC            [12]  300 	add	a,#0xfc
      000137 F5 81            [12]  301 	mov	sp,a
      000139 E5*00            [12]  302 	mov	a,_bp
      00013B 24 09            [12]  303 	add	a,#0x09
      00013D F8               [12]  304 	mov	r0,a
      00013E E6               [12]  305 	mov	a,@r0
      00013F C0 E0            [24]  306 	push	acc
      000141 08               [12]  307 	inc	r0
      000142 E6               [12]  308 	mov	a,@r0
      000143 C0 E0            [24]  309 	push	acc
      000145 08               [12]  310 	inc	r0
      000146 E6               [12]  311 	mov	a,@r0
      000147 C0 E0            [24]  312 	push	acc
      000149 08               [12]  313 	inc	r0
      00014A E6               [12]  314 	mov	a,@r0
      00014B C0 E0            [24]  315 	push	acc
      00014D 8C 82            [24]  316 	mov	dpl,r4
      00014F 8D 83            [24]  317 	mov	dph,r5
      000151 8E F0            [24]  318 	mov	b,r6
      000153 EF               [12]  319 	mov	a,r7
      000154 12r00r00         [24]  320 	lcall	___fsadd
      000157 C8               [12]  321 	xch	a,r0
      000158 E5*00            [12]  322 	mov	a,_bp
      00015A 24 05            [12]  323 	add	a,#0x05
      00015C C8               [12]  324 	xch	a,r0
      00015D A6 82            [24]  325 	mov	@r0,dpl
      00015F 08               [12]  326 	inc	r0
      000160 A6 83            [24]  327 	mov	@r0,dph
      000162 08               [12]  328 	inc	r0
      000163 A6 F0            [24]  329 	mov	@r0,b
      000165 08               [12]  330 	inc	r0
      000166 F6               [12]  331 	mov	@r0,a
      000167 E5 81            [12]  332 	mov	a,sp
      000169 24 FC            [12]  333 	add	a,#0xfc
      00016B F5 81            [12]  334 	mov	sp,a
      00016D 74 D7            [12]  335 	mov	a,#0xD7
      00016F C0 E0            [24]  336 	push	acc
      000171 74 B3            [12]  337 	mov	a,#0xB3
      000173 C0 E0            [24]  338 	push	acc
      000175 74 DD            [12]  339 	mov	a,#0xDD
      000177 C0 E0            [24]  340 	push	acc
      000179 74 3F            [12]  341 	mov	a,#0x3F
      00017B C0 E0            [24]  342 	push	acc
      00017D E5*00            [12]  343 	mov	a,_bp
      00017F 24 09            [12]  344 	add	a,#0x09
      000181 F8               [12]  345 	mov	r0,a
      000182 86 82            [24]  346 	mov	dpl,@r0
      000184 08               [12]  347 	inc	r0
      000185 86 83            [24]  348 	mov	dph,@r0
      000187 08               [12]  349 	inc	r0
      000188 86 F0            [24]  350 	mov	b,@r0
      00018A 08               [12]  351 	inc	r0
      00018B E6               [12]  352 	mov	a,@r0
      00018C 12r00r00         [24]  353 	lcall	___fsadd
      00018F AA 82            [24]  354 	mov	r2,dpl
      000191 AB 83            [24]  355 	mov	r3,dph
      000193 AE F0            [24]  356 	mov	r6,b
      000195 FF               [12]  357 	mov	r7,a
      000196 E5 81            [12]  358 	mov	a,sp
      000198 24 FC            [12]  359 	add	a,#0xfc
      00019A F5 81            [12]  360 	mov	sp,a
      00019C C0 02            [24]  361 	push	ar2
      00019E C0 03            [24]  362 	push	ar3
      0001A0 C0 06            [24]  363 	push	ar6
      0001A2 C0 07            [24]  364 	push	ar7
      0001A4 E5*00            [12]  365 	mov	a,_bp
      0001A6 24 05            [12]  366 	add	a,#0x05
      0001A8 F8               [12]  367 	mov	r0,a
      0001A9 86 82            [24]  368 	mov	dpl,@r0
      0001AB 08               [12]  369 	inc	r0
      0001AC 86 83            [24]  370 	mov	dph,@r0
      0001AE 08               [12]  371 	inc	r0
      0001AF 86 F0            [24]  372 	mov	b,@r0
      0001B1 08               [12]  373 	inc	r0
      0001B2 E6               [12]  374 	mov	a,@r0
      0001B3 12r00r00         [24]  375 	lcall	___fsdiv
      0001B6 AC 82            [24]  376 	mov	r4,dpl
      0001B8 AD 83            [24]  377 	mov	r5,dph
      0001BA AE F0            [24]  378 	mov	r6,b
      0001BC FF               [12]  379 	mov	r7,a
      0001BD E5 81            [12]  380 	mov	a,sp
      0001BF 24 FC            [12]  381 	add	a,#0xfc
      0001C1 F5 81            [12]  382 	mov	sp,a
      0001C3 E5*00            [12]  383 	mov	a,_bp
      0001C5 24 09            [12]  384 	add	a,#0x09
      0001C7 F8               [12]  385 	mov	r0,a
      0001C8 A6 04            [24]  386 	mov	@r0,ar4
      0001CA 08               [12]  387 	inc	r0
      0001CB A6 05            [24]  388 	mov	@r0,ar5
      0001CD 08               [12]  389 	inc	r0
      0001CE A6 06            [24]  390 	mov	@r0,ar6
      0001D0 08               [12]  391 	inc	r0
      0001D1 A6 07            [24]  392 	mov	@r0,ar7
                                    393 ;	atanf.c:73: n++;
      0001D3 E5*00            [12]  394 	mov	a,_bp
      0001D5 24 11            [12]  395 	add	a,#0x11
      0001D7 F8               [12]  396 	mov	r0,a
      0001D8 06               [12]  397 	inc	@r0
      0001D9 B6 00 02         [24]  398 	cjne	@r0,#0x00,00131$
      0001DC 08               [12]  399 	inc	r0
      0001DD 06               [12]  400 	inc	@r0
      0001DE                        401 00131$:
      0001DE                        402 00104$:
                                    403 ;	atanf.c:75: if(fabsf(f)<EPS) r=f;
      0001DE E5*00            [12]  404 	mov	a,_bp
      0001E0 24 09            [12]  405 	add	a,#0x09
      0001E2 F8               [12]  406 	mov	r0,a
      0001E3 86 82            [24]  407 	mov	dpl,@r0
      0001E5 08               [12]  408 	inc	r0
      0001E6 86 83            [24]  409 	mov	dph,@r0
      0001E8 08               [12]  410 	inc	r0
      0001E9 86 F0            [24]  411 	mov	b,@r0
      0001EB 08               [12]  412 	inc	r0
      0001EC E6               [12]  413 	mov	a,@r0
      0001ED 78r00            [12]  414 	mov	r0,#_fabsf
      0001EF 79s00            [12]  415 	mov	r1,#(_fabsf >> 8)
      0001F1 7As00            [12]  416 	mov	r2,#(_fabsf >> 16)
      0001F3 12r00r00         [24]  417 	lcall	__sdcc_banked_call
      0001F6 AC 82            [24]  418 	mov	r4,dpl
      0001F8 AD 83            [24]  419 	mov	r5,dph
      0001FA AE F0            [24]  420 	mov	r6,b
      0001FC FF               [12]  421 	mov	r7,a
      0001FD E4               [12]  422 	clr	a
      0001FE C0 E0            [24]  423 	push	acc
      000200 C0 E0            [24]  424 	push	acc
      000202 74 80            [12]  425 	mov	a,#0x80
      000204 C0 E0            [24]  426 	push	acc
      000206 74 39            [12]  427 	mov	a,#0x39
      000208 C0 E0            [24]  428 	push	acc
      00020A 8C 82            [24]  429 	mov	dpl,r4
      00020C 8D 83            [24]  430 	mov	dph,r5
      00020E 8E F0            [24]  431 	mov	b,r6
      000210 EF               [12]  432 	mov	a,r7
      000211 12r00r00         [24]  433 	lcall	___fslt
      000214 AF 82            [24]  434 	mov	r7,dpl
      000216 E5 81            [12]  435 	mov	a,sp
      000218 24 FC            [12]  436 	add	a,#0xfc
      00021A F5 81            [12]  437 	mov	sp,a
      00021C EF               [12]  438 	mov	a,r7
      00021D 60 1B            [24]  439 	jz	00106$
      00021F E5*00            [12]  440 	mov	a,_bp
      000221 24 09            [12]  441 	add	a,#0x09
      000223 F8               [12]  442 	mov	r0,a
      000224 E5*00            [12]  443 	mov	a,_bp
      000226 24 0D            [12]  444 	add	a,#0x0d
      000228 F9               [12]  445 	mov	r1,a
      000229 E6               [12]  446 	mov	a,@r0
      00022A F7               [12]  447 	mov	@r1,a
      00022B 08               [12]  448 	inc	r0
      00022C 09               [12]  449 	inc	r1
      00022D E6               [12]  450 	mov	a,@r0
      00022E F7               [12]  451 	mov	@r1,a
      00022F 08               [12]  452 	inc	r0
      000230 09               [12]  453 	inc	r1
      000231 E6               [12]  454 	mov	a,@r0
      000232 F7               [12]  455 	mov	@r1,a
      000233 08               [12]  456 	inc	r0
      000234 09               [12]  457 	inc	r1
      000235 E6               [12]  458 	mov	a,@r0
      000236 F7               [12]  459 	mov	@r1,a
      000237 02r03rDF         [24]  460 	ljmp	00107$
      00023A                        461 00106$:
                                    462 ;	atanf.c:78: g=f*f;
      00023A E5*00            [12]  463 	mov	a,_bp
      00023C 24 09            [12]  464 	add	a,#0x09
      00023E F8               [12]  465 	mov	r0,a
      00023F E6               [12]  466 	mov	a,@r0
      000240 C0 E0            [24]  467 	push	acc
      000242 08               [12]  468 	inc	r0
      000243 E6               [12]  469 	mov	a,@r0
      000244 C0 E0            [24]  470 	push	acc
      000246 08               [12]  471 	inc	r0
      000247 E6               [12]  472 	mov	a,@r0
      000248 C0 E0            [24]  473 	push	acc
      00024A 08               [12]  474 	inc	r0
      00024B E6               [12]  475 	mov	a,@r0
      00024C C0 E0            [24]  476 	push	acc
      00024E E5*00            [12]  477 	mov	a,_bp
      000250 24 09            [12]  478 	add	a,#0x09
      000252 F8               [12]  479 	mov	r0,a
      000253 86 82            [24]  480 	mov	dpl,@r0
      000255 08               [12]  481 	inc	r0
      000256 86 83            [24]  482 	mov	dph,@r0
      000258 08               [12]  483 	inc	r0
      000259 86 F0            [24]  484 	mov	b,@r0
      00025B 08               [12]  485 	inc	r0
      00025C E6               [12]  486 	mov	a,@r0
      00025D 12r00r00         [24]  487 	lcall	___fsmul
      000260 AF 82            [24]  488 	mov	r7,dpl
      000262 AE 83            [24]  489 	mov	r6,dph
      000264 AD F0            [24]  490 	mov	r5,b
      000266 FC               [12]  491 	mov	r4,a
      000267 E5 81            [12]  492 	mov	a,sp
      000269 24 FC            [12]  493 	add	a,#0xfc
      00026B F5 81            [12]  494 	mov	sp,a
                                    495 ;	atanf.c:79: r=f+P(g,f)/Q(g);
      00026D C0 07            [24]  496 	push	ar7
      00026F C0 06            [24]  497 	push	ar6
      000271 C0 05            [24]  498 	push	ar5
      000273 C0 04            [24]  499 	push	ar4
      000275 C0 07            [24]  500 	push	ar7
      000277 C0 06            [24]  501 	push	ar6
      000279 C0 05            [24]  502 	push	ar5
      00027B C0 04            [24]  503 	push	ar4
      00027D 90 86 91         [24]  504 	mov	dptr,#0x8691
      000280 75 F0 50         [24]  505 	mov	b,#0x50
      000283 74 BD            [12]  506 	mov	a,#0xBD
      000285 12r00r00         [24]  507 	lcall	___fsmul
      000288 C8               [12]  508 	xch	a,r0
      000289 E5*00            [12]  509 	mov	a,_bp
      00028B 24 05            [12]  510 	add	a,#0x05
      00028D C8               [12]  511 	xch	a,r0
      00028E A6 82            [24]  512 	mov	@r0,dpl
      000290 08               [12]  513 	inc	r0
      000291 A6 83            [24]  514 	mov	@r0,dph
      000293 08               [12]  515 	inc	r0
      000294 A6 F0            [24]  516 	mov	@r0,b
      000296 08               [12]  517 	inc	r0
      000297 F6               [12]  518 	mov	@r0,a
      000298 E5 81            [12]  519 	mov	a,sp
      00029A 24 FC            [12]  520 	add	a,#0xfc
      00029C F5 81            [12]  521 	mov	sp,a
      00029E 74 F6            [12]  522 	mov	a,#0xF6
      0002A0 C0 E0            [24]  523 	push	acc
      0002A2 74 10            [12]  524 	mov	a,#0x10
      0002A4 C0 E0            [24]  525 	push	acc
      0002A6 74 F1            [12]  526 	mov	a,#0xF1
      0002A8 C0 E0            [24]  527 	push	acc
      0002AA 74 BE            [12]  528 	mov	a,#0xBE
      0002AC C0 E0            [24]  529 	push	acc
      0002AE E5*00            [12]  530 	mov	a,_bp
      0002B0 24 05            [12]  531 	add	a,#0x05
      0002B2 F8               [12]  532 	mov	r0,a
      0002B3 86 82            [24]  533 	mov	dpl,@r0
      0002B5 08               [12]  534 	inc	r0
      0002B6 86 83            [24]  535 	mov	dph,@r0
      0002B8 08               [12]  536 	inc	r0
      0002B9 86 F0            [24]  537 	mov	b,@r0
      0002BB 08               [12]  538 	inc	r0
      0002BC E6               [12]  539 	mov	a,@r0
      0002BD 12r00r00         [24]  540 	lcall	___fsadd
      0002C0 C8               [12]  541 	xch	a,r0
      0002C1 E5*00            [12]  542 	mov	a,_bp
      0002C3 24 05            [12]  543 	add	a,#0x05
      0002C5 C8               [12]  544 	xch	a,r0
      0002C6 A6 82            [24]  545 	mov	@r0,dpl
      0002C8 08               [12]  546 	inc	r0
      0002C9 A6 83            [24]  547 	mov	@r0,dph
      0002CB 08               [12]  548 	inc	r0
      0002CC A6 F0            [24]  549 	mov	@r0,b
      0002CE 08               [12]  550 	inc	r0
      0002CF F6               [12]  551 	mov	@r0,a
      0002D0 E5 81            [12]  552 	mov	a,sp
      0002D2 24 FC            [12]  553 	add	a,#0xfc
      0002D4 F5 81            [12]  554 	mov	sp,a
      0002D6 D0 04            [24]  555 	pop	ar4
      0002D8 D0 05            [24]  556 	pop	ar5
      0002DA D0 06            [24]  557 	pop	ar6
      0002DC D0 07            [24]  558 	pop	ar7
      0002DE C0 07            [24]  559 	push	ar7
      0002E0 C0 06            [24]  560 	push	ar6
      0002E2 C0 05            [24]  561 	push	ar5
      0002E4 C0 04            [24]  562 	push	ar4
      0002E6 C0 07            [24]  563 	push	ar7
      0002E8 C0 06            [24]  564 	push	ar6
      0002EA C0 05            [24]  565 	push	ar5
      0002EC C0 04            [24]  566 	push	ar4
      0002EE E5*00            [12]  567 	mov	a,_bp
      0002F0 24 05            [12]  568 	add	a,#0x05
      0002F2 F8               [12]  569 	mov	r0,a
      0002F3 86 82            [24]  570 	mov	dpl,@r0
      0002F5 08               [12]  571 	inc	r0
      0002F6 86 83            [24]  572 	mov	dph,@r0
      0002F8 08               [12]  573 	inc	r0
      0002F9 86 F0            [24]  574 	mov	b,@r0
      0002FB 08               [12]  575 	inc	r0
      0002FC E6               [12]  576 	mov	a,@r0
      0002FD 12r00r00         [24]  577 	lcall	___fsmul
      000300 C8               [12]  578 	xch	a,r0
      000301 E5*00            [12]  579 	mov	a,_bp
      000303 24 05            [12]  580 	add	a,#0x05
      000305 C8               [12]  581 	xch	a,r0
      000306 A6 82            [24]  582 	mov	@r0,dpl
      000308 08               [12]  583 	inc	r0
      000309 A6 83            [24]  584 	mov	@r0,dph
      00030B 08               [12]  585 	inc	r0
      00030C A6 F0            [24]  586 	mov	@r0,b
      00030E 08               [12]  587 	inc	r0
      00030F F6               [12]  588 	mov	@r0,a
      000310 E5 81            [12]  589 	mov	a,sp
      000312 24 FC            [12]  590 	add	a,#0xfc
      000314 F5 81            [12]  591 	mov	sp,a
      000316 E5*00            [12]  592 	mov	a,_bp
      000318 24 09            [12]  593 	add	a,#0x09
      00031A F8               [12]  594 	mov	r0,a
      00031B E6               [12]  595 	mov	a,@r0
      00031C C0 E0            [24]  596 	push	acc
      00031E 08               [12]  597 	inc	r0
      00031F E6               [12]  598 	mov	a,@r0
      000320 C0 E0            [24]  599 	push	acc
      000322 08               [12]  600 	inc	r0
      000323 E6               [12]  601 	mov	a,@r0
      000324 C0 E0            [24]  602 	push	acc
      000326 08               [12]  603 	inc	r0
      000327 E6               [12]  604 	mov	a,@r0
      000328 C0 E0            [24]  605 	push	acc
      00032A E5*00            [12]  606 	mov	a,_bp
      00032C 24 05            [12]  607 	add	a,#0x05
      00032E F8               [12]  608 	mov	r0,a
      00032F 86 82            [24]  609 	mov	dpl,@r0
      000331 08               [12]  610 	inc	r0
      000332 86 83            [24]  611 	mov	dph,@r0
      000334 08               [12]  612 	inc	r0
      000335 86 F0            [24]  613 	mov	b,@r0
      000337 08               [12]  614 	inc	r0
      000338 E6               [12]  615 	mov	a,@r0
      000339 12r00r00         [24]  616 	lcall	___fsmul
      00033C C8               [12]  617 	xch	a,r0
      00033D E5*00            [12]  618 	mov	a,_bp
      00033F 24 05            [12]  619 	add	a,#0x05
      000341 C8               [12]  620 	xch	a,r0
      000342 A6 82            [24]  621 	mov	@r0,dpl
      000344 08               [12]  622 	inc	r0
      000345 A6 83            [24]  623 	mov	@r0,dph
      000347 08               [12]  624 	inc	r0
      000348 A6 F0            [24]  625 	mov	@r0,b
      00034A 08               [12]  626 	inc	r0
      00034B F6               [12]  627 	mov	@r0,a
      00034C E5 81            [12]  628 	mov	a,sp
      00034E 24 FC            [12]  629 	add	a,#0xfc
      000350 F5 81            [12]  630 	mov	sp,a
      000352 D0 04            [24]  631 	pop	ar4
      000354 D0 05            [24]  632 	pop	ar5
      000356 D0 06            [24]  633 	pop	ar6
      000358 D0 07            [24]  634 	pop	ar7
      00035A 74 D3            [12]  635 	mov	a,#0xD3
      00035C C0 E0            [24]  636 	push	acc
      00035E 74 CC            [12]  637 	mov	a,#0xCC
      000360 C0 E0            [24]  638 	push	acc
      000362 74 B4            [12]  639 	mov	a,#0xB4
      000364 C0 E0            [24]  640 	push	acc
      000366 74 3F            [12]  641 	mov	a,#0x3F
      000368 C0 E0            [24]  642 	push	acc
      00036A 8F 82            [24]  643 	mov	dpl,r7
      00036C 8E 83            [24]  644 	mov	dph,r6
      00036E 8D F0            [24]  645 	mov	b,r5
      000370 EC               [12]  646 	mov	a,r4
      000371 12r00r00         [24]  647 	lcall	___fsadd
      000374 AF 82            [24]  648 	mov	r7,dpl
      000376 AE 83            [24]  649 	mov	r6,dph
      000378 AD F0            [24]  650 	mov	r5,b
      00037A FC               [12]  651 	mov	r4,a
      00037B E5 81            [12]  652 	mov	a,sp
      00037D 24 FC            [12]  653 	add	a,#0xfc
      00037F F5 81            [12]  654 	mov	sp,a
      000381 C0 07            [24]  655 	push	ar7
      000383 C0 06            [24]  656 	push	ar6
      000385 C0 05            [24]  657 	push	ar5
      000387 C0 04            [24]  658 	push	ar4
      000389 E5*00            [12]  659 	mov	a,_bp
      00038B 24 05            [12]  660 	add	a,#0x05
      00038D F8               [12]  661 	mov	r0,a
      00038E 86 82            [24]  662 	mov	dpl,@r0
      000390 08               [12]  663 	inc	r0
      000391 86 83            [24]  664 	mov	dph,@r0
      000393 08               [12]  665 	inc	r0
      000394 86 F0            [24]  666 	mov	b,@r0
      000396 08               [12]  667 	inc	r0
      000397 E6               [12]  668 	mov	a,@r0
      000398 12r00r00         [24]  669 	lcall	___fsdiv
      00039B AF 82            [24]  670 	mov	r7,dpl
      00039D AE 83            [24]  671 	mov	r6,dph
      00039F AD F0            [24]  672 	mov	r5,b
      0003A1 FC               [12]  673 	mov	r4,a
      0003A2 E5 81            [12]  674 	mov	a,sp
      0003A4 24 FC            [12]  675 	add	a,#0xfc
      0003A6 F5 81            [12]  676 	mov	sp,a
      0003A8 C0 07            [24]  677 	push	ar7
      0003AA C0 06            [24]  678 	push	ar6
      0003AC C0 05            [24]  679 	push	ar5
      0003AE C0 04            [24]  680 	push	ar4
      0003B0 E5*00            [12]  681 	mov	a,_bp
      0003B2 24 09            [12]  682 	add	a,#0x09
      0003B4 F8               [12]  683 	mov	r0,a
      0003B5 86 82            [24]  684 	mov	dpl,@r0
      0003B7 08               [12]  685 	inc	r0
      0003B8 86 83            [24]  686 	mov	dph,@r0
      0003BA 08               [12]  687 	inc	r0
      0003BB 86 F0            [24]  688 	mov	b,@r0
      0003BD 08               [12]  689 	inc	r0
      0003BE E6               [12]  690 	mov	a,@r0
      0003BF 12r00r00         [24]  691 	lcall	___fsadd
      0003C2 AF 82            [24]  692 	mov	r7,dpl
      0003C4 AE 83            [24]  693 	mov	r6,dph
      0003C6 AD F0            [24]  694 	mov	r5,b
      0003C8 FC               [12]  695 	mov	r4,a
      0003C9 E5 81            [12]  696 	mov	a,sp
      0003CB 24 FC            [12]  697 	add	a,#0xfc
      0003CD F5 81            [12]  698 	mov	sp,a
      0003CF E5*00            [12]  699 	mov	a,_bp
      0003D1 24 0D            [12]  700 	add	a,#0x0d
      0003D3 F8               [12]  701 	mov	r0,a
      0003D4 A6 07            [24]  702 	mov	@r0,ar7
      0003D6 08               [12]  703 	inc	r0
      0003D7 A6 06            [24]  704 	mov	@r0,ar6
      0003D9 08               [12]  705 	inc	r0
      0003DA A6 05            [24]  706 	mov	@r0,ar5
      0003DC 08               [12]  707 	inc	r0
      0003DD A6 04            [24]  708 	mov	@r0,ar4
      0003DF                        709 00107$:
                                    710 ;	atanf.c:81: if(n>1) r=-r;
      0003DF E5*00            [12]  711 	mov	a,_bp
      0003E1 24 11            [12]  712 	add	a,#0x11
      0003E3 F8               [12]  713 	mov	r0,a
      0003E4 C3               [12]  714 	clr	c
      0003E5 74 01            [12]  715 	mov	a,#0x01
      0003E7 96               [12]  716 	subb	a,@r0
      0003E8 74 80            [12]  717 	mov	a,#(0x00 ^ 0x80)
      0003EA 08               [12]  718 	inc	r0
      0003EB 86 F0            [24]  719 	mov	b,@r0
      0003ED 63 F0 80         [24]  720 	xrl	b,#0x80
      0003F0 95 F0            [12]  721 	subb	a,b
      0003F2 50 12            [24]  722 	jnc	00109$
      0003F4 E5*00            [12]  723 	mov	a,_bp
      0003F6 24 0D            [12]  724 	add	a,#0x0d
      0003F8 F8               [12]  725 	mov	r0,a
      0003F9 E6               [12]  726 	mov	a,@r0
      0003FA F6               [12]  727 	mov	@r0,a
      0003FB 08               [12]  728 	inc	r0
      0003FC E6               [12]  729 	mov	a,@r0
      0003FD F6               [12]  730 	mov	@r0,a
      0003FE 08               [12]  731 	inc	r0
      0003FF E6               [12]  732 	mov	a,@r0
      000400 F6               [12]  733 	mov	@r0,a
      000401 08               [12]  734 	inc	r0
      000402 E6               [12]  735 	mov	a,@r0
      000403 B2 E7            [12]  736 	cpl	acc.7
      000405 F6               [12]  737 	mov	@r0,a
      000406                        738 00109$:
                                    739 ;	atanf.c:82: r+=a[n];
      000406 E5*00            [12]  740 	mov	a,_bp
      000408 24 11            [12]  741 	add	a,#0x11
      00040A F8               [12]  742 	mov	r0,a
      00040B 86 02            [24]  743 	mov	ar2,@r0
      00040D 08               [12]  744 	inc	r0
      00040E E6               [12]  745 	mov	a,@r0
      00040F CA               [12]  746 	xch	a,r2
      000410 25 E0            [12]  747 	add	a,acc
      000412 CA               [12]  748 	xch	a,r2
      000413 33               [12]  749 	rlc	a
      000414 CA               [12]  750 	xch	a,r2
      000415 25 E0            [12]  751 	add	a,acc
      000417 CA               [12]  752 	xch	a,r2
      000418 33               [12]  753 	rlc	a
      000419 FB               [12]  754 	mov	r3,a
      00041A EA               [12]  755 	mov	a,r2
      00041B 24r00            [12]  756 	add	a,#_atanf_a_1_24
      00041D F5 82            [12]  757 	mov	dpl,a
      00041F EB               [12]  758 	mov	a,r3
      000420 34s00            [12]  759 	addc	a,#(_atanf_a_1_24 >> 8)
      000422 F5 83            [12]  760 	mov	dph,a
      000424 E4               [12]  761 	clr	a
      000425 93               [24]  762 	movc	a,@a+dptr
      000426 FA               [12]  763 	mov	r2,a
      000427 A3               [24]  764 	inc	dptr
      000428 E4               [12]  765 	clr	a
      000429 93               [24]  766 	movc	a,@a+dptr
      00042A FB               [12]  767 	mov	r3,a
      00042B A3               [24]  768 	inc	dptr
      00042C E4               [12]  769 	clr	a
      00042D 93               [24]  770 	movc	a,@a+dptr
      00042E FE               [12]  771 	mov	r6,a
      00042F A3               [24]  772 	inc	dptr
      000430 E4               [12]  773 	clr	a
      000431 93               [24]  774 	movc	a,@a+dptr
      000432 FF               [12]  775 	mov	r7,a
      000433 C0 02            [24]  776 	push	ar2
      000435 C0 03            [24]  777 	push	ar3
      000437 C0 06            [24]  778 	push	ar6
      000439 C0 07            [24]  779 	push	ar7
      00043B E5*00            [12]  780 	mov	a,_bp
      00043D 24 0D            [12]  781 	add	a,#0x0d
      00043F F8               [12]  782 	mov	r0,a
      000440 86 82            [24]  783 	mov	dpl,@r0
      000442 08               [12]  784 	inc	r0
      000443 86 83            [24]  785 	mov	dph,@r0
      000445 08               [12]  786 	inc	r0
      000446 86 F0            [24]  787 	mov	b,@r0
      000448 08               [12]  788 	inc	r0
      000449 E6               [12]  789 	mov	a,@r0
      00044A 12r00r00         [24]  790 	lcall	___fsadd
      00044D AC 82            [24]  791 	mov	r4,dpl
      00044F AD 83            [24]  792 	mov	r5,dph
      000451 AE F0            [24]  793 	mov	r6,b
      000453 FF               [12]  794 	mov	r7,a
      000454 E5 81            [12]  795 	mov	a,sp
      000456 24 FC            [12]  796 	add	a,#0xfc
      000458 F5 81            [12]  797 	mov	sp,a
      00045A E5*00            [12]  798 	mov	a,_bp
      00045C 24 0D            [12]  799 	add	a,#0x0d
      00045E F8               [12]  800 	mov	r0,a
      00045F A6 04            [24]  801 	mov	@r0,ar4
      000461 08               [12]  802 	inc	r0
      000462 A6 05            [24]  803 	mov	@r0,ar5
      000464 08               [12]  804 	inc	r0
      000465 A6 06            [24]  805 	mov	@r0,ar6
      000467 08               [12]  806 	inc	r0
      000468 A6 07            [24]  807 	mov	@r0,ar7
                                    808 ;	atanf.c:83: if(x<0.0) r=-r;
      00046A E4               [12]  809 	clr	a
      00046B C0 E0            [24]  810 	push	acc
      00046D C0 E0            [24]  811 	push	acc
      00046F C0 E0            [24]  812 	push	acc
      000471 C0 E0            [24]  813 	push	acc
      000473 A8*00            [24]  814 	mov	r0,_bp
      000475 08               [12]  815 	inc	r0
      000476 86 82            [24]  816 	mov	dpl,@r0
      000478 08               [12]  817 	inc	r0
      000479 86 83            [24]  818 	mov	dph,@r0
      00047B 08               [12]  819 	inc	r0
      00047C 86 F0            [24]  820 	mov	b,@r0
      00047E 08               [12]  821 	inc	r0
      00047F E6               [12]  822 	mov	a,@r0
      000480 12r00r00         [24]  823 	lcall	___fslt
      000483 AF 82            [24]  824 	mov	r7,dpl
      000485 E5 81            [12]  825 	mov	a,sp
      000487 24 FC            [12]  826 	add	a,#0xfc
      000489 F5 81            [12]  827 	mov	sp,a
      00048B EF               [12]  828 	mov	a,r7
      00048C 60 12            [24]  829 	jz	00111$
      00048E E5*00            [12]  830 	mov	a,_bp
      000490 24 0D            [12]  831 	add	a,#0x0d
      000492 F8               [12]  832 	mov	r0,a
      000493 E6               [12]  833 	mov	a,@r0
      000494 F6               [12]  834 	mov	@r0,a
      000495 08               [12]  835 	inc	r0
      000496 E6               [12]  836 	mov	a,@r0
      000497 F6               [12]  837 	mov	@r0,a
      000498 08               [12]  838 	inc	r0
      000499 E6               [12]  839 	mov	a,@r0
      00049A F6               [12]  840 	mov	@r0,a
      00049B 08               [12]  841 	inc	r0
      00049C E6               [12]  842 	mov	a,@r0
      00049D B2 E7            [12]  843 	cpl	acc.7
      00049F F6               [12]  844 	mov	@r0,a
      0004A0                        845 00111$:
                                    846 ;	atanf.c:84: return r;
      0004A0 E5*00            [12]  847 	mov	a,_bp
      0004A2 24 0D            [12]  848 	add	a,#0x0d
      0004A4 F8               [12]  849 	mov	r0,a
      0004A5 86 82            [24]  850 	mov	dpl,@r0
      0004A7 08               [12]  851 	inc	r0
      0004A8 86 83            [24]  852 	mov	dph,@r0
      0004AA 08               [12]  853 	inc	r0
      0004AB 86 F0            [24]  854 	mov	b,@r0
      0004AD 08               [12]  855 	inc	r0
      0004AE E6               [12]  856 	mov	a,@r0
      0004AF 85*00 81         [24]  857 	mov	sp,_bp
      0004B2 D0*00            [24]  858 	pop	_bp
      0004B4 02r00r00         [24]  859 	ljmp	__sdcc_banked_ret
                                    860 	.area CSEG    (CODE)
                                    861 	.area CONST   (CODE)
      000000                        862 _atanf_a_1_24:
      000000 00 00 00 00            863 	.byte #0x00,#0x00,#0x00,#0x00	;  0.000000e+00
      000004 92 0A 06 3F            864 	.byte #0x92,#0x0A,#0x06,#0x3F	;  5.235988e-01
      000008 DB 0F C9 3F            865 	.byte #0xDB,#0x0F,#0xC9,#0x3F	;  1.570796e+00
      00000C 92 0A 86 3F            866 	.byte #0x92,#0x0A,#0x86,#0x3F	;  1.047198e+00
                                    867 	.area XINIT   (CODE)
                                    868 	.area CABS    (ABS,CODE)
