                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:00 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _ispunct
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _isspace
                                     13 	.globl _isprint
                                     14 	.globl _isupper
                                     15 	.globl _islower
                                     16 	.globl _isdigit
                                     17 	.globl _ispunct
                                     18 ;--------------------------------------------------------
                                     19 ; special function registers
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; special function bits
                                     25 ;--------------------------------------------------------
                                     26 	.area RSEG    (ABS,DATA)
      000000                         27 	.org 0x0000
                                     28 ;--------------------------------------------------------
                                     29 ; overlayable register banks
                                     30 ;--------------------------------------------------------
                                     31 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         32 	.ds 8
                                     33 ;--------------------------------------------------------
                                     34 ; internal ram data
                                     35 ;--------------------------------------------------------
                                     36 	.area DSEG    (DATA)
                                     37 ;--------------------------------------------------------
                                     38 ; overlayable items in internal ram 
                                     39 ;--------------------------------------------------------
                                     40 ;--------------------------------------------------------
                                     41 ; indirectly addressable internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area ISEG    (DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; absolute internal ram data
                                     46 ;--------------------------------------------------------
                                     47 	.area IABS    (ABS,DATA)
                                     48 	.area IABS    (ABS,DATA)
                                     49 ;--------------------------------------------------------
                                     50 ; bit data
                                     51 ;--------------------------------------------------------
                                     52 	.area BSEG    (BIT)
                                     53 ;--------------------------------------------------------
                                     54 ; paged external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area PSEG    (PAG,XDATA)
                                     57 ;--------------------------------------------------------
                                     58 ; external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XSEG    (XDATA)
      000000                         61 _ispunct_c_1_10:
      000000                         62 	.ds 1
                                     63 ;--------------------------------------------------------
                                     64 ; absolute external ram data
                                     65 ;--------------------------------------------------------
                                     66 	.area XABS    (ABS,XDATA)
                                     67 ;--------------------------------------------------------
                                     68 ; external initialized ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area XISEG   (XDATA)
                                     71 	.area HOME    (CODE)
                                     72 	.area GSINIT0 (CODE)
                                     73 	.area GSINIT1 (CODE)
                                     74 	.area GSINIT2 (CODE)
                                     75 	.area GSINIT3 (CODE)
                                     76 	.area GSINIT4 (CODE)
                                     77 	.area GSINIT5 (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area CSEG    (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; global & static initialisations
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area GSINIT  (CODE)
                                     86 	.area GSFINAL (CODE)
                                     87 	.area GSINIT  (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; Home
                                     90 ;--------------------------------------------------------
                                     91 	.area HOME    (CODE)
                                     92 	.area HOME    (CODE)
                                     93 ;--------------------------------------------------------
                                     94 ; code
                                     95 ;--------------------------------------------------------
                                     96 	.area CSEG    (CODE)
                                     97 ;------------------------------------------------------------
                                     98 ;Allocation info for local variables in function 'ispunct'
                                     99 ;------------------------------------------------------------
                                    100 ;c                         Allocated with name '_ispunct_c_1_10'
                                    101 ;------------------------------------------------------------
                                    102 ;	_ispunct.c:31: char ispunct (unsigned char c)
                                    103 ;	-----------------------------------------
                                    104 ;	 function ispunct
                                    105 ;	-----------------------------------------
      000000                        106 _ispunct:
                           000007   107 	ar7 = 0x07
                           000006   108 	ar6 = 0x06
                           000005   109 	ar5 = 0x05
                           000004   110 	ar4 = 0x04
                           000003   111 	ar3 = 0x03
                           000002   112 	ar2 = 0x02
                           000001   113 	ar1 = 0x01
                           000000   114 	ar0 = 0x00
      000000 E5 82            [12]  115 	mov	a,dpl
      000002 90r00r00         [24]  116 	mov	dptr,#_ispunct_c_1_10
      000005 F0               [24]  117 	movx	@dptr,a
                                    118 ;	_ispunct.c:33: if ( isprint (c) &&
      000006 E0               [24]  119 	movx	a,@dptr
      000007 FF               [12]  120 	mov	r7,a
      000008 F5 82            [12]  121 	mov	dpl,a
      00000A C0 07            [24]  122 	push	ar7
      00000C 78r00            [12]  123 	mov	r0,#_isprint
      00000E 79s00            [12]  124 	mov	r1,#(_isprint >> 8)
      000010 7As00            [12]  125 	mov	r2,#(_isprint >> 16)
      000012 12r00r00         [24]  126 	lcall	__sdcc_banked_call
      000015 E5 82            [12]  127 	mov	a,dpl
      000017 D0 07            [24]  128 	pop	ar7
      000019 60 4D            [24]  129 	jz	00102$
                                    130 ;	_ispunct.c:34: !islower(c) &&
      00001B 8F 82            [24]  131 	mov	dpl,r7
      00001D C0 07            [24]  132 	push	ar7
      00001F 78r00            [12]  133 	mov	r0,#_islower
      000021 79s00            [12]  134 	mov	r1,#(_islower >> 8)
      000023 7As00            [12]  135 	mov	r2,#(_islower >> 16)
      000025 12r00r00         [24]  136 	lcall	__sdcc_banked_call
      000028 E5 82            [12]  137 	mov	a,dpl
      00002A D0 07            [24]  138 	pop	ar7
      00002C 70 3A            [24]  139 	jnz	00102$
                                    140 ;	_ispunct.c:35: !isupper(c) &&
      00002E 8F 82            [24]  141 	mov	dpl,r7
      000030 C0 07            [24]  142 	push	ar7
      000032 78r00            [12]  143 	mov	r0,#_isupper
      000034 79s00            [12]  144 	mov	r1,#(_isupper >> 8)
      000036 7As00            [12]  145 	mov	r2,#(_isupper >> 16)
      000038 12r00r00         [24]  146 	lcall	__sdcc_banked_call
      00003B E5 82            [12]  147 	mov	a,dpl
      00003D D0 07            [24]  148 	pop	ar7
      00003F 70 27            [24]  149 	jnz	00102$
                                    150 ;	_ispunct.c:36: !isspace(c) &&
      000041 8F 82            [24]  151 	mov	dpl,r7
      000043 C0 07            [24]  152 	push	ar7
      000045 78r00            [12]  153 	mov	r0,#_isspace
      000047 79s00            [12]  154 	mov	r1,#(_isspace >> 8)
      000049 7As00            [12]  155 	mov	r2,#(_isspace >> 16)
      00004B 12r00r00         [24]  156 	lcall	__sdcc_banked_call
      00004E E5 82            [12]  157 	mov	a,dpl
      000050 D0 07            [24]  158 	pop	ar7
      000052 70 14            [24]  159 	jnz	00102$
                                    160 ;	_ispunct.c:37: !isdigit(c) )
      000054 8F 82            [24]  161 	mov	dpl,r7
      000056 78r00            [12]  162 	mov	r0,#_isdigit
      000058 79s00            [12]  163 	mov	r1,#(_isdigit >> 8)
      00005A 7As00            [12]  164 	mov	r2,#(_isdigit >> 16)
      00005C 12r00r00         [24]  165 	lcall	__sdcc_banked_call
      00005F E5 82            [12]  166 	mov	a,dpl
      000061 70 05            [24]  167 	jnz	00102$
                                    168 ;	_ispunct.c:38: return 1;
      000063 75 82 01         [24]  169 	mov	dpl,#0x01
      000066 80 03            [24]  170 	sjmp	00107$
      000068                        171 00102$:
                                    172 ;	_ispunct.c:39: return 0;
      000068 75 82 00         [24]  173 	mov	dpl,#0x00
      00006B                        174 00107$:
      00006B 02r00r00         [24]  175 	ljmp	__sdcc_banked_ret
                                    176 	.area CSEG    (CODE)
                                    177 	.area CONST   (CODE)
                                    178 	.area XINIT   (CODE)
                                    179 	.area CABS    (ABS,CODE)
