                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:01 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _free
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl __sdcc_find_memheader
                                     13 	.globl __sdcc_prev_memheader
                                     14 	.globl _free
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram 
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; indirectly addressable internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area ISEG    (DATA)
                                     41 ;--------------------------------------------------------
                                     42 ; absolute internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area IABS    (ABS,DATA)
                                     45 	.area IABS    (ABS,DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; bit data
                                     48 ;--------------------------------------------------------
                                     49 	.area BSEG    (BIT)
                                     50 ;--------------------------------------------------------
                                     51 ; paged external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area PSEG    (PAG,XDATA)
                                     54 ;--------------------------------------------------------
                                     55 ; external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XSEG    (XDATA)
      000000                         58 __sdcc_prev_memheader::
      000000                         59 	.ds 2
      000002                         60 __sdcc_find_memheader_p_1_5:
      000002                         61 	.ds 2
      000004                         62 __sdcc_find_memheader_cur_header_1_6:
      000004                         63 	.ds 2
      000006                         64 _free_p_1_8:
      000006                         65 	.ds 3
                                     66 ;--------------------------------------------------------
                                     67 ; absolute external ram data
                                     68 ;--------------------------------------------------------
                                     69 	.area XABS    (ABS,XDATA)
                                     70 ;--------------------------------------------------------
                                     71 ; external initialized ram data
                                     72 ;--------------------------------------------------------
                                     73 	.area XISEG   (XDATA)
                                     74 	.area HOME    (CODE)
                                     75 	.area GSINIT0 (CODE)
                                     76 	.area GSINIT1 (CODE)
                                     77 	.area GSINIT2 (CODE)
                                     78 	.area GSINIT3 (CODE)
                                     79 	.area GSINIT4 (CODE)
                                     80 	.area GSINIT5 (CODE)
                                     81 	.area GSINIT  (CODE)
                                     82 	.area GSFINAL (CODE)
                                     83 	.area CSEG    (CODE)
                                     84 ;--------------------------------------------------------
                                     85 ; global & static initialisations
                                     86 ;--------------------------------------------------------
                                     87 	.area HOME    (CODE)
                                     88 	.area GSINIT  (CODE)
                                     89 	.area GSFINAL (CODE)
                                     90 	.area GSINIT  (CODE)
                                     91 ;--------------------------------------------------------
                                     92 ; Home
                                     93 ;--------------------------------------------------------
                                     94 	.area HOME    (CODE)
                                     95 	.area HOME    (CODE)
                                     96 ;--------------------------------------------------------
                                     97 ; code
                                     98 ;--------------------------------------------------------
                                     99 	.area CSEG    (CODE)
                                    100 ;------------------------------------------------------------
                                    101 ;Allocation info for local variables in function '_sdcc_find_memheader'
                                    102 ;------------------------------------------------------------
                                    103 ;p                         Allocated with name '__sdcc_find_memheader_p_1_5'
                                    104 ;pthis                     Allocated with name '__sdcc_find_memheader_pthis_1_6'
                                    105 ;cur_header                Allocated with name '__sdcc_find_memheader_cur_header_1_6'
                                    106 ;------------------------------------------------------------
                                    107 ;	_free.c:129: MEMHEADER __xdata * _sdcc_find_memheader(void __xdata * p)
                                    108 ;	-----------------------------------------
                                    109 ;	 function _sdcc_find_memheader
                                    110 ;	-----------------------------------------
      000000                        111 __sdcc_find_memheader:
                           000007   112 	ar7 = 0x07
                           000006   113 	ar6 = 0x06
                           000005   114 	ar5 = 0x05
                           000004   115 	ar4 = 0x04
                           000003   116 	ar3 = 0x03
                           000002   117 	ar2 = 0x02
                           000001   118 	ar1 = 0x01
                           000000   119 	ar0 = 0x00
      000000 AF 83            [24]  120 	mov	r7,dph
      000002 E5 82            [12]  121 	mov	a,dpl
      000004 90r00r02         [24]  122 	mov	dptr,#__sdcc_find_memheader_p_1_5
      000007 F0               [24]  123 	movx	@dptr,a
      000008 EF               [12]  124 	mov	a,r7
      000009 A3               [24]  125 	inc	dptr
      00000A F0               [24]  126 	movx	@dptr,a
                                    127 ;	_free.c:134: if (!p)
      00000B 90r00r02         [24]  128 	mov	dptr,#__sdcc_find_memheader_p_1_5
      00000E E0               [24]  129 	movx	a,@dptr
      00000F FE               [12]  130 	mov	r6,a
      000010 A3               [24]  131 	inc	dptr
      000011 E0               [24]  132 	movx	a,@dptr
      000012 FF               [12]  133 	mov	r7,a
      000013 4E               [12]  134 	orl	a,r6
      000014 70 05            [24]  135 	jnz	00102$
                                    136 ;	_free.c:135: return NULL;
      000016 90 00 00         [24]  137 	mov	dptr,#0x0000
      000019 80 5B            [24]  138 	sjmp	00107$
      00001B                        139 00102$:
                                    140 ;	_free.c:136: pthis = (MEMHEADER __xdata *) p;
                                    141 ;	_free.c:137: pthis -= 1; //to start of header
      00001B EE               [12]  142 	mov	a,r6
      00001C 24 FC            [12]  143 	add	a,#0xFC
      00001E FE               [12]  144 	mov	r6,a
      00001F EF               [12]  145 	mov	a,r7
      000020 34 FF            [12]  146 	addc	a,#0xFF
      000022 FF               [12]  147 	mov	r7,a
                                    148 ;	_free.c:138: cur_header = _sdcc_first_memheader;
      000023 90r00r00         [24]  149 	mov	dptr,#__sdcc_first_memheader
      000026 E0               [24]  150 	movx	a,@dptr
      000027 FC               [12]  151 	mov	r4,a
      000028 A3               [24]  152 	inc	dptr
      000029 E0               [24]  153 	movx	a,@dptr
      00002A FD               [12]  154 	mov	r5,a
      00002B 90r00r04         [24]  155 	mov	dptr,#__sdcc_find_memheader_cur_header_1_6
      00002E EC               [12]  156 	mov	a,r4
      00002F F0               [24]  157 	movx	@dptr,a
      000030 ED               [12]  158 	mov	a,r5
      000031 A3               [24]  159 	inc	dptr
      000032 F0               [24]  160 	movx	@dptr,a
                                    161 ;	_free.c:139: _sdcc_prev_memheader = NULL;
      000033 90r00r00         [24]  162 	mov	dptr,#__sdcc_prev_memheader
      000036 E4               [12]  163 	clr	a
      000037 F0               [24]  164 	movx	@dptr,a
      000038 A3               [24]  165 	inc	dptr
      000039 F0               [24]  166 	movx	@dptr,a
                                    167 ;	_free.c:140: while (cur_header && pthis != cur_header)
      00003A                        168 00104$:
      00003A 90r00r04         [24]  169 	mov	dptr,#__sdcc_find_memheader_cur_header_1_6
      00003D E0               [24]  170 	movx	a,@dptr
      00003E FC               [12]  171 	mov	r4,a
      00003F A3               [24]  172 	inc	dptr
      000040 E0               [24]  173 	movx	a,@dptr
      000041 FD               [12]  174 	mov	r5,a
      000042 4C               [12]  175 	orl	a,r4
      000043 60 25            [24]  176 	jz	00106$
      000045 EE               [12]  177 	mov	a,r6
      000046 B5 04 06         [24]  178 	cjne	a,ar4,00123$
      000049 EF               [12]  179 	mov	a,r7
      00004A B5 05 02         [24]  180 	cjne	a,ar5,00123$
      00004D 80 1B            [24]  181 	sjmp	00106$
      00004F                        182 00123$:
                                    183 ;	_free.c:142: _sdcc_prev_memheader = cur_header;
      00004F 90r00r00         [24]  184 	mov	dptr,#__sdcc_prev_memheader
      000052 EC               [12]  185 	mov	a,r4
      000053 F0               [24]  186 	movx	@dptr,a
      000054 ED               [12]  187 	mov	a,r5
      000055 A3               [24]  188 	inc	dptr
      000056 F0               [24]  189 	movx	@dptr,a
                                    190 ;	_free.c:143: cur_header = cur_header->next;
      000057 8C 82            [24]  191 	mov	dpl,r4
      000059 8D 83            [24]  192 	mov	dph,r5
      00005B E0               [24]  193 	movx	a,@dptr
      00005C FC               [12]  194 	mov	r4,a
      00005D A3               [24]  195 	inc	dptr
      00005E E0               [24]  196 	movx	a,@dptr
      00005F FD               [12]  197 	mov	r5,a
      000060 90r00r04         [24]  198 	mov	dptr,#__sdcc_find_memheader_cur_header_1_6
      000063 EC               [12]  199 	mov	a,r4
      000064 F0               [24]  200 	movx	@dptr,a
      000065 ED               [12]  201 	mov	a,r5
      000066 A3               [24]  202 	inc	dptr
      000067 F0               [24]  203 	movx	@dptr,a
      000068 80 D0            [24]  204 	sjmp	00104$
      00006A                        205 00106$:
                                    206 ;	_free.c:145: return (cur_header);
      00006A 90r00r04         [24]  207 	mov	dptr,#__sdcc_find_memheader_cur_header_1_6
      00006D E0               [24]  208 	movx	a,@dptr
      00006E FE               [12]  209 	mov	r6,a
      00006F A3               [24]  210 	inc	dptr
      000070 E0               [24]  211 	movx	a,@dptr
      000071 FF               [12]  212 	mov	r7,a
      000072 8E 82            [24]  213 	mov	dpl,r6
      000074 8F 83            [24]  214 	mov	dph,r7
      000076                        215 00107$:
      000076 02r00r00         [24]  216 	ljmp	__sdcc_banked_ret
                                    217 ;------------------------------------------------------------
                                    218 ;Allocation info for local variables in function 'free'
                                    219 ;------------------------------------------------------------
                                    220 ;p                         Allocated with name '_free_p_1_8'
                                    221 ;pthis                     Allocated with name '_free_pthis_1_9'
                                    222 ;------------------------------------------------------------
                                    223 ;	_free.c:148: void free (void * p)
                                    224 ;	-----------------------------------------
                                    225 ;	 function free
                                    226 ;	-----------------------------------------
      000079                        227 _free:
      000079 AF F0            [24]  228 	mov	r7,b
      00007B AE 83            [24]  229 	mov	r6,dph
      00007D E5 82            [12]  230 	mov	a,dpl
      00007F 90r00r06         [24]  231 	mov	dptr,#_free_p_1_8
      000082 F0               [24]  232 	movx	@dptr,a
      000083 EE               [12]  233 	mov	a,r6
      000084 A3               [24]  234 	inc	dptr
      000085 F0               [24]  235 	movx	@dptr,a
      000086 EF               [12]  236 	mov	a,r7
      000087 A3               [24]  237 	inc	dptr
      000088 F0               [24]  238 	movx	@dptr,a
                                    239 ;	_free.c:154: pthis = _sdcc_find_memheader(p);
      000089 90r00r06         [24]  240 	mov	dptr,#_free_p_1_8
      00008C E0               [24]  241 	movx	a,@dptr
      00008D FD               [12]  242 	mov	r5,a
      00008E A3               [24]  243 	inc	dptr
      00008F E0               [24]  244 	movx	a,@dptr
      000090 FE               [12]  245 	mov	r6,a
      000091 A3               [24]  246 	inc	dptr
      000092 E0               [24]  247 	movx	a,@dptr
      000093 8D 82            [24]  248 	mov	dpl,r5
      000095 8E 83            [24]  249 	mov	dph,r6
      000097 78r00            [12]  250 	mov	r0,#__sdcc_find_memheader
      000099 79s00            [12]  251 	mov	r1,#(__sdcc_find_memheader >> 8)
      00009B 7As00            [12]  252 	mov	r2,#(__sdcc_find_memheader >> 16)
      00009D 12r00r00         [24]  253 	lcall	__sdcc_banked_call
      0000A0 AE 82            [24]  254 	mov	r6,dpl
      0000A2 AF 83            [24]  255 	mov	r7,dph
                                    256 ;	_free.c:155: if (pthis) //For allocated pointers only!
      0000A4 EE               [12]  257 	mov	a,r6
      0000A5 4F               [12]  258 	orl	a,r7
      0000A6 60 29            [24]  259 	jz	00106$
                                    260 ;	_free.c:157: if (!_sdcc_prev_memheader)
      0000A8 90r00r00         [24]  261 	mov	dptr,#__sdcc_prev_memheader
      0000AB E0               [24]  262 	movx	a,@dptr
      0000AC FC               [12]  263 	mov	r4,a
      0000AD A3               [24]  264 	inc	dptr
      0000AE E0               [24]  265 	movx	a,@dptr
      0000AF FD               [12]  266 	mov	r5,a
      0000B0 4C               [12]  267 	orl	a,r4
      0000B1 70 0C            [24]  268 	jnz	00102$
                                    269 ;	_free.c:159: pthis->len = 0;
      0000B3 8E 82            [24]  270 	mov	dpl,r6
      0000B5 8F 83            [24]  271 	mov	dph,r7
      0000B7 A3               [24]  272 	inc	dptr
      0000B8 A3               [24]  273 	inc	dptr
      0000B9 E4               [12]  274 	clr	a
      0000BA F0               [24]  275 	movx	@dptr,a
      0000BB A3               [24]  276 	inc	dptr
      0000BC F0               [24]  277 	movx	@dptr,a
      0000BD 80 12            [24]  278 	sjmp	00106$
      0000BF                        279 00102$:
                                    280 ;	_free.c:163: _sdcc_prev_memheader->next = pthis->next;
      0000BF 8E 82            [24]  281 	mov	dpl,r6
      0000C1 8F 83            [24]  282 	mov	dph,r7
      0000C3 E0               [24]  283 	movx	a,@dptr
      0000C4 FE               [12]  284 	mov	r6,a
      0000C5 A3               [24]  285 	inc	dptr
      0000C6 E0               [24]  286 	movx	a,@dptr
      0000C7 FF               [12]  287 	mov	r7,a
      0000C8 8C 82            [24]  288 	mov	dpl,r4
      0000CA 8D 83            [24]  289 	mov	dph,r5
      0000CC EE               [12]  290 	mov	a,r6
      0000CD F0               [24]  291 	movx	@dptr,a
      0000CE EF               [12]  292 	mov	a,r7
      0000CF A3               [24]  293 	inc	dptr
      0000D0 F0               [24]  294 	movx	@dptr,a
      0000D1                        295 00106$:
      0000D1 02r00r00         [24]  296 	ljmp	__sdcc_banked_ret
                                    297 	.area CSEG    (CODE)
                                    298 	.area CONST   (CODE)
                                    299 	.area XINIT   (CODE)
                                    300 	.area CABS    (ABS,CODE)
