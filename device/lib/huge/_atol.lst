                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:00 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _atol
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _atol
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
      000000                         32 _atol_sloc0_1_0:
      000000                         33 	.ds 3
      000003                         34 _atol_sloc1_1_0:
      000003                         35 	.ds 3
      000006                         36 _atol_sloc2_1_0:
      000006                         37 	.ds 4
                                     38 ;--------------------------------------------------------
                                     39 ; overlayable items in internal ram 
                                     40 ;--------------------------------------------------------
                                     41 ;--------------------------------------------------------
                                     42 ; indirectly addressable internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area ISEG    (DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; absolute internal ram data
                                     47 ;--------------------------------------------------------
                                     48 	.area IABS    (ABS,DATA)
                                     49 	.area IABS    (ABS,DATA)
                                     50 ;--------------------------------------------------------
                                     51 ; bit data
                                     52 ;--------------------------------------------------------
                                     53 	.area BSEG    (BIT)
                                     54 ;--------------------------------------------------------
                                     55 ; paged external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area PSEG    (PAG,XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XSEG    (XDATA)
      000000                         62 _atol_s_1_1:
      000000                         63 	.ds 3
                                     64 ;--------------------------------------------------------
                                     65 ; absolute external ram data
                                     66 ;--------------------------------------------------------
                                     67 	.area XABS    (ABS,XDATA)
                                     68 ;--------------------------------------------------------
                                     69 ; external initialized ram data
                                     70 ;--------------------------------------------------------
                                     71 	.area XISEG   (XDATA)
                                     72 	.area HOME    (CODE)
                                     73 	.area GSINIT0 (CODE)
                                     74 	.area GSINIT1 (CODE)
                                     75 	.area GSINIT2 (CODE)
                                     76 	.area GSINIT3 (CODE)
                                     77 	.area GSINIT4 (CODE)
                                     78 	.area GSINIT5 (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 	.area GSFINAL (CODE)
                                     81 	.area CSEG    (CODE)
                                     82 ;--------------------------------------------------------
                                     83 ; global & static initialisations
                                     84 ;--------------------------------------------------------
                                     85 	.area HOME    (CODE)
                                     86 	.area GSINIT  (CODE)
                                     87 	.area GSFINAL (CODE)
                                     88 	.area GSINIT  (CODE)
                                     89 ;--------------------------------------------------------
                                     90 ; Home
                                     91 ;--------------------------------------------------------
                                     92 	.area HOME    (CODE)
                                     93 	.area HOME    (CODE)
                                     94 ;--------------------------------------------------------
                                     95 ; code
                                     96 ;--------------------------------------------------------
                                     97 	.area CSEG    (CODE)
                                     98 ;------------------------------------------------------------
                                     99 ;Allocation info for local variables in function 'atol'
                                    100 ;------------------------------------------------------------
                                    101 ;rv                        Allocated to registers r4 r5 r6 r7 
                                    102 ;sign                      Allocated to registers r1 
                                    103 ;sloc0                     Allocated with name '_atol_sloc0_1_0'
                                    104 ;sloc1                     Allocated with name '_atol_sloc1_1_0'
                                    105 ;sloc2                     Allocated with name '_atol_sloc2_1_0'
                                    106 ;s                         Allocated with name '_atol_s_1_1'
                                    107 ;------------------------------------------------------------
                                    108 ;	_atol.c:29: long atol(char * s)
                                    109 ;	-----------------------------------------
                                    110 ;	 function atol
                                    111 ;	-----------------------------------------
      000000                        112 _atol:
                           000007   113 	ar7 = 0x07
                           000006   114 	ar6 = 0x06
                           000005   115 	ar5 = 0x05
                           000004   116 	ar4 = 0x04
                           000003   117 	ar3 = 0x03
                           000002   118 	ar2 = 0x02
                           000001   119 	ar1 = 0x01
                           000000   120 	ar0 = 0x00
      000000 AF F0            [24]  121 	mov	r7,b
      000002 AE 83            [24]  122 	mov	r6,dph
      000004 E5 82            [12]  123 	mov	a,dpl
      000006 90r00r00         [24]  124 	mov	dptr,#_atol_s_1_1
      000009 F0               [24]  125 	movx	@dptr,a
      00000A EE               [12]  126 	mov	a,r6
      00000B A3               [24]  127 	inc	dptr
      00000C F0               [24]  128 	movx	@dptr,a
      00000D EF               [12]  129 	mov	a,r7
      00000E A3               [24]  130 	inc	dptr
      00000F F0               [24]  131 	movx	@dptr,a
                                    132 ;	_atol.c:31: register long rv=0; 
      000010 7C 00            [12]  133 	mov	r4,#0x00
      000012 7D 00            [12]  134 	mov	r5,#0x00
      000014 7E 00            [12]  135 	mov	r6,#0x00
      000016 7F 00            [12]  136 	mov	r7,#0x00
                                    137 ;	_atol.c:35: while (*s) {
      000018 90r00r00         [24]  138 	mov	dptr,#_atol_s_1_1
      00001B E0               [24]  139 	movx	a,@dptr
      00001C F9               [12]  140 	mov	r1,a
      00001D A3               [24]  141 	inc	dptr
      00001E E0               [24]  142 	movx	a,@dptr
      00001F FA               [12]  143 	mov	r2,a
      000020 A3               [24]  144 	inc	dptr
      000021 E0               [24]  145 	movx	a,@dptr
      000022 FB               [12]  146 	mov	r3,a
      000023                        147 00107$:
      000023 89 82            [24]  148 	mov	dpl,r1
      000025 8A 83            [24]  149 	mov	dph,r2
      000027 8B F0            [24]  150 	mov	b,r3
      000029 12r00r00         [24]  151 	lcall	__gptrget
      00002C F8               [12]  152 	mov	r0,a
      00002D 60 39            [24]  153 	jz	00133$
                                    154 ;	_atol.c:36: if (*s <= '9' && *s >= '0')
      00002F C3               [12]  155 	clr	c
      000030 74 B9            [12]  156 	mov	a,#(0x39 ^ 0x80)
      000032 88 F0            [24]  157 	mov	b,r0
      000034 63 F0 80         [24]  158 	xrl	b,#0x80
      000037 95 F0            [12]  159 	subb	a,b
      000039 40 07            [24]  160 	jc	00102$
      00003B E8               [12]  161 	mov	a,r0
      00003C 64 80            [12]  162 	xrl	a,#0x80
      00003E 94 B0            [12]  163 	subb	a,#0xb0
      000040 50 26            [24]  164 	jnc	00133$
                                    165 ;	_atol.c:37: break;
      000042                        166 00102$:
                                    167 ;	_atol.c:38: if (*s == '-' || *s == '+') 
      000042 89 82            [24]  168 	mov	dpl,r1
      000044 8A 83            [24]  169 	mov	dph,r2
      000046 8B F0            [24]  170 	mov	b,r3
      000048 12r00r00         [24]  171 	lcall	__gptrget
      00004B F8               [12]  172 	mov	r0,a
      00004C B8 2D 02         [24]  173 	cjne	r0,#0x2D,00160$
      00004F 80 17            [24]  174 	sjmp	00133$
      000051                        175 00160$:
      000051 B8 2B 02         [24]  176 	cjne	r0,#0x2B,00161$
      000054 80 12            [24]  177 	sjmp	00133$
      000056                        178 00161$:
                                    179 ;	_atol.c:40: s++;
      000056 09               [12]  180 	inc	r1
      000057 B9 00 01         [24]  181 	cjne	r1,#0x00,00162$
      00005A 0A               [12]  182 	inc	r2
      00005B                        183 00162$:
      00005B 90r00r00         [24]  184 	mov	dptr,#_atol_s_1_1
      00005E E9               [12]  185 	mov	a,r1
      00005F F0               [24]  186 	movx	@dptr,a
      000060 EA               [12]  187 	mov	a,r2
      000061 A3               [24]  188 	inc	dptr
      000062 F0               [24]  189 	movx	@dptr,a
      000063 EB               [12]  190 	mov	a,r3
      000064 A3               [24]  191 	inc	dptr
      000065 F0               [24]  192 	movx	@dptr,a
      000066 80 BB            [24]  193 	sjmp	00107$
      000068                        194 00133$:
      000068 90r00r00         [24]  195 	mov	dptr,#_atol_s_1_1
      00006B E9               [12]  196 	mov	a,r1
      00006C F0               [24]  197 	movx	@dptr,a
      00006D EA               [12]  198 	mov	a,r2
      00006E A3               [24]  199 	inc	dptr
      00006F F0               [24]  200 	movx	@dptr,a
      000070 EB               [12]  201 	mov	a,r3
      000071 A3               [24]  202 	inc	dptr
      000072 F0               [24]  203 	movx	@dptr,a
                                    204 ;	_atol.c:43: sign = (*s == '-');
      000073 89*00            [24]  205 	mov	_atol_sloc0_1_0,r1
      000075 8A*01            [24]  206 	mov	(_atol_sloc0_1_0 + 1),r2
      000077 8B*02            [24]  207 	mov	(_atol_sloc0_1_0 + 2),r3
      000079 89 82            [24]  208 	mov	dpl,r1
      00007B 8A 83            [24]  209 	mov	dph,r2
      00007D 8B F0            [24]  210 	mov	b,r3
      00007F 12r00r00         [24]  211 	lcall	__gptrget
      000082 FB               [12]  212 	mov	r3,a
      000083 E4               [12]  213 	clr	a
      000084 BB 2D 01         [24]  214 	cjne	r3,#0x2D,00163$
      000087 04               [12]  215 	inc	a
      000088                        216 00163$:
                                    217 ;	_atol.c:44: if (*s == '-' || *s == '+') s++;
      000088 FA               [12]  218 	mov	r2,a
      000089 F9               [12]  219 	mov	r1,a
      00008A 70 03            [24]  220 	jnz	00110$
      00008C BB 2B 11         [24]  221 	cjne	r3,#0x2B,00131$
      00008F                        222 00110$:
      00008F 90r00r00         [24]  223 	mov	dptr,#_atol_s_1_1
      000092 74 01            [12]  224 	mov	a,#0x01
      000094 25*00            [12]  225 	add	a,_atol_sloc0_1_0
      000096 F0               [24]  226 	movx	@dptr,a
      000097 E4               [12]  227 	clr	a
      000098 35*01            [12]  228 	addc	a,(_atol_sloc0_1_0 + 1)
      00009A A3               [24]  229 	inc	dptr
      00009B F0               [24]  230 	movx	@dptr,a
      00009C E5*02            [12]  231 	mov	a,(_atol_sloc0_1_0 + 2)
      00009E A3               [24]  232 	inc	dptr
      00009F F0               [24]  233 	movx	@dptr,a
                                    234 ;	_atol.c:46: while (*s && *s >= '0' && *s <= '9') {
      0000A0                        235 00131$:
      0000A0 90r00r00         [24]  236 	mov	dptr,#_atol_s_1_1
      0000A3 E0               [24]  237 	movx	a,@dptr
      0000A4 F5*03            [12]  238 	mov	_atol_sloc1_1_0,a
      0000A6 A3               [24]  239 	inc	dptr
      0000A7 E0               [24]  240 	movx	a,@dptr
      0000A8 F5*04            [12]  241 	mov	(_atol_sloc1_1_0 + 1),a
      0000AA A3               [24]  242 	inc	dptr
      0000AB E0               [24]  243 	movx	a,@dptr
      0000AC F5*05            [12]  244 	mov	(_atol_sloc1_1_0 + 2),a
      0000AE                        245 00115$:
      0000AE 85*03 82         [24]  246 	mov	dpl,_atol_sloc1_1_0
      0000B1 85*04 83         [24]  247 	mov	dph,(_atol_sloc1_1_0 + 1)
      0000B4 85*05 F0         [24]  248 	mov	b,(_atol_sloc1_1_0 + 2)
      0000B7 12r00r00         [24]  249 	lcall	__gptrget
      0000BA F5*00            [12]  250 	mov	_atol_sloc0_1_0,a
      0000BC 70 03            [24]  251 	jnz	00168$
      0000BE 02r01r45         [24]  252 	ljmp	00134$
      0000C1                        253 00168$:
      0000C1 C3               [12]  254 	clr	c
      0000C2 E5*00            [12]  255 	mov	a,_atol_sloc0_1_0
      0000C4 64 80            [12]  256 	xrl	a,#0x80
      0000C6 94 B0            [12]  257 	subb	a,#0xb0
      0000C8 50 03            [24]  258 	jnc	00169$
      0000CA 02r01r45         [24]  259 	ljmp	00134$
      0000CD                        260 00169$:
      0000CD C3               [12]  261 	clr	c
      0000CE 74 B9            [12]  262 	mov	a,#(0x39 ^ 0x80)
      0000D0 85*00 F0         [24]  263 	mov	b,_atol_sloc0_1_0
      0000D3 63 F0 80         [24]  264 	xrl	b,#0x80
      0000D6 95 F0            [12]  265 	subb	a,b
      0000D8 40 6B            [24]  266 	jc	00134$
                                    267 ;	_atol.c:47: rv = (rv * 10) + (*s - '0');
      0000DA C0 01            [24]  268 	push	ar1
      0000DC 90r00r00         [24]  269 	mov	dptr,#__mullong_PARM_2
      0000DF EC               [12]  270 	mov	a,r4
      0000E0 F0               [24]  271 	movx	@dptr,a
      0000E1 ED               [12]  272 	mov	a,r5
      0000E2 A3               [24]  273 	inc	dptr
      0000E3 F0               [24]  274 	movx	@dptr,a
      0000E4 EE               [12]  275 	mov	a,r6
      0000E5 A3               [24]  276 	inc	dptr
      0000E6 F0               [24]  277 	movx	@dptr,a
      0000E7 EF               [12]  278 	mov	a,r7
      0000E8 A3               [24]  279 	inc	dptr
      0000E9 F0               [24]  280 	movx	@dptr,a
      0000EA 90 00 0A         [24]  281 	mov	dptr,#(0x0A&0x00ff)
      0000ED E4               [12]  282 	clr	a
      0000EE F5 F0            [12]  283 	mov	b,a
      0000F0 C0 01            [24]  284 	push	ar1
      0000F2 12r00r00         [24]  285 	lcall	__mullong
      0000F5 85 82*06         [24]  286 	mov	_atol_sloc2_1_0,dpl
      0000F8 85 83*07         [24]  287 	mov	(_atol_sloc2_1_0 + 1),dph
      0000FB 85 F0*08         [24]  288 	mov	(_atol_sloc2_1_0 + 2),b
      0000FE F5*09            [12]  289 	mov	(_atol_sloc2_1_0 + 3),a
      000100 D0 01            [24]  290 	pop	ar1
      000102 E5*00            [12]  291 	mov	a,_atol_sloc0_1_0
      000104 FA               [12]  292 	mov	r2,a
      000105 33               [12]  293 	rlc	a
      000106 95 E0            [12]  294 	subb	a,acc
      000108 FB               [12]  295 	mov	r3,a
      000109 EA               [12]  296 	mov	a,r2
      00010A 24 D0            [12]  297 	add	a,#0xD0
      00010C FA               [12]  298 	mov	r2,a
      00010D EB               [12]  299 	mov	a,r3
      00010E 34 FF            [12]  300 	addc	a,#0xFF
      000110 FB               [12]  301 	mov	r3,a
      000111 8A 00            [24]  302 	mov	ar0,r2
      000113 EB               [12]  303 	mov	a,r3
      000114 F9               [12]  304 	mov	r1,a
      000115 33               [12]  305 	rlc	a
      000116 95 E0            [12]  306 	subb	a,acc
      000118 FA               [12]  307 	mov	r2,a
      000119 FB               [12]  308 	mov	r3,a
      00011A E8               [12]  309 	mov	a,r0
      00011B 25*06            [12]  310 	add	a,_atol_sloc2_1_0
      00011D FC               [12]  311 	mov	r4,a
      00011E E9               [12]  312 	mov	a,r1
      00011F 35*07            [12]  313 	addc	a,(_atol_sloc2_1_0 + 1)
      000121 FD               [12]  314 	mov	r5,a
      000122 EA               [12]  315 	mov	a,r2
      000123 35*08            [12]  316 	addc	a,(_atol_sloc2_1_0 + 2)
      000125 FE               [12]  317 	mov	r6,a
      000126 EB               [12]  318 	mov	a,r3
      000127 35*09            [12]  319 	addc	a,(_atol_sloc2_1_0 + 3)
      000129 FF               [12]  320 	mov	r7,a
                                    321 ;	_atol.c:48: s++;
      00012A 05*03            [12]  322 	inc	_atol_sloc1_1_0
      00012C E4               [12]  323 	clr	a
      00012D B5*03 02         [24]  324 	cjne	a,_atol_sloc1_1_0,00171$
      000130 05*04            [12]  325 	inc	(_atol_sloc1_1_0 + 1)
      000132                        326 00171$:
      000132 90r00r00         [24]  327 	mov	dptr,#_atol_s_1_1
      000135 E5*03            [12]  328 	mov	a,_atol_sloc1_1_0
      000137 F0               [24]  329 	movx	@dptr,a
      000138 E5*04            [12]  330 	mov	a,(_atol_sloc1_1_0 + 1)
      00013A A3               [24]  331 	inc	dptr
      00013B F0               [24]  332 	movx	@dptr,a
      00013C E5*05            [12]  333 	mov	a,(_atol_sloc1_1_0 + 2)
      00013E A3               [24]  334 	inc	dptr
      00013F F0               [24]  335 	movx	@dptr,a
      000140 D0 01            [24]  336 	pop	ar1
      000142 02r00rAE         [24]  337 	ljmp	00115$
      000145                        338 00134$:
      000145 90r00r00         [24]  339 	mov	dptr,#_atol_s_1_1
      000148 E5*03            [12]  340 	mov	a,_atol_sloc1_1_0
      00014A F0               [24]  341 	movx	@dptr,a
      00014B E5*04            [12]  342 	mov	a,(_atol_sloc1_1_0 + 1)
      00014D A3               [24]  343 	inc	dptr
      00014E F0               [24]  344 	movx	@dptr,a
      00014F E5*05            [12]  345 	mov	a,(_atol_sloc1_1_0 + 2)
      000151 A3               [24]  346 	inc	dptr
      000152 F0               [24]  347 	movx	@dptr,a
                                    348 ;	_atol.c:51: return (sign ? -rv : rv);
      000153 E9               [12]  349 	mov	a,r1
      000154 60 0F            [24]  350 	jz	00120$
      000156 C3               [12]  351 	clr	c
      000157 E4               [12]  352 	clr	a
      000158 9C               [12]  353 	subb	a,r4
      000159 F8               [12]  354 	mov	r0,a
      00015A E4               [12]  355 	clr	a
      00015B 9D               [12]  356 	subb	a,r5
      00015C F9               [12]  357 	mov	r1,a
      00015D E4               [12]  358 	clr	a
      00015E 9E               [12]  359 	subb	a,r6
      00015F FA               [12]  360 	mov	r2,a
      000160 E4               [12]  361 	clr	a
      000161 9F               [12]  362 	subb	a,r7
      000162 FB               [12]  363 	mov	r3,a
      000163 80 08            [24]  364 	sjmp	00121$
      000165                        365 00120$:
      000165 8C 00            [24]  366 	mov	ar0,r4
      000167 8D 01            [24]  367 	mov	ar1,r5
      000169 8E 02            [24]  368 	mov	ar2,r6
      00016B 8F 03            [24]  369 	mov	ar3,r7
      00016D                        370 00121$:
      00016D 88 82            [24]  371 	mov	dpl,r0
      00016F 89 83            [24]  372 	mov	dph,r1
      000171 8A F0            [24]  373 	mov	b,r2
      000173 EB               [12]  374 	mov	a,r3
      000174 02r00r00         [24]  375 	ljmp	__sdcc_banked_ret
                                    376 	.area CSEG    (CODE)
                                    377 	.area CONST   (CODE)
                                    378 	.area XINIT   (CODE)
                                    379 	.area CABS    (ABS,CODE)
