                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:07 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _mulint
                                      7 	.optsdcc -mmcs51 --model-medium
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl __mulint
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram 
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
                                     48 ;--------------------------------------------------------
                                     49 ; paged external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area PSEG    (PAG,XDATA)
                                     52 ;--------------------------------------------------------
                                     53 ; external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area XSEG    (XDATA)
                                     56 ;--------------------------------------------------------
                                     57 ; absolute external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XABS    (ABS,XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; external initialized ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XISEG   (XDATA)
                                     64 	.area HOME    (CODE)
                                     65 	.area GSINIT0 (CODE)
                                     66 	.area GSINIT1 (CODE)
                                     67 	.area GSINIT2 (CODE)
                                     68 	.area GSINIT3 (CODE)
                                     69 	.area GSINIT4 (CODE)
                                     70 	.area GSINIT5 (CODE)
                                     71 	.area GSINIT  (CODE)
                                     72 	.area GSFINAL (CODE)
                                     73 	.area CSEG    (CODE)
                                     74 ;--------------------------------------------------------
                                     75 ; global & static initialisations
                                     76 ;--------------------------------------------------------
                                     77 	.area HOME    (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; Home
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area HOME    (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; code
                                     88 ;--------------------------------------------------------
                                     89 	.area CSEG    (CODE)
                                     90 ;------------------------------------------------------------
                                     91 ;Allocation info for local variables in function '_mulint'
                                     92 ;------------------------------------------------------------
                                     93 ;b                         Allocated to stack - _bp -4
                                     94 ;a                         Allocated to stack - _bp +1
                                     95 ;x                         Allocated to stack - _bp +3
                                     96 ;y                         Allocated to stack - _bp +6
                                     97 ;t                         Allocated to stack - _bp +9
                                     98 ;------------------------------------------------------------
                                     99 ;	_mulint.c:226: _mulint (int a, int b)
                                    100 ;	-----------------------------------------
                                    101 ;	 function _mulint
                                    102 ;	-----------------------------------------
      000000                        103 __mulint:
                           000007   104 	ar7 = 0x07
                           000006   105 	ar6 = 0x06
                           000005   106 	ar5 = 0x05
                           000004   107 	ar4 = 0x04
                           000003   108 	ar3 = 0x03
                           000002   109 	ar2 = 0x02
                           000001   110 	ar1 = 0x01
                           000000   111 	ar0 = 0x00
      000000 C0*00            [24]  112 	push	_bp
      000002 85 81*00         [24]  113 	mov	_bp,sp
      000005 C0 82            [24]  114 	push	dpl
      000007 C0 83            [24]  115 	push	dph
      000009 E5 81            [12]  116 	mov	a,sp
      00000B 24 08            [12]  117 	add	a,#0x08
      00000D F5 81            [12]  118 	mov	sp,a
                                    119 ;	_mulint.c:238: x = (union uu *)&a;
      00000F AF*00            [24]  120 	mov	r7,_bp
      000011 0F               [12]  121 	inc	r7
      000012 E5*00            [12]  122 	mov	a,_bp
      000014 24 03            [12]  123 	add	a,#0x03
      000016 F8               [12]  124 	mov	r0,a
      000017 A6 07            [24]  125 	mov	@r0,ar7
      000019 08               [12]  126 	inc	r0
      00001A 76 00            [12]  127 	mov	@r0,#0x00
      00001C 08               [12]  128 	inc	r0
      00001D 76 40            [12]  129 	mov	@r0,#0x40
                                    130 ;	_mulint.c:239: y = (union uu *)&b;
      00001F E5*00            [12]  131 	mov	a,_bp
      000021 24 FC            [12]  132 	add	a,#0xFC
      000023 FC               [12]  133 	mov	r4,a
      000024 E5*00            [12]  134 	mov	a,_bp
      000026 24 06            [12]  135 	add	a,#0x06
      000028 F8               [12]  136 	mov	r0,a
      000029 A6 04            [24]  137 	mov	@r0,ar4
      00002B 08               [12]  138 	inc	r0
      00002C 76 00            [12]  139 	mov	@r0,#0x00
      00002E 08               [12]  140 	inc	r0
      00002F 76 40            [12]  141 	mov	@r0,#0x40
                                    142 ;	_mulint.c:242: t.t = x->s.lo * y->s.lo;
      000031 E5*00            [12]  143 	mov	a,_bp
      000033 24 09            [12]  144 	add	a,#0x09
      000035 F9               [12]  145 	mov	r1,a
      000036 E5*00            [12]  146 	mov	a,_bp
      000038 24 03            [12]  147 	add	a,#0x03
      00003A F8               [12]  148 	mov	r0,a
      00003B 86 82            [24]  149 	mov	dpl,@r0
      00003D 08               [12]  150 	inc	r0
      00003E 86 83            [24]  151 	mov	dph,@r0
      000040 08               [12]  152 	inc	r0
      000041 86 F0            [24]  153 	mov	b,@r0
      000043 12r00r00         [24]  154 	lcall	__gptrget
      000046 FC               [12]  155 	mov	r4,a
      000047 E5*00            [12]  156 	mov	a,_bp
      000049 24 06            [12]  157 	add	a,#0x06
      00004B F8               [12]  158 	mov	r0,a
      00004C 86 82            [24]  159 	mov	dpl,@r0
      00004E 08               [12]  160 	inc	r0
      00004F 86 83            [24]  161 	mov	dph,@r0
      000051 08               [12]  162 	inc	r0
      000052 86 F0            [24]  163 	mov	b,@r0
      000054 12r00r00         [24]  164 	lcall	__gptrget
      000057 8C F0            [24]  165 	mov	b,r4
      000059 A4               [48]  166 	mul	ab
      00005A F7               [12]  167 	mov	@r1,a
      00005B 09               [12]  168 	inc	r1
      00005C A7 F0            [24]  169 	mov	@r1,b
                                    170 ;	_mulint.c:243: t.s.hi += (x->s.lo * y->s.hi) + (x->s.hi * y->s.lo);
      00005E E5*00            [12]  171 	mov	a,_bp
      000060 24 09            [12]  172 	add	a,#0x09
      000062 04               [12]  173 	inc	a
      000063 F9               [12]  174 	mov	r1,a
      000064 87 04            [24]  175 	mov	ar4,@r1
      000066 E5*00            [12]  176 	mov	a,_bp
      000068 24 03            [12]  177 	add	a,#0x03
      00006A F8               [12]  178 	mov	r0,a
      00006B 86 82            [24]  179 	mov	dpl,@r0
      00006D 08               [12]  180 	inc	r0
      00006E 86 83            [24]  181 	mov	dph,@r0
      000070 08               [12]  182 	inc	r0
      000071 86 F0            [24]  183 	mov	b,@r0
      000073 12r00r00         [24]  184 	lcall	__gptrget
      000076 FB               [12]  185 	mov	r3,a
      000077 E5*00            [12]  186 	mov	a,_bp
      000079 24 06            [12]  187 	add	a,#0x06
      00007B F8               [12]  188 	mov	r0,a
      00007C 74 01            [12]  189 	mov	a,#0x01
      00007E 26               [12]  190 	add	a,@r0
      00007F FA               [12]  191 	mov	r2,a
      000080 E4               [12]  192 	clr	a
      000081 08               [12]  193 	inc	r0
      000082 36               [12]  194 	addc	a,@r0
      000083 FE               [12]  195 	mov	r6,a
      000084 08               [12]  196 	inc	r0
      000085 86 07            [24]  197 	mov	ar7,@r0
      000087 8A 82            [24]  198 	mov	dpl,r2
      000089 8E 83            [24]  199 	mov	dph,r6
      00008B 8F F0            [24]  200 	mov	b,r7
      00008D 12r00r00         [24]  201 	lcall	__gptrget
      000090 8B F0            [24]  202 	mov	b,r3
      000092 A4               [48]  203 	mul	ab
      000093 FB               [12]  204 	mov	r3,a
      000094 E5*00            [12]  205 	mov	a,_bp
      000096 24 03            [12]  206 	add	a,#0x03
      000098 F8               [12]  207 	mov	r0,a
      000099 74 01            [12]  208 	mov	a,#0x01
      00009B 26               [12]  209 	add	a,@r0
      00009C FD               [12]  210 	mov	r5,a
      00009D E4               [12]  211 	clr	a
      00009E 08               [12]  212 	inc	r0
      00009F 36               [12]  213 	addc	a,@r0
      0000A0 FE               [12]  214 	mov	r6,a
      0000A1 08               [12]  215 	inc	r0
      0000A2 86 07            [24]  216 	mov	ar7,@r0
      0000A4 8D 82            [24]  217 	mov	dpl,r5
      0000A6 8E 83            [24]  218 	mov	dph,r6
      0000A8 8F F0            [24]  219 	mov	b,r7
      0000AA 12r00r00         [24]  220 	lcall	__gptrget
      0000AD FD               [12]  221 	mov	r5,a
      0000AE E5*00            [12]  222 	mov	a,_bp
      0000B0 24 06            [12]  223 	add	a,#0x06
      0000B2 F8               [12]  224 	mov	r0,a
      0000B3 86 82            [24]  225 	mov	dpl,@r0
      0000B5 08               [12]  226 	inc	r0
      0000B6 86 83            [24]  227 	mov	dph,@r0
      0000B8 08               [12]  228 	inc	r0
      0000B9 86 F0            [24]  229 	mov	b,@r0
      0000BB 12r00r00         [24]  230 	lcall	__gptrget
      0000BE 8D F0            [24]  231 	mov	b,r5
      0000C0 A4               [48]  232 	mul	ab
      0000C1 2B               [12]  233 	add	a,r3
      0000C2 2C               [12]  234 	add	a,r4
      0000C3 F7               [12]  235 	mov	@r1,a
                                    236 ;	_mulint.c:245: return t.t;
      0000C4 E5*00            [12]  237 	mov	a,_bp
      0000C6 24 09            [12]  238 	add	a,#0x09
      0000C8 F9               [12]  239 	mov	r1,a
      0000C9 87 82            [24]  240 	mov	dpl,@r1
      0000CB 09               [12]  241 	inc	r1
      0000CC 87 83            [24]  242 	mov	dph,@r1
      0000CE 85*00 81         [24]  243 	mov	sp,_bp
      0000D1 D0*00            [24]  244 	pop	_bp
      0000D3 22               [24]  245 	ret
                                    246 	.area CSEG    (CODE)
                                    247 	.area CONST   (CODE)
                                    248 	.area XINIT   (CODE)
                                    249 	.area CABS    (ABS,CODE)
