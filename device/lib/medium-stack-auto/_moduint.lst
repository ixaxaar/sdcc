                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:07 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _moduint
                                      7 	.optsdcc -mmcs51 --model-medium
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl __moduint
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram 
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
                                     48 ;--------------------------------------------------------
                                     49 ; paged external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area PSEG    (PAG,XDATA)
                                     52 ;--------------------------------------------------------
                                     53 ; external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area XSEG    (XDATA)
                                     56 ;--------------------------------------------------------
                                     57 ; absolute external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XABS    (ABS,XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; external initialized ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XISEG   (XDATA)
                                     64 	.area HOME    (CODE)
                                     65 	.area GSINIT0 (CODE)
                                     66 	.area GSINIT1 (CODE)
                                     67 	.area GSINIT2 (CODE)
                                     68 	.area GSINIT3 (CODE)
                                     69 	.area GSINIT4 (CODE)
                                     70 	.area GSINIT5 (CODE)
                                     71 	.area GSINIT  (CODE)
                                     72 	.area GSFINAL (CODE)
                                     73 	.area CSEG    (CODE)
                                     74 ;--------------------------------------------------------
                                     75 ; global & static initialisations
                                     76 ;--------------------------------------------------------
                                     77 	.area HOME    (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; Home
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area HOME    (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; code
                                     88 ;--------------------------------------------------------
                                     89 	.area CSEG    (CODE)
                                     90 ;------------------------------------------------------------
                                     91 ;Allocation info for local variables in function '_moduint'
                                     92 ;------------------------------------------------------------
                                     93 ;b                         Allocated to stack - _bp -4
                                     94 ;a                         Allocated to registers r6 r7 
                                     95 ;count                     Allocated to registers r5 
                                     96 ;------------------------------------------------------------
                                     97 ;	_moduint.c:173: _moduint (unsigned int a, unsigned int b)
                                     98 ;	-----------------------------------------
                                     99 ;	 function _moduint
                                    100 ;	-----------------------------------------
      000000                        101 __moduint:
                           000007   102 	ar7 = 0x07
                           000006   103 	ar6 = 0x06
                           000005   104 	ar5 = 0x05
                           000004   105 	ar4 = 0x04
                           000003   106 	ar3 = 0x03
                           000002   107 	ar2 = 0x02
                           000001   108 	ar1 = 0x01
                           000000   109 	ar0 = 0x00
      000000 C0*00            [24]  110 	push	_bp
      000002 85 81*00         [24]  111 	mov	_bp,sp
      000005 AE 82            [24]  112 	mov	r6,dpl
      000007 AF 83            [24]  113 	mov	r7,dph
                                    114 ;	_moduint.c:175: unsigned char count = 0;
      000009 7D 00            [12]  115 	mov	r5,#0x00
                                    116 ;	_moduint.c:178: while (!MSB_SET(b))
      00000B 7C 00            [12]  117 	mov	r4,#0x00
      00000D                        118 00103$:
      00000D E5*00            [12]  119 	mov	a,_bp
      00000F 24 FC            [12]  120 	add	a,#0xfc
      000011 F8               [12]  121 	mov	r0,a
      000012 08               [12]  122 	inc	r0
      000013 E6               [12]  123 	mov	a,@r0
      000014 23               [12]  124 	rl	a
      000015 54 01            [12]  125 	anl	a,#0x01
      000017 FB               [12]  126 	mov	r3,a
      000018 70 32            [24]  127 	jnz	00117$
                                    128 ;	_moduint.c:180: b <<= 1;
      00001A E5*00            [12]  129 	mov	a,_bp
      00001C 24 FC            [12]  130 	add	a,#0xfc
      00001E F8               [12]  131 	mov	r0,a
      00001F 08               [12]  132 	inc	r0
      000020 E6               [12]  133 	mov	a,@r0
      000021 18               [12]  134 	dec	r0
      000022 C6               [12]  135 	xch	a,@r0
      000023 25 E0            [12]  136 	add	a,acc
      000025 C6               [12]  137 	xch	a,@r0
      000026 33               [12]  138 	rlc	a
      000027 08               [12]  139 	inc	r0
      000028 F6               [12]  140 	mov	@r0,a
                                    141 ;	_moduint.c:181: if (b > a)
      000029 E5*00            [12]  142 	mov	a,_bp
      00002B 24 FC            [12]  143 	add	a,#0xfc
      00002D F8               [12]  144 	mov	r0,a
      00002E C3               [12]  145 	clr	c
      00002F EE               [12]  146 	mov	a,r6
      000030 96               [12]  147 	subb	a,@r0
      000031 EF               [12]  148 	mov	a,r7
      000032 08               [12]  149 	inc	r0
      000033 96               [12]  150 	subb	a,@r0
      000034 50 11            [24]  151 	jnc	00102$
                                    152 ;	_moduint.c:183: b >>=1;
      000036 E5*00            [12]  153 	mov	a,_bp
      000038 24 FC            [12]  154 	add	a,#0xfc
      00003A F8               [12]  155 	mov	r0,a
      00003B 08               [12]  156 	inc	r0
      00003C E6               [12]  157 	mov	a,@r0
      00003D 18               [12]  158 	dec	r0
      00003E C3               [12]  159 	clr	c
      00003F 13               [12]  160 	rrc	a
      000040 C6               [12]  161 	xch	a,@r0
      000041 13               [12]  162 	rrc	a
      000042 C6               [12]  163 	xch	a,@r0
      000043 08               [12]  164 	inc	r0
      000044 F6               [12]  165 	mov	@r0,a
                                    166 ;	_moduint.c:184: break;
      000045 80 05            [24]  167 	sjmp	00117$
      000047                        168 00102$:
                                    169 ;	_moduint.c:186: count++;
      000047 0C               [12]  170 	inc	r4
      000048 8C 05            [24]  171 	mov	ar5,r4
                                    172 ;	_moduint.c:188: do
      00004A 80 C1            [24]  173 	sjmp	00103$
      00004C                        174 00117$:
      00004C                        175 00108$:
                                    176 ;	_moduint.c:190: if (a >= b)
      00004C E5*00            [12]  177 	mov	a,_bp
      00004E 24 FC            [12]  178 	add	a,#0xfc
      000050 F8               [12]  179 	mov	r0,a
      000051 C3               [12]  180 	clr	c
      000052 EE               [12]  181 	mov	a,r6
      000053 96               [12]  182 	subb	a,@r0
      000054 EF               [12]  183 	mov	a,r7
      000055 08               [12]  184 	inc	r0
      000056 96               [12]  185 	subb	a,@r0
      000057 40 0D            [24]  186 	jc	00107$
                                    187 ;	_moduint.c:191: a -= b;
      000059 E5*00            [12]  188 	mov	a,_bp
      00005B 24 FC            [12]  189 	add	a,#0xfc
      00005D F8               [12]  190 	mov	r0,a
      00005E EE               [12]  191 	mov	a,r6
      00005F C3               [12]  192 	clr	c
      000060 96               [12]  193 	subb	a,@r0
      000061 FE               [12]  194 	mov	r6,a
      000062 EF               [12]  195 	mov	a,r7
      000063 08               [12]  196 	inc	r0
      000064 96               [12]  197 	subb	a,@r0
      000065 FF               [12]  198 	mov	r7,a
      000066                        199 00107$:
                                    200 ;	_moduint.c:192: b >>= 1;
      000066 E5*00            [12]  201 	mov	a,_bp
      000068 24 FC            [12]  202 	add	a,#0xfc
      00006A F8               [12]  203 	mov	r0,a
      00006B 08               [12]  204 	inc	r0
      00006C E6               [12]  205 	mov	a,@r0
      00006D 18               [12]  206 	dec	r0
      00006E C3               [12]  207 	clr	c
      00006F 13               [12]  208 	rrc	a
      000070 C6               [12]  209 	xch	a,@r0
      000071 13               [12]  210 	rrc	a
      000072 C6               [12]  211 	xch	a,@r0
      000073 08               [12]  212 	inc	r0
      000074 F6               [12]  213 	mov	@r0,a
                                    214 ;	_moduint.c:194: while (count--);
      000075 8D 04            [24]  215 	mov	ar4,r5
      000077 1D               [12]  216 	dec	r5
      000078 EC               [12]  217 	mov	a,r4
      000079 70 D1            [24]  218 	jnz	00108$
                                    219 ;	_moduint.c:195: return a;
      00007B 8E 82            [24]  220 	mov	dpl,r6
      00007D 8F 83            [24]  221 	mov	dph,r7
      00007F D0*00            [24]  222 	pop	_bp
      000081 22               [24]  223 	ret
                                    224 	.area CSEG    (CODE)
                                    225 	.area CONST   (CODE)
                                    226 	.area XINIT   (CODE)
                                    227 	.area CABS    (ABS,CODE)
