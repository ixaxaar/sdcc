                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:07 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _calloc
                                      7 	.optsdcc -mmcs51 --model-medium
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _memset
                                     13 	.globl _malloc
                                     14 	.globl _calloc
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram 
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; indirectly addressable internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area ISEG    (DATA)
                                     41 ;--------------------------------------------------------
                                     42 ; absolute internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area IABS    (ABS,DATA)
                                     45 	.area IABS    (ABS,DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; bit data
                                     48 ;--------------------------------------------------------
                                     49 	.area BSEG    (BIT)
                                     50 ;--------------------------------------------------------
                                     51 ; paged external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area PSEG    (PAG,XDATA)
                                     54 ;--------------------------------------------------------
                                     55 ; external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XSEG    (XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; absolute external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XABS    (ABS,XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; external initialized ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XISEG   (XDATA)
                                     66 	.area HOME    (CODE)
                                     67 	.area GSINIT0 (CODE)
                                     68 	.area GSINIT1 (CODE)
                                     69 	.area GSINIT2 (CODE)
                                     70 	.area GSINIT3 (CODE)
                                     71 	.area GSINIT4 (CODE)
                                     72 	.area GSINIT5 (CODE)
                                     73 	.area GSINIT  (CODE)
                                     74 	.area GSFINAL (CODE)
                                     75 	.area CSEG    (CODE)
                                     76 ;--------------------------------------------------------
                                     77 ; global & static initialisations
                                     78 ;--------------------------------------------------------
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 	.area GSFINAL (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 ;--------------------------------------------------------
                                     84 ; Home
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area HOME    (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; code
                                     90 ;--------------------------------------------------------
                                     91 	.area CSEG    (CODE)
                                     92 ;------------------------------------------------------------
                                     93 ;Allocation info for local variables in function 'calloc'
                                     94 ;------------------------------------------------------------
                                     95 ;size                      Allocated to stack - _bp -4
                                     96 ;nmemb                     Allocated to registers r6 r7 
                                     97 ;ptr                       Allocated to stack - _bp +1
                                     98 ;------------------------------------------------------------
                                     99 ;	_calloc.c:70: void __xdata * calloc (size_t nmemb, size_t size)
                                    100 ;	-----------------------------------------
                                    101 ;	 function calloc
                                    102 ;	-----------------------------------------
      000000                        103 _calloc:
                           000007   104 	ar7 = 0x07
                           000006   105 	ar6 = 0x06
                           000005   106 	ar5 = 0x05
                           000004   107 	ar4 = 0x04
                           000003   108 	ar3 = 0x03
                           000002   109 	ar2 = 0x02
                           000001   110 	ar1 = 0x01
                           000000   111 	ar0 = 0x00
      000000 C0*00            [24]  112 	push	_bp
      000002 85 81*00         [24]  113 	mov	_bp,sp
      000005 05 81            [12]  114 	inc	sp
      000007 05 81            [12]  115 	inc	sp
      000009 AE 82            [24]  116 	mov	r6,dpl
      00000B AF 83            [24]  117 	mov	r7,dph
                                    118 ;	_calloc.c:74: ptr = malloc(nmemb * size);
      00000D E5*00            [12]  119 	mov	a,_bp
      00000F 24 FC            [12]  120 	add	a,#0xfc
      000011 F8               [12]  121 	mov	r0,a
      000012 E6               [12]  122 	mov	a,@r0
      000013 C0 E0            [24]  123 	push	acc
      000015 08               [12]  124 	inc	r0
      000016 E6               [12]  125 	mov	a,@r0
      000017 C0 E0            [24]  126 	push	acc
      000019 8E 82            [24]  127 	mov	dpl,r6
      00001B 8F 83            [24]  128 	mov	dph,r7
      00001D 12r00r00         [24]  129 	lcall	__mulint
      000020 AE 82            [24]  130 	mov	r6,dpl
      000022 AF 83            [24]  131 	mov	r7,dph
      000024 15 81            [12]  132 	dec	sp
      000026 15 81            [12]  133 	dec	sp
      000028 8E 82            [24]  134 	mov	dpl,r6
      00002A 8F 83            [24]  135 	mov	dph,r7
      00002C C0 07            [24]  136 	push	ar7
      00002E C0 06            [24]  137 	push	ar6
      000030 12r00r00         [24]  138 	lcall	_malloc
      000033 AC 82            [24]  139 	mov	r4,dpl
      000035 AD 83            [24]  140 	mov	r5,dph
      000037 D0 06            [24]  141 	pop	ar6
      000039 D0 07            [24]  142 	pop	ar7
      00003B A8*00            [24]  143 	mov	r0,_bp
      00003D 08               [12]  144 	inc	r0
      00003E A6 04            [24]  145 	mov	@r0,ar4
      000040 08               [12]  146 	inc	r0
      000041 A6 05            [24]  147 	mov	@r0,ar5
                                    148 ;	_calloc.c:75: if (ptr)
      000043 A8*00            [24]  149 	mov	r0,_bp
      000045 08               [12]  150 	inc	r0
      000046 E6               [12]  151 	mov	a,@r0
      000047 08               [12]  152 	inc	r0
      000048 46               [12]  153 	orl	a,@r0
      000049 60 20            [24]  154 	jz	00102$
                                    155 ;	_calloc.c:77: memset(ptr, 0, nmemb * size);
      00004B A8*00            [24]  156 	mov	r0,_bp
      00004D 08               [12]  157 	inc	r0
      00004E 86 02            [24]  158 	mov	ar2,@r0
      000050 08               [12]  159 	inc	r0
      000051 86 03            [24]  160 	mov	ar3,@r0
      000053 7D 00            [12]  161 	mov	r5,#0x00
      000055 C0 06            [24]  162 	push	ar6
      000057 C0 07            [24]  163 	push	ar7
      000059 E4               [12]  164 	clr	a
      00005A C0 E0            [24]  165 	push	acc
      00005C 8A 82            [24]  166 	mov	dpl,r2
      00005E 8B 83            [24]  167 	mov	dph,r3
      000060 8D F0            [24]  168 	mov	b,r5
      000062 12r00r00         [24]  169 	lcall	_memset
      000065 15 81            [12]  170 	dec	sp
      000067 15 81            [12]  171 	dec	sp
      000069 15 81            [12]  172 	dec	sp
      00006B                        173 00102$:
                                    174 ;	_calloc.c:79: return ptr;
      00006B A8*00            [24]  175 	mov	r0,_bp
      00006D 08               [12]  176 	inc	r0
      00006E 86 82            [24]  177 	mov	dpl,@r0
      000070 08               [12]  178 	inc	r0
      000071 86 83            [24]  179 	mov	dph,@r0
      000073 85*00 81         [24]  180 	mov	sp,_bp
      000076 D0*00            [24]  181 	pop	_bp
      000078 22               [24]  182 	ret
                                    183 	.area CSEG    (CODE)
                                    184 	.area CONST   (CODE)
                                    185 	.area XINIT   (CODE)
                                    186 	.area CABS    (ABS,CODE)
