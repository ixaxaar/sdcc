                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:07 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _divuint
                                      7 	.optsdcc -mmcs51 --model-medium
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl __divuint
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; overlayable bit register bank
                                     30 ;--------------------------------------------------------
                                     31 	.area BIT_BANK	(REL,OVR,DATA)
      000000                         32 bits:
      000000                         33 	.ds 1
                           008000    34 	b0 = bits[0]
                           008100    35 	b1 = bits[1]
                           008200    36 	b2 = bits[2]
                           008300    37 	b3 = bits[3]
                           008400    38 	b4 = bits[4]
                           008500    39 	b5 = bits[5]
                           008600    40 	b6 = bits[6]
                           008700    41 	b7 = bits[7]
                                     42 ;--------------------------------------------------------
                                     43 ; internal ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area DSEG    (DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; overlayable items in internal ram 
                                     48 ;--------------------------------------------------------
                                     49 ;--------------------------------------------------------
                                     50 ; indirectly addressable internal ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area ISEG    (DATA)
                                     53 ;--------------------------------------------------------
                                     54 ; absolute internal ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area IABS    (ABS,DATA)
                                     57 	.area IABS    (ABS,DATA)
                                     58 ;--------------------------------------------------------
                                     59 ; bit data
                                     60 ;--------------------------------------------------------
                                     61 	.area BSEG    (BIT)
                                     62 ;--------------------------------------------------------
                                     63 ; paged external ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area PSEG    (PAG,XDATA)
                                     66 ;--------------------------------------------------------
                                     67 ; external ram data
                                     68 ;--------------------------------------------------------
                                     69 	.area XSEG    (XDATA)
                                     70 ;--------------------------------------------------------
                                     71 ; absolute external ram data
                                     72 ;--------------------------------------------------------
                                     73 	.area XABS    (ABS,XDATA)
                                     74 ;--------------------------------------------------------
                                     75 ; external initialized ram data
                                     76 ;--------------------------------------------------------
                                     77 	.area XISEG   (XDATA)
                                     78 	.area HOME    (CODE)
                                     79 	.area GSINIT0 (CODE)
                                     80 	.area GSINIT1 (CODE)
                                     81 	.area GSINIT2 (CODE)
                                     82 	.area GSINIT3 (CODE)
                                     83 	.area GSINIT4 (CODE)
                                     84 	.area GSINIT5 (CODE)
                                     85 	.area GSINIT  (CODE)
                                     86 	.area GSFINAL (CODE)
                                     87 	.area CSEG    (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; global & static initialisations
                                     90 ;--------------------------------------------------------
                                     91 	.area HOME    (CODE)
                                     92 	.area GSINIT  (CODE)
                                     93 	.area GSFINAL (CODE)
                                     94 	.area GSINIT  (CODE)
                                     95 ;--------------------------------------------------------
                                     96 ; Home
                                     97 ;--------------------------------------------------------
                                     98 	.area HOME    (CODE)
                                     99 	.area HOME    (CODE)
                                    100 ;--------------------------------------------------------
                                    101 ; code
                                    102 ;--------------------------------------------------------
                                    103 	.area CSEG    (CODE)
                                    104 ;------------------------------------------------------------
                                    105 ;Allocation info for local variables in function '_divuint'
                                    106 ;------------------------------------------------------------
                                    107 ;y                         Allocated to stack - _bp -4
                                    108 ;x                         Allocated to registers r6 r7 
                                    109 ;reste                     Allocated to registers r4 r5 
                                    110 ;count                     Allocated to registers r3 
                                    111 ;c                         Allocated to registers b0 
                                    112 ;------------------------------------------------------------
                                    113 ;	_divuint.c:155: _divuint (unsigned int x, unsigned int y)
                                    114 ;	-----------------------------------------
                                    115 ;	 function _divuint
                                    116 ;	-----------------------------------------
      000000                        117 __divuint:
                           000007   118 	ar7 = 0x07
                           000006   119 	ar6 = 0x06
                           000005   120 	ar5 = 0x05
                           000004   121 	ar4 = 0x04
                           000003   122 	ar3 = 0x03
                           000002   123 	ar2 = 0x02
                           000001   124 	ar1 = 0x01
                           000000   125 	ar0 = 0x00
      000000 C0*00            [24]  126 	push	_bp
      000002 85 81*00         [24]  127 	mov	_bp,sp
      000005 AE 82            [24]  128 	mov	r6,dpl
      000007 AF 83            [24]  129 	mov	r7,dph
                                    130 ;	_divuint.c:157: unsigned int reste = 0;
      000009 7C 00            [12]  131 	mov	r4,#0x00
      00000B 7D 00            [12]  132 	mov	r5,#0x00
                                    133 ;	_divuint.c:161: do
      00000D 7B 10            [12]  134 	mov	r3,#0x10
      00000F                        135 00105$:
                                    136 ;	_divuint.c:164: c = MSB_SET(x);
      00000F EF               [12]  137 	mov	a,r7
      000010 33               [12]  138 	rlc	a
      000011 92*00            [24]  139 	mov	b0,c
                                    140 ;	_divuint.c:165: x <<= 1;
      000013 EF               [12]  141 	mov	a,r7
      000014 CE               [12]  142 	xch	a,r6
      000015 25 E0            [12]  143 	add	a,acc
      000017 CE               [12]  144 	xch	a,r6
      000018 33               [12]  145 	rlc	a
      000019 FF               [12]  146 	mov	r7,a
                                    147 ;	_divuint.c:166: reste <<= 1;
      00001A ED               [12]  148 	mov	a,r5
      00001B CC               [12]  149 	xch	a,r4
      00001C 25 E0            [12]  150 	add	a,acc
      00001E CC               [12]  151 	xch	a,r4
      00001F 33               [12]  152 	rlc	a
      000020 FD               [12]  153 	mov	r5,a
                                    154 ;	_divuint.c:167: if (c)
      000021 30*00 03         [24]  155 	jnb	b0,00102$
                                    156 ;	_divuint.c:168: reste |= 1;
      000024 43 04 01         [24]  157 	orl	ar4,#0x01
      000027                        158 00102$:
                                    159 ;	_divuint.c:170: if (reste >= y)
      000027 E5*00            [12]  160 	mov	a,_bp
      000029 24 FC            [12]  161 	add	a,#0xfc
      00002B F8               [12]  162 	mov	r0,a
      00002C C3               [12]  163 	clr	c
      00002D EC               [12]  164 	mov	a,r4
      00002E 96               [12]  165 	subb	a,@r0
      00002F ED               [12]  166 	mov	a,r5
      000030 08               [12]  167 	inc	r0
      000031 96               [12]  168 	subb	a,@r0
      000032 40 10            [24]  169 	jc	00106$
                                    170 ;	_divuint.c:172: reste -= y;
      000034 E5*00            [12]  171 	mov	a,_bp
      000036 24 FC            [12]  172 	add	a,#0xfc
      000038 F8               [12]  173 	mov	r0,a
      000039 EC               [12]  174 	mov	a,r4
      00003A C3               [12]  175 	clr	c
      00003B 96               [12]  176 	subb	a,@r0
      00003C FC               [12]  177 	mov	r4,a
      00003D ED               [12]  178 	mov	a,r5
      00003E 08               [12]  179 	inc	r0
      00003F 96               [12]  180 	subb	a,@r0
      000040 FD               [12]  181 	mov	r5,a
                                    182 ;	_divuint.c:174: x |= 1;
      000041 43 06 01         [24]  183 	orl	ar6,#0x01
      000044                        184 00106$:
                                    185 ;	_divuint.c:177: while (--count);
      000044 DB C9            [24]  186 	djnz	r3,00105$
                                    187 ;	_divuint.c:178: return x;
      000046 8E 82            [24]  188 	mov	dpl,r6
      000048 8F 83            [24]  189 	mov	dph,r7
      00004A D0*00            [24]  190 	pop	_bp
      00004C 22               [24]  191 	ret
                                    192 	.area CSEG    (CODE)
                                    193 	.area CONST   (CODE)
                                    194 	.area XINIT   (CODE)
                                    195 	.area CABS    (ABS,CODE)
