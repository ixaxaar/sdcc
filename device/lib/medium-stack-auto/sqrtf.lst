                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:06 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module sqrtf
                                      7 	.optsdcc -mmcs51 --model-medium
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _ldexpf
                                     13 	.globl _frexpf
                                     14 	.globl _sqrtf
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram 
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; indirectly addressable internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area ISEG    (DATA)
                                     41 ;--------------------------------------------------------
                                     42 ; absolute internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area IABS    (ABS,DATA)
                                     45 	.area IABS    (ABS,DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; bit data
                                     48 ;--------------------------------------------------------
                                     49 	.area BSEG    (BIT)
                                     50 ;--------------------------------------------------------
                                     51 ; paged external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area PSEG    (PAG,XDATA)
                                     54 ;--------------------------------------------------------
                                     55 ; external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XSEG    (XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; absolute external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XABS    (ABS,XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; external initialized ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XISEG   (XDATA)
                                     66 	.area HOME    (CODE)
                                     67 	.area GSINIT0 (CODE)
                                     68 	.area GSINIT1 (CODE)
                                     69 	.area GSINIT2 (CODE)
                                     70 	.area GSINIT3 (CODE)
                                     71 	.area GSINIT4 (CODE)
                                     72 	.area GSINIT5 (CODE)
                                     73 	.area GSINIT  (CODE)
                                     74 	.area GSFINAL (CODE)
                                     75 	.area CSEG    (CODE)
                                     76 ;--------------------------------------------------------
                                     77 ; global & static initialisations
                                     78 ;--------------------------------------------------------
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 	.area GSFINAL (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 ;--------------------------------------------------------
                                     84 ; Home
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area HOME    (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; code
                                     90 ;--------------------------------------------------------
                                     91 	.area CSEG    (CODE)
                                     92 ;------------------------------------------------------------
                                     93 ;Allocation info for local variables in function 'sqrtf'
                                     94 ;------------------------------------------------------------
                                     95 ;x                         Allocated to stack - _bp +1
                                     96 ;f                         Allocated to stack - _bp +9
                                     97 ;y                         Allocated to stack - _bp +13
                                     98 ;n                         Allocated to stack - _bp +17
                                     99 ;sloc0                     Allocated to stack - _bp +5
                                    100 ;------------------------------------------------------------
                                    101 ;	sqrtf.c:37: float sqrtf(const float x) _FLOAT_FUNC_REENTRANT
                                    102 ;	-----------------------------------------
                                    103 ;	 function sqrtf
                                    104 ;	-----------------------------------------
      000000                        105 _sqrtf:
                           000007   106 	ar7 = 0x07
                           000006   107 	ar6 = 0x06
                           000005   108 	ar5 = 0x05
                           000004   109 	ar4 = 0x04
                           000003   110 	ar3 = 0x03
                           000002   111 	ar2 = 0x02
                           000001   112 	ar1 = 0x01
                           000000   113 	ar0 = 0x00
      000000 C0*00            [24]  114 	push	_bp
      000002 85 81*00         [24]  115 	mov	_bp,sp
      000005 C0 82            [24]  116 	push	dpl
      000007 C0 83            [24]  117 	push	dph
      000009 C0 F0            [24]  118 	push	b
      00000B C0 E0            [24]  119 	push	acc
      00000D E5 81            [12]  120 	mov	a,sp
      00000F 24 0E            [12]  121 	add	a,#0x0E
      000011 F5 81            [12]  122 	mov	sp,a
                                    123 ;	sqrtf.c:42: if (x==0.0) return x;
      000013 A8*00            [24]  124 	mov	r0,_bp
      000015 08               [12]  125 	inc	r0
      000016 86 F0            [24]  126 	mov	b,@r0
      000018 08               [12]  127 	inc	r0
      000019 E6               [12]  128 	mov	a,@r0
      00001A 42 F0            [12]  129 	orl	b,a
      00001C 08               [12]  130 	inc	r0
      00001D E6               [12]  131 	mov	a,@r0
      00001E 42 F0            [12]  132 	orl	b,a
      000020 08               [12]  133 	inc	r0
      000021 E6               [12]  134 	mov	a,@r0
      000022 54 7F            [12]  135 	anl	a,#0x7F
      000024 45 F0            [12]  136 	orl	a,b
      000026 70 10            [24]  137 	jnz	00107$
      000028 A8*00            [24]  138 	mov	r0,_bp
      00002A 08               [12]  139 	inc	r0
      00002B 86 82            [24]  140 	mov	dpl,@r0
      00002D 08               [12]  141 	inc	r0
      00002E 86 83            [24]  142 	mov	dph,@r0
      000030 08               [12]  143 	inc	r0
      000031 86 F0            [24]  144 	mov	b,@r0
      000033 08               [12]  145 	inc	r0
      000034 E6               [12]  146 	mov	a,@r0
      000035 02r02rD3         [24]  147 	ljmp	00111$
      000038                        148 00107$:
                                    149 ;	sqrtf.c:43: else if (x==1.0) return 1.0;
      000038 E4               [12]  150 	clr	a
      000039 C0 E0            [24]  151 	push	acc
      00003B C0 E0            [24]  152 	push	acc
      00003D 74 80            [12]  153 	mov	a,#0x80
      00003F C0 E0            [24]  154 	push	acc
      000041 74 3F            [12]  155 	mov	a,#0x3F
      000043 C0 E0            [24]  156 	push	acc
      000045 A8*00            [24]  157 	mov	r0,_bp
      000047 08               [12]  158 	inc	r0
      000048 86 82            [24]  159 	mov	dpl,@r0
      00004A 08               [12]  160 	inc	r0
      00004B 86 83            [24]  161 	mov	dph,@r0
      00004D 08               [12]  162 	inc	r0
      00004E 86 F0            [24]  163 	mov	b,@r0
      000050 08               [12]  164 	inc	r0
      000051 E6               [12]  165 	mov	a,@r0
      000052 12r00r00         [24]  166 	lcall	___fseq
      000055 AB 82            [24]  167 	mov	r3,dpl
      000057 E5 81            [12]  168 	mov	a,sp
      000059 24 FC            [12]  169 	add	a,#0xfc
      00005B F5 81            [12]  170 	mov	sp,a
      00005D EB               [12]  171 	mov	a,r3
      00005E 60 0B            [24]  172 	jz	00104$
      000060 90 00 00         [24]  173 	mov	dptr,#0x0000
      000063 75 F0 80         [24]  174 	mov	b,#0x80
      000066 74 3F            [12]  175 	mov	a,#0x3F
      000068 02r02rD3         [24]  176 	ljmp	00111$
      00006B                        177 00104$:
                                    178 ;	sqrtf.c:44: else if (x<0.0)
      00006B E4               [12]  179 	clr	a
      00006C C0 E0            [24]  180 	push	acc
      00006E C0 E0            [24]  181 	push	acc
      000070 C0 E0            [24]  182 	push	acc
      000072 C0 E0            [24]  183 	push	acc
      000074 A8*00            [24]  184 	mov	r0,_bp
      000076 08               [12]  185 	inc	r0
      000077 86 82            [24]  186 	mov	dpl,@r0
      000079 08               [12]  187 	inc	r0
      00007A 86 83            [24]  188 	mov	dph,@r0
      00007C 08               [12]  189 	inc	r0
      00007D 86 F0            [24]  190 	mov	b,@r0
      00007F 08               [12]  191 	inc	r0
      000080 E6               [12]  192 	mov	a,@r0
      000081 12r00r00         [24]  193 	lcall	___fslt
      000084 AB 82            [24]  194 	mov	r3,dpl
      000086 E5 81            [12]  195 	mov	a,sp
      000088 24 FC            [12]  196 	add	a,#0xfc
      00008A F5 81            [12]  197 	mov	sp,a
      00008C EB               [12]  198 	mov	a,r3
      00008D 60 11            [24]  199 	jz	00108$
                                    200 ;	sqrtf.c:46: errno=EDOM;
      00008F 78r00            [12]  201 	mov	r0,#_errno
      000091 74 21            [12]  202 	mov	a,#0x21
      000093 F2               [24]  203 	movx	@r0,a
      000094 08               [12]  204 	inc	r0
      000095 E4               [12]  205 	clr	a
      000096 F2               [24]  206 	movx	@r0,a
                                    207 ;	sqrtf.c:47: return 0.0;
      000097 90 00 00         [24]  208 	mov	dptr,#(0x00&0x00ff)
      00009A E4               [12]  209 	clr	a
      00009B F5 F0            [12]  210 	mov	b,a
      00009D 02r02rD3         [24]  211 	ljmp	00111$
      0000A0                        212 00108$:
                                    213 ;	sqrtf.c:49: f=frexpf(x, &n);
      0000A0 E5*00            [12]  214 	mov	a,_bp
      0000A2 24 11            [12]  215 	add	a,#0x11
      0000A4 FA               [12]  216 	mov	r2,a
      0000A5 7B 00            [12]  217 	mov	r3,#0x00
      0000A7 7F 40            [12]  218 	mov	r7,#0x40
      0000A9 C0 02            [24]  219 	push	ar2
      0000AB C0 03            [24]  220 	push	ar3
      0000AD C0 07            [24]  221 	push	ar7
      0000AF A8*00            [24]  222 	mov	r0,_bp
      0000B1 08               [12]  223 	inc	r0
      0000B2 86 82            [24]  224 	mov	dpl,@r0
      0000B4 08               [12]  225 	inc	r0
      0000B5 86 83            [24]  226 	mov	dph,@r0
      0000B7 08               [12]  227 	inc	r0
      0000B8 86 F0            [24]  228 	mov	b,@r0
      0000BA 08               [12]  229 	inc	r0
      0000BB E6               [12]  230 	mov	a,@r0
      0000BC 12r00r00         [24]  231 	lcall	_frexpf
      0000BF AC 82            [24]  232 	mov	r4,dpl
      0000C1 AD 83            [24]  233 	mov	r5,dph
      0000C3 AE F0            [24]  234 	mov	r6,b
      0000C5 FF               [12]  235 	mov	r7,a
      0000C6 15 81            [12]  236 	dec	sp
      0000C8 15 81            [12]  237 	dec	sp
      0000CA 15 81            [12]  238 	dec	sp
      0000CC E5*00            [12]  239 	mov	a,_bp
      0000CE 24 09            [12]  240 	add	a,#0x09
      0000D0 F8               [12]  241 	mov	r0,a
      0000D1 A6 04            [24]  242 	mov	@r0,ar4
      0000D3 08               [12]  243 	inc	r0
      0000D4 A6 05            [24]  244 	mov	@r0,ar5
      0000D6 08               [12]  245 	inc	r0
      0000D7 A6 06            [24]  246 	mov	@r0,ar6
      0000D9 08               [12]  247 	inc	r0
      0000DA A6 07            [24]  248 	mov	@r0,ar7
                                    249 ;	sqrtf.c:50: y=0.41731+0.59016*f; /*Educated guess*/
      0000DC E5*00            [12]  250 	mov	a,_bp
      0000DE 24 09            [12]  251 	add	a,#0x09
      0000E0 F8               [12]  252 	mov	r0,a
      0000E1 E6               [12]  253 	mov	a,@r0
      0000E2 C0 E0            [24]  254 	push	acc
      0000E4 08               [12]  255 	inc	r0
      0000E5 E6               [12]  256 	mov	a,@r0
      0000E6 C0 E0            [24]  257 	push	acc
      0000E8 08               [12]  258 	inc	r0
      0000E9 E6               [12]  259 	mov	a,@r0
      0000EA C0 E0            [24]  260 	push	acc
      0000EC 08               [12]  261 	inc	r0
      0000ED E6               [12]  262 	mov	a,@r0
      0000EE C0 E0            [24]  263 	push	acc
      0000F0 90 14 BA         [24]  264 	mov	dptr,#0x14BA
      0000F3 75 F0 17         [24]  265 	mov	b,#0x17
      0000F6 74 3F            [12]  266 	mov	a,#0x3F
      0000F8 12r00r00         [24]  267 	lcall	___fsmul
      0000FB AA 82            [24]  268 	mov	r2,dpl
      0000FD AB 83            [24]  269 	mov	r3,dph
      0000FF AE F0            [24]  270 	mov	r6,b
      000101 FF               [12]  271 	mov	r7,a
      000102 E5 81            [12]  272 	mov	a,sp
      000104 24 FC            [12]  273 	add	a,#0xfc
      000106 F5 81            [12]  274 	mov	sp,a
      000108 74 A8            [12]  275 	mov	a,#0xA8
      00010A C0 E0            [24]  276 	push	acc
      00010C 04               [12]  277 	inc	a
      00010D C0 E0            [24]  278 	push	acc
      00010F 74 D5            [12]  279 	mov	a,#0xD5
      000111 C0 E0            [24]  280 	push	acc
      000113 74 3E            [12]  281 	mov	a,#0x3E
      000115 C0 E0            [24]  282 	push	acc
      000117 8A 82            [24]  283 	mov	dpl,r2
      000119 8B 83            [24]  284 	mov	dph,r3
      00011B 8E F0            [24]  285 	mov	b,r6
      00011D EF               [12]  286 	mov	a,r7
      00011E 12r00r00         [24]  287 	lcall	___fsadd
      000121 AC 82            [24]  288 	mov	r4,dpl
      000123 AD 83            [24]  289 	mov	r5,dph
      000125 AE F0            [24]  290 	mov	r6,b
      000127 FF               [12]  291 	mov	r7,a
      000128 E5 81            [12]  292 	mov	a,sp
      00012A 24 FC            [12]  293 	add	a,#0xfc
      00012C F5 81            [12]  294 	mov	sp,a
      00012E E5*00            [12]  295 	mov	a,_bp
      000130 24 0D            [12]  296 	add	a,#0x0d
      000132 F8               [12]  297 	mov	r0,a
      000133 A6 04            [24]  298 	mov	@r0,ar4
      000135 08               [12]  299 	inc	r0
      000136 A6 05            [24]  300 	mov	@r0,ar5
      000138 08               [12]  301 	inc	r0
      000139 A6 06            [24]  302 	mov	@r0,ar6
      00013B 08               [12]  303 	inc	r0
      00013C A6 07            [24]  304 	mov	@r0,ar7
                                    305 ;	sqrtf.c:52: y+=f/y;
      00013E E5*00            [12]  306 	mov	a,_bp
      000140 24 0D            [12]  307 	add	a,#0x0d
      000142 F8               [12]  308 	mov	r0,a
      000143 E6               [12]  309 	mov	a,@r0
      000144 C0 E0            [24]  310 	push	acc
      000146 08               [12]  311 	inc	r0
      000147 E6               [12]  312 	mov	a,@r0
      000148 C0 E0            [24]  313 	push	acc
      00014A 08               [12]  314 	inc	r0
      00014B E6               [12]  315 	mov	a,@r0
      00014C C0 E0            [24]  316 	push	acc
      00014E 08               [12]  317 	inc	r0
      00014F E6               [12]  318 	mov	a,@r0
      000150 C0 E0            [24]  319 	push	acc
      000152 E5*00            [12]  320 	mov	a,_bp
      000154 24 09            [12]  321 	add	a,#0x09
      000156 F8               [12]  322 	mov	r0,a
      000157 86 82            [24]  323 	mov	dpl,@r0
      000159 08               [12]  324 	inc	r0
      00015A 86 83            [24]  325 	mov	dph,@r0
      00015C 08               [12]  326 	inc	r0
      00015D 86 F0            [24]  327 	mov	b,@r0
      00015F 08               [12]  328 	inc	r0
      000160 E6               [12]  329 	mov	a,@r0
      000161 12r00r00         [24]  330 	lcall	___fsdiv
      000164 AA 82            [24]  331 	mov	r2,dpl
      000166 AB 83            [24]  332 	mov	r3,dph
      000168 AE F0            [24]  333 	mov	r6,b
      00016A FF               [12]  334 	mov	r7,a
      00016B E5 81            [12]  335 	mov	a,sp
      00016D 24 FC            [12]  336 	add	a,#0xfc
      00016F F5 81            [12]  337 	mov	sp,a
      000171 C0 02            [24]  338 	push	ar2
      000173 C0 03            [24]  339 	push	ar3
      000175 C0 06            [24]  340 	push	ar6
      000177 C0 07            [24]  341 	push	ar7
      000179 E5*00            [12]  342 	mov	a,_bp
      00017B 24 0D            [12]  343 	add	a,#0x0d
      00017D F8               [12]  344 	mov	r0,a
      00017E 86 82            [24]  345 	mov	dpl,@r0
      000180 08               [12]  346 	inc	r0
      000181 86 83            [24]  347 	mov	dph,@r0
      000183 08               [12]  348 	inc	r0
      000184 86 F0            [24]  349 	mov	b,@r0
      000186 08               [12]  350 	inc	r0
      000187 E6               [12]  351 	mov	a,@r0
      000188 12r00r00         [24]  352 	lcall	___fsadd
      00018B AC 82            [24]  353 	mov	r4,dpl
      00018D AD 83            [24]  354 	mov	r5,dph
      00018F AE F0            [24]  355 	mov	r6,b
      000191 FF               [12]  356 	mov	r7,a
      000192 E5 81            [12]  357 	mov	a,sp
      000194 24 FC            [12]  358 	add	a,#0xfc
      000196 F5 81            [12]  359 	mov	sp,a
      000198 E5*00            [12]  360 	mov	a,_bp
      00019A 24 0D            [12]  361 	add	a,#0x0d
      00019C F8               [12]  362 	mov	r0,a
      00019D A6 04            [24]  363 	mov	@r0,ar4
      00019F 08               [12]  364 	inc	r0
      0001A0 A6 05            [24]  365 	mov	@r0,ar5
      0001A2 08               [12]  366 	inc	r0
      0001A3 A6 06            [24]  367 	mov	@r0,ar6
      0001A5 08               [12]  368 	inc	r0
      0001A6 A6 07            [24]  369 	mov	@r0,ar7
                                    370 ;	sqrtf.c:53: y=ldexpf(y, -2) + f/y; /*Faster version of 0.25 * y + f/y*/
      0001A8 74 FE            [12]  371 	mov	a,#0xFE
      0001AA C0 E0            [24]  372 	push	acc
      0001AC 04               [12]  373 	inc	a
      0001AD C0 E0            [24]  374 	push	acc
      0001AF E5*00            [12]  375 	mov	a,_bp
      0001B1 24 0D            [12]  376 	add	a,#0x0d
      0001B3 F8               [12]  377 	mov	r0,a
      0001B4 86 82            [24]  378 	mov	dpl,@r0
      0001B6 08               [12]  379 	inc	r0
      0001B7 86 83            [24]  380 	mov	dph,@r0
      0001B9 08               [12]  381 	inc	r0
      0001BA 86 F0            [24]  382 	mov	b,@r0
      0001BC 08               [12]  383 	inc	r0
      0001BD E6               [12]  384 	mov	a,@r0
      0001BE 12r00r00         [24]  385 	lcall	_ldexpf
      0001C1 C8               [12]  386 	xch	a,r0
      0001C2 E5*00            [12]  387 	mov	a,_bp
      0001C4 24 05            [12]  388 	add	a,#0x05
      0001C6 C8               [12]  389 	xch	a,r0
      0001C7 A6 82            [24]  390 	mov	@r0,dpl
      0001C9 08               [12]  391 	inc	r0
      0001CA A6 83            [24]  392 	mov	@r0,dph
      0001CC 08               [12]  393 	inc	r0
      0001CD A6 F0            [24]  394 	mov	@r0,b
      0001CF 08               [12]  395 	inc	r0
      0001D0 F6               [12]  396 	mov	@r0,a
      0001D1 15 81            [12]  397 	dec	sp
      0001D3 15 81            [12]  398 	dec	sp
      0001D5 E5*00            [12]  399 	mov	a,_bp
      0001D7 24 0D            [12]  400 	add	a,#0x0d
      0001D9 F8               [12]  401 	mov	r0,a
      0001DA E6               [12]  402 	mov	a,@r0
      0001DB C0 E0            [24]  403 	push	acc
      0001DD 08               [12]  404 	inc	r0
      0001DE E6               [12]  405 	mov	a,@r0
      0001DF C0 E0            [24]  406 	push	acc
      0001E1 08               [12]  407 	inc	r0
      0001E2 E6               [12]  408 	mov	a,@r0
      0001E3 C0 E0            [24]  409 	push	acc
      0001E5 08               [12]  410 	inc	r0
      0001E6 E6               [12]  411 	mov	a,@r0
      0001E7 C0 E0            [24]  412 	push	acc
      0001E9 E5*00            [12]  413 	mov	a,_bp
      0001EB 24 09            [12]  414 	add	a,#0x09
      0001ED F8               [12]  415 	mov	r0,a
      0001EE 86 82            [24]  416 	mov	dpl,@r0
      0001F0 08               [12]  417 	inc	r0
      0001F1 86 83            [24]  418 	mov	dph,@r0
      0001F3 08               [12]  419 	inc	r0
      0001F4 86 F0            [24]  420 	mov	b,@r0
      0001F6 08               [12]  421 	inc	r0
      0001F7 E6               [12]  422 	mov	a,@r0
      0001F8 12r00r00         [24]  423 	lcall	___fsdiv
      0001FB AA 82            [24]  424 	mov	r2,dpl
      0001FD AB 83            [24]  425 	mov	r3,dph
      0001FF AE F0            [24]  426 	mov	r6,b
      000201 FF               [12]  427 	mov	r7,a
      000202 E5 81            [12]  428 	mov	a,sp
      000204 24 FC            [12]  429 	add	a,#0xfc
      000206 F5 81            [12]  430 	mov	sp,a
      000208 C0 02            [24]  431 	push	ar2
      00020A C0 03            [24]  432 	push	ar3
      00020C C0 06            [24]  433 	push	ar6
      00020E C0 07            [24]  434 	push	ar7
      000210 E5*00            [12]  435 	mov	a,_bp
      000212 24 05            [12]  436 	add	a,#0x05
      000214 F8               [12]  437 	mov	r0,a
      000215 86 82            [24]  438 	mov	dpl,@r0
      000217 08               [12]  439 	inc	r0
      000218 86 83            [24]  440 	mov	dph,@r0
      00021A 08               [12]  441 	inc	r0
      00021B 86 F0            [24]  442 	mov	b,@r0
      00021D 08               [12]  443 	inc	r0
      00021E E6               [12]  444 	mov	a,@r0
      00021F 12r00r00         [24]  445 	lcall	___fsadd
      000222 AC 82            [24]  446 	mov	r4,dpl
      000224 AD 83            [24]  447 	mov	r5,dph
      000226 AE F0            [24]  448 	mov	r6,b
      000228 FF               [12]  449 	mov	r7,a
      000229 E5 81            [12]  450 	mov	a,sp
      00022B 24 FC            [12]  451 	add	a,#0xfc
      00022D F5 81            [12]  452 	mov	sp,a
      00022F E5*00            [12]  453 	mov	a,_bp
      000231 24 0D            [12]  454 	add	a,#0x0d
      000233 F8               [12]  455 	mov	r0,a
      000234 A6 04            [24]  456 	mov	@r0,ar4
      000236 08               [12]  457 	inc	r0
      000237 A6 05            [24]  458 	mov	@r0,ar5
      000239 08               [12]  459 	inc	r0
      00023A A6 06            [24]  460 	mov	@r0,ar6
      00023C 08               [12]  461 	inc	r0
      00023D A6 07            [24]  462 	mov	@r0,ar7
                                    463 ;	sqrtf.c:55: if (n&1)
      00023F E5*00            [12]  464 	mov	a,_bp
      000241 24 11            [12]  465 	add	a,#0x11
      000243 F8               [12]  466 	mov	r0,a
      000244 E6               [12]  467 	mov	a,@r0
      000245 30 E0 47         [24]  468 	jnb	acc.0,00110$
                                    469 ;	sqrtf.c:57: y*=0.7071067812;
      000248 E5*00            [12]  470 	mov	a,_bp
      00024A 24 0D            [12]  471 	add	a,#0x0d
      00024C F8               [12]  472 	mov	r0,a
      00024D E6               [12]  473 	mov	a,@r0
      00024E C0 E0            [24]  474 	push	acc
      000250 08               [12]  475 	inc	r0
      000251 E6               [12]  476 	mov	a,@r0
      000252 C0 E0            [24]  477 	push	acc
      000254 08               [12]  478 	inc	r0
      000255 E6               [12]  479 	mov	a,@r0
      000256 C0 E0            [24]  480 	push	acc
      000258 08               [12]  481 	inc	r0
      000259 E6               [12]  482 	mov	a,@r0
      00025A C0 E0            [24]  483 	push	acc
      00025C 90 04 F3         [24]  484 	mov	dptr,#0x04F3
      00025F 75 F0 35         [24]  485 	mov	b,#0x35
      000262 74 3F            [12]  486 	mov	a,#0x3F
      000264 12r00r00         [24]  487 	lcall	___fsmul
      000267 AC 82            [24]  488 	mov	r4,dpl
      000269 AD 83            [24]  489 	mov	r5,dph
      00026B AE F0            [24]  490 	mov	r6,b
      00026D FF               [12]  491 	mov	r7,a
      00026E E5 81            [12]  492 	mov	a,sp
      000270 24 FC            [12]  493 	add	a,#0xfc
      000272 F5 81            [12]  494 	mov	sp,a
      000274 E5*00            [12]  495 	mov	a,_bp
      000276 24 0D            [12]  496 	add	a,#0x0d
      000278 F8               [12]  497 	mov	r0,a
      000279 A6 04            [24]  498 	mov	@r0,ar4
      00027B 08               [12]  499 	inc	r0
      00027C A6 05            [24]  500 	mov	@r0,ar5
      00027E 08               [12]  501 	inc	r0
      00027F A6 06            [24]  502 	mov	@r0,ar6
      000281 08               [12]  503 	inc	r0
      000282 A6 07            [24]  504 	mov	@r0,ar7
                                    505 ;	sqrtf.c:58: ++n;
      000284 E5*00            [12]  506 	mov	a,_bp
      000286 24 11            [12]  507 	add	a,#0x11
      000288 F8               [12]  508 	mov	r0,a
      000289 06               [12]  509 	inc	@r0
      00028A B6 00 02         [24]  510 	cjne	@r0,#0x00,00129$
      00028D 08               [12]  511 	inc	r0
      00028E 06               [12]  512 	inc	@r0
      00028F                        513 00129$:
      00028F                        514 00110$:
                                    515 ;	sqrtf.c:60: return ldexpf(y, n/2);
      00028F 74 02            [12]  516 	mov	a,#0x02
      000291 C0 E0            [24]  517 	push	acc
      000293 E4               [12]  518 	clr	a
      000294 C0 E0            [24]  519 	push	acc
      000296 E5*00            [12]  520 	mov	a,_bp
      000298 24 11            [12]  521 	add	a,#0x11
      00029A F8               [12]  522 	mov	r0,a
      00029B 86 82            [24]  523 	mov	dpl,@r0
      00029D 08               [12]  524 	inc	r0
      00029E 86 83            [24]  525 	mov	dph,@r0
      0002A0 12r00r00         [24]  526 	lcall	__divsint
      0002A3 AE 82            [24]  527 	mov	r6,dpl
      0002A5 AF 83            [24]  528 	mov	r7,dph
      0002A7 15 81            [12]  529 	dec	sp
      0002A9 15 81            [12]  530 	dec	sp
      0002AB C0 06            [24]  531 	push	ar6
      0002AD C0 07            [24]  532 	push	ar7
      0002AF E5*00            [12]  533 	mov	a,_bp
      0002B1 24 0D            [12]  534 	add	a,#0x0d
      0002B3 F8               [12]  535 	mov	r0,a
      0002B4 86 82            [24]  536 	mov	dpl,@r0
      0002B6 08               [12]  537 	inc	r0
      0002B7 86 83            [24]  538 	mov	dph,@r0
      0002B9 08               [12]  539 	inc	r0
      0002BA 86 F0            [24]  540 	mov	b,@r0
      0002BC 08               [12]  541 	inc	r0
      0002BD E6               [12]  542 	mov	a,@r0
      0002BE 12r00r00         [24]  543 	lcall	_ldexpf
      0002C1 AC 82            [24]  544 	mov	r4,dpl
      0002C3 AD 83            [24]  545 	mov	r5,dph
      0002C5 AE F0            [24]  546 	mov	r6,b
      0002C7 FF               [12]  547 	mov	r7,a
      0002C8 15 81            [12]  548 	dec	sp
      0002CA 15 81            [12]  549 	dec	sp
      0002CC 8C 82            [24]  550 	mov	dpl,r4
      0002CE 8D 83            [24]  551 	mov	dph,r5
      0002D0 8E F0            [24]  552 	mov	b,r6
      0002D2 EF               [12]  553 	mov	a,r7
      0002D3                        554 00111$:
      0002D3 85*00 81         [24]  555 	mov	sp,_bp
      0002D6 D0*00            [24]  556 	pop	_bp
      0002D8 22               [24]  557 	ret
                                    558 	.area CSEG    (CODE)
                                    559 	.area CONST   (CODE)
                                    560 	.area XINIT   (CODE)
                                    561 	.area CABS    (ABS,CODE)
