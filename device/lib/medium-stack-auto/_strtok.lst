                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:07 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _strtok
                                      7 	.optsdcc -mmcs51 --model-medium
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _strchr
                                     13 	.globl _strtok
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram 
                                     35 ;--------------------------------------------------------
                                     36 ;--------------------------------------------------------
                                     37 ; indirectly addressable internal ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area ISEG    (DATA)
                                     40 ;--------------------------------------------------------
                                     41 ; absolute internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area IABS    (ABS,DATA)
                                     44 	.area IABS    (ABS,DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; bit data
                                     47 ;--------------------------------------------------------
                                     48 	.area BSEG    (BIT)
                                     49 ;--------------------------------------------------------
                                     50 ; paged external ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area PSEG    (PAG,XDATA)
      000000                         53 _strtok_s_1_22:
      000000                         54 	.ds 3
                                     55 ;--------------------------------------------------------
                                     56 ; external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XSEG    (XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; absolute external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XABS    (ABS,XDATA)
                                     63 ;--------------------------------------------------------
                                     64 ; external initialized ram data
                                     65 ;--------------------------------------------------------
                                     66 	.area XISEG   (XDATA)
                                     67 	.area HOME    (CODE)
                                     68 	.area GSINIT0 (CODE)
                                     69 	.area GSINIT1 (CODE)
                                     70 	.area GSINIT2 (CODE)
                                     71 	.area GSINIT3 (CODE)
                                     72 	.area GSINIT4 (CODE)
                                     73 	.area GSINIT5 (CODE)
                                     74 	.area GSINIT  (CODE)
                                     75 	.area GSFINAL (CODE)
                                     76 	.area CSEG    (CODE)
                                     77 ;--------------------------------------------------------
                                     78 ; global & static initialisations
                                     79 ;--------------------------------------------------------
                                     80 	.area HOME    (CODE)
                                     81 	.area GSINIT  (CODE)
                                     82 	.area GSFINAL (CODE)
                                     83 	.area GSINIT  (CODE)
                                     84 ;--------------------------------------------------------
                                     85 ; Home
                                     86 ;--------------------------------------------------------
                                     87 	.area HOME    (CODE)
                                     88 	.area HOME    (CODE)
                                     89 ;--------------------------------------------------------
                                     90 ; code
                                     91 ;--------------------------------------------------------
                                     92 	.area CSEG    (CODE)
                                     93 ;------------------------------------------------------------
                                     94 ;Allocation info for local variables in function 'strtok'
                                     95 ;------------------------------------------------------------
                                     96 ;control                   Allocated to stack - _bp -5
                                     97 ;str                       Allocated to registers r5 r6 r7 
                                     98 ;s1                        Allocated to registers r5 r6 r7 
                                     99 ;------------------------------------------------------------
                                    100 ;	_strtok.c:36: char * strtok (
                                    101 ;	-----------------------------------------
                                    102 ;	 function strtok
                                    103 ;	-----------------------------------------
      000000                        104 _strtok:
                           000007   105 	ar7 = 0x07
                           000006   106 	ar6 = 0x06
                           000005   107 	ar5 = 0x05
                           000004   108 	ar4 = 0x04
                           000003   109 	ar3 = 0x03
                           000002   110 	ar2 = 0x02
                           000001   111 	ar1 = 0x01
                           000000   112 	ar0 = 0x00
      000000 C0*00            [24]  113 	push	_bp
      000002 85 81*00         [24]  114 	mov	_bp,sp
      000005 AD 82            [24]  115 	mov	r5,dpl
      000007 AE 83            [24]  116 	mov	r6,dph
      000009 AF F0            [24]  117 	mov	r7,b
                                    118 ;	_strtok.c:43: if ( str )
      00000B ED               [12]  119 	mov	a,r5
      00000C 4E               [12]  120 	orl	a,r6
      00000D 60 0A            [24]  121 	jz	00102$
                                    122 ;	_strtok.c:44: s = str ;
      00000F 78r00            [12]  123 	mov	r0,#_strtok_s_1_22
      000011 ED               [12]  124 	mov	a,r5
      000012 F2               [24]  125 	movx	@r0,a
      000013 08               [12]  126 	inc	r0
      000014 EE               [12]  127 	mov	a,r6
      000015 F2               [24]  128 	movx	@r0,a
      000016 08               [12]  129 	inc	r0
      000017 EF               [12]  130 	mov	a,r7
      000018 F2               [24]  131 	movx	@r0,a
      000019                        132 00102$:
                                    133 ;	_strtok.c:45: if ( !s )
      000019 78r00            [12]  134 	mov	r0,#_strtok_s_1_22
      00001B E2               [24]  135 	movx	a,@r0
      00001C F5 F0            [12]  136 	mov	b,a
      00001E 08               [12]  137 	inc	r0
      00001F E2               [24]  138 	movx	a,@r0
      000020 45 F0            [12]  139 	orl	a,b
                                    140 ;	_strtok.c:46: return NULL;
      000022 70 08            [24]  141 	jnz	00108$
      000024 90 00 00         [24]  142 	mov	dptr,#0x0000
      000027 F5 F0            [12]  143 	mov	b,a
      000029 02r01r0C         [24]  144 	ljmp	00119$
                                    145 ;	_strtok.c:48: while (*s) {
      00002C                        146 00108$:
      00002C 78r00            [12]  147 	mov	r0,#_strtok_s_1_22
      00002E E2               [24]  148 	movx	a,@r0
      00002F FD               [12]  149 	mov	r5,a
      000030 08               [12]  150 	inc	r0
      000031 E2               [24]  151 	movx	a,@r0
      000032 FE               [12]  152 	mov	r6,a
      000033 08               [12]  153 	inc	r0
      000034 E2               [24]  154 	movx	a,@r0
      000035 FF               [12]  155 	mov	r7,a
      000036 8D 82            [24]  156 	mov	dpl,r5
      000038 8E 83            [24]  157 	mov	dph,r6
      00003A 8F F0            [24]  158 	mov	b,r7
      00003C 12r00r00         [24]  159 	lcall	__gptrget
      00003F FF               [12]  160 	mov	r7,a
      000040 60 2B            [24]  161 	jz	00110$
                                    162 ;	_strtok.c:49: if (strchr(control,*s))
      000042 C0 07            [24]  163 	push	ar7
      000044 E5*00            [12]  164 	mov	a,_bp
      000046 24 FB            [12]  165 	add	a,#0xfb
      000048 F8               [12]  166 	mov	r0,a
      000049 86 82            [24]  167 	mov	dpl,@r0
      00004B 08               [12]  168 	inc	r0
      00004C 86 83            [24]  169 	mov	dph,@r0
      00004E 08               [12]  170 	inc	r0
      00004F 86 F0            [24]  171 	mov	b,@r0
      000051 12r00r00         [24]  172 	lcall	_strchr
      000054 AD 82            [24]  173 	mov	r5,dpl
      000056 AE 83            [24]  174 	mov	r6,dph
      000058 AF F0            [24]  175 	mov	r7,b
      00005A 15 81            [12]  176 	dec	sp
      00005C ED               [12]  177 	mov	a,r5
      00005D 4E               [12]  178 	orl	a,r6
      00005E 60 0D            [24]  179 	jz	00110$
                                    180 ;	_strtok.c:50: s++;
      000060 78r00            [12]  181 	mov	r0,#_strtok_s_1_22
      000062 E2               [24]  182 	movx	a,@r0
      000063 24 01            [12]  183 	add	a,#0x01
      000065 F2               [24]  184 	movx	@r0,a
      000066 08               [12]  185 	inc	r0
      000067 E2               [24]  186 	movx	a,@r0
      000068 34 00            [12]  187 	addc	a,#0x00
      00006A F2               [24]  188 	movx	@r0,a
                                    189 ;	_strtok.c:52: break;
      00006B 80 BF            [24]  190 	sjmp	00108$
      00006D                        191 00110$:
                                    192 ;	_strtok.c:55: s1 = s ;
      00006D 78r00            [12]  193 	mov	r0,#_strtok_s_1_22
      00006F E2               [24]  194 	movx	a,@r0
      000070 FD               [12]  195 	mov	r5,a
      000071 08               [12]  196 	inc	r0
      000072 E2               [24]  197 	movx	a,@r0
      000073 FE               [12]  198 	mov	r6,a
      000074 08               [12]  199 	inc	r0
      000075 E2               [24]  200 	movx	a,@r0
      000076 FF               [12]  201 	mov	r7,a
                                    202 ;	_strtok.c:57: while (*s) {
      000077                        203 00113$:
      000077 78r00            [12]  204 	mov	r0,#_strtok_s_1_22
      000079 E2               [24]  205 	movx	a,@r0
      00007A FA               [12]  206 	mov	r2,a
      00007B 08               [12]  207 	inc	r0
      00007C E2               [24]  208 	movx	a,@r0
      00007D FB               [12]  209 	mov	r3,a
      00007E 08               [12]  210 	inc	r0
      00007F E2               [24]  211 	movx	a,@r0
      000080 FC               [12]  212 	mov	r4,a
      000081 8A 82            [24]  213 	mov	dpl,r2
      000083 8B 83            [24]  214 	mov	dph,r3
      000085 8C F0            [24]  215 	mov	b,r4
      000087 12r00r00         [24]  216 	lcall	__gptrget
      00008A FC               [12]  217 	mov	r4,a
      00008B 60 5E            [24]  218 	jz	00115$
                                    219 ;	_strtok.c:58: if (strchr(control,*s)) {
      00008D C0 07            [24]  220 	push	ar7
      00008F C0 06            [24]  221 	push	ar6
      000091 C0 05            [24]  222 	push	ar5
      000093 C0 04            [24]  223 	push	ar4
      000095 E5*00            [12]  224 	mov	a,_bp
      000097 24 FB            [12]  225 	add	a,#0xfb
      000099 F8               [12]  226 	mov	r0,a
      00009A 86 82            [24]  227 	mov	dpl,@r0
      00009C 08               [12]  228 	inc	r0
      00009D 86 83            [24]  229 	mov	dph,@r0
      00009F 08               [12]  230 	inc	r0
      0000A0 86 F0            [24]  231 	mov	b,@r0
      0000A2 12r00r00         [24]  232 	lcall	_strchr
      0000A5 AA 82            [24]  233 	mov	r2,dpl
      0000A7 AB 83            [24]  234 	mov	r3,dph
      0000A9 AC F0            [24]  235 	mov	r4,b
      0000AB 15 81            [12]  236 	dec	sp
      0000AD D0 05            [24]  237 	pop	ar5
      0000AF D0 06            [24]  238 	pop	ar6
      0000B1 D0 07            [24]  239 	pop	ar7
      0000B3 EA               [12]  240 	mov	a,r2
      0000B4 4B               [12]  241 	orl	a,r3
      0000B5 60 27            [24]  242 	jz	00112$
                                    243 ;	_strtok.c:59: *s++ = '\0';
      0000B7 78r00            [12]  244 	mov	r0,#_strtok_s_1_22
      0000B9 E2               [24]  245 	movx	a,@r0
      0000BA FA               [12]  246 	mov	r2,a
      0000BB 08               [12]  247 	inc	r0
      0000BC E2               [24]  248 	movx	a,@r0
      0000BD FB               [12]  249 	mov	r3,a
      0000BE 08               [12]  250 	inc	r0
      0000BF E2               [24]  251 	movx	a,@r0
      0000C0 FC               [12]  252 	mov	r4,a
      0000C1 8A 82            [24]  253 	mov	dpl,r2
      0000C3 8B 83            [24]  254 	mov	dph,r3
      0000C5 8C F0            [24]  255 	mov	b,r4
      0000C7 E4               [12]  256 	clr	a
      0000C8 12r00r00         [24]  257 	lcall	__gptrput
      0000CB 78r00            [12]  258 	mov	r0,#_strtok_s_1_22
      0000CD E2               [24]  259 	movx	a,@r0
      0000CE 24 01            [12]  260 	add	a,#0x01
      0000D0 F2               [24]  261 	movx	@r0,a
      0000D1 08               [12]  262 	inc	r0
      0000D2 E2               [24]  263 	movx	a,@r0
      0000D3 34 00            [12]  264 	addc	a,#0x00
      0000D5 F2               [24]  265 	movx	@r0,a
                                    266 ;	_strtok.c:60: return s1 ;
      0000D6 8D 82            [24]  267 	mov	dpl,r5
      0000D8 8E 83            [24]  268 	mov	dph,r6
      0000DA 8F F0            [24]  269 	mov	b,r7
      0000DC 80 2E            [24]  270 	sjmp	00119$
      0000DE                        271 00112$:
                                    272 ;	_strtok.c:62: s++ ;
      0000DE 78r00            [12]  273 	mov	r0,#_strtok_s_1_22
      0000E0 E2               [24]  274 	movx	a,@r0
      0000E1 24 01            [12]  275 	add	a,#0x01
      0000E3 F2               [24]  276 	movx	@r0,a
      0000E4 08               [12]  277 	inc	r0
      0000E5 E2               [24]  278 	movx	a,@r0
      0000E6 34 00            [12]  279 	addc	a,#0x00
      0000E8 F2               [24]  280 	movx	@r0,a
      0000E9 80 8C            [24]  281 	sjmp	00113$
      0000EB                        282 00115$:
                                    283 ;	_strtok.c:65: s = NULL;
      0000EB 78r00            [12]  284 	mov	r0,#_strtok_s_1_22
      0000ED E4               [12]  285 	clr	a
      0000EE F2               [24]  286 	movx	@r0,a
      0000EF 08               [12]  287 	inc	r0
      0000F0 F2               [24]  288 	movx	@r0,a
      0000F1 08               [12]  289 	inc	r0
      0000F2 F2               [24]  290 	movx	@r0,a
                                    291 ;	_strtok.c:67: if (*s1)
      0000F3 8D 82            [24]  292 	mov	dpl,r5
      0000F5 8E 83            [24]  293 	mov	dph,r6
      0000F7 8F F0            [24]  294 	mov	b,r7
      0000F9 12r00r00         [24]  295 	lcall	__gptrget
      0000FC 60 08            [24]  296 	jz	00117$
                                    297 ;	_strtok.c:68: return s1;
      0000FE 8D 82            [24]  298 	mov	dpl,r5
      000100 8E 83            [24]  299 	mov	dph,r6
      000102 8F F0            [24]  300 	mov	b,r7
      000104 80 06            [24]  301 	sjmp	00119$
      000106                        302 00117$:
                                    303 ;	_strtok.c:70: return NULL;
      000106 90 00 00         [24]  304 	mov	dptr,#0x0000
      000109 75 F0 00         [24]  305 	mov	b,#0x00
      00010C                        306 00119$:
      00010C D0*00            [24]  307 	pop	_bp
      00010E 22               [24]  308 	ret
                                    309 	.area CSEG    (CODE)
                                    310 	.area CONST   (CODE)
                                    311 	.area XINIT   (CODE)
                                    312 	.area CABS    (ABS,CODE)
