                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:07 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _strncmp
                                      7 	.optsdcc -mmcs51 --model-medium
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _strncmp
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram 
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
                                     48 ;--------------------------------------------------------
                                     49 ; paged external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area PSEG    (PAG,XDATA)
                                     52 ;--------------------------------------------------------
                                     53 ; external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area XSEG    (XDATA)
                                     56 ;--------------------------------------------------------
                                     57 ; absolute external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XABS    (ABS,XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; external initialized ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XISEG   (XDATA)
                                     64 	.area HOME    (CODE)
                                     65 	.area GSINIT0 (CODE)
                                     66 	.area GSINIT1 (CODE)
                                     67 	.area GSINIT2 (CODE)
                                     68 	.area GSINIT3 (CODE)
                                     69 	.area GSINIT4 (CODE)
                                     70 	.area GSINIT5 (CODE)
                                     71 	.area GSINIT  (CODE)
                                     72 	.area GSFINAL (CODE)
                                     73 	.area CSEG    (CODE)
                                     74 ;--------------------------------------------------------
                                     75 ; global & static initialisations
                                     76 ;--------------------------------------------------------
                                     77 	.area HOME    (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; Home
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area HOME    (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; code
                                     88 ;--------------------------------------------------------
                                     89 	.area CSEG    (CODE)
                                     90 ;------------------------------------------------------------
                                     91 ;Allocation info for local variables in function 'strncmp'
                                     92 ;------------------------------------------------------------
                                     93 ;last                      Allocated to stack - _bp -5
                                     94 ;count                     Allocated to stack - _bp -7
                                     95 ;first                     Allocated to registers r5 r6 r7 
                                     96 ;sloc0                     Allocated to stack - _bp +1
                                     97 ;sloc1                     Allocated to stack - _bp +3
                                     98 ;------------------------------------------------------------
                                     99 ;	_strncmp.c:31: int strncmp (
                                    100 ;	-----------------------------------------
                                    101 ;	 function strncmp
                                    102 ;	-----------------------------------------
      000000                        103 _strncmp:
                           000007   104 	ar7 = 0x07
                           000006   105 	ar6 = 0x06
                           000005   106 	ar5 = 0x05
                           000004   107 	ar4 = 0x04
                           000003   108 	ar3 = 0x03
                           000002   109 	ar2 = 0x02
                           000001   110 	ar1 = 0x01
                           000000   111 	ar0 = 0x00
      000000 C0*00            [24]  112 	push	_bp
      000002 85 81*00         [24]  113 	mov	_bp,sp
      000005 05 81            [12]  114 	inc	sp
      000007 05 81            [12]  115 	inc	sp
      000009 05 81            [12]  116 	inc	sp
      00000B AD 82            [24]  117 	mov	r5,dpl
      00000D AE 83            [24]  118 	mov	r6,dph
      00000F AF F0            [24]  119 	mov	r7,b
                                    120 ;	_strncmp.c:37: if (!count)
      000011 E5*00            [12]  121 	mov	a,_bp
      000013 24 F9            [12]  122 	add	a,#0xf9
      000015 F8               [12]  123 	mov	r0,a
      000016 E6               [12]  124 	mov	a,@r0
      000017 08               [12]  125 	inc	r0
      000018 46               [12]  126 	orl	a,@r0
      000019 70 06            [24]  127 	jnz	00114$
                                    128 ;	_strncmp.c:38: return(0);
      00001B 90 00 00         [24]  129 	mov	dptr,#0x0000
      00001E 02r00rBE         [24]  130 	ljmp	00108$
                                    131 ;	_strncmp.c:40: while (--count && *first && *first == *last) {
      000021                        132 00114$:
      000021 E5*00            [12]  133 	mov	a,_bp
      000023 24 FB            [12]  134 	add	a,#0xfb
      000025 F8               [12]  135 	mov	r0,a
      000026 86 02            [24]  136 	mov	ar2,@r0
      000028 08               [12]  137 	inc	r0
      000029 86 03            [24]  138 	mov	ar3,@r0
      00002B 08               [12]  139 	inc	r0
      00002C 86 04            [24]  140 	mov	ar4,@r0
      00002E E5*00            [12]  141 	mov	a,_bp
      000030 24 F9            [12]  142 	add	a,#0xf9
      000032 F8               [12]  143 	mov	r0,a
      000033 A9*00            [24]  144 	mov	r1,_bp
      000035 09               [12]  145 	inc	r1
      000036 E6               [12]  146 	mov	a,@r0
      000037 F7               [12]  147 	mov	@r1,a
      000038 08               [12]  148 	inc	r0
      000039 09               [12]  149 	inc	r1
      00003A E6               [12]  150 	mov	a,@r0
      00003B F7               [12]  151 	mov	@r1,a
      00003C                        152 00105$:
      00003C A8*00            [24]  153 	mov	r0,_bp
      00003E 08               [12]  154 	inc	r0
      00003F 16               [12]  155 	dec	@r0
      000040 B6 FF 02         [24]  156 	cjne	@r0,#0xFF,00127$
      000043 08               [12]  157 	inc	r0
      000044 16               [12]  158 	dec	@r0
      000045                        159 00127$:
      000045 A8*00            [24]  160 	mov	r0,_bp
      000047 08               [12]  161 	inc	r0
      000048 E6               [12]  162 	mov	a,@r0
      000049 08               [12]  163 	inc	r0
      00004A 46               [12]  164 	orl	a,@r0
      00004B 60 4C            [24]  165 	jz	00107$
      00004D 8D 82            [24]  166 	mov	dpl,r5
      00004F 8E 83            [24]  167 	mov	dph,r6
      000051 8F F0            [24]  168 	mov	b,r7
      000053 E5*00            [12]  169 	mov	a,_bp
      000055 24 03            [12]  170 	add	a,#0x03
      000057 F8               [12]  171 	mov	r0,a
      000058 12r00r00         [24]  172 	lcall	__gptrget
      00005B F6               [12]  173 	mov	@r0,a
      00005C E5*00            [12]  174 	mov	a,_bp
      00005E 24 03            [12]  175 	add	a,#0x03
      000060 F8               [12]  176 	mov	r0,a
      000061 E6               [12]  177 	mov	a,@r0
      000062 60 35            [24]  178 	jz	00107$
      000064 C0 05            [24]  179 	push	ar5
      000066 C0 06            [24]  180 	push	ar6
      000068 C0 07            [24]  181 	push	ar7
      00006A 8A 82            [24]  182 	mov	dpl,r2
      00006C 8B 83            [24]  183 	mov	dph,r3
      00006E 8C F0            [24]  184 	mov	b,r4
      000070 12r00r00         [24]  185 	lcall	__gptrget
      000073 FF               [12]  186 	mov	r7,a
      000074 E5*00            [12]  187 	mov	a,_bp
      000076 24 03            [12]  188 	add	a,#0x03
      000078 F8               [12]  189 	mov	r0,a
      000079 E6               [12]  190 	mov	a,@r0
      00007A B5 07 02         [24]  191 	cjne	a,ar7,00130$
      00007D 80 08            [24]  192 	sjmp	00131$
      00007F                        193 00130$:
      00007F D0 07            [24]  194 	pop	ar7
      000081 D0 06            [24]  195 	pop	ar6
      000083 D0 05            [24]  196 	pop	ar5
      000085 80 12            [24]  197 	sjmp	00107$
      000087                        198 00131$:
      000087 D0 07            [24]  199 	pop	ar7
      000089 D0 06            [24]  200 	pop	ar6
      00008B D0 05            [24]  201 	pop	ar5
                                    202 ;	_strncmp.c:41: first++;
      00008D 0D               [12]  203 	inc	r5
      00008E BD 00 01         [24]  204 	cjne	r5,#0x00,00132$
      000091 0E               [12]  205 	inc	r6
      000092                        206 00132$:
                                    207 ;	_strncmp.c:42: last++;
      000092 0A               [12]  208 	inc	r2
      000093 BA 00 A6         [24]  209 	cjne	r2,#0x00,00105$
      000096 0B               [12]  210 	inc	r3
      000097 80 A3            [24]  211 	sjmp	00105$
      000099                        212 00107$:
                                    213 ;	_strncmp.c:45: return( *first - *last );
      000099 8D 82            [24]  214 	mov	dpl,r5
      00009B 8E 83            [24]  215 	mov	dph,r6
      00009D 8F F0            [24]  216 	mov	b,r7
      00009F 12r00r00         [24]  217 	lcall	__gptrget
      0000A2 FD               [12]  218 	mov	r5,a
      0000A3 33               [12]  219 	rlc	a
      0000A4 95 E0            [12]  220 	subb	a,acc
      0000A6 FF               [12]  221 	mov	r7,a
      0000A7 8A 82            [24]  222 	mov	dpl,r2
      0000A9 8B 83            [24]  223 	mov	dph,r3
      0000AB 8C F0            [24]  224 	mov	b,r4
      0000AD 12r00r00         [24]  225 	lcall	__gptrget
      0000B0 FA               [12]  226 	mov	r2,a
      0000B1 33               [12]  227 	rlc	a
      0000B2 95 E0            [12]  228 	subb	a,acc
      0000B4 FE               [12]  229 	mov	r6,a
      0000B5 ED               [12]  230 	mov	a,r5
      0000B6 C3               [12]  231 	clr	c
      0000B7 9A               [12]  232 	subb	a,r2
      0000B8 F5 82            [12]  233 	mov	dpl,a
      0000BA EF               [12]  234 	mov	a,r7
      0000BB 9E               [12]  235 	subb	a,r6
      0000BC F5 83            [12]  236 	mov	dph,a
      0000BE                        237 00108$:
      0000BE 85*00 81         [24]  238 	mov	sp,_bp
      0000C1 D0*00            [24]  239 	pop	_bp
      0000C3 22               [24]  240 	ret
                                    241 	.area CSEG    (CODE)
                                    242 	.area CONST   (CODE)
                                    243 	.area XINIT   (CODE)
                                    244 	.area CABS    (ABS,CODE)
