                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:06 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module frexpf
                                      7 	.optsdcc -mmcs51 --model-medium
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _frexpf
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram 
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
                                     48 ;--------------------------------------------------------
                                     49 ; paged external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area PSEG    (PAG,XDATA)
                                     52 ;--------------------------------------------------------
                                     53 ; external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area XSEG    (XDATA)
                                     56 ;--------------------------------------------------------
                                     57 ; absolute external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XABS    (ABS,XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; external initialized ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XISEG   (XDATA)
                                     64 	.area HOME    (CODE)
                                     65 	.area GSINIT0 (CODE)
                                     66 	.area GSINIT1 (CODE)
                                     67 	.area GSINIT2 (CODE)
                                     68 	.area GSINIT3 (CODE)
                                     69 	.area GSINIT4 (CODE)
                                     70 	.area GSINIT5 (CODE)
                                     71 	.area GSINIT  (CODE)
                                     72 	.area GSFINAL (CODE)
                                     73 	.area CSEG    (CODE)
                                     74 ;--------------------------------------------------------
                                     75 ; global & static initialisations
                                     76 ;--------------------------------------------------------
                                     77 	.area HOME    (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; Home
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area HOME    (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; code
                                     88 ;--------------------------------------------------------
                                     89 	.area CSEG    (CODE)
                                     90 ;------------------------------------------------------------
                                     91 ;Allocation info for local variables in function 'frexpf'
                                     92 ;------------------------------------------------------------
                                     93 ;pw2                       Allocated to stack - _bp -5
                                     94 ;x                         Allocated to registers r4 r5 r6 r7 
                                     95 ;fl                        Allocated to stack - _bp +1
                                     96 ;i                         Allocated to stack - _bp +5
                                     97 ;------------------------------------------------------------
                                     98 ;	frexpf.c:34: float frexpf(const float x, int *pw2)
                                     99 ;	-----------------------------------------
                                    100 ;	 function frexpf
                                    101 ;	-----------------------------------------
      000000                        102 _frexpf:
                           000007   103 	ar7 = 0x07
                           000006   104 	ar6 = 0x06
                           000005   105 	ar5 = 0x05
                           000004   106 	ar4 = 0x04
                           000003   107 	ar3 = 0x03
                           000002   108 	ar2 = 0x02
                           000001   109 	ar1 = 0x01
                           000000   110 	ar0 = 0x00
      000000 C0*00            [24]  111 	push	_bp
      000002 85 81*00         [24]  112 	mov	_bp,sp
      000005 AC 82            [24]  113 	mov	r4,dpl
      000007 AD 83            [24]  114 	mov	r5,dph
      000009 AE F0            [24]  115 	mov	r6,b
      00000B FF               [12]  116 	mov	r7,a
      00000C E5 81            [12]  117 	mov	a,sp
      00000E 24 08            [12]  118 	add	a,#0x08
      000010 F5 81            [12]  119 	mov	sp,a
                                    120 ;	frexpf.c:39: fl.f=x;
      000012 E5*00            [12]  121 	mov	a,_bp
      000014 04               [12]  122 	inc	a
      000015 F8               [12]  123 	mov	r0,a
      000016 A6 04            [24]  124 	mov	@r0,ar4
      000018 08               [12]  125 	inc	r0
      000019 A6 05            [24]  126 	mov	@r0,ar5
      00001B 08               [12]  127 	inc	r0
      00001C A6 06            [24]  128 	mov	@r0,ar6
      00001E 08               [12]  129 	inc	r0
      00001F A6 07            [24]  130 	mov	@r0,ar7
                                    131 ;	frexpf.c:41: i  = ( fl.l >> 23) & 0x000000ff;
      000021 A9*00            [24]  132 	mov	r1,_bp
      000023 09               [12]  133 	inc	r1
      000024 87 04            [24]  134 	mov	ar4,@r1
      000026 09               [12]  135 	inc	r1
      000027 87 05            [24]  136 	mov	ar5,@r1
      000029 09               [12]  137 	inc	r1
      00002A 87 06            [24]  138 	mov	ar6,@r1
      00002C 09               [12]  139 	inc	r1
      00002D 87 07            [24]  140 	mov	ar7,@r1
      00002F 19               [12]  141 	dec	r1
      000030 19               [12]  142 	dec	r1
      000031 19               [12]  143 	dec	r1
      000032 8E 04            [24]  144 	mov	ar4,r6
      000034 EF               [12]  145 	mov	a,r7
      000035 A2 E7            [12]  146 	mov	c,acc.7
      000037 CC               [12]  147 	xch	a,r4
      000038 33               [12]  148 	rlc	a
      000039 CC               [12]  149 	xch	a,r4
      00003A 33               [12]  150 	rlc	a
      00003B CC               [12]  151 	xch	a,r4
      00003C 54 01            [12]  152 	anl	a,#0x01
      00003E 30 E0 02         [24]  153 	jnb	acc.0,00103$
      000041 44 FE            [12]  154 	orl	a,#0xFE
      000043                        155 00103$:
      000043 33               [12]  156 	rlc	a
      000044 95 E0            [12]  157 	subb	a,acc
      000046 E5*00            [12]  158 	mov	a,_bp
      000048 24 05            [12]  159 	add	a,#0x05
      00004A F8               [12]  160 	mov	r0,a
      00004B A6 04            [24]  161 	mov	@r0,ar4
      00004D 08               [12]  162 	inc	r0
      00004E 76 00            [12]  163 	mov	@r0,#0x00
      000050 08               [12]  164 	inc	r0
      000051 76 00            [12]  165 	mov	@r0,#0x00
      000053 08               [12]  166 	inc	r0
      000054 76 00            [12]  167 	mov	@r0,#0x00
                                    168 ;	frexpf.c:42: i -= 0x7e;
      000056 E5*00            [12]  169 	mov	a,_bp
      000058 24 05            [12]  170 	add	a,#0x05
      00005A F8               [12]  171 	mov	r0,a
      00005B E6               [12]  172 	mov	a,@r0
      00005C 24 82            [12]  173 	add	a,#0x82
      00005E F6               [12]  174 	mov	@r0,a
      00005F 08               [12]  175 	inc	r0
      000060 E6               [12]  176 	mov	a,@r0
      000061 34 FF            [12]  177 	addc	a,#0xFF
      000063 F6               [12]  178 	mov	@r0,a
      000064 08               [12]  179 	inc	r0
      000065 E6               [12]  180 	mov	a,@r0
      000066 34 FF            [12]  181 	addc	a,#0xFF
      000068 F6               [12]  182 	mov	@r0,a
      000069 08               [12]  183 	inc	r0
      00006A E6               [12]  184 	mov	a,@r0
      00006B 34 FF            [12]  185 	addc	a,#0xFF
      00006D F6               [12]  186 	mov	@r0,a
                                    187 ;	frexpf.c:43: *pw2 = i;
      00006E E5*00            [12]  188 	mov	a,_bp
      000070 24 FB            [12]  189 	add	a,#0xfb
      000072 F8               [12]  190 	mov	r0,a
      000073 86 02            [24]  191 	mov	ar2,@r0
      000075 08               [12]  192 	inc	r0
      000076 86 03            [24]  193 	mov	ar3,@r0
      000078 08               [12]  194 	inc	r0
      000079 86 07            [24]  195 	mov	ar7,@r0
      00007B E5*00            [12]  196 	mov	a,_bp
      00007D 24 05            [12]  197 	add	a,#0x05
      00007F F8               [12]  198 	mov	r0,a
      000080 86 04            [24]  199 	mov	ar4,@r0
      000082 08               [12]  200 	inc	r0
      000083 86 05            [24]  201 	mov	ar5,@r0
      000085 8A 82            [24]  202 	mov	dpl,r2
      000087 8B 83            [24]  203 	mov	dph,r3
      000089 8F F0            [24]  204 	mov	b,r7
      00008B EC               [12]  205 	mov	a,r4
      00008C 12r00r00         [24]  206 	lcall	__gptrput
      00008F A3               [24]  207 	inc	dptr
      000090 ED               [12]  208 	mov	a,r5
      000091 12r00r00         [24]  209 	lcall	__gptrput
                                    210 ;	frexpf.c:44: fl.l &= 0x807fffff; /* strip all exponent bits */
      000094 87 04            [24]  211 	mov	ar4,@r1
      000096 09               [12]  212 	inc	r1
      000097 87 05            [24]  213 	mov	ar5,@r1
      000099 09               [12]  214 	inc	r1
      00009A 87 06            [24]  215 	mov	ar6,@r1
      00009C 09               [12]  216 	inc	r1
      00009D 87 07            [24]  217 	mov	ar7,@r1
      00009F 19               [12]  218 	dec	r1
      0000A0 19               [12]  219 	dec	r1
      0000A1 19               [12]  220 	dec	r1
      0000A2 53 06 7F         [24]  221 	anl	ar6,#0x7F
      0000A5 53 07 80         [24]  222 	anl	ar7,#0x80
      0000A8 A7 04            [24]  223 	mov	@r1,ar4
      0000AA 09               [12]  224 	inc	r1
      0000AB A7 05            [24]  225 	mov	@r1,ar5
      0000AD 09               [12]  226 	inc	r1
      0000AE A7 06            [24]  227 	mov	@r1,ar6
      0000B0 09               [12]  228 	inc	r1
      0000B1 A7 07            [24]  229 	mov	@r1,ar7
      0000B3 19               [12]  230 	dec	r1
      0000B4 19               [12]  231 	dec	r1
      0000B5 19               [12]  232 	dec	r1
                                    233 ;	frexpf.c:45: fl.l |= 0x3f000000; /* mantissa between 0.5 and 1 */
      0000B6 87 04            [24]  234 	mov	ar4,@r1
      0000B8 09               [12]  235 	inc	r1
      0000B9 87 05            [24]  236 	mov	ar5,@r1
      0000BB 09               [12]  237 	inc	r1
      0000BC 87 06            [24]  238 	mov	ar6,@r1
      0000BE 09               [12]  239 	inc	r1
      0000BF 87 07            [24]  240 	mov	ar7,@r1
      0000C1 19               [12]  241 	dec	r1
      0000C2 19               [12]  242 	dec	r1
      0000C3 19               [12]  243 	dec	r1
      0000C4 43 07 3F         [24]  244 	orl	ar7,#0x3F
      0000C7 A7 04            [24]  245 	mov	@r1,ar4
      0000C9 09               [12]  246 	inc	r1
      0000CA A7 05            [24]  247 	mov	@r1,ar5
      0000CC 09               [12]  248 	inc	r1
      0000CD A7 06            [24]  249 	mov	@r1,ar6
      0000CF 09               [12]  250 	inc	r1
      0000D0 A7 07            [24]  251 	mov	@r1,ar7
                                    252 ;	frexpf.c:46: return(fl.f);
      0000D2 A9*00            [24]  253 	mov	r1,_bp
      0000D4 09               [12]  254 	inc	r1
      0000D5 87 04            [24]  255 	mov	ar4,@r1
      0000D7 09               [12]  256 	inc	r1
      0000D8 87 05            [24]  257 	mov	ar5,@r1
      0000DA 09               [12]  258 	inc	r1
      0000DB 87 06            [24]  259 	mov	ar6,@r1
      0000DD 09               [12]  260 	inc	r1
      0000DE 87 07            [24]  261 	mov	ar7,@r1
      0000E0 8C 82            [24]  262 	mov	dpl,r4
      0000E2 8D 83            [24]  263 	mov	dph,r5
      0000E4 8E F0            [24]  264 	mov	b,r6
      0000E6 EF               [12]  265 	mov	a,r7
      0000E7 85*00 81         [24]  266 	mov	sp,_bp
      0000EA D0*00            [24]  267 	pop	_bp
      0000EC 22               [24]  268 	ret
                                    269 	.area CSEG    (CODE)
                                    270 	.area CONST   (CODE)
                                    271 	.area XINIT   (CODE)
                                    272 	.area CABS    (ABS,CODE)
