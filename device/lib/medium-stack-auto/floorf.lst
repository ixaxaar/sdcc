                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:07 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module floorf
                                      7 	.optsdcc -mmcs51 --model-medium
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _floorf
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram 
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
                                     48 ;--------------------------------------------------------
                                     49 ; paged external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area PSEG    (PAG,XDATA)
                                     52 ;--------------------------------------------------------
                                     53 ; external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area XSEG    (XDATA)
                                     56 ;--------------------------------------------------------
                                     57 ; absolute external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XABS    (ABS,XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; external initialized ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XISEG   (XDATA)
                                     64 	.area HOME    (CODE)
                                     65 	.area GSINIT0 (CODE)
                                     66 	.area GSINIT1 (CODE)
                                     67 	.area GSINIT2 (CODE)
                                     68 	.area GSINIT3 (CODE)
                                     69 	.area GSINIT4 (CODE)
                                     70 	.area GSINIT5 (CODE)
                                     71 	.area GSINIT  (CODE)
                                     72 	.area GSFINAL (CODE)
                                     73 	.area CSEG    (CODE)
                                     74 ;--------------------------------------------------------
                                     75 ; global & static initialisations
                                     76 ;--------------------------------------------------------
                                     77 	.area HOME    (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; Home
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area HOME    (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; code
                                     88 ;--------------------------------------------------------
                                     89 	.area CSEG    (CODE)
                                     90 ;------------------------------------------------------------
                                     91 ;Allocation info for local variables in function 'floorf'
                                     92 ;------------------------------------------------------------
                                     93 ;x                         Allocated to stack - _bp +1
                                     94 ;r                         Allocated to stack - _bp +5
                                     95 ;------------------------------------------------------------
                                     96 ;	floorf.c:33: float floorf (float x) _FLOAT_FUNC_REENTRANT
                                     97 ;	-----------------------------------------
                                     98 ;	 function floorf
                                     99 ;	-----------------------------------------
      000000                        100 _floorf:
                           000007   101 	ar7 = 0x07
                           000006   102 	ar6 = 0x06
                           000005   103 	ar5 = 0x05
                           000004   104 	ar4 = 0x04
                           000003   105 	ar3 = 0x03
                           000002   106 	ar2 = 0x02
                           000001   107 	ar1 = 0x01
                           000000   108 	ar0 = 0x00
      000000 C0*00            [24]  109 	push	_bp
      000002 85 81*00         [24]  110 	mov	_bp,sp
      000005 C0 82            [24]  111 	push	dpl
      000007 C0 83            [24]  112 	push	dph
      000009 C0 F0            [24]  113 	push	b
      00000B C0 E0            [24]  114 	push	acc
      00000D E5 81            [12]  115 	mov	a,sp
      00000F 24 04            [12]  116 	add	a,#0x04
      000011 F5 81            [12]  117 	mov	sp,a
                                    118 ;	floorf.c:36: r=x;
      000013 A8*00            [24]  119 	mov	r0,_bp
      000015 08               [12]  120 	inc	r0
      000016 86 82            [24]  121 	mov	dpl,@r0
      000018 08               [12]  122 	inc	r0
      000019 86 83            [24]  123 	mov	dph,@r0
      00001B 08               [12]  124 	inc	r0
      00001C 86 F0            [24]  125 	mov	b,@r0
      00001E 08               [12]  126 	inc	r0
      00001F E6               [12]  127 	mov	a,@r0
      000020 12r00r00         [24]  128 	lcall	___fs2slong
      000023 AF 82            [24]  129 	mov	r7,dpl
      000025 AE 83            [24]  130 	mov	r6,dph
      000027 AD F0            [24]  131 	mov	r5,b
      000029 FC               [12]  132 	mov	r4,a
      00002A E5*00            [12]  133 	mov	a,_bp
      00002C 24 05            [12]  134 	add	a,#0x05
      00002E F8               [12]  135 	mov	r0,a
      00002F A6 07            [24]  136 	mov	@r0,ar7
      000031 08               [12]  137 	inc	r0
      000032 A6 06            [24]  138 	mov	@r0,ar6
      000034 08               [12]  139 	inc	r0
      000035 A6 05            [24]  140 	mov	@r0,ar5
      000037 08               [12]  141 	inc	r0
      000038 A6 04            [24]  142 	mov	@r0,ar4
                                    143 ;	floorf.c:37: if (r<=0)
      00003A E5*00            [12]  144 	mov	a,_bp
      00003C 24 05            [12]  145 	add	a,#0x05
      00003E F8               [12]  146 	mov	r0,a
      00003F C3               [12]  147 	clr	c
      000040 E4               [12]  148 	clr	a
      000041 96               [12]  149 	subb	a,@r0
      000042 E4               [12]  150 	clr	a
      000043 08               [12]  151 	inc	r0
      000044 96               [12]  152 	subb	a,@r0
      000045 E4               [12]  153 	clr	a
      000046 08               [12]  154 	inc	r0
      000047 96               [12]  155 	subb	a,@r0
      000048 74 80            [12]  156 	mov	a,#(0x00 ^ 0x80)
      00004A 08               [12]  157 	inc	r0
      00004B 86 F0            [24]  158 	mov	b,@r0
      00004D 63 F0 80         [24]  159 	xrl	b,#0x80
      000050 95 F0            [12]  160 	subb	a,b
      000052 50 03            [24]  161 	jnc	00114$
      000054 02r00rC9         [24]  162 	ljmp	00102$
      000057                        163 00114$:
                                    164 ;	floorf.c:38: return (r+((r>x)?-1:0));
      000057 E5*00            [12]  165 	mov	a,_bp
      000059 24 05            [12]  166 	add	a,#0x05
      00005B F8               [12]  167 	mov	r0,a
      00005C 86 82            [24]  168 	mov	dpl,@r0
      00005E 08               [12]  169 	inc	r0
      00005F 86 83            [24]  170 	mov	dph,@r0
      000061 08               [12]  171 	inc	r0
      000062 86 F0            [24]  172 	mov	b,@r0
      000064 08               [12]  173 	inc	r0
      000065 E6               [12]  174 	mov	a,@r0
      000066 12r00r00         [24]  175 	lcall	___slong2fs
      000069 AC 82            [24]  176 	mov	r4,dpl
      00006B AD 83            [24]  177 	mov	r5,dph
      00006D AE F0            [24]  178 	mov	r6,b
      00006F FF               [12]  179 	mov	r7,a
      000070 A8*00            [24]  180 	mov	r0,_bp
      000072 08               [12]  181 	inc	r0
      000073 E6               [12]  182 	mov	a,@r0
      000074 C0 E0            [24]  183 	push	acc
      000076 08               [12]  184 	inc	r0
      000077 E6               [12]  185 	mov	a,@r0
      000078 C0 E0            [24]  186 	push	acc
      00007A 08               [12]  187 	inc	r0
      00007B E6               [12]  188 	mov	a,@r0
      00007C C0 E0            [24]  189 	push	acc
      00007E 08               [12]  190 	inc	r0
      00007F E6               [12]  191 	mov	a,@r0
      000080 C0 E0            [24]  192 	push	acc
      000082 8C 82            [24]  193 	mov	dpl,r4
      000084 8D 83            [24]  194 	mov	dph,r5
      000086 8E F0            [24]  195 	mov	b,r6
      000088 EF               [12]  196 	mov	a,r7
      000089 12r00r00         [24]  197 	lcall	___fsgt
      00008C AF 82            [24]  198 	mov	r7,dpl
      00008E E5 81            [12]  199 	mov	a,sp
      000090 24 FC            [12]  200 	add	a,#0xfc
      000092 F5 81            [12]  201 	mov	sp,a
      000094 EF               [12]  202 	mov	a,r7
      000095 60 04            [24]  203 	jz	00106$
      000097 7F FF            [12]  204 	mov	r7,#0xFF
      000099 80 02            [24]  205 	sjmp	00107$
      00009B                        206 00106$:
      00009B 7F 00            [12]  207 	mov	r7,#0x00
      00009D                        208 00107$:
      00009D EF               [12]  209 	mov	a,r7
      00009E 33               [12]  210 	rlc	a
      00009F 95 E0            [12]  211 	subb	a,acc
      0000A1 FE               [12]  212 	mov	r6,a
      0000A2 FD               [12]  213 	mov	r5,a
      0000A3 FC               [12]  214 	mov	r4,a
      0000A4 E5*00            [12]  215 	mov	a,_bp
      0000A6 24 05            [12]  216 	add	a,#0x05
      0000A8 F8               [12]  217 	mov	r0,a
      0000A9 EF               [12]  218 	mov	a,r7
      0000AA 26               [12]  219 	add	a,@r0
      0000AB FF               [12]  220 	mov	r7,a
      0000AC EE               [12]  221 	mov	a,r6
      0000AD 08               [12]  222 	inc	r0
      0000AE 36               [12]  223 	addc	a,@r0
      0000AF FE               [12]  224 	mov	r6,a
      0000B0 ED               [12]  225 	mov	a,r5
      0000B1 08               [12]  226 	inc	r0
      0000B2 36               [12]  227 	addc	a,@r0
      0000B3 FD               [12]  228 	mov	r5,a
      0000B4 EC               [12]  229 	mov	a,r4
      0000B5 08               [12]  230 	inc	r0
      0000B6 36               [12]  231 	addc	a,@r0
      0000B7 8F 82            [24]  232 	mov	dpl,r7
      0000B9 8E 83            [24]  233 	mov	dph,r6
      0000BB 8D F0            [24]  234 	mov	b,r5
      0000BD 12r00r00         [24]  235 	lcall	___slong2fs
      0000C0 AC 82            [24]  236 	mov	r4,dpl
      0000C2 AD 83            [24]  237 	mov	r5,dph
      0000C4 AE F0            [24]  238 	mov	r6,b
      0000C6 FF               [12]  239 	mov	r7,a
      0000C7 80 19            [24]  240 	sjmp	00104$
      0000C9                        241 00102$:
                                    242 ;	floorf.c:40: return r;
      0000C9 E5*00            [12]  243 	mov	a,_bp
      0000CB 24 05            [12]  244 	add	a,#0x05
      0000CD F8               [12]  245 	mov	r0,a
      0000CE 86 82            [24]  246 	mov	dpl,@r0
      0000D0 08               [12]  247 	inc	r0
      0000D1 86 83            [24]  248 	mov	dph,@r0
      0000D3 08               [12]  249 	inc	r0
      0000D4 86 F0            [24]  250 	mov	b,@r0
      0000D6 08               [12]  251 	inc	r0
      0000D7 E6               [12]  252 	mov	a,@r0
      0000D8 12r00r00         [24]  253 	lcall	___slong2fs
      0000DB AC 82            [24]  254 	mov	r4,dpl
      0000DD AD 83            [24]  255 	mov	r5,dph
      0000DF AE F0            [24]  256 	mov	r6,b
      0000E1 FF               [12]  257 	mov	r7,a
      0000E2                        258 00104$:
      0000E2 85*00 81         [24]  259 	mov	sp,_bp
      0000E5 D0*00            [24]  260 	pop	_bp
      0000E7 22               [24]  261 	ret
                                    262 	.area CSEG    (CODE)
                                    263 	.area CONST   (CODE)
                                    264 	.area XINIT   (CODE)
                                    265 	.area CABS    (ABS,CODE)
