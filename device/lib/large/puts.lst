                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:27:57 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module puts
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _puts
                                     13 	.globl _putchar
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram 
                                     35 ;--------------------------------------------------------
                                     36 ;--------------------------------------------------------
                                     37 ; indirectly addressable internal ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area ISEG    (DATA)
                                     40 ;--------------------------------------------------------
                                     41 ; absolute internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area IABS    (ABS,DATA)
                                     44 	.area IABS    (ABS,DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; bit data
                                     47 ;--------------------------------------------------------
                                     48 	.area BSEG    (BIT)
                                     49 ;--------------------------------------------------------
                                     50 ; paged external ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area PSEG    (PAG,XDATA)
                                     53 ;--------------------------------------------------------
                                     54 ; external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area XSEG    (XDATA)
      000000                         57 _puts_s_1_2:
      000000                         58 	.ds 3
                                     59 ;--------------------------------------------------------
                                     60 ; absolute external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XABS    (ABS,XDATA)
                                     63 ;--------------------------------------------------------
                                     64 ; external initialized ram data
                                     65 ;--------------------------------------------------------
                                     66 	.area XISEG   (XDATA)
                                     67 	.area HOME    (CODE)
                                     68 	.area GSINIT0 (CODE)
                                     69 	.area GSINIT1 (CODE)
                                     70 	.area GSINIT2 (CODE)
                                     71 	.area GSINIT3 (CODE)
                                     72 	.area GSINIT4 (CODE)
                                     73 	.area GSINIT5 (CODE)
                                     74 	.area GSINIT  (CODE)
                                     75 	.area GSFINAL (CODE)
                                     76 	.area CSEG    (CODE)
                                     77 ;--------------------------------------------------------
                                     78 ; global & static initialisations
                                     79 ;--------------------------------------------------------
                                     80 	.area HOME    (CODE)
                                     81 	.area GSINIT  (CODE)
                                     82 	.area GSFINAL (CODE)
                                     83 	.area GSINIT  (CODE)
                                     84 ;--------------------------------------------------------
                                     85 ; Home
                                     86 ;--------------------------------------------------------
                                     87 	.area HOME    (CODE)
                                     88 	.area HOME    (CODE)
                                     89 ;--------------------------------------------------------
                                     90 ; code
                                     91 ;--------------------------------------------------------
                                     92 	.area CSEG    (CODE)
                                     93 ;------------------------------------------------------------
                                     94 ;Allocation info for local variables in function 'puts'
                                     95 ;------------------------------------------------------------
                                     96 ;s                         Allocated with name '_puts_s_1_2'
                                     97 ;i                         Allocated with name '_puts_i_1_3'
                                     98 ;------------------------------------------------------------
                                     99 ;	puts.c:31: int puts (char *s)
                                    100 ;	-----------------------------------------
                                    101 ;	 function puts
                                    102 ;	-----------------------------------------
      000000                        103 _puts:
                           000007   104 	ar7 = 0x07
                           000006   105 	ar6 = 0x06
                           000005   106 	ar5 = 0x05
                           000004   107 	ar4 = 0x04
                           000003   108 	ar3 = 0x03
                           000002   109 	ar2 = 0x02
                           000001   110 	ar1 = 0x01
                           000000   111 	ar0 = 0x00
      000000 AF F0            [24]  112 	mov	r7,b
      000002 AE 83            [24]  113 	mov	r6,dph
      000004 E5 82            [12]  114 	mov	a,dpl
      000006 90r00r00         [24]  115 	mov	dptr,#_puts_s_1_2
      000009 F0               [24]  116 	movx	@dptr,a
      00000A EE               [12]  117 	mov	a,r6
      00000B A3               [24]  118 	inc	dptr
      00000C F0               [24]  119 	movx	@dptr,a
      00000D EF               [12]  120 	mov	a,r7
      00000E A3               [24]  121 	inc	dptr
      00000F F0               [24]  122 	movx	@dptr,a
                                    123 ;	puts.c:34: while (*s){
      000010 90r00r00         [24]  124 	mov	dptr,#_puts_s_1_2
      000013 E0               [24]  125 	movx	a,@dptr
      000014 FD               [12]  126 	mov	r5,a
      000015 A3               [24]  127 	inc	dptr
      000016 E0               [24]  128 	movx	a,@dptr
      000017 FE               [12]  129 	mov	r6,a
      000018 A3               [24]  130 	inc	dptr
      000019 E0               [24]  131 	movx	a,@dptr
      00001A FF               [12]  132 	mov	r7,a
      00001B 7B 00            [12]  133 	mov	r3,#0x00
      00001D 7C 00            [12]  134 	mov	r4,#0x00
      00001F                        135 00101$:
      00001F 8D 82            [24]  136 	mov	dpl,r5
      000021 8E 83            [24]  137 	mov	dph,r6
      000023 8F F0            [24]  138 	mov	b,r7
      000025 12r00r00         [24]  139 	lcall	__gptrget
      000028 FA               [12]  140 	mov	r2,a
      000029 60 30            [24]  141 	jz	00108$
                                    142 ;	puts.c:35: putchar(*s++);
      00002B 0D               [12]  143 	inc	r5
      00002C BD 00 01         [24]  144 	cjne	r5,#0x00,00114$
      00002F 0E               [12]  145 	inc	r6
      000030                        146 00114$:
      000030 90r00r00         [24]  147 	mov	dptr,#_puts_s_1_2
      000033 ED               [12]  148 	mov	a,r5
      000034 F0               [24]  149 	movx	@dptr,a
      000035 EE               [12]  150 	mov	a,r6
      000036 A3               [24]  151 	inc	dptr
      000037 F0               [24]  152 	movx	@dptr,a
      000038 EF               [12]  153 	mov	a,r7
      000039 A3               [24]  154 	inc	dptr
      00003A F0               [24]  155 	movx	@dptr,a
      00003B 8A 82            [24]  156 	mov	dpl,r2
      00003D C0 07            [24]  157 	push	ar7
      00003F C0 06            [24]  158 	push	ar6
      000041 C0 05            [24]  159 	push	ar5
      000043 C0 04            [24]  160 	push	ar4
      000045 C0 03            [24]  161 	push	ar3
      000047 12r00r00         [24]  162 	lcall	_putchar
      00004A D0 03            [24]  163 	pop	ar3
      00004C D0 04            [24]  164 	pop	ar4
      00004E D0 05            [24]  165 	pop	ar5
      000050 D0 06            [24]  166 	pop	ar6
      000052 D0 07            [24]  167 	pop	ar7
                                    168 ;	puts.c:36: i++;
      000054 0B               [12]  169 	inc	r3
      000055 BB 00 C7         [24]  170 	cjne	r3,#0x00,00101$
      000058 0C               [12]  171 	inc	r4
      000059 80 C4            [24]  172 	sjmp	00101$
      00005B                        173 00108$:
      00005B 90r00r00         [24]  174 	mov	dptr,#_puts_s_1_2
      00005E ED               [12]  175 	mov	a,r5
      00005F F0               [24]  176 	movx	@dptr,a
      000060 EE               [12]  177 	mov	a,r6
      000061 A3               [24]  178 	inc	dptr
      000062 F0               [24]  179 	movx	@dptr,a
      000063 EF               [12]  180 	mov	a,r7
      000064 A3               [24]  181 	inc	dptr
      000065 F0               [24]  182 	movx	@dptr,a
                                    183 ;	puts.c:38: putchar('\n');
      000066 75 82 0A         [24]  184 	mov	dpl,#0x0A
      000069 C0 04            [24]  185 	push	ar4
      00006B C0 03            [24]  186 	push	ar3
      00006D 12r00r00         [24]  187 	lcall	_putchar
      000070 D0 03            [24]  188 	pop	ar3
      000072 D0 04            [24]  189 	pop	ar4
                                    190 ;	puts.c:39: return i+1;
      000074 0B               [12]  191 	inc	r3
      000075 BB 00 01         [24]  192 	cjne	r3,#0x00,00116$
      000078 0C               [12]  193 	inc	r4
      000079                        194 00116$:
      000079 8B 82            [24]  195 	mov	dpl,r3
      00007B 8C 83            [24]  196 	mov	dph,r4
      00007D 22               [24]  197 	ret
                                    198 	.area CSEG    (CODE)
                                    199 	.area CONST   (CODE)
                                    200 	.area XINIT   (CODE)
                                    201 	.area CABS    (ABS,CODE)
