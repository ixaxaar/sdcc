                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:27:57 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _memcmp
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _memcmp_PARM_3
                                     13 	.globl _memcmp_PARM_2
                                     14 	.globl _memcmp
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram 
                                     36 ;--------------------------------------------------------
                                     37 	.area	OSEG    (OVR,DATA)
      000000                         38 _memcmp_sloc0_1_0:
      000000                         39 	.ds 3
                                     40 ;--------------------------------------------------------
                                     41 ; indirectly addressable internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area ISEG    (DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; absolute internal ram data
                                     46 ;--------------------------------------------------------
                                     47 	.area IABS    (ABS,DATA)
                                     48 	.area IABS    (ABS,DATA)
                                     49 ;--------------------------------------------------------
                                     50 ; bit data
                                     51 ;--------------------------------------------------------
                                     52 	.area BSEG    (BIT)
                                     53 ;--------------------------------------------------------
                                     54 ; paged external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area PSEG    (PAG,XDATA)
                                     57 ;--------------------------------------------------------
                                     58 ; external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XSEG    (XDATA)
      000000                         61 _memcmp_PARM_2:
      000000                         62 	.ds 3
      000003                         63 _memcmp_PARM_3:
      000003                         64 	.ds 2
      000005                         65 _memcmp_buf1_1_21:
      000005                         66 	.ds 3
                                     67 ;--------------------------------------------------------
                                     68 ; absolute external ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area XABS    (ABS,XDATA)
                                     71 ;--------------------------------------------------------
                                     72 ; external initialized ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area XISEG   (XDATA)
                                     75 	.area HOME    (CODE)
                                     76 	.area GSINIT0 (CODE)
                                     77 	.area GSINIT1 (CODE)
                                     78 	.area GSINIT2 (CODE)
                                     79 	.area GSINIT3 (CODE)
                                     80 	.area GSINIT4 (CODE)
                                     81 	.area GSINIT5 (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 	.area GSFINAL (CODE)
                                     84 	.area CSEG    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; global & static initialisations
                                     87 ;--------------------------------------------------------
                                     88 	.area HOME    (CODE)
                                     89 	.area GSINIT  (CODE)
                                     90 	.area GSFINAL (CODE)
                                     91 	.area GSINIT  (CODE)
                                     92 ;--------------------------------------------------------
                                     93 ; Home
                                     94 ;--------------------------------------------------------
                                     95 	.area HOME    (CODE)
                                     96 	.area HOME    (CODE)
                                     97 ;--------------------------------------------------------
                                     98 ; code
                                     99 ;--------------------------------------------------------
                                    100 	.area CSEG    (CODE)
                                    101 ;------------------------------------------------------------
                                    102 ;Allocation info for local variables in function 'memcmp'
                                    103 ;------------------------------------------------------------
                                    104 ;buf2                      Allocated with name '_memcmp_PARM_2'
                                    105 ;count                     Allocated with name '_memcmp_PARM_3'
                                    106 ;buf1                      Allocated with name '_memcmp_buf1_1_21'
                                    107 ;sloc0                     Allocated with name '_memcmp_sloc0_1_0'
                                    108 ;------------------------------------------------------------
                                    109 ;	_memcmp.c:31: int memcmp (
                                    110 ;	-----------------------------------------
                                    111 ;	 function memcmp
                                    112 ;	-----------------------------------------
      000000                        113 _memcmp:
                           000007   114 	ar7 = 0x07
                           000006   115 	ar6 = 0x06
                           000005   116 	ar5 = 0x05
                           000004   117 	ar4 = 0x04
                           000003   118 	ar3 = 0x03
                           000002   119 	ar2 = 0x02
                           000001   120 	ar1 = 0x01
                           000000   121 	ar0 = 0x00
      000000 AF F0            [24]  122 	mov	r7,b
      000002 AE 83            [24]  123 	mov	r6,dph
      000004 E5 82            [12]  124 	mov	a,dpl
      000006 90r00r05         [24]  125 	mov	dptr,#_memcmp_buf1_1_21
      000009 F0               [24]  126 	movx	@dptr,a
      00000A EE               [12]  127 	mov	a,r6
      00000B A3               [24]  128 	inc	dptr
      00000C F0               [24]  129 	movx	@dptr,a
      00000D EF               [12]  130 	mov	a,r7
      00000E A3               [24]  131 	inc	dptr
      00000F F0               [24]  132 	movx	@dptr,a
                                    133 ;	_memcmp.c:37: if (!count)
      000010 90r00r03         [24]  134 	mov	dptr,#_memcmp_PARM_3
      000013 E0               [24]  135 	movx	a,@dptr
      000014 FE               [12]  136 	mov	r6,a
      000015 A3               [24]  137 	inc	dptr
      000016 E0               [24]  138 	movx	a,@dptr
      000017 FF               [12]  139 	mov	r7,a
      000018 4E               [12]  140 	orl	a,r6
      000019 70 04            [24]  141 	jnz	00112$
                                    142 ;	_memcmp.c:38: return(0);
      00001B 90 00 00         [24]  143 	mov	dptr,#0x0000
      00001E 22               [24]  144 	ret
                                    145 ;	_memcmp.c:40: while ( --count && *((char *)buf1) == *((char *)buf2) ) {
      00001F                        146 00112$:
      00001F                        147 00104$:
      00001F 1E               [12]  148 	dec	r6
      000020 BE FF 01         [24]  149 	cjne	r6,#0xFF,00123$
      000023 1F               [12]  150 	dec	r7
      000024                        151 00123$:
      000024 EE               [12]  152 	mov	a,r6
      000025 4F               [12]  153 	orl	a,r7
      000026 60 75            [24]  154 	jz	00106$
      000028 C0 06            [24]  155 	push	ar6
      00002A C0 07            [24]  156 	push	ar7
      00002C 90r00r05         [24]  157 	mov	dptr,#_memcmp_buf1_1_21
      00002F E0               [24]  158 	movx	a,@dptr
      000030 FB               [12]  159 	mov	r3,a
      000031 A3               [24]  160 	inc	dptr
      000032 E0               [24]  161 	movx	a,@dptr
      000033 FC               [12]  162 	mov	r4,a
      000034 A3               [24]  163 	inc	dptr
      000035 E0               [24]  164 	movx	a,@dptr
      000036 FD               [12]  165 	mov	r5,a
      000037 8B 00            [24]  166 	mov	ar0,r3
      000039 8C 01            [24]  167 	mov	ar1,r4
      00003B 8D 02            [24]  168 	mov	ar2,r5
      00003D 88 82            [24]  169 	mov	dpl,r0
      00003F 89 83            [24]  170 	mov	dph,r1
      000041 8A F0            [24]  171 	mov	b,r2
      000043 12r00r00         [24]  172 	lcall	__gptrget
      000046 F8               [12]  173 	mov	r0,a
      000047 90r00r00         [24]  174 	mov	dptr,#_memcmp_PARM_2
      00004A E0               [24]  175 	movx	a,@dptr
      00004B F5*00            [12]  176 	mov	_memcmp_sloc0_1_0,a
      00004D A3               [24]  177 	inc	dptr
      00004E E0               [24]  178 	movx	a,@dptr
      00004F F5*01            [12]  179 	mov	(_memcmp_sloc0_1_0 + 1),a
      000051 A3               [24]  180 	inc	dptr
      000052 E0               [24]  181 	movx	a,@dptr
      000053 F5*02            [12]  182 	mov	(_memcmp_sloc0_1_0 + 2),a
      000055 A9*00            [24]  183 	mov	r1,_memcmp_sloc0_1_0
      000057 AA*01            [24]  184 	mov	r2,(_memcmp_sloc0_1_0 + 1)
      000059 AF*02            [24]  185 	mov	r7,(_memcmp_sloc0_1_0 + 2)
      00005B 89 82            [24]  186 	mov	dpl,r1
      00005D 8A 83            [24]  187 	mov	dph,r2
      00005F 8F F0            [24]  188 	mov	b,r7
      000061 12r00r00         [24]  189 	lcall	__gptrget
      000064 F9               [12]  190 	mov	r1,a
      000065 E8               [12]  191 	mov	a,r0
      000066 B5 01 02         [24]  192 	cjne	a,ar1,00125$
      000069 80 06            [24]  193 	sjmp	00126$
      00006B                        194 00125$:
      00006B D0 07            [24]  195 	pop	ar7
      00006D D0 06            [24]  196 	pop	ar6
      00006F 80 2C            [24]  197 	sjmp	00106$
      000071                        198 00126$:
      000071 D0 07            [24]  199 	pop	ar7
      000073 D0 06            [24]  200 	pop	ar6
                                    201 ;	_memcmp.c:41: buf1 = (char *)buf1 + 1;
      000075 0B               [12]  202 	inc	r3
      000076 BB 00 01         [24]  203 	cjne	r3,#0x00,00127$
      000079 0C               [12]  204 	inc	r4
      00007A                        205 00127$:
      00007A 90r00r05         [24]  206 	mov	dptr,#_memcmp_buf1_1_21
      00007D EB               [12]  207 	mov	a,r3
      00007E F0               [24]  208 	movx	@dptr,a
      00007F EC               [12]  209 	mov	a,r4
      000080 A3               [24]  210 	inc	dptr
      000081 F0               [24]  211 	movx	@dptr,a
      000082 ED               [12]  212 	mov	a,r5
      000083 A3               [24]  213 	inc	dptr
      000084 F0               [24]  214 	movx	@dptr,a
                                    215 ;	_memcmp.c:42: buf2 = (char *)buf2 + 1;
      000085 AB*00            [24]  216 	mov	r3,_memcmp_sloc0_1_0
      000087 AC*01            [24]  217 	mov	r4,(_memcmp_sloc0_1_0 + 1)
      000089 AD*02            [24]  218 	mov	r5,(_memcmp_sloc0_1_0 + 2)
      00008B 0B               [12]  219 	inc	r3
      00008C BB 00 01         [24]  220 	cjne	r3,#0x00,00128$
      00008F 0C               [12]  221 	inc	r4
      000090                        222 00128$:
      000090 90r00r00         [24]  223 	mov	dptr,#_memcmp_PARM_2
      000093 EB               [12]  224 	mov	a,r3
      000094 F0               [24]  225 	movx	@dptr,a
      000095 EC               [12]  226 	mov	a,r4
      000096 A3               [24]  227 	inc	dptr
      000097 F0               [24]  228 	movx	@dptr,a
      000098 ED               [12]  229 	mov	a,r5
      000099 A3               [24]  230 	inc	dptr
      00009A F0               [24]  231 	movx	@dptr,a
      00009B 80 82            [24]  232 	sjmp	00104$
      00009D                        233 00106$:
                                    234 ;	_memcmp.c:45: return( *((unsigned char *)buf1) - *((unsigned char *)buf2) );
      00009D 90r00r05         [24]  235 	mov	dptr,#_memcmp_buf1_1_21
      0000A0 E0               [24]  236 	movx	a,@dptr
      0000A1 FD               [12]  237 	mov	r5,a
      0000A2 A3               [24]  238 	inc	dptr
      0000A3 E0               [24]  239 	movx	a,@dptr
      0000A4 FE               [12]  240 	mov	r6,a
      0000A5 A3               [24]  241 	inc	dptr
      0000A6 E0               [24]  242 	movx	a,@dptr
      0000A7 FF               [12]  243 	mov	r7,a
      0000A8 8D 82            [24]  244 	mov	dpl,r5
      0000AA 8E 83            [24]  245 	mov	dph,r6
      0000AC 8F F0            [24]  246 	mov	b,r7
      0000AE 12r00r00         [24]  247 	lcall	__gptrget
      0000B1 FD               [12]  248 	mov	r5,a
      0000B2 7F 00            [12]  249 	mov	r7,#0x00
      0000B4 90r00r00         [24]  250 	mov	dptr,#_memcmp_PARM_2
      0000B7 E0               [24]  251 	movx	a,@dptr
      0000B8 FB               [12]  252 	mov	r3,a
      0000B9 A3               [24]  253 	inc	dptr
      0000BA E0               [24]  254 	movx	a,@dptr
      0000BB FC               [12]  255 	mov	r4,a
      0000BC A3               [24]  256 	inc	dptr
      0000BD E0               [24]  257 	movx	a,@dptr
      0000BE FE               [12]  258 	mov	r6,a
      0000BF 8B 82            [24]  259 	mov	dpl,r3
      0000C1 8C 83            [24]  260 	mov	dph,r4
      0000C3 8E F0            [24]  261 	mov	b,r6
      0000C5 12r00r00         [24]  262 	lcall	__gptrget
      0000C8 FB               [12]  263 	mov	r3,a
      0000C9 7E 00            [12]  264 	mov	r6,#0x00
      0000CB ED               [12]  265 	mov	a,r5
      0000CC C3               [12]  266 	clr	c
      0000CD 9B               [12]  267 	subb	a,r3
      0000CE FD               [12]  268 	mov	r5,a
      0000CF EF               [12]  269 	mov	a,r7
      0000D0 9E               [12]  270 	subb	a,r6
      0000D1 8D 82            [24]  271 	mov	dpl,r5
      0000D3 F5 83            [12]  272 	mov	dph,a
      0000D5 22               [24]  273 	ret
                                    274 	.area CSEG    (CODE)
                                    275 	.area CONST   (CODE)
                                    276 	.area XINIT   (CODE)
                                    277 	.area CABS    (ABS,CODE)
