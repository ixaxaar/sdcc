                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:27:58 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module time
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl ___day
                                     13 	.globl ___month
                                     14 	.globl _RtcRead
                                     15 	.globl _sprintf
                                     16 	.globl _time
                                     17 	.globl _asctime
                                     18 	.globl _ctime
                                     19 	.globl _localtime
                                     20 	.globl _gmtime
                                     21 	.globl _mktime
                                     22 ;--------------------------------------------------------
                                     23 ; special function registers
                                     24 ;--------------------------------------------------------
                                     25 	.area RSEG    (ABS,DATA)
      000000                         26 	.org 0x0000
                                     27 ;--------------------------------------------------------
                                     28 ; special function bits
                                     29 ;--------------------------------------------------------
                                     30 	.area RSEG    (ABS,DATA)
      000000                         31 	.org 0x0000
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable register banks
                                     34 ;--------------------------------------------------------
                                     35 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         36 	.ds 8
                                     37 ;--------------------------------------------------------
                                     38 ; internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area DSEG    (DATA)
      000000                         41 _asctime_sloc0_1_0:
      000000                         42 	.ds 2
      000002                         43 _asctime_sloc1_1_0:
      000002                         44 	.ds 2
      000004                         45 _asctime_sloc2_1_0:
      000004                         46 	.ds 2
      000006                         47 _asctime_sloc3_1_0:
      000006                         48 	.ds 2
      000008                         49 _gmtime_sloc0_1_0:
      000008                         50 	.ds 2
      00000A                         51 _gmtime_sloc1_1_0:
      00000A                         52 	.ds 2
      00000C                         53 _gmtime_sloc2_1_0:
      00000C                         54 	.ds 4
      000010                         55 _gmtime_sloc3_1_0:
      000010                         56 	.ds 4
      000014                         57 _mktime_sloc0_1_0:
      000014                         58 	.ds 2
      000016                         59 _mktime_sloc1_1_0:
      000016                         60 	.ds 4
      00001A                         61 _mktime_sloc2_1_0:
      00001A                         62 	.ds 3
      00001D                         63 _mktime_sloc3_1_0:
      00001D                         64 	.ds 4
                                     65 ;--------------------------------------------------------
                                     66 ; overlayable items in internal ram 
                                     67 ;--------------------------------------------------------
                                     68 ;--------------------------------------------------------
                                     69 ; indirectly addressable internal ram data
                                     70 ;--------------------------------------------------------
                                     71 	.area ISEG    (DATA)
                                     72 ;--------------------------------------------------------
                                     73 ; absolute internal ram data
                                     74 ;--------------------------------------------------------
                                     75 	.area IABS    (ABS,DATA)
                                     76 	.area IABS    (ABS,DATA)
                                     77 ;--------------------------------------------------------
                                     78 ; bit data
                                     79 ;--------------------------------------------------------
                                     80 	.area BSEG    (BIT)
                                     81 ;--------------------------------------------------------
                                     82 ; paged external ram data
                                     83 ;--------------------------------------------------------
                                     84 	.area PSEG    (PAG,XDATA)
                                     85 ;--------------------------------------------------------
                                     86 ; external ram data
                                     87 ;--------------------------------------------------------
                                     88 	.area XSEG    (XDATA)
      000000                         89 _time_timeptr_1_20:
      000000                         90 	.ds 3
      000003                         91 _time_now_1_21:
      000003                         92 	.ds 12
      00000F                         93 _time_t_1_21:
      00000F                         94 	.ds 4
      000013                         95 _ascTimeBuffer:
      000013                         96 	.ds 32
      000033                         97 _CheckTime_timeptr_1_24:
      000033                         98 	.ds 3
      000036                         99 _asctime_timeptr_1_26:
      000036                        100 	.ds 3
      000039                        101 _ctime_timep_1_28:
      000039                        102 	.ds 3
      00003C                        103 _lastTime:
      00003C                        104 	.ds 12
      000048                        105 _localtime_timep_1_30:
      000048                        106 	.ds 3
      00004B                        107 _gmtime_timep_1_32:
      00004B                        108 	.ds 3
      00004E                        109 _gmtime_epoch_1_33:
      00004E                        110 	.ds 4
      000052                        111 _gmtime_monthLength_1_33:
      000052                        112 	.ds 1
      000053                        113 _gmtime_days_1_33:
      000053                        114 	.ds 4
      000057                        115 _mktime_timeptr_1_42:
      000057                        116 	.ds 3
      00005A                        117 _mktime_seconds_1_43:
      00005A                        118 	.ds 4
                                    119 ;--------------------------------------------------------
                                    120 ; absolute external ram data
                                    121 ;--------------------------------------------------------
                                    122 	.area XABS    (ABS,XDATA)
                                    123 ;--------------------------------------------------------
                                    124 ; external initialized ram data
                                    125 ;--------------------------------------------------------
                                    126 	.area XISEG   (XDATA)
                                    127 	.area HOME    (CODE)
                                    128 	.area GSINIT0 (CODE)
                                    129 	.area GSINIT1 (CODE)
                                    130 	.area GSINIT2 (CODE)
                                    131 	.area GSINIT3 (CODE)
                                    132 	.area GSINIT4 (CODE)
                                    133 	.area GSINIT5 (CODE)
                                    134 	.area GSINIT  (CODE)
                                    135 	.area GSFINAL (CODE)
                                    136 	.area CSEG    (CODE)
                                    137 ;--------------------------------------------------------
                                    138 ; global & static initialisations
                                    139 ;--------------------------------------------------------
                                    140 	.area HOME    (CODE)
                                    141 	.area GSINIT  (CODE)
                                    142 	.area GSFINAL (CODE)
                                    143 	.area GSINIT  (CODE)
                                    144 ;--------------------------------------------------------
                                    145 ; Home
                                    146 ;--------------------------------------------------------
                                    147 	.area HOME    (CODE)
                                    148 	.area HOME    (CODE)
                                    149 ;--------------------------------------------------------
                                    150 ; code
                                    151 ;--------------------------------------------------------
                                    152 	.area CSEG    (CODE)
                                    153 ;------------------------------------------------------------
                                    154 ;Allocation info for local variables in function 'RtcRead'
                                    155 ;------------------------------------------------------------
                                    156 ;timeptr                   Allocated with name '_RtcRead_timeptr_1_18'
                                    157 ;------------------------------------------------------------
                                    158 ;	time.c:42: unsigned char RtcRead(struct tm *timeptr) {
                                    159 ;	-----------------------------------------
                                    160 ;	 function RtcRead
                                    161 ;	-----------------------------------------
      000000                        162 _RtcRead:
                           000007   163 	ar7 = 0x07
                           000006   164 	ar6 = 0x06
                           000005   165 	ar5 = 0x05
                           000004   166 	ar4 = 0x04
                           000003   167 	ar3 = 0x03
                           000002   168 	ar2 = 0x02
                           000001   169 	ar1 = 0x01
                           000000   170 	ar0 = 0x00
                                    171 ;	time.c:45: return 0;
      000000 75 82 00         [24]  172 	mov	dpl,#0x00
      000003 22               [24]  173 	ret
                                    174 ;------------------------------------------------------------
                                    175 ;Allocation info for local variables in function 'time'
                                    176 ;------------------------------------------------------------
                                    177 ;timeptr                   Allocated with name '_time_timeptr_1_20'
                                    178 ;now                       Allocated with name '_time_now_1_21'
                                    179 ;t                         Allocated with name '_time_t_1_21'
                                    180 ;------------------------------------------------------------
                                    181 ;	time.c:50: time_t time(time_t *timeptr) {
                                    182 ;	-----------------------------------------
                                    183 ;	 function time
                                    184 ;	-----------------------------------------
      000004                        185 _time:
      000004 AF F0            [24]  186 	mov	r7,b
      000006 AE 83            [24]  187 	mov	r6,dph
      000008 E5 82            [12]  188 	mov	a,dpl
      00000A 90r00r00         [24]  189 	mov	dptr,#_time_timeptr_1_20
      00000D F0               [24]  190 	movx	@dptr,a
      00000E EE               [12]  191 	mov	a,r6
      00000F A3               [24]  192 	inc	dptr
      000010 F0               [24]  193 	movx	@dptr,a
      000011 EF               [12]  194 	mov	a,r7
      000012 A3               [24]  195 	inc	dptr
      000013 F0               [24]  196 	movx	@dptr,a
                                    197 ;	time.c:52: time_t t=-1;
      000014 90r00r0F         [24]  198 	mov	dptr,#_time_t_1_21
      000017 74 FF            [12]  199 	mov	a,#0xFF
      000019 F0               [24]  200 	movx	@dptr,a
      00001A A3               [24]  201 	inc	dptr
      00001B F0               [24]  202 	movx	@dptr,a
      00001C A3               [24]  203 	inc	dptr
      00001D F0               [24]  204 	movx	@dptr,a
      00001E A3               [24]  205 	inc	dptr
      00001F F0               [24]  206 	movx	@dptr,a
                                    207 ;	time.c:54: if (RtcRead(&now)) {
      000020 90r00r03         [24]  208 	mov	dptr,#_time_now_1_21
      000023 75 F0 00         [24]  209 	mov	b,#0x00
      000026 12r00r00         [24]  210 	lcall	_RtcRead
      000029 E5 82            [12]  211 	mov	a,dpl
      00002B 60 1E            [24]  212 	jz	00102$
                                    213 ;	time.c:55: t=mktime(&now);
      00002D 90r00r03         [24]  214 	mov	dptr,#_time_now_1_21
      000030 75 F0 00         [24]  215 	mov	b,#0x00
      000033 12r06r60         [24]  216 	lcall	_mktime
      000036 AC 82            [24]  217 	mov	r4,dpl
      000038 AD 83            [24]  218 	mov	r5,dph
      00003A AE F0            [24]  219 	mov	r6,b
      00003C FF               [12]  220 	mov	r7,a
      00003D 90r00r0F         [24]  221 	mov	dptr,#_time_t_1_21
      000040 EC               [12]  222 	mov	a,r4
      000041 F0               [24]  223 	movx	@dptr,a
      000042 ED               [12]  224 	mov	a,r5
      000043 A3               [24]  225 	inc	dptr
      000044 F0               [24]  226 	movx	@dptr,a
      000045 EE               [12]  227 	mov	a,r6
      000046 A3               [24]  228 	inc	dptr
      000047 F0               [24]  229 	movx	@dptr,a
      000048 EF               [12]  230 	mov	a,r7
      000049 A3               [24]  231 	inc	dptr
      00004A F0               [24]  232 	movx	@dptr,a
      00004B                        233 00102$:
                                    234 ;	time.c:57: if (timeptr) {
      00004B 90r00r00         [24]  235 	mov	dptr,#_time_timeptr_1_20
      00004E E0               [24]  236 	movx	a,@dptr
      00004F FD               [12]  237 	mov	r5,a
      000050 A3               [24]  238 	inc	dptr
      000051 E0               [24]  239 	movx	a,@dptr
      000052 FE               [12]  240 	mov	r6,a
      000053 A3               [24]  241 	inc	dptr
      000054 E0               [24]  242 	movx	a,@dptr
      000055 FF               [12]  243 	mov	r7,a
      000056 ED               [12]  244 	mov	a,r5
      000057 4E               [12]  245 	orl	a,r6
      000058 60 27            [24]  246 	jz	00104$
                                    247 ;	time.c:58: *timeptr=t;
      00005A 90r00r0F         [24]  248 	mov	dptr,#_time_t_1_21
      00005D E0               [24]  249 	movx	a,@dptr
      00005E F9               [12]  250 	mov	r1,a
      00005F A3               [24]  251 	inc	dptr
      000060 E0               [24]  252 	movx	a,@dptr
      000061 FA               [12]  253 	mov	r2,a
      000062 A3               [24]  254 	inc	dptr
      000063 E0               [24]  255 	movx	a,@dptr
      000064 FB               [12]  256 	mov	r3,a
      000065 A3               [24]  257 	inc	dptr
      000066 E0               [24]  258 	movx	a,@dptr
      000067 FC               [12]  259 	mov	r4,a
      000068 8D 82            [24]  260 	mov	dpl,r5
      00006A 8E 83            [24]  261 	mov	dph,r6
      00006C 8F F0            [24]  262 	mov	b,r7
      00006E E9               [12]  263 	mov	a,r1
      00006F 12r00r00         [24]  264 	lcall	__gptrput
      000072 A3               [24]  265 	inc	dptr
      000073 EA               [12]  266 	mov	a,r2
      000074 12r00r00         [24]  267 	lcall	__gptrput
      000077 A3               [24]  268 	inc	dptr
      000078 EB               [12]  269 	mov	a,r3
      000079 12r00r00         [24]  270 	lcall	__gptrput
      00007C A3               [24]  271 	inc	dptr
      00007D EC               [12]  272 	mov	a,r4
      00007E 12r00r00         [24]  273 	lcall	__gptrput
      000081                        274 00104$:
                                    275 ;	time.c:60: return t;
      000081 90r00r0F         [24]  276 	mov	dptr,#_time_t_1_21
      000084 E0               [24]  277 	movx	a,@dptr
      000085 FC               [12]  278 	mov	r4,a
      000086 A3               [24]  279 	inc	dptr
      000087 E0               [24]  280 	movx	a,@dptr
      000088 FD               [12]  281 	mov	r5,a
      000089 A3               [24]  282 	inc	dptr
      00008A E0               [24]  283 	movx	a,@dptr
      00008B FE               [12]  284 	mov	r6,a
      00008C A3               [24]  285 	inc	dptr
      00008D E0               [24]  286 	movx	a,@dptr
      00008E 8C 82            [24]  287 	mov	dpl,r4
      000090 8D 83            [24]  288 	mov	dph,r5
      000092 8E F0            [24]  289 	mov	b,r6
      000094 22               [24]  290 	ret
                                    291 ;------------------------------------------------------------
                                    292 ;Allocation info for local variables in function 'CheckTime'
                                    293 ;------------------------------------------------------------
                                    294 ;timeptr                   Allocated with name '_CheckTime_timeptr_1_24'
                                    295 ;------------------------------------------------------------
                                    296 ;	time.c:73: static void CheckTime(struct tm *timeptr) {
                                    297 ;	-----------------------------------------
                                    298 ;	 function CheckTime
                                    299 ;	-----------------------------------------
      000095                        300 _CheckTime:
      000095 AF F0            [24]  301 	mov	r7,b
      000097 AE 83            [24]  302 	mov	r6,dph
      000099 E5 82            [12]  303 	mov	a,dpl
      00009B 90r00r33         [24]  304 	mov	dptr,#_CheckTime_timeptr_1_24
      00009E F0               [24]  305 	movx	@dptr,a
      00009F EE               [12]  306 	mov	a,r6
      0000A0 A3               [24]  307 	inc	dptr
      0000A1 F0               [24]  308 	movx	@dptr,a
      0000A2 EF               [12]  309 	mov	a,r7
      0000A3 A3               [24]  310 	inc	dptr
      0000A4 F0               [24]  311 	movx	@dptr,a
                                    312 ;	time.c:84: if (timeptr->tm_sec>59) timeptr->tm_sec=59;
      0000A5 90r00r33         [24]  313 	mov	dptr,#_CheckTime_timeptr_1_24
      0000A8 E0               [24]  314 	movx	a,@dptr
      0000A9 FD               [12]  315 	mov	r5,a
      0000AA A3               [24]  316 	inc	dptr
      0000AB E0               [24]  317 	movx	a,@dptr
      0000AC FE               [12]  318 	mov	r6,a
      0000AD A3               [24]  319 	inc	dptr
      0000AE E0               [24]  320 	movx	a,@dptr
      0000AF FF               [12]  321 	mov	r7,a
      0000B0 8D 82            [24]  322 	mov	dpl,r5
      0000B2 8E 83            [24]  323 	mov	dph,r6
      0000B4 8F F0            [24]  324 	mov	b,r7
      0000B6 12r00r00         [24]  325 	lcall	__gptrget
      0000B9 FC               [12]  326 	mov  r4,a
      0000BA 24 C4            [12]  327 	add	a,#0xff - 0x3B
      0000BC 50 0B            [24]  328 	jnc	00102$
      0000BE 8D 82            [24]  329 	mov	dpl,r5
      0000C0 8E 83            [24]  330 	mov	dph,r6
      0000C2 8F F0            [24]  331 	mov	b,r7
      0000C4 74 3B            [12]  332 	mov	a,#0x3B
      0000C6 12r00r00         [24]  333 	lcall	__gptrput
      0000C9                        334 00102$:
                                    335 ;	time.c:85: if (timeptr->tm_min>59) timeptr->tm_min=59;
      0000C9 74 01            [12]  336 	mov	a,#0x01
      0000CB 2D               [12]  337 	add	a,r5
      0000CC FA               [12]  338 	mov	r2,a
      0000CD E4               [12]  339 	clr	a
      0000CE 3E               [12]  340 	addc	a,r6
      0000CF FB               [12]  341 	mov	r3,a
      0000D0 8F 04            [24]  342 	mov	ar4,r7
      0000D2 8A 82            [24]  343 	mov	dpl,r2
      0000D4 8B 83            [24]  344 	mov	dph,r3
      0000D6 8C F0            [24]  345 	mov	b,r4
      0000D8 12r00r00         [24]  346 	lcall	__gptrget
      0000DB F9               [12]  347 	mov  r1,a
      0000DC 24 C4            [12]  348 	add	a,#0xff - 0x3B
      0000DE 50 0B            [24]  349 	jnc	00104$
      0000E0 8A 82            [24]  350 	mov	dpl,r2
      0000E2 8B 83            [24]  351 	mov	dph,r3
      0000E4 8C F0            [24]  352 	mov	b,r4
      0000E6 74 3B            [12]  353 	mov	a,#0x3B
      0000E8 12r00r00         [24]  354 	lcall	__gptrput
      0000EB                        355 00104$:
                                    356 ;	time.c:86: if (timeptr->tm_hour>23) timeptr->tm_hour=23;
      0000EB 74 02            [12]  357 	mov	a,#0x02
      0000ED 2D               [12]  358 	add	a,r5
      0000EE FA               [12]  359 	mov	r2,a
      0000EF E4               [12]  360 	clr	a
      0000F0 3E               [12]  361 	addc	a,r6
      0000F1 FB               [12]  362 	mov	r3,a
      0000F2 8F 04            [24]  363 	mov	ar4,r7
      0000F4 8A 82            [24]  364 	mov	dpl,r2
      0000F6 8B 83            [24]  365 	mov	dph,r3
      0000F8 8C F0            [24]  366 	mov	b,r4
      0000FA 12r00r00         [24]  367 	lcall	__gptrget
      0000FD F9               [12]  368 	mov  r1,a
      0000FE 24 E8            [12]  369 	add	a,#0xff - 0x17
      000100 50 0B            [24]  370 	jnc	00106$
      000102 8A 82            [24]  371 	mov	dpl,r2
      000104 8B 83            [24]  372 	mov	dph,r3
      000106 8C F0            [24]  373 	mov	b,r4
      000108 74 17            [12]  374 	mov	a,#0x17
      00010A 12r00r00         [24]  375 	lcall	__gptrput
      00010D                        376 00106$:
                                    377 ;	time.c:87: if (timeptr->tm_wday>6) timeptr->tm_wday=6;
      00010D 74 07            [12]  378 	mov	a,#0x07
      00010F 2D               [12]  379 	add	a,r5
      000110 FA               [12]  380 	mov	r2,a
      000111 E4               [12]  381 	clr	a
      000112 3E               [12]  382 	addc	a,r6
      000113 FB               [12]  383 	mov	r3,a
      000114 8F 04            [24]  384 	mov	ar4,r7
      000116 8A 82            [24]  385 	mov	dpl,r2
      000118 8B 83            [24]  386 	mov	dph,r3
      00011A 8C F0            [24]  387 	mov	b,r4
      00011C 12r00r00         [24]  388 	lcall	__gptrget
      00011F F9               [12]  389 	mov  r1,a
      000120 24 F9            [12]  390 	add	a,#0xff - 0x06
      000122 50 0B            [24]  391 	jnc	00108$
      000124 8A 82            [24]  392 	mov	dpl,r2
      000126 8B 83            [24]  393 	mov	dph,r3
      000128 8C F0            [24]  394 	mov	b,r4
      00012A 74 06            [12]  395 	mov	a,#0x06
      00012C 12r00r00         [24]  396 	lcall	__gptrput
      00012F                        397 00108$:
                                    398 ;	time.c:88: if (timeptr->tm_mday<1) timeptr->tm_mday=1;
      00012F 74 03            [12]  399 	mov	a,#0x03
      000131 2D               [12]  400 	add	a,r5
      000132 FA               [12]  401 	mov	r2,a
      000133 E4               [12]  402 	clr	a
      000134 3E               [12]  403 	addc	a,r6
      000135 FB               [12]  404 	mov	r3,a
      000136 8F 04            [24]  405 	mov	ar4,r7
      000138 8A 82            [24]  406 	mov	dpl,r2
      00013A 8B 83            [24]  407 	mov	dph,r3
      00013C 8C F0            [24]  408 	mov	b,r4
      00013E 12r00r00         [24]  409 	lcall	__gptrget
      000141 F9               [12]  410 	mov	r1,a
      000142 B9 01 00         [24]  411 	cjne	r1,#0x01,00148$
      000145                        412 00148$:
      000145 50 0D            [24]  413 	jnc	00112$
      000147 8A 82            [24]  414 	mov	dpl,r2
      000149 8B 83            [24]  415 	mov	dph,r3
      00014B 8C F0            [24]  416 	mov	b,r4
      00014D 74 01            [12]  417 	mov	a,#0x01
      00014F 12r00r00         [24]  418 	lcall	__gptrput
      000152 80 10            [24]  419 	sjmp	00113$
      000154                        420 00112$:
                                    421 ;	time.c:89: else if (timeptr->tm_mday>31) timeptr->tm_mday=31;
      000154 E9               [12]  422 	mov	a,r1
      000155 24 E0            [12]  423 	add	a,#0xff - 0x1F
      000157 50 0B            [24]  424 	jnc	00113$
      000159 8A 82            [24]  425 	mov	dpl,r2
      00015B 8B 83            [24]  426 	mov	dph,r3
      00015D 8C F0            [24]  427 	mov	b,r4
      00015F 74 1F            [12]  428 	mov	a,#0x1F
      000161 12r00r00         [24]  429 	lcall	__gptrput
      000164                        430 00113$:
                                    431 ;	time.c:90: if (timeptr->tm_mon>11) timeptr->tm_mon=11;
      000164 74 04            [12]  432 	mov	a,#0x04
      000166 2D               [12]  433 	add	a,r5
      000167 FA               [12]  434 	mov	r2,a
      000168 E4               [12]  435 	clr	a
      000169 3E               [12]  436 	addc	a,r6
      00016A FB               [12]  437 	mov	r3,a
      00016B 8F 04            [24]  438 	mov	ar4,r7
      00016D 8A 82            [24]  439 	mov	dpl,r2
      00016F 8B 83            [24]  440 	mov	dph,r3
      000171 8C F0            [24]  441 	mov	b,r4
      000173 12r00r00         [24]  442 	lcall	__gptrget
      000176 F9               [12]  443 	mov  r1,a
      000177 24 F4            [12]  444 	add	a,#0xff - 0x0B
      000179 50 0B            [24]  445 	jnc	00115$
      00017B 8A 82            [24]  446 	mov	dpl,r2
      00017D 8B 83            [24]  447 	mov	dph,r3
      00017F 8C F0            [24]  448 	mov	b,r4
      000181 74 0B            [12]  449 	mov	a,#0x0B
      000183 12r00r00         [24]  450 	lcall	__gptrput
      000186                        451 00115$:
                                    452 ;	time.c:91: if (timeptr->tm_year<0) timeptr->tm_year=0;
      000186 74 05            [12]  453 	mov	a,#0x05
      000188 2D               [12]  454 	add	a,r5
      000189 FD               [12]  455 	mov	r5,a
      00018A E4               [12]  456 	clr	a
      00018B 3E               [12]  457 	addc	a,r6
      00018C FE               [12]  458 	mov	r6,a
      00018D 8D 82            [24]  459 	mov	dpl,r5
      00018F 8E 83            [24]  460 	mov	dph,r6
      000191 8F F0            [24]  461 	mov	b,r7
      000193 12r00r00         [24]  462 	lcall	__gptrget
      000196 FB               [12]  463 	mov	r3,a
      000197 A3               [24]  464 	inc	dptr
      000198 12r00r00         [24]  465 	lcall	__gptrget
      00019B FC               [12]  466 	mov	r4,a
      00019C 30 E7 0E         [24]  467 	jnb	acc.7,00118$
      00019F 8D 82            [24]  468 	mov	dpl,r5
      0001A1 8E 83            [24]  469 	mov	dph,r6
      0001A3 8F F0            [24]  470 	mov	b,r7
      0001A5 E4               [12]  471 	clr	a
      0001A6 12r00r00         [24]  472 	lcall	__gptrput
      0001A9 A3               [24]  473 	inc	dptr
      0001AA 02r00r00         [24]  474 	ljmp	__gptrput
      0001AD                        475 00118$:
      0001AD 22               [24]  476 	ret
                                    477 ;------------------------------------------------------------
                                    478 ;Allocation info for local variables in function 'asctime'
                                    479 ;------------------------------------------------------------
                                    480 ;sloc0                     Allocated with name '_asctime_sloc0_1_0'
                                    481 ;sloc1                     Allocated with name '_asctime_sloc1_1_0'
                                    482 ;sloc2                     Allocated with name '_asctime_sloc2_1_0'
                                    483 ;sloc3                     Allocated with name '_asctime_sloc3_1_0'
                                    484 ;timeptr                   Allocated with name '_asctime_timeptr_1_26'
                                    485 ;------------------------------------------------------------
                                    486 ;	time.c:95: char *asctime(struct tm *timeptr) {
                                    487 ;	-----------------------------------------
                                    488 ;	 function asctime
                                    489 ;	-----------------------------------------
      0001AE                        490 _asctime:
      0001AE AF F0            [24]  491 	mov	r7,b
      0001B0 AE 83            [24]  492 	mov	r6,dph
      0001B2 E5 82            [12]  493 	mov	a,dpl
      0001B4 90r00r36         [24]  494 	mov	dptr,#_asctime_timeptr_1_26
      0001B7 F0               [24]  495 	movx	@dptr,a
      0001B8 EE               [12]  496 	mov	a,r6
      0001B9 A3               [24]  497 	inc	dptr
      0001BA F0               [24]  498 	movx	@dptr,a
      0001BB EF               [12]  499 	mov	a,r7
      0001BC A3               [24]  500 	inc	dptr
      0001BD F0               [24]  501 	movx	@dptr,a
                                    502 ;	time.c:96: CheckTime(timeptr);
      0001BE 90r00r36         [24]  503 	mov	dptr,#_asctime_timeptr_1_26
      0001C1 E0               [24]  504 	movx	a,@dptr
      0001C2 FD               [12]  505 	mov	r5,a
      0001C3 A3               [24]  506 	inc	dptr
      0001C4 E0               [24]  507 	movx	a,@dptr
      0001C5 FE               [12]  508 	mov	r6,a
      0001C6 A3               [24]  509 	inc	dptr
      0001C7 E0               [24]  510 	movx	a,@dptr
      0001C8 FF               [12]  511 	mov	r7,a
      0001C9 8D 82            [24]  512 	mov	dpl,r5
      0001CB 8E 83            [24]  513 	mov	dph,r6
      0001CD 8F F0            [24]  514 	mov	b,r7
      0001CF 12r00r95         [24]  515 	lcall	_CheckTime
                                    516 ;	time.c:100: timeptr->tm_year+1900);
      0001D2 90r00r36         [24]  517 	mov	dptr,#_asctime_timeptr_1_26
      0001D5 E0               [24]  518 	movx	a,@dptr
      0001D6 FD               [12]  519 	mov	r5,a
      0001D7 A3               [24]  520 	inc	dptr
      0001D8 E0               [24]  521 	movx	a,@dptr
      0001D9 FE               [12]  522 	mov	r6,a
      0001DA A3               [24]  523 	inc	dptr
      0001DB E0               [24]  524 	movx	a,@dptr
      0001DC FF               [12]  525 	mov	r7,a
      0001DD 74 05            [12]  526 	mov	a,#0x05
      0001DF 2D               [12]  527 	add	a,r5
      0001E0 FA               [12]  528 	mov	r2,a
      0001E1 E4               [12]  529 	clr	a
      0001E2 3E               [12]  530 	addc	a,r6
      0001E3 FB               [12]  531 	mov	r3,a
      0001E4 8F 04            [24]  532 	mov	ar4,r7
      0001E6 8A 82            [24]  533 	mov	dpl,r2
      0001E8 8B 83            [24]  534 	mov	dph,r3
      0001EA 8C F0            [24]  535 	mov	b,r4
      0001EC 12r00r00         [24]  536 	lcall	__gptrget
      0001EF FA               [12]  537 	mov	r2,a
      0001F0 A3               [24]  538 	inc	dptr
      0001F1 12r00r00         [24]  539 	lcall	__gptrget
      0001F4 FB               [12]  540 	mov	r3,a
      0001F5 74 6C            [12]  541 	mov	a,#0x6C
      0001F7 2A               [12]  542 	add	a,r2
      0001F8 FA               [12]  543 	mov	r2,a
      0001F9 74 07            [12]  544 	mov	a,#0x07
      0001FB 3B               [12]  545 	addc	a,r3
      0001FC FB               [12]  546 	mov	r3,a
                                    547 ;	time.c:99: timeptr->tm_hour, timeptr->tm_min, timeptr->tm_sec, 
      0001FD 8D 82            [24]  548 	mov	dpl,r5
      0001FF 8E 83            [24]  549 	mov	dph,r6
      000201 8F F0            [24]  550 	mov	b,r7
      000203 12r00r00         [24]  551 	lcall	__gptrget
      000206 FC               [12]  552 	mov	r4,a
      000207 8C*00            [24]  553 	mov	_asctime_sloc0_1_0,r4
      000209 75*01 00         [24]  554 	mov	(_asctime_sloc0_1_0 + 1),#0x00
      00020C 74 01            [12]  555 	mov	a,#0x01
      00020E 2D               [12]  556 	add	a,r5
      00020F F8               [12]  557 	mov	r0,a
      000210 E4               [12]  558 	clr	a
      000211 3E               [12]  559 	addc	a,r6
      000212 F9               [12]  560 	mov	r1,a
      000213 8F 04            [24]  561 	mov	ar4,r7
      000215 88 82            [24]  562 	mov	dpl,r0
      000217 89 83            [24]  563 	mov	dph,r1
      000219 8C F0            [24]  564 	mov	b,r4
      00021B 12r00r00         [24]  565 	lcall	__gptrget
      00021E F8               [12]  566 	mov	r0,a
      00021F 88*02            [24]  567 	mov	_asctime_sloc1_1_0,r0
      000221 75*03 00         [24]  568 	mov	(_asctime_sloc1_1_0 + 1),#0x00
      000224 74 02            [12]  569 	mov	a,#0x02
      000226 2D               [12]  570 	add	a,r5
      000227 F8               [12]  571 	mov	r0,a
      000228 E4               [12]  572 	clr	a
      000229 3E               [12]  573 	addc	a,r6
      00022A F9               [12]  574 	mov	r1,a
      00022B 8F 04            [24]  575 	mov	ar4,r7
      00022D 88 82            [24]  576 	mov	dpl,r0
      00022F 89 83            [24]  577 	mov	dph,r1
      000231 8C F0            [24]  578 	mov	b,r4
      000233 12r00r00         [24]  579 	lcall	__gptrget
      000236 F8               [12]  580 	mov	r0,a
      000237 88*04            [24]  581 	mov	_asctime_sloc2_1_0,r0
      000239 75*05 00         [24]  582 	mov	(_asctime_sloc2_1_0 + 1),#0x00
                                    583 ;	time.c:98: __day[timeptr->tm_wday], __month[timeptr->tm_mon], timeptr->tm_mday,
      00023C 74 03            [12]  584 	mov	a,#0x03
      00023E 2D               [12]  585 	add	a,r5
      00023F F8               [12]  586 	mov	r0,a
      000240 E4               [12]  587 	clr	a
      000241 3E               [12]  588 	addc	a,r6
      000242 F9               [12]  589 	mov	r1,a
      000243 8F 04            [24]  590 	mov	ar4,r7
      000245 88 82            [24]  591 	mov	dpl,r0
      000247 89 83            [24]  592 	mov	dph,r1
      000249 8C F0            [24]  593 	mov	b,r4
      00024B 12r00r00         [24]  594 	lcall	__gptrget
      00024E F8               [12]  595 	mov	r0,a
      00024F 88*06            [24]  596 	mov	_asctime_sloc3_1_0,r0
      000251 75*07 00         [24]  597 	mov	(_asctime_sloc3_1_0 + 1),#0x00
      000254 74 04            [12]  598 	mov	a,#0x04
      000256 2D               [12]  599 	add	a,r5
      000257 F8               [12]  600 	mov	r0,a
      000258 E4               [12]  601 	clr	a
      000259 3E               [12]  602 	addc	a,r6
      00025A F9               [12]  603 	mov	r1,a
      00025B 8F 04            [24]  604 	mov	ar4,r7
      00025D 88 82            [24]  605 	mov	dpl,r0
      00025F 89 83            [24]  606 	mov	dph,r1
      000261 8C F0            [24]  607 	mov	b,r4
      000263 12r00r00         [24]  608 	lcall	__gptrget
      000266 75 F0 02         [24]  609 	mov	b,#0x02
      000269 A4               [48]  610 	mul	ab
      00026A 24r0C            [12]  611 	add	a,#___month
      00026C F5 82            [12]  612 	mov	dpl,a
      00026E 74s00            [12]  613 	mov	a,#(___month >> 8)
      000270 35 F0            [12]  614 	addc	a,b
      000272 F5 83            [12]  615 	mov	dph,a
      000274 E4               [12]  616 	clr	a
      000275 93               [24]  617 	movc	a,@a+dptr
      000276 F9               [12]  618 	mov	r1,a
      000277 A3               [24]  619 	inc	dptr
      000278 E4               [12]  620 	clr	a
      000279 93               [24]  621 	movc	a,@a+dptr
      00027A F8               [12]  622 	mov	r0,a
      00027B 7C 80            [12]  623 	mov	r4,#0x80
      00027D 74 07            [12]  624 	mov	a,#0x07
      00027F 2D               [12]  625 	add	a,r5
      000280 FD               [12]  626 	mov	r5,a
      000281 E4               [12]  627 	clr	a
      000282 3E               [12]  628 	addc	a,r6
      000283 FE               [12]  629 	mov	r6,a
      000284 8D 82            [24]  630 	mov	dpl,r5
      000286 8E 83            [24]  631 	mov	dph,r6
      000288 8F F0            [24]  632 	mov	b,r7
      00028A 12r00r00         [24]  633 	lcall	__gptrget
      00028D 75 F0 02         [24]  634 	mov	b,#0x02
      000290 A4               [48]  635 	mul	ab
      000291 24r24            [12]  636 	add	a,#___day
      000293 F5 82            [12]  637 	mov	dpl,a
      000295 74s00            [12]  638 	mov	a,#(___day >> 8)
      000297 35 F0            [12]  639 	addc	a,b
      000299 F5 83            [12]  640 	mov	dph,a
      00029B E4               [12]  641 	clr	a
      00029C 93               [24]  642 	movc	a,@a+dptr
      00029D FE               [12]  643 	mov	r6,a
      00029E A3               [24]  644 	inc	dptr
      00029F E4               [12]  645 	clr	a
      0002A0 93               [24]  646 	movc	a,@a+dptr
      0002A1 FF               [12]  647 	mov	r7,a
      0002A2 7D 80            [12]  648 	mov	r5,#0x80
                                    649 ;	time.c:97: sprintf (ascTimeBuffer, "%s %s %2d %02d:%02d:%02d %04d\n",
      0002A4 C0 02            [24]  650 	push	ar2
      0002A6 C0 03            [24]  651 	push	ar3
      0002A8 C0*00            [24]  652 	push	_asctime_sloc0_1_0
      0002AA C0*01            [24]  653 	push	(_asctime_sloc0_1_0 + 1)
      0002AC C0*02            [24]  654 	push	_asctime_sloc1_1_0
      0002AE C0*03            [24]  655 	push	(_asctime_sloc1_1_0 + 1)
      0002B0 C0*04            [24]  656 	push	_asctime_sloc2_1_0
      0002B2 C0*05            [24]  657 	push	(_asctime_sloc2_1_0 + 1)
      0002B4 C0*06            [24]  658 	push	_asctime_sloc3_1_0
      0002B6 C0*07            [24]  659 	push	(_asctime_sloc3_1_0 + 1)
      0002B8 C0 01            [24]  660 	push	ar1
      0002BA C0 00            [24]  661 	push	ar0
      0002BC C0 04            [24]  662 	push	ar4
      0002BE C0 06            [24]  663 	push	ar6
      0002C0 C0 07            [24]  664 	push	ar7
      0002C2 C0 05            [24]  665 	push	ar5
      0002C4 74r32            [12]  666 	mov	a,#__str_0
      0002C6 C0 E0            [24]  667 	push	acc
      0002C8 74s00            [12]  668 	mov	a,#(__str_0 >> 8)
      0002CA C0 E0            [24]  669 	push	acc
      0002CC ED               [12]  670 	mov	a,r5
      0002CD C0 E0            [24]  671 	push	acc
      0002CF 74r13            [12]  672 	mov	a,#_ascTimeBuffer
      0002D1 C0 E0            [24]  673 	push	acc
      0002D3 74s00            [12]  674 	mov	a,#(_ascTimeBuffer >> 8)
      0002D5 C0 E0            [24]  675 	push	acc
      0002D7 E4               [12]  676 	clr	a
      0002D8 C0 E0            [24]  677 	push	acc
      0002DA 12r00r00         [24]  678 	lcall	_sprintf
      0002DD E5 81            [12]  679 	mov	a,sp
      0002DF 24 EA            [12]  680 	add	a,#0xea
      0002E1 F5 81            [12]  681 	mov	sp,a
                                    682 ;	time.c:101: return ascTimeBuffer;
      0002E3 90r00r13         [24]  683 	mov	dptr,#_ascTimeBuffer
      0002E6 75 F0 00         [24]  684 	mov	b,#0x00
      0002E9 22               [24]  685 	ret
                                    686 ;------------------------------------------------------------
                                    687 ;Allocation info for local variables in function 'ctime'
                                    688 ;------------------------------------------------------------
                                    689 ;timep                     Allocated with name '_ctime_timep_1_28'
                                    690 ;------------------------------------------------------------
                                    691 ;	time.c:104: char *ctime(time_t *timep) {
                                    692 ;	-----------------------------------------
                                    693 ;	 function ctime
                                    694 ;	-----------------------------------------
      0002EA                        695 _ctime:
      0002EA AF F0            [24]  696 	mov	r7,b
      0002EC AE 83            [24]  697 	mov	r6,dph
      0002EE E5 82            [12]  698 	mov	a,dpl
      0002F0 90r00r39         [24]  699 	mov	dptr,#_ctime_timep_1_28
      0002F3 F0               [24]  700 	movx	@dptr,a
      0002F4 EE               [12]  701 	mov	a,r6
      0002F5 A3               [24]  702 	inc	dptr
      0002F6 F0               [24]  703 	movx	@dptr,a
      0002F7 EF               [12]  704 	mov	a,r7
      0002F8 A3               [24]  705 	inc	dptr
      0002F9 F0               [24]  706 	movx	@dptr,a
                                    707 ;	time.c:105: return asctime(localtime(timep));
      0002FA 90r00r39         [24]  708 	mov	dptr,#_ctime_timep_1_28
      0002FD E0               [24]  709 	movx	a,@dptr
      0002FE FD               [12]  710 	mov	r5,a
      0002FF A3               [24]  711 	inc	dptr
      000300 E0               [24]  712 	movx	a,@dptr
      000301 FE               [12]  713 	mov	r6,a
      000302 A3               [24]  714 	inc	dptr
      000303 E0               [24]  715 	movx	a,@dptr
      000304 FF               [12]  716 	mov	r7,a
      000305 8D 82            [24]  717 	mov	dpl,r5
      000307 8E 83            [24]  718 	mov	dph,r6
      000309 8F F0            [24]  719 	mov	b,r7
      00030B 12r03r11         [24]  720 	lcall	_localtime
      00030E 02r01rAE         [24]  721 	ljmp	_asctime
                                    722 ;------------------------------------------------------------
                                    723 ;Allocation info for local variables in function 'localtime'
                                    724 ;------------------------------------------------------------
                                    725 ;timep                     Allocated with name '_localtime_timep_1_30'
                                    726 ;------------------------------------------------------------
                                    727 ;	time.c:121: struct tm *localtime(time_t *timep) {
                                    728 ;	-----------------------------------------
                                    729 ;	 function localtime
                                    730 ;	-----------------------------------------
      000311                        731 _localtime:
      000311 AF F0            [24]  732 	mov	r7,b
      000313 AE 83            [24]  733 	mov	r6,dph
      000315 E5 82            [12]  734 	mov	a,dpl
      000317 90r00r48         [24]  735 	mov	dptr,#_localtime_timep_1_30
      00031A F0               [24]  736 	movx	@dptr,a
      00031B EE               [12]  737 	mov	a,r6
      00031C A3               [24]  738 	inc	dptr
      00031D F0               [24]  739 	movx	@dptr,a
      00031E EF               [12]  740 	mov	a,r7
      00031F A3               [24]  741 	inc	dptr
      000320 F0               [24]  742 	movx	@dptr,a
                                    743 ;	time.c:122: return gmtime(timep);
      000321 90r00r48         [24]  744 	mov	dptr,#_localtime_timep_1_30
      000324 E0               [24]  745 	movx	a,@dptr
      000325 FD               [12]  746 	mov	r5,a
      000326 A3               [24]  747 	inc	dptr
      000327 E0               [24]  748 	movx	a,@dptr
      000328 FE               [12]  749 	mov	r6,a
      000329 A3               [24]  750 	inc	dptr
      00032A E0               [24]  751 	movx	a,@dptr
      00032B FF               [12]  752 	mov	r7,a
      00032C 8D 82            [24]  753 	mov	dpl,r5
      00032E 8E 83            [24]  754 	mov	dph,r6
      000330 8F F0            [24]  755 	mov	b,r7
      000332 02r03r35         [24]  756 	ljmp	_gmtime
                                    757 ;------------------------------------------------------------
                                    758 ;Allocation info for local variables in function 'gmtime'
                                    759 ;------------------------------------------------------------
                                    760 ;sloc0                     Allocated with name '_gmtime_sloc0_1_0'
                                    761 ;sloc1                     Allocated with name '_gmtime_sloc1_1_0'
                                    762 ;sloc2                     Allocated with name '_gmtime_sloc2_1_0'
                                    763 ;sloc3                     Allocated with name '_gmtime_sloc3_1_0'
                                    764 ;timep                     Allocated with name '_gmtime_timep_1_32'
                                    765 ;epoch                     Allocated with name '_gmtime_epoch_1_33'
                                    766 ;year                      Allocated with name '_gmtime_year_1_33'
                                    767 ;month                     Allocated with name '_gmtime_month_1_33'
                                    768 ;monthLength               Allocated with name '_gmtime_monthLength_1_33'
                                    769 ;days                      Allocated with name '_gmtime_days_1_33'
                                    770 ;------------------------------------------------------------
                                    771 ;	time.c:125: struct tm *gmtime(time_t *timep) {
                                    772 ;	-----------------------------------------
                                    773 ;	 function gmtime
                                    774 ;	-----------------------------------------
      000335                        775 _gmtime:
      000335 AF F0            [24]  776 	mov	r7,b
      000337 AE 83            [24]  777 	mov	r6,dph
      000339 E5 82            [12]  778 	mov	a,dpl
      00033B 90r00r4B         [24]  779 	mov	dptr,#_gmtime_timep_1_32
      00033E F0               [24]  780 	movx	@dptr,a
      00033F EE               [12]  781 	mov	a,r6
      000340 A3               [24]  782 	inc	dptr
      000341 F0               [24]  783 	movx	@dptr,a
      000342 EF               [12]  784 	mov	a,r7
      000343 A3               [24]  785 	inc	dptr
      000344 F0               [24]  786 	movx	@dptr,a
                                    787 ;	time.c:126: unsigned long epoch=*timep;
      000345 90r00r4B         [24]  788 	mov	dptr,#_gmtime_timep_1_32
      000348 E0               [24]  789 	movx	a,@dptr
      000349 FD               [12]  790 	mov	r5,a
      00034A A3               [24]  791 	inc	dptr
      00034B E0               [24]  792 	movx	a,@dptr
      00034C FE               [12]  793 	mov	r6,a
      00034D A3               [24]  794 	inc	dptr
      00034E E0               [24]  795 	movx	a,@dptr
      00034F FF               [12]  796 	mov	r7,a
      000350 8D 82            [24]  797 	mov	dpl,r5
      000352 8E 83            [24]  798 	mov	dph,r6
      000354 8F F0            [24]  799 	mov	b,r7
      000356 12r00r00         [24]  800 	lcall	__gptrget
      000359 FD               [12]  801 	mov	r5,a
      00035A A3               [24]  802 	inc	dptr
      00035B 12r00r00         [24]  803 	lcall	__gptrget
      00035E FE               [12]  804 	mov	r6,a
      00035F A3               [24]  805 	inc	dptr
      000360 12r00r00         [24]  806 	lcall	__gptrget
      000363 FF               [12]  807 	mov	r7,a
      000364 A3               [24]  808 	inc	dptr
      000365 12r00r00         [24]  809 	lcall	__gptrget
      000368 FC               [12]  810 	mov	r4,a
                                    811 ;	time.c:131: lastTime.tm_sec=epoch%60;
      000369 90r00r00         [24]  812 	mov	dptr,#__modulong_PARM_2
      00036C 74 3C            [12]  813 	mov	a,#0x3C
      00036E F0               [24]  814 	movx	@dptr,a
      00036F E4               [12]  815 	clr	a
      000370 A3               [24]  816 	inc	dptr
      000371 F0               [24]  817 	movx	@dptr,a
      000372 A3               [24]  818 	inc	dptr
      000373 F0               [24]  819 	movx	@dptr,a
      000374 A3               [24]  820 	inc	dptr
      000375 F0               [24]  821 	movx	@dptr,a
      000376 8D 82            [24]  822 	mov	dpl,r5
      000378 8E 83            [24]  823 	mov	dph,r6
      00037A 8F F0            [24]  824 	mov	b,r7
      00037C EC               [12]  825 	mov	a,r4
      00037D C0 07            [24]  826 	push	ar7
      00037F C0 06            [24]  827 	push	ar6
      000381 C0 05            [24]  828 	push	ar5
      000383 C0 04            [24]  829 	push	ar4
      000385 12r00r00         [24]  830 	lcall	__modulong
      000388 A8 82            [24]  831 	mov	r0,dpl
      00038A D0 04            [24]  832 	pop	ar4
      00038C D0 05            [24]  833 	pop	ar5
      00038E D0 06            [24]  834 	pop	ar6
      000390 D0 07            [24]  835 	pop	ar7
      000392 90r00r3C         [24]  836 	mov	dptr,#_lastTime
      000395 E8               [12]  837 	mov	a,r0
      000396 F0               [24]  838 	movx	@dptr,a
                                    839 ;	time.c:132: epoch/=60; // now it is minutes
      000397 90r00r00         [24]  840 	mov	dptr,#__divulong_PARM_2
      00039A 74 3C            [12]  841 	mov	a,#0x3C
      00039C F0               [24]  842 	movx	@dptr,a
      00039D E4               [12]  843 	clr	a
      00039E A3               [24]  844 	inc	dptr
      00039F F0               [24]  845 	movx	@dptr,a
      0003A0 A3               [24]  846 	inc	dptr
      0003A1 F0               [24]  847 	movx	@dptr,a
      0003A2 A3               [24]  848 	inc	dptr
      0003A3 F0               [24]  849 	movx	@dptr,a
                                    850 ;	time.c:133: lastTime.tm_min=epoch%60;
      0003A4 8D 82            [24]  851 	mov	dpl,r5
      0003A6 8E 83            [24]  852 	mov	dph,r6
      0003A8 8F F0            [24]  853 	mov	b,r7
      0003AA EC               [12]  854 	mov	a,r4
      0003AB 12r00r00         [24]  855 	lcall	__divulong
      0003AE AC 82            [24]  856 	mov	r4,dpl
      0003B0 AD 83            [24]  857 	mov	r5,dph
      0003B2 AE F0            [24]  858 	mov	r6,b
      0003B4 FF               [12]  859 	mov	r7,a
      0003B5 90r00r00         [24]  860 	mov	dptr,#__modulong_PARM_2
      0003B8 74 3C            [12]  861 	mov	a,#0x3C
      0003BA F0               [24]  862 	movx	@dptr,a
      0003BB E4               [12]  863 	clr	a
      0003BC A3               [24]  864 	inc	dptr
      0003BD F0               [24]  865 	movx	@dptr,a
      0003BE A3               [24]  866 	inc	dptr
      0003BF F0               [24]  867 	movx	@dptr,a
      0003C0 A3               [24]  868 	inc	dptr
      0003C1 F0               [24]  869 	movx	@dptr,a
      0003C2 8C 82            [24]  870 	mov	dpl,r4
      0003C4 8D 83            [24]  871 	mov	dph,r5
      0003C6 8E F0            [24]  872 	mov	b,r6
      0003C8 EF               [12]  873 	mov	a,r7
      0003C9 C0 07            [24]  874 	push	ar7
      0003CB C0 06            [24]  875 	push	ar6
      0003CD C0 05            [24]  876 	push	ar5
      0003CF C0 04            [24]  877 	push	ar4
      0003D1 12r00r00         [24]  878 	lcall	__modulong
      0003D4 A8 82            [24]  879 	mov	r0,dpl
      0003D6 D0 04            [24]  880 	pop	ar4
      0003D8 D0 05            [24]  881 	pop	ar5
      0003DA D0 06            [24]  882 	pop	ar6
      0003DC D0 07            [24]  883 	pop	ar7
      0003DE 90r00r3D         [24]  884 	mov	dptr,#(_lastTime + 0x0001)
      0003E1 E8               [12]  885 	mov	a,r0
      0003E2 F0               [24]  886 	movx	@dptr,a
                                    887 ;	time.c:134: epoch/=60; // now it is hours
      0003E3 90r00r00         [24]  888 	mov	dptr,#__divulong_PARM_2
      0003E6 74 3C            [12]  889 	mov	a,#0x3C
      0003E8 F0               [24]  890 	movx	@dptr,a
      0003E9 E4               [12]  891 	clr	a
      0003EA A3               [24]  892 	inc	dptr
      0003EB F0               [24]  893 	movx	@dptr,a
      0003EC A3               [24]  894 	inc	dptr
      0003ED F0               [24]  895 	movx	@dptr,a
      0003EE A3               [24]  896 	inc	dptr
      0003EF F0               [24]  897 	movx	@dptr,a
                                    898 ;	time.c:135: lastTime.tm_hour=epoch%24;
      0003F0 8C 82            [24]  899 	mov	dpl,r4
      0003F2 8D 83            [24]  900 	mov	dph,r5
      0003F4 8E F0            [24]  901 	mov	b,r6
      0003F6 EF               [12]  902 	mov	a,r7
      0003F7 12r00r00         [24]  903 	lcall	__divulong
      0003FA AC 82            [24]  904 	mov	r4,dpl
      0003FC AD 83            [24]  905 	mov	r5,dph
      0003FE AE F0            [24]  906 	mov	r6,b
      000400 FF               [12]  907 	mov	r7,a
      000401 90r00r00         [24]  908 	mov	dptr,#__modulong_PARM_2
      000404 74 18            [12]  909 	mov	a,#0x18
      000406 F0               [24]  910 	movx	@dptr,a
      000407 E4               [12]  911 	clr	a
      000408 A3               [24]  912 	inc	dptr
      000409 F0               [24]  913 	movx	@dptr,a
      00040A A3               [24]  914 	inc	dptr
      00040B F0               [24]  915 	movx	@dptr,a
      00040C A3               [24]  916 	inc	dptr
      00040D F0               [24]  917 	movx	@dptr,a
      00040E 8C 82            [24]  918 	mov	dpl,r4
      000410 8D 83            [24]  919 	mov	dph,r5
      000412 8E F0            [24]  920 	mov	b,r6
      000414 EF               [12]  921 	mov	a,r7
      000415 C0 07            [24]  922 	push	ar7
      000417 C0 06            [24]  923 	push	ar6
      000419 C0 05            [24]  924 	push	ar5
      00041B C0 04            [24]  925 	push	ar4
      00041D 12r00r00         [24]  926 	lcall	__modulong
      000420 A8 82            [24]  927 	mov	r0,dpl
      000422 D0 04            [24]  928 	pop	ar4
      000424 D0 05            [24]  929 	pop	ar5
      000426 D0 06            [24]  930 	pop	ar6
      000428 D0 07            [24]  931 	pop	ar7
      00042A 90r00r3E         [24]  932 	mov	dptr,#(_lastTime + 0x0002)
      00042D E8               [12]  933 	mov	a,r0
      00042E F0               [24]  934 	movx	@dptr,a
                                    935 ;	time.c:136: epoch/=24; // now it is days
      00042F 90r00r00         [24]  936 	mov	dptr,#__divulong_PARM_2
      000432 74 18            [12]  937 	mov	a,#0x18
      000434 F0               [24]  938 	movx	@dptr,a
      000435 E4               [12]  939 	clr	a
      000436 A3               [24]  940 	inc	dptr
      000437 F0               [24]  941 	movx	@dptr,a
      000438 A3               [24]  942 	inc	dptr
      000439 F0               [24]  943 	movx	@dptr,a
      00043A A3               [24]  944 	inc	dptr
      00043B F0               [24]  945 	movx	@dptr,a
                                    946 ;	time.c:137: lastTime.tm_wday=(epoch+4)%7;
      00043C 8C 82            [24]  947 	mov	dpl,r4
      00043E 8D 83            [24]  948 	mov	dph,r5
      000440 8E F0            [24]  949 	mov	b,r6
      000442 EF               [12]  950 	mov	a,r7
      000443 12r00r00         [24]  951 	lcall	__divulong
      000446 AC 82            [24]  952 	mov	r4,dpl
      000448 AD 83            [24]  953 	mov	r5,dph
      00044A AE F0            [24]  954 	mov	r6,b
      00044C FF               [12]  955 	mov	r7,a
      00044D 74 04            [12]  956 	mov	a,#0x04
      00044F 2C               [12]  957 	add	a,r4
      000450 F8               [12]  958 	mov	r0,a
      000451 E4               [12]  959 	clr	a
      000452 3D               [12]  960 	addc	a,r5
      000453 F9               [12]  961 	mov	r1,a
      000454 E4               [12]  962 	clr	a
      000455 3E               [12]  963 	addc	a,r6
      000456 FA               [12]  964 	mov	r2,a
      000457 E4               [12]  965 	clr	a
      000458 3F               [12]  966 	addc	a,r7
      000459 FB               [12]  967 	mov	r3,a
      00045A 90r00r00         [24]  968 	mov	dptr,#__modulong_PARM_2
      00045D 74 07            [12]  969 	mov	a,#0x07
      00045F F0               [24]  970 	movx	@dptr,a
      000460 E4               [12]  971 	clr	a
      000461 A3               [24]  972 	inc	dptr
      000462 F0               [24]  973 	movx	@dptr,a
      000463 A3               [24]  974 	inc	dptr
      000464 F0               [24]  975 	movx	@dptr,a
      000465 A3               [24]  976 	inc	dptr
      000466 F0               [24]  977 	movx	@dptr,a
      000467 88 82            [24]  978 	mov	dpl,r0
      000469 89 83            [24]  979 	mov	dph,r1
      00046B 8A F0            [24]  980 	mov	b,r2
      00046D EB               [12]  981 	mov	a,r3
      00046E C0 07            [24]  982 	push	ar7
      000470 C0 06            [24]  983 	push	ar6
      000472 C0 05            [24]  984 	push	ar5
      000474 C0 04            [24]  985 	push	ar4
      000476 12r00r00         [24]  986 	lcall	__modulong
      000479 A8 82            [24]  987 	mov	r0,dpl
      00047B D0 04            [24]  988 	pop	ar4
      00047D D0 05            [24]  989 	pop	ar5
      00047F D0 06            [24]  990 	pop	ar6
      000481 D0 07            [24]  991 	pop	ar7
      000483 90r00r43         [24]  992 	mov	dptr,#(_lastTime + 0x0007)
      000486 E8               [12]  993 	mov	a,r0
      000487 F0               [24]  994 	movx	@dptr,a
                                    995 ;	time.c:140: days=0;
      000488 90r00r53         [24]  996 	mov	dptr,#_gmtime_days_1_33
      00048B E4               [12]  997 	clr	a
      00048C F0               [24]  998 	movx	@dptr,a
      00048D A3               [24]  999 	inc	dptr
      00048E F0               [24] 1000 	movx	@dptr,a
      00048F A3               [24] 1001 	inc	dptr
      000490 F0               [24] 1002 	movx	@dptr,a
      000491 A3               [24] 1003 	inc	dptr
      000492 F0               [24] 1004 	movx	@dptr,a
                                   1005 ;	time.c:141: while((days += (LEAP_YEAR(year) ? 366 : 365)) <= epoch) {
      000493 8C 00            [24] 1006 	mov	ar0,r4
      000495 8D 01            [24] 1007 	mov	ar1,r5
      000497 8E 02            [24] 1008 	mov	ar2,r6
      000499 8F 03            [24] 1009 	mov	ar3,r7
      00049B 75*08 B2         [24] 1010 	mov	_gmtime_sloc0_1_0,#0xB2
      00049E 75*09 07         [24] 1011 	mov	(_gmtime_sloc0_1_0 + 1),#0x07
      0004A1                       1012 00101$:
      0004A1 C0 00            [24] 1013 	push	ar0
      0004A3 C0 01            [24] 1014 	push	ar1
      0004A5 C0 02            [24] 1015 	push	ar2
      0004A7 C0 03            [24] 1016 	push	ar3
      0004A9 74 03            [12] 1017 	mov	a,#0x03
      0004AB 55*08            [12] 1018 	anl	a,_gmtime_sloc0_1_0
      0004AD FA               [12] 1019 	mov	r2,a
      0004AE 7B 00            [12] 1020 	mov	r3,#0x00
      0004B0 4B               [12] 1021 	orl	a,r3
      0004B1 B4 01 00         [24] 1022 	cjne	a,#0x01,00148$
      0004B4                       1023 00148$:
      0004B4 E4               [12] 1024 	clr	a
      0004B5 33               [12] 1025 	rlc	a
      0004B6 D0 03            [24] 1026 	pop	ar3
      0004B8 D0 02            [24] 1027 	pop	ar2
      0004BA D0 01            [24] 1028 	pop	ar1
      0004BC D0 00            [24] 1029 	pop	ar0
      0004BE 60 08            [24] 1030 	jz	00118$
      0004C0 75*0A 6E         [24] 1031 	mov	_gmtime_sloc1_1_0,#0x6E
      0004C3 75*0B 01         [24] 1032 	mov	(_gmtime_sloc1_1_0 + 1),#0x01
      0004C6 80 06            [24] 1033 	sjmp	00119$
      0004C8                       1034 00118$:
      0004C8 75*0A 6D         [24] 1035 	mov	_gmtime_sloc1_1_0,#0x6D
      0004CB 75*0B 01         [24] 1036 	mov	(_gmtime_sloc1_1_0 + 1),#0x01
      0004CE                       1037 00119$:
      0004CE C0 00            [24] 1038 	push	ar0
      0004D0 C0 01            [24] 1039 	push	ar1
      0004D2 C0 02            [24] 1040 	push	ar2
      0004D4 C0 03            [24] 1041 	push	ar3
      0004D6 90r00r53         [24] 1042 	mov	dptr,#_gmtime_days_1_33
      0004D9 E0               [24] 1043 	movx	a,@dptr
      0004DA F5*0C            [12] 1044 	mov	_gmtime_sloc2_1_0,a
      0004DC A3               [24] 1045 	inc	dptr
      0004DD E0               [24] 1046 	movx	a,@dptr
      0004DE F5*0D            [12] 1047 	mov	(_gmtime_sloc2_1_0 + 1),a
      0004E0 A3               [24] 1048 	inc	dptr
      0004E1 E0               [24] 1049 	movx	a,@dptr
      0004E2 F5*0E            [12] 1050 	mov	(_gmtime_sloc2_1_0 + 2),a
      0004E4 A3               [24] 1051 	inc	dptr
      0004E5 E0               [24] 1052 	movx	a,@dptr
      0004E6 F5*0F            [12] 1053 	mov	(_gmtime_sloc2_1_0 + 3),a
      0004E8 A8*0A            [24] 1054 	mov	r0,_gmtime_sloc1_1_0
      0004EA E5*0B            [12] 1055 	mov	a,(_gmtime_sloc1_1_0 + 1)
      0004EC F9               [12] 1056 	mov	r1,a
      0004ED 33               [12] 1057 	rlc	a
      0004EE 95 E0            [12] 1058 	subb	a,acc
      0004F0 FA               [12] 1059 	mov	r2,a
      0004F1 FB               [12] 1060 	mov	r3,a
      0004F2 E8               [12] 1061 	mov	a,r0
      0004F3 25*0C            [12] 1062 	add	a,_gmtime_sloc2_1_0
      0004F5 F8               [12] 1063 	mov	r0,a
      0004F6 E9               [12] 1064 	mov	a,r1
      0004F7 35*0D            [12] 1065 	addc	a,(_gmtime_sloc2_1_0 + 1)
      0004F9 F9               [12] 1066 	mov	r1,a
      0004FA EA               [12] 1067 	mov	a,r2
      0004FB 35*0E            [12] 1068 	addc	a,(_gmtime_sloc2_1_0 + 2)
      0004FD FA               [12] 1069 	mov	r2,a
      0004FE EB               [12] 1070 	mov	a,r3
      0004FF 35*0F            [12] 1071 	addc	a,(_gmtime_sloc2_1_0 + 3)
      000501 FB               [12] 1072 	mov	r3,a
      000502 90r00r53         [24] 1073 	mov	dptr,#_gmtime_days_1_33
      000505 E8               [12] 1074 	mov	a,r0
      000506 F0               [24] 1075 	movx	@dptr,a
      000507 E9               [12] 1076 	mov	a,r1
      000508 A3               [24] 1077 	inc	dptr
      000509 F0               [24] 1078 	movx	@dptr,a
      00050A EA               [12] 1079 	mov	a,r2
      00050B A3               [24] 1080 	inc	dptr
      00050C F0               [24] 1081 	movx	@dptr,a
      00050D EB               [12] 1082 	mov	a,r3
      00050E A3               [24] 1083 	inc	dptr
      00050F F0               [24] 1084 	movx	@dptr,a
      000510 C3               [12] 1085 	clr	c
      000511 EC               [12] 1086 	mov	a,r4
      000512 98               [12] 1087 	subb	a,r0
      000513 ED               [12] 1088 	mov	a,r5
      000514 99               [12] 1089 	subb	a,r1
      000515 EE               [12] 1090 	mov	a,r6
      000516 9A               [12] 1091 	subb	a,r2
      000517 EF               [12] 1092 	mov	a,r7
      000518 9B               [12] 1093 	subb	a,r3
      000519 D0 03            [24] 1094 	pop	ar3
      00051B D0 02            [24] 1095 	pop	ar2
      00051D D0 01            [24] 1096 	pop	ar1
      00051F D0 00            [24] 1097 	pop	ar0
      000521 40 0B            [24] 1098 	jc	00103$
                                   1099 ;	time.c:142: year++;
      000523 05*08            [12] 1100 	inc	_gmtime_sloc0_1_0
      000525 E4               [12] 1101 	clr	a
      000526 B5*08 02         [24] 1102 	cjne	a,_gmtime_sloc0_1_0,00151$
      000529 05*09            [12] 1103 	inc	(_gmtime_sloc0_1_0 + 1)
      00052B                       1104 00151$:
      00052B 02r04rA1         [24] 1105 	ljmp	00101$
      00052E                       1106 00103$:
                                   1107 ;	time.c:144: lastTime.tm_year=year-1900;
      00052E E5*08            [12] 1108 	mov	a,_gmtime_sloc0_1_0
      000530 24 94            [12] 1109 	add	a,#0x94
      000532 FE               [12] 1110 	mov	r6,a
      000533 E5*09            [12] 1111 	mov	a,(_gmtime_sloc0_1_0 + 1)
      000535 34 F8            [12] 1112 	addc	a,#0xF8
      000537 FF               [12] 1113 	mov	r7,a
      000538 90r00r41         [24] 1114 	mov	dptr,#(_lastTime + 0x0005)
      00053B EE               [12] 1115 	mov	a,r6
      00053C F0               [24] 1116 	movx	@dptr,a
      00053D EF               [12] 1117 	mov	a,r7
      00053E A3               [24] 1118 	inc	dptr
      00053F F0               [24] 1119 	movx	@dptr,a
                                   1120 ;	time.c:146: days -= LEAP_YEAR(year) ? 366 : 365;
      000540 74 03            [12] 1121 	mov	a,#0x03
      000542 55*08            [12] 1122 	anl	a,_gmtime_sloc0_1_0
      000544 FE               [12] 1123 	mov	r6,a
      000545 7F 00            [12] 1124 	mov	r7,#0x00
      000547 4F               [12] 1125 	orl	a,r7
      000548 B4 01 00         [24] 1126 	cjne	a,#0x01,00152$
      00054B                       1127 00152$:
      00054B E4               [12] 1128 	clr	a
      00054C 33               [12] 1129 	rlc	a
      00054D FD               [12] 1130 	mov	r5,a
      00054E 60 08            [24] 1131 	jz	00120$
      000550 75*0C 6E         [24] 1132 	mov	_gmtime_sloc2_1_0,#0x6E
      000553 75*0D 01         [24] 1133 	mov	(_gmtime_sloc2_1_0 + 1),#0x01
      000556 80 06            [24] 1134 	sjmp	00121$
      000558                       1135 00120$:
      000558 75*0C 6D         [24] 1136 	mov	_gmtime_sloc2_1_0,#0x6D
      00055B 75*0D 01         [24] 1137 	mov	(_gmtime_sloc2_1_0 + 1),#0x01
      00055E                       1138 00121$:
      00055E C0 06            [24] 1139 	push	ar6
      000560 C0 07            [24] 1140 	push	ar7
      000562 90r00r53         [24] 1141 	mov	dptr,#_gmtime_days_1_33
      000565 E0               [24] 1142 	movx	a,@dptr
      000566 F5*10            [12] 1143 	mov	_gmtime_sloc3_1_0,a
      000568 A3               [24] 1144 	inc	dptr
      000569 E0               [24] 1145 	movx	a,@dptr
      00056A F5*11            [12] 1146 	mov	(_gmtime_sloc3_1_0 + 1),a
      00056C A3               [24] 1147 	inc	dptr
      00056D E0               [24] 1148 	movx	a,@dptr
      00056E F5*12            [12] 1149 	mov	(_gmtime_sloc3_1_0 + 2),a
      000570 A3               [24] 1150 	inc	dptr
      000571 E0               [24] 1151 	movx	a,@dptr
      000572 F5*13            [12] 1152 	mov	(_gmtime_sloc3_1_0 + 3),a
      000574 AC*0C            [24] 1153 	mov	r4,_gmtime_sloc2_1_0
      000576 E5*0D            [12] 1154 	mov	a,(_gmtime_sloc2_1_0 + 1)
      000578 FD               [12] 1155 	mov	r5,a
      000579 33               [12] 1156 	rlc	a
      00057A 95 E0            [12] 1157 	subb	a,acc
      00057C FE               [12] 1158 	mov	r6,a
      00057D FF               [12] 1159 	mov	r7,a
      00057E 90r00r53         [24] 1160 	mov	dptr,#_gmtime_days_1_33
      000581 E5*10            [12] 1161 	mov	a,_gmtime_sloc3_1_0
      000583 C3               [12] 1162 	clr	c
      000584 9C               [12] 1163 	subb	a,r4
      000585 F0               [24] 1164 	movx	@dptr,a
      000586 E5*11            [12] 1165 	mov	a,(_gmtime_sloc3_1_0 + 1)
      000588 9D               [12] 1166 	subb	a,r5
      000589 A3               [24] 1167 	inc	dptr
      00058A F0               [24] 1168 	movx	@dptr,a
      00058B E5*12            [12] 1169 	mov	a,(_gmtime_sloc3_1_0 + 2)
      00058D 9E               [12] 1170 	subb	a,r6
      00058E A3               [24] 1171 	inc	dptr
      00058F F0               [24] 1172 	movx	@dptr,a
      000590 E5*13            [12] 1173 	mov	a,(_gmtime_sloc3_1_0 + 3)
      000592 9F               [12] 1174 	subb	a,r7
      000593 A3               [24] 1175 	inc	dptr
      000594 F0               [24] 1176 	movx	@dptr,a
                                   1177 ;	time.c:147: epoch -= days; // now it is days in this year, starting at 0
      000595 90r00r53         [24] 1178 	mov	dptr,#_gmtime_days_1_33
      000598 E0               [24] 1179 	movx	a,@dptr
      000599 FC               [12] 1180 	mov	r4,a
      00059A A3               [24] 1181 	inc	dptr
      00059B E0               [24] 1182 	movx	a,@dptr
      00059C FD               [12] 1183 	mov	r5,a
      00059D A3               [24] 1184 	inc	dptr
      00059E E0               [24] 1185 	movx	a,@dptr
      00059F FE               [12] 1186 	mov	r6,a
      0005A0 A3               [24] 1187 	inc	dptr
      0005A1 E0               [24] 1188 	movx	a,@dptr
      0005A2 FF               [12] 1189 	mov	r7,a
      0005A3 E8               [12] 1190 	mov	a,r0
      0005A4 C3               [12] 1191 	clr	c
      0005A5 9C               [12] 1192 	subb	a,r4
      0005A6 F8               [12] 1193 	mov	r0,a
      0005A7 E9               [12] 1194 	mov	a,r1
      0005A8 9D               [12] 1195 	subb	a,r5
      0005A9 F9               [12] 1196 	mov	r1,a
      0005AA EA               [12] 1197 	mov	a,r2
      0005AB 9E               [12] 1198 	subb	a,r6
      0005AC FA               [12] 1199 	mov	r2,a
      0005AD EB               [12] 1200 	mov	a,r3
      0005AE 9F               [12] 1201 	subb	a,r7
      0005AF FB               [12] 1202 	mov	r3,a
      0005B0 90r00r4E         [24] 1203 	mov	dptr,#_gmtime_epoch_1_33
      0005B3 E8               [12] 1204 	mov	a,r0
      0005B4 F0               [24] 1205 	movx	@dptr,a
      0005B5 E9               [12] 1206 	mov	a,r1
      0005B6 A3               [24] 1207 	inc	dptr
      0005B7 F0               [24] 1208 	movx	@dptr,a
      0005B8 EA               [12] 1209 	mov	a,r2
      0005B9 A3               [24] 1210 	inc	dptr
      0005BA F0               [24] 1211 	movx	@dptr,a
      0005BB EB               [12] 1212 	mov	a,r3
      0005BC A3               [24] 1213 	inc	dptr
      0005BD F0               [24] 1214 	movx	@dptr,a
                                   1215 ;	time.c:148: lastTime.tm_yday=epoch;
      0005BE 90r00r44         [24] 1216 	mov	dptr,#(_lastTime + 0x0008)
      0005C1 E8               [12] 1217 	mov	a,r0
      0005C2 F0               [24] 1218 	movx	@dptr,a
      0005C3 E9               [12] 1219 	mov	a,r1
      0005C4 A3               [24] 1220 	inc	dptr
      0005C5 F0               [24] 1221 	movx	@dptr,a
                                   1222 ;	time.c:153: for (month=0; month<12; month++) {
      0005C6 75*10 00         [24] 1223 	mov	_gmtime_sloc3_1_0,#0x00
                                   1224 ;	time.c:175: return &lastTime;
      0005C9 D0 07            [24] 1225 	pop	ar7
      0005CB D0 06            [24] 1226 	pop	ar6
                                   1227 ;	time.c:153: for (month=0; month<12; month++) {
      0005CD                       1228 00114$:
                                   1229 ;	time.c:154: if (month==1) { // februari
      0005CD 74 01            [12] 1230 	mov	a,#0x01
      0005CF B5*10 14         [24] 1231 	cjne	a,_gmtime_sloc3_1_0,00108$
                                   1232 ;	time.c:155: if (LEAP_YEAR(year)) {
      0005D2 EE               [12] 1233 	mov	a,r6
      0005D3 4F               [12] 1234 	orl	a,r7
      0005D4 70 08            [24] 1235 	jnz	00105$
                                   1236 ;	time.c:156: monthLength=29;
      0005D6 90r00r52         [24] 1237 	mov	dptr,#_gmtime_monthLength_1_33
      0005D9 74 1D            [12] 1238 	mov	a,#0x1D
      0005DB F0               [24] 1239 	movx	@dptr,a
      0005DC 80 13            [24] 1240 	sjmp	00109$
      0005DE                       1241 00105$:
                                   1242 ;	time.c:158: monthLength=28;
      0005DE 90r00r52         [24] 1243 	mov	dptr,#_gmtime_monthLength_1_33
      0005E1 74 1C            [12] 1244 	mov	a,#0x1C
      0005E3 F0               [24] 1245 	movx	@dptr,a
      0005E4 80 0B            [24] 1246 	sjmp	00109$
      0005E6                       1247 00108$:
                                   1248 ;	time.c:161: monthLength = monthDays[month];
      0005E6 E5*10            [12] 1249 	mov	a,_gmtime_sloc3_1_0
      0005E8 90r00r00         [24] 1250 	mov	dptr,#_monthDays
      0005EB 93               [24] 1251 	movc	a,@a+dptr
      0005EC FD               [12] 1252 	mov	r5,a
      0005ED 90r00r52         [24] 1253 	mov	dptr,#_gmtime_monthLength_1_33
      0005F0 F0               [24] 1254 	movx	@dptr,a
      0005F1                       1255 00109$:
                                   1256 ;	time.c:164: if (epoch>=monthLength) {
      0005F1 90r00r4E         [24] 1257 	mov	dptr,#_gmtime_epoch_1_33
      0005F4 E0               [24] 1258 	movx	a,@dptr
      0005F5 FA               [12] 1259 	mov	r2,a
      0005F6 A3               [24] 1260 	inc	dptr
      0005F7 E0               [24] 1261 	movx	a,@dptr
      0005F8 FB               [12] 1262 	mov	r3,a
      0005F9 A3               [24] 1263 	inc	dptr
      0005FA E0               [24] 1264 	movx	a,@dptr
      0005FB FC               [12] 1265 	mov	r4,a
      0005FC A3               [24] 1266 	inc	dptr
      0005FD E0               [24] 1267 	movx	a,@dptr
      0005FE FD               [12] 1268 	mov	r5,a
      0005FF 90r00r52         [24] 1269 	mov	dptr,#_gmtime_monthLength_1_33
      000602 E0               [24] 1270 	movx	a,@dptr
      000603 F9               [12] 1271 	mov	r1,a
      000604 89*0C            [24] 1272 	mov	_gmtime_sloc2_1_0,r1
      000606 75*0D 00         [24] 1273 	mov	(_gmtime_sloc2_1_0 + 1),#0x00
      000609 75*0E 00         [24] 1274 	mov	(_gmtime_sloc2_1_0 + 2),#0x00
      00060C 75*0F 00         [24] 1275 	mov	(_gmtime_sloc2_1_0 + 3),#0x00
      00060F C3               [12] 1276 	clr	c
      000610 EA               [12] 1277 	mov	a,r2
      000611 95*0C            [12] 1278 	subb	a,_gmtime_sloc2_1_0
      000613 EB               [12] 1279 	mov	a,r3
      000614 95*0D            [12] 1280 	subb	a,(_gmtime_sloc2_1_0 + 1)
      000616 EC               [12] 1281 	mov	a,r4
      000617 95*0E            [12] 1282 	subb	a,(_gmtime_sloc2_1_0 + 2)
      000619 ED               [12] 1283 	mov	a,r5
      00061A 95*0F            [12] 1284 	subb	a,(_gmtime_sloc2_1_0 + 3)
      00061C 40 1F            [24] 1285 	jc	00113$
                                   1286 ;	time.c:165: epoch-=monthLength;
      00061E 90r00r4E         [24] 1287 	mov	dptr,#_gmtime_epoch_1_33
      000621 EA               [12] 1288 	mov	a,r2
      000622 C3               [12] 1289 	clr	c
      000623 95*0C            [12] 1290 	subb	a,_gmtime_sloc2_1_0
      000625 F0               [24] 1291 	movx	@dptr,a
      000626 EB               [12] 1292 	mov	a,r3
      000627 95*0D            [12] 1293 	subb	a,(_gmtime_sloc2_1_0 + 1)
      000629 A3               [24] 1294 	inc	dptr
      00062A F0               [24] 1295 	movx	@dptr,a
      00062B EC               [12] 1296 	mov	a,r4
      00062C 95*0E            [12] 1297 	subb	a,(_gmtime_sloc2_1_0 + 2)
      00062E A3               [24] 1298 	inc	dptr
      00062F F0               [24] 1299 	movx	@dptr,a
      000630 ED               [12] 1300 	mov	a,r5
      000631 95*0F            [12] 1301 	subb	a,(_gmtime_sloc2_1_0 + 3)
      000633 A3               [24] 1302 	inc	dptr
      000634 F0               [24] 1303 	movx	@dptr,a
                                   1304 ;	time.c:153: for (month=0; month<12; month++) {
      000635 05*10            [12] 1305 	inc	_gmtime_sloc3_1_0
      000637 74 F4            [12] 1306 	mov	a,#0x100 - 0x0C
      000639 25*10            [12] 1307 	add	a,_gmtime_sloc3_1_0
      00063B 50 90            [24] 1308 	jnc	00114$
      00063D                       1309 00113$:
                                   1310 ;	time.c:170: lastTime.tm_mon=month;
      00063D 90r00r40         [24] 1311 	mov	dptr,#(_lastTime + 0x0004)
      000640 E5*10            [12] 1312 	mov	a,_gmtime_sloc3_1_0
      000642 F0               [24] 1313 	movx	@dptr,a
                                   1314 ;	time.c:171: lastTime.tm_mday=epoch+1;
      000643 90r00r4E         [24] 1315 	mov	dptr,#_gmtime_epoch_1_33
      000646 E0               [24] 1316 	movx	a,@dptr
      000647 FC               [12] 1317 	mov	r4,a
      000648 A3               [24] 1318 	inc	dptr
      000649 E0               [24] 1319 	movx	a,@dptr
      00064A A3               [24] 1320 	inc	dptr
      00064B E0               [24] 1321 	movx	a,@dptr
      00064C A3               [24] 1322 	inc	dptr
      00064D E0               [24] 1323 	movx	a,@dptr
      00064E 0C               [12] 1324 	inc	r4
      00064F 90r00r3F         [24] 1325 	mov	dptr,#(_lastTime + 0x0003)
      000652 EC               [12] 1326 	mov	a,r4
      000653 F0               [24] 1327 	movx	@dptr,a
                                   1328 ;	time.c:173: lastTime.tm_isdst=0;
      000654 90r00r46         [24] 1329 	mov	dptr,#(_lastTime + 0x000a)
      000657 E4               [12] 1330 	clr	a
      000658 F0               [24] 1331 	movx	@dptr,a
                                   1332 ;	time.c:175: return &lastTime;
      000659 90r00r3C         [24] 1333 	mov	dptr,#_lastTime
      00065C 75 F0 00         [24] 1334 	mov	b,#0x00
      00065F 22               [24] 1335 	ret
                                   1336 ;------------------------------------------------------------
                                   1337 ;Allocation info for local variables in function 'mktime'
                                   1338 ;------------------------------------------------------------
                                   1339 ;sloc0                     Allocated with name '_mktime_sloc0_1_0'
                                   1340 ;sloc1                     Allocated with name '_mktime_sloc1_1_0'
                                   1341 ;sloc2                     Allocated with name '_mktime_sloc2_1_0'
                                   1342 ;sloc3                     Allocated with name '_mktime_sloc3_1_0'
                                   1343 ;timeptr                   Allocated with name '_mktime_timeptr_1_42'
                                   1344 ;year                      Allocated with name '_mktime_year_1_43'
                                   1345 ;month                     Allocated with name '_mktime_month_1_43'
                                   1346 ;i                         Allocated with name '_mktime_i_1_43'
                                   1347 ;seconds                   Allocated with name '_mktime_seconds_1_43'
                                   1348 ;------------------------------------------------------------
                                   1349 ;	time.c:179: time_t mktime(struct tm *timeptr) {
                                   1350 ;	-----------------------------------------
                                   1351 ;	 function mktime
                                   1352 ;	-----------------------------------------
      000660                       1353 _mktime:
      000660 AF F0            [24] 1354 	mov	r7,b
      000662 AE 83            [24] 1355 	mov	r6,dph
      000664 E5 82            [12] 1356 	mov	a,dpl
      000666 90r00r57         [24] 1357 	mov	dptr,#_mktime_timeptr_1_42
      000669 F0               [24] 1358 	movx	@dptr,a
      00066A EE               [12] 1359 	mov	a,r6
      00066B A3               [24] 1360 	inc	dptr
      00066C F0               [24] 1361 	movx	@dptr,a
      00066D EF               [12] 1362 	mov	a,r7
      00066E A3               [24] 1363 	inc	dptr
      00066F F0               [24] 1364 	movx	@dptr,a
                                   1365 ;	time.c:180: int year=timeptr->tm_year+1900, month=timeptr->tm_mon, i;
      000670 90r00r57         [24] 1366 	mov	dptr,#_mktime_timeptr_1_42
      000673 E0               [24] 1367 	movx	a,@dptr
      000674 F5*1A            [12] 1368 	mov	_mktime_sloc2_1_0,a
      000676 A3               [24] 1369 	inc	dptr
      000677 E0               [24] 1370 	movx	a,@dptr
      000678 F5*1B            [12] 1371 	mov	(_mktime_sloc2_1_0 + 1),a
      00067A A3               [24] 1372 	inc	dptr
      00067B E0               [24] 1373 	movx	a,@dptr
      00067C F5*1C            [12] 1374 	mov	(_mktime_sloc2_1_0 + 2),a
      00067E 74 05            [12] 1375 	mov	a,#0x05
      000680 25*1A            [12] 1376 	add	a,_mktime_sloc2_1_0
      000682 FA               [12] 1377 	mov	r2,a
      000683 E4               [12] 1378 	clr	a
      000684 35*1B            [12] 1379 	addc	a,(_mktime_sloc2_1_0 + 1)
      000686 FB               [12] 1380 	mov	r3,a
      000687 AC*1C            [24] 1381 	mov	r4,(_mktime_sloc2_1_0 + 2)
      000689 8A 82            [24] 1382 	mov	dpl,r2
      00068B 8B 83            [24] 1383 	mov	dph,r3
      00068D 8C F0            [24] 1384 	mov	b,r4
      00068F 12r00r00         [24] 1385 	lcall	__gptrget
      000692 FA               [12] 1386 	mov	r2,a
      000693 A3               [24] 1387 	inc	dptr
      000694 12r00r00         [24] 1388 	lcall	__gptrget
      000697 FB               [12] 1389 	mov	r3,a
      000698 74 6C            [12] 1390 	mov	a,#0x6C
      00069A 2A               [12] 1391 	add	a,r2
      00069B FC               [12] 1392 	mov	r4,a
      00069C 74 07            [12] 1393 	mov	a,#0x07
      00069E 3B               [12] 1394 	addc	a,r3
      00069F FB               [12] 1395 	mov	r3,a
      0006A0 74 04            [12] 1396 	mov	a,#0x04
      0006A2 25*1A            [12] 1397 	add	a,_mktime_sloc2_1_0
      0006A4 F8               [12] 1398 	mov	r0,a
      0006A5 E4               [12] 1399 	clr	a
      0006A6 35*1B            [12] 1400 	addc	a,(_mktime_sloc2_1_0 + 1)
      0006A8 F9               [12] 1401 	mov	r1,a
      0006A9 AA*1C            [24] 1402 	mov	r2,(_mktime_sloc2_1_0 + 2)
      0006AB 88 82            [24] 1403 	mov	dpl,r0
      0006AD 89 83            [24] 1404 	mov	dph,r1
      0006AF 8A F0            [24] 1405 	mov	b,r2
      0006B1 12r00r00         [24] 1406 	lcall	__gptrget
      0006B4 F8               [12] 1407 	mov	r0,a
      0006B5 88*14            [24] 1408 	mov	_mktime_sloc0_1_0,r0
      0006B7 75*15 00         [24] 1409 	mov	(_mktime_sloc0_1_0 + 1),#0x00
                                   1410 ;	time.c:183: CheckTime(timeptr);
      0006BA 85*1A 82         [24] 1411 	mov	dpl,_mktime_sloc2_1_0
      0006BD 85*1B 83         [24] 1412 	mov	dph,(_mktime_sloc2_1_0 + 1)
      0006C0 85*1C F0         [24] 1413 	mov	b,(_mktime_sloc2_1_0 + 2)
      0006C3 C0 04            [24] 1414 	push	ar4
      0006C5 C0 03            [24] 1415 	push	ar3
      0006C7 12r00r95         [24] 1416 	lcall	_CheckTime
      0006CA D0 03            [24] 1417 	pop	ar3
      0006CC D0 04            [24] 1418 	pop	ar4
                                   1419 ;	time.c:186: seconds= (year-1970)*(60*60*24L*365);
      0006CE EC               [12] 1420 	mov	a,r4
      0006CF 24 4E            [12] 1421 	add	a,#0x4E
      0006D1 F9               [12] 1422 	mov	r1,a
      0006D2 EB               [12] 1423 	mov	a,r3
      0006D3 34 F8            [12] 1424 	addc	a,#0xF8
      0006D5 FA               [12] 1425 	mov	r2,a
      0006D6 90r00r00         [24] 1426 	mov	dptr,#__mullong_PARM_2
      0006D9 E9               [12] 1427 	mov	a,r1
      0006DA F0               [24] 1428 	movx	@dptr,a
      0006DB EA               [12] 1429 	mov	a,r2
      0006DC A3               [24] 1430 	inc	dptr
      0006DD F0               [24] 1431 	movx	@dptr,a
      0006DE EA               [12] 1432 	mov	a,r2
      0006DF 33               [12] 1433 	rlc	a
      0006E0 95 E0            [12] 1434 	subb	a,acc
      0006E2 A3               [24] 1435 	inc	dptr
      0006E3 F0               [24] 1436 	movx	@dptr,a
      0006E4 A3               [24] 1437 	inc	dptr
      0006E5 F0               [24] 1438 	movx	@dptr,a
                                   1439 ;	time.c:189: for (i=1970; i<year; i++) {
      0006E6 90 33 80         [24] 1440 	mov	dptr,#0x3380
      0006E9 75 F0 E1         [24] 1441 	mov	b,#0xE1
      0006EC 74 01            [12] 1442 	mov	a,#0x01
      0006EE C0 04            [24] 1443 	push	ar4
      0006F0 C0 03            [24] 1444 	push	ar3
      0006F2 12r00r00         [24] 1445 	lcall	__mullong
      0006F5 85 82*16         [24] 1446 	mov	_mktime_sloc1_1_0,dpl
      0006F8 85 83*17         [24] 1447 	mov	(_mktime_sloc1_1_0 + 1),dph
      0006FB 85 F0*18         [24] 1448 	mov	(_mktime_sloc1_1_0 + 2),b
      0006FE F5*19            [12] 1449 	mov	(_mktime_sloc1_1_0 + 3),a
      000700 D0 03            [24] 1450 	pop	ar3
      000702 D0 04            [24] 1451 	pop	ar4
      000704 79 B2            [12] 1452 	mov	r1,#0xB2
      000706 7A 07            [12] 1453 	mov	r2,#0x07
      000708                       1454 00110$:
      000708 C3               [12] 1455 	clr	c
      000709 E9               [12] 1456 	mov	a,r1
      00070A 9C               [12] 1457 	subb	a,r4
      00070B EA               [12] 1458 	mov	a,r2
      00070C 64 80            [12] 1459 	xrl	a,#0x80
      00070E 8B F0            [24] 1460 	mov	b,r3
      000710 63 F0 80         [24] 1461 	xrl	b,#0x80
      000713 95 F0            [12] 1462 	subb	a,b
      000715 50 47            [24] 1463 	jnc	00124$
                                   1464 ;	time.c:190: if (LEAP_YEAR(i)) {
      000717 90r00r00         [24] 1465 	mov	dptr,#__modsint_PARM_2
      00071A 74 04            [12] 1466 	mov	a,#0x04
      00071C F0               [24] 1467 	movx	@dptr,a
      00071D E4               [12] 1468 	clr	a
      00071E A3               [24] 1469 	inc	dptr
      00071F F0               [24] 1470 	movx	@dptr,a
      000720 89 82            [24] 1471 	mov	dpl,r1
      000722 8A 83            [24] 1472 	mov	dph,r2
      000724 C0 04            [24] 1473 	push	ar4
      000726 C0 03            [24] 1474 	push	ar3
      000728 C0 02            [24] 1475 	push	ar2
      00072A C0 01            [24] 1476 	push	ar1
      00072C 12r00r00         [24] 1477 	lcall	__modsint
      00072F E5 82            [12] 1478 	mov	a,dpl
      000731 85 83 F0         [24] 1479 	mov	b,dph
      000734 D0 01            [24] 1480 	pop	ar1
      000736 D0 02            [24] 1481 	pop	ar2
      000738 D0 03            [24] 1482 	pop	ar3
      00073A D0 04            [24] 1483 	pop	ar4
      00073C 45 F0            [12] 1484 	orl	a,b
      00073E 70 17            [24] 1485 	jnz	00111$
                                   1486 ;	time.c:191: seconds+= 60*60*24L;
      000740 74 80            [12] 1487 	mov	a,#0x80
      000742 25*16            [12] 1488 	add	a,_mktime_sloc1_1_0
      000744 F5*16            [12] 1489 	mov	_mktime_sloc1_1_0,a
      000746 74 51            [12] 1490 	mov	a,#0x51
      000748 35*17            [12] 1491 	addc	a,(_mktime_sloc1_1_0 + 1)
      00074A F5*17            [12] 1492 	mov	(_mktime_sloc1_1_0 + 1),a
      00074C 74 01            [12] 1493 	mov	a,#0x01
      00074E 35*18            [12] 1494 	addc	a,(_mktime_sloc1_1_0 + 2)
      000750 F5*18            [12] 1495 	mov	(_mktime_sloc1_1_0 + 2),a
      000752 E4               [12] 1496 	clr	a
      000753 35*19            [12] 1497 	addc	a,(_mktime_sloc1_1_0 + 3)
      000755 F5*19            [12] 1498 	mov	(_mktime_sloc1_1_0 + 3),a
      000757                       1499 00111$:
                                   1500 ;	time.c:189: for (i=1970; i<year; i++) {
      000757 09               [12] 1501 	inc	r1
      000758 B9 00 AD         [24] 1502 	cjne	r1,#0x00,00110$
      00075B 0A               [12] 1503 	inc	r2
      00075C 80 AA            [24] 1504 	sjmp	00110$
      00075E                       1505 00124$:
      00075E 90r00r5A         [24] 1506 	mov	dptr,#_mktime_seconds_1_43
      000761 E5*16            [12] 1507 	mov	a,_mktime_sloc1_1_0
      000763 F0               [24] 1508 	movx	@dptr,a
      000764 E5*17            [12] 1509 	mov	a,(_mktime_sloc1_1_0 + 1)
      000766 A3               [24] 1510 	inc	dptr
      000767 F0               [24] 1511 	movx	@dptr,a
      000768 E5*18            [12] 1512 	mov	a,(_mktime_sloc1_1_0 + 2)
      00076A A3               [24] 1513 	inc	dptr
      00076B F0               [24] 1514 	movx	@dptr,a
      00076C E5*19            [12] 1515 	mov	a,(_mktime_sloc1_1_0 + 3)
      00076E A3               [24] 1516 	inc	dptr
      00076F F0               [24] 1517 	movx	@dptr,a
                                   1518 ;	time.c:196: for (i=0; i<month; i++) {
      000770 90r00r00         [24] 1519 	mov	dptr,#__modsint_PARM_2
      000773 74 04            [12] 1520 	mov	a,#0x04
      000775 F0               [24] 1521 	movx	@dptr,a
      000776 E4               [12] 1522 	clr	a
      000777 A3               [24] 1523 	inc	dptr
      000778 F0               [24] 1524 	movx	@dptr,a
      000779 8C 82            [24] 1525 	mov	dpl,r4
      00077B 8B 83            [24] 1526 	mov	dph,r3
      00077D 12r00r00         [24] 1527 	lcall	__modsint
      000780 85 82*16         [24] 1528 	mov	_mktime_sloc1_1_0,dpl
      000783 85 83*17         [24] 1529 	mov	(_mktime_sloc1_1_0 + 1),dph
      000786 79 00            [12] 1530 	mov	r1,#0x00
      000788 7A 00            [12] 1531 	mov	r2,#0x00
      00078A                       1532 00113$:
      00078A C3               [12] 1533 	clr	c
      00078B E9               [12] 1534 	mov	a,r1
      00078C 95*14            [12] 1535 	subb	a,_mktime_sloc0_1_0
      00078E EA               [12] 1536 	mov	a,r2
      00078F 64 80            [12] 1537 	xrl	a,#0x80
      000791 85*15 F0         [24] 1538 	mov	b,(_mktime_sloc0_1_0 + 1)
      000794 63 F0 80         [24] 1539 	xrl	b,#0x80
      000797 95 F0            [12] 1540 	subb	a,b
      000799 40 03            [24] 1541 	jc	00143$
      00079B 02r08r33         [24] 1542 	ljmp	00108$
      00079E                       1543 00143$:
                                   1544 ;	time.c:197: if (i==1 && LEAP_YEAR(year)) { 
      00079E B9 01 2E         [24] 1545 	cjne	r1,#0x01,00105$
      0007A1 BA 00 2B         [24] 1546 	cjne	r2,#0x00,00105$
      0007A4 E5*16            [12] 1547 	mov	a,_mktime_sloc1_1_0
      0007A6 45*17            [12] 1548 	orl	a,(_mktime_sloc1_1_0 + 1)
      0007A8 70 25            [24] 1549 	jnz	00105$
                                   1550 ;	time.c:198: seconds+= 60*60*24L*29;
      0007AA 90r00r5A         [24] 1551 	mov	dptr,#_mktime_seconds_1_43
      0007AD E0               [24] 1552 	movx	a,@dptr
      0007AE F8               [12] 1553 	mov	r0,a
      0007AF A3               [24] 1554 	inc	dptr
      0007B0 E0               [24] 1555 	movx	a,@dptr
      0007B1 FB               [12] 1556 	mov	r3,a
      0007B2 A3               [24] 1557 	inc	dptr
      0007B3 E0               [24] 1558 	movx	a,@dptr
      0007B4 FC               [12] 1559 	mov	r4,a
      0007B5 A3               [24] 1560 	inc	dptr
      0007B6 E0               [24] 1561 	movx	a,@dptr
      0007B7 FF               [12] 1562 	mov	r7,a
      0007B8 90r00r5A         [24] 1563 	mov	dptr,#_mktime_seconds_1_43
      0007BB 74 80            [12] 1564 	mov	a,#0x80
      0007BD 28               [12] 1565 	add	a,r0
      0007BE F0               [24] 1566 	movx	@dptr,a
      0007BF 74 3B            [12] 1567 	mov	a,#0x3B
      0007C1 3B               [12] 1568 	addc	a,r3
      0007C2 A3               [24] 1569 	inc	dptr
      0007C3 F0               [24] 1570 	movx	@dptr,a
      0007C4 74 26            [12] 1571 	mov	a,#0x26
      0007C6 3C               [12] 1572 	addc	a,r4
      0007C7 A3               [24] 1573 	inc	dptr
      0007C8 F0               [24] 1574 	movx	@dptr,a
      0007C9 E4               [12] 1575 	clr	a
      0007CA 3F               [12] 1576 	addc	a,r7
      0007CB A3               [24] 1577 	inc	dptr
      0007CC F0               [24] 1578 	movx	@dptr,a
      0007CD 80 5C            [24] 1579 	sjmp	00114$
      0007CF                       1580 00105$:
                                   1581 ;	time.c:200: seconds+= 60*60*24L*monthDays[i];
      0007CF E9               [12] 1582 	mov	a,r1
      0007D0 24r00            [12] 1583 	add	a,#_monthDays
      0007D2 F5 82            [12] 1584 	mov	dpl,a
      0007D4 EA               [12] 1585 	mov	a,r2
      0007D5 34s00            [12] 1586 	addc	a,#(_monthDays >> 8)
      0007D7 F5 83            [12] 1587 	mov	dph,a
      0007D9 E4               [12] 1588 	clr	a
      0007DA 93               [24] 1589 	movc	a,@a+dptr
      0007DB FF               [12] 1590 	mov	r7,a
      0007DC 90r00r00         [24] 1591 	mov	dptr,#__mullong_PARM_2
      0007DF F0               [24] 1592 	movx	@dptr,a
      0007E0 EF               [12] 1593 	mov	a,r7
      0007E1 33               [12] 1594 	rlc	a
      0007E2 95 E0            [12] 1595 	subb	a,acc
      0007E4 A3               [24] 1596 	inc	dptr
      0007E5 F0               [24] 1597 	movx	@dptr,a
      0007E6 A3               [24] 1598 	inc	dptr
      0007E7 F0               [24] 1599 	movx	@dptr,a
      0007E8 A3               [24] 1600 	inc	dptr
      0007E9 F0               [24] 1601 	movx	@dptr,a
      0007EA 90 51 80         [24] 1602 	mov	dptr,#0x5180
      0007ED 75 F0 01         [24] 1603 	mov	b,#0x01
      0007F0 E4               [12] 1604 	clr	a
      0007F1 C0 02            [24] 1605 	push	ar2
      0007F3 C0 01            [24] 1606 	push	ar1
      0007F5 12r00r00         [24] 1607 	lcall	__mullong
      0007F8 85 82*1D         [24] 1608 	mov	_mktime_sloc3_1_0,dpl
      0007FB 85 83*1E         [24] 1609 	mov	(_mktime_sloc3_1_0 + 1),dph
      0007FE 85 F0*1F         [24] 1610 	mov	(_mktime_sloc3_1_0 + 2),b
      000801 F5*20            [12] 1611 	mov	(_mktime_sloc3_1_0 + 3),a
      000803 D0 01            [24] 1612 	pop	ar1
      000805 D0 02            [24] 1613 	pop	ar2
      000807 90r00r5A         [24] 1614 	mov	dptr,#_mktime_seconds_1_43
      00080A E0               [24] 1615 	movx	a,@dptr
      00080B FB               [12] 1616 	mov	r3,a
      00080C A3               [24] 1617 	inc	dptr
      00080D E0               [24] 1618 	movx	a,@dptr
      00080E FC               [12] 1619 	mov	r4,a
      00080F A3               [24] 1620 	inc	dptr
      000810 E0               [24] 1621 	movx	a,@dptr
      000811 FE               [12] 1622 	mov	r6,a
      000812 A3               [24] 1623 	inc	dptr
      000813 E0               [24] 1624 	movx	a,@dptr
      000814 FF               [12] 1625 	mov	r7,a
      000815 90r00r5A         [24] 1626 	mov	dptr,#_mktime_seconds_1_43
      000818 E5*1D            [12] 1627 	mov	a,_mktime_sloc3_1_0
      00081A 2B               [12] 1628 	add	a,r3
      00081B F0               [24] 1629 	movx	@dptr,a
      00081C E5*1E            [12] 1630 	mov	a,(_mktime_sloc3_1_0 + 1)
      00081E 3C               [12] 1631 	addc	a,r4
      00081F A3               [24] 1632 	inc	dptr
      000820 F0               [24] 1633 	movx	@dptr,a
      000821 E5*1F            [12] 1634 	mov	a,(_mktime_sloc3_1_0 + 2)
      000823 3E               [12] 1635 	addc	a,r6
      000824 A3               [24] 1636 	inc	dptr
      000825 F0               [24] 1637 	movx	@dptr,a
      000826 E5*20            [12] 1638 	mov	a,(_mktime_sloc3_1_0 + 3)
      000828 3F               [12] 1639 	addc	a,r7
      000829 A3               [24] 1640 	inc	dptr
      00082A F0               [24] 1641 	movx	@dptr,a
      00082B                       1642 00114$:
                                   1643 ;	time.c:196: for (i=0; i<month; i++) {
      00082B 09               [12] 1644 	inc	r1
      00082C B9 00 01         [24] 1645 	cjne	r1,#0x00,00147$
      00082F 0A               [12] 1646 	inc	r2
      000830                       1647 00147$:
      000830 02r07r8A         [24] 1648 	ljmp	00113$
      000833                       1649 00108$:
                                   1650 ;	time.c:204: seconds+= (timeptr->tm_mday-1)*60*60*24L;
      000833 74 03            [12] 1651 	mov	a,#0x03
      000835 25*1A            [12] 1652 	add	a,_mktime_sloc2_1_0
      000837 FD               [12] 1653 	mov	r5,a
      000838 E4               [12] 1654 	clr	a
      000839 35*1B            [12] 1655 	addc	a,(_mktime_sloc2_1_0 + 1)
      00083B FE               [12] 1656 	mov	r6,a
      00083C AF*1C            [24] 1657 	mov	r7,(_mktime_sloc2_1_0 + 2)
      00083E 8D 82            [24] 1658 	mov	dpl,r5
      000840 8E 83            [24] 1659 	mov	dph,r6
      000842 8F F0            [24] 1660 	mov	b,r7
      000844 12r00r00         [24] 1661 	lcall	__gptrget
      000847 FD               [12] 1662 	mov	r5,a
      000848 7F 00            [12] 1663 	mov	r7,#0x00
      00084A 1D               [12] 1664 	dec	r5
      00084B BD FF 01         [24] 1665 	cjne	r5,#0xFF,00148$
      00084E 1F               [12] 1666 	dec	r7
      00084F                       1667 00148$:
      00084F 90r00r00         [24] 1668 	mov	dptr,#__mullong_PARM_2
      000852 ED               [12] 1669 	mov	a,r5
      000853 F0               [24] 1670 	movx	@dptr,a
      000854 EF               [12] 1671 	mov	a,r7
      000855 A3               [24] 1672 	inc	dptr
      000856 F0               [24] 1673 	movx	@dptr,a
      000857 EF               [12] 1674 	mov	a,r7
      000858 33               [12] 1675 	rlc	a
      000859 95 E0            [12] 1676 	subb	a,acc
      00085B A3               [24] 1677 	inc	dptr
      00085C F0               [24] 1678 	movx	@dptr,a
      00085D A3               [24] 1679 	inc	dptr
      00085E F0               [24] 1680 	movx	@dptr,a
      00085F 90 51 80         [24] 1681 	mov	dptr,#0x5180
      000862 75 F0 01         [24] 1682 	mov	b,#0x01
      000865 E4               [12] 1683 	clr	a
      000866 12r00r00         [24] 1684 	lcall	__mullong
      000869 AC 82            [24] 1685 	mov	r4,dpl
      00086B AD 83            [24] 1686 	mov	r5,dph
      00086D AE F0            [24] 1687 	mov	r6,b
      00086F FF               [12] 1688 	mov	r7,a
      000870 90r00r5A         [24] 1689 	mov	dptr,#_mktime_seconds_1_43
      000873 E0               [24] 1690 	movx	a,@dptr
      000874 F8               [12] 1691 	mov	r0,a
      000875 A3               [24] 1692 	inc	dptr
      000876 E0               [24] 1693 	movx	a,@dptr
      000877 F9               [12] 1694 	mov	r1,a
      000878 A3               [24] 1695 	inc	dptr
      000879 E0               [24] 1696 	movx	a,@dptr
      00087A FA               [12] 1697 	mov	r2,a
      00087B A3               [24] 1698 	inc	dptr
      00087C E0               [24] 1699 	movx	a,@dptr
      00087D FB               [12] 1700 	mov	r3,a
      00087E 90r00r5A         [24] 1701 	mov	dptr,#_mktime_seconds_1_43
      000881 EC               [12] 1702 	mov	a,r4
      000882 28               [12] 1703 	add	a,r0
      000883 F0               [24] 1704 	movx	@dptr,a
      000884 ED               [12] 1705 	mov	a,r5
      000885 39               [12] 1706 	addc	a,r1
      000886 A3               [24] 1707 	inc	dptr
      000887 F0               [24] 1708 	movx	@dptr,a
      000888 EE               [12] 1709 	mov	a,r6
      000889 3A               [12] 1710 	addc	a,r2
      00088A A3               [24] 1711 	inc	dptr
      00088B F0               [24] 1712 	movx	@dptr,a
      00088C EF               [12] 1713 	mov	a,r7
      00088D 3B               [12] 1714 	addc	a,r3
      00088E A3               [24] 1715 	inc	dptr
      00088F F0               [24] 1716 	movx	@dptr,a
                                   1717 ;	time.c:205: seconds+= timeptr->tm_hour*60*60L;
      000890 74 02            [12] 1718 	mov	a,#0x02
      000892 25*1A            [12] 1719 	add	a,_mktime_sloc2_1_0
      000894 FD               [12] 1720 	mov	r5,a
      000895 E4               [12] 1721 	clr	a
      000896 35*1B            [12] 1722 	addc	a,(_mktime_sloc2_1_0 + 1)
      000898 FE               [12] 1723 	mov	r6,a
      000899 AF*1C            [24] 1724 	mov	r7,(_mktime_sloc2_1_0 + 2)
      00089B 8D 82            [24] 1725 	mov	dpl,r5
      00089D 8E 83            [24] 1726 	mov	dph,r6
      00089F 8F F0            [24] 1727 	mov	b,r7
      0008A1 12r00r00         [24] 1728 	lcall	__gptrget
      0008A4 90r00r00         [24] 1729 	mov	dptr,#__mullong_PARM_2
      0008A7 F0               [24] 1730 	movx	@dptr,a
      0008A8 E4               [12] 1731 	clr	a
      0008A9 A3               [24] 1732 	inc	dptr
      0008AA F0               [24] 1733 	movx	@dptr,a
      0008AB A3               [24] 1734 	inc	dptr
      0008AC F0               [24] 1735 	movx	@dptr,a
      0008AD A3               [24] 1736 	inc	dptr
      0008AE F0               [24] 1737 	movx	@dptr,a
      0008AF 90 0E 10         [24] 1738 	mov	dptr,#0x0E10
      0008B2 E4               [12] 1739 	clr	a
      0008B3 F5 F0            [12] 1740 	mov	b,a
      0008B5 12r00r00         [24] 1741 	lcall	__mullong
      0008B8 AC 82            [24] 1742 	mov	r4,dpl
      0008BA AD 83            [24] 1743 	mov	r5,dph
      0008BC AE F0            [24] 1744 	mov	r6,b
      0008BE FF               [12] 1745 	mov	r7,a
      0008BF 90r00r5A         [24] 1746 	mov	dptr,#_mktime_seconds_1_43
      0008C2 E0               [24] 1747 	movx	a,@dptr
      0008C3 F8               [12] 1748 	mov	r0,a
      0008C4 A3               [24] 1749 	inc	dptr
      0008C5 E0               [24] 1750 	movx	a,@dptr
      0008C6 F9               [12] 1751 	mov	r1,a
      0008C7 A3               [24] 1752 	inc	dptr
      0008C8 E0               [24] 1753 	movx	a,@dptr
      0008C9 FA               [12] 1754 	mov	r2,a
      0008CA A3               [24] 1755 	inc	dptr
      0008CB E0               [24] 1756 	movx	a,@dptr
      0008CC FB               [12] 1757 	mov	r3,a
      0008CD 90r00r5A         [24] 1758 	mov	dptr,#_mktime_seconds_1_43
      0008D0 EC               [12] 1759 	mov	a,r4
      0008D1 28               [12] 1760 	add	a,r0
      0008D2 F0               [24] 1761 	movx	@dptr,a
      0008D3 ED               [12] 1762 	mov	a,r5
      0008D4 39               [12] 1763 	addc	a,r1
      0008D5 A3               [24] 1764 	inc	dptr
      0008D6 F0               [24] 1765 	movx	@dptr,a
      0008D7 EE               [12] 1766 	mov	a,r6
      0008D8 3A               [12] 1767 	addc	a,r2
      0008D9 A3               [24] 1768 	inc	dptr
      0008DA F0               [24] 1769 	movx	@dptr,a
      0008DB EF               [12] 1770 	mov	a,r7
      0008DC 3B               [12] 1771 	addc	a,r3
      0008DD A3               [24] 1772 	inc	dptr
      0008DE F0               [24] 1773 	movx	@dptr,a
                                   1774 ;	time.c:206: seconds+= timeptr->tm_min*60;
      0008DF 74 01            [12] 1775 	mov	a,#0x01
      0008E1 25*1A            [12] 1776 	add	a,_mktime_sloc2_1_0
      0008E3 FD               [12] 1777 	mov	r5,a
      0008E4 E4               [12] 1778 	clr	a
      0008E5 35*1B            [12] 1779 	addc	a,(_mktime_sloc2_1_0 + 1)
      0008E7 FE               [12] 1780 	mov	r6,a
      0008E8 AF*1C            [24] 1781 	mov	r7,(_mktime_sloc2_1_0 + 2)
      0008EA 8D 82            [24] 1782 	mov	dpl,r5
      0008EC 8E 83            [24] 1783 	mov	dph,r6
      0008EE 8F F0            [24] 1784 	mov	b,r7
      0008F0 12r00r00         [24] 1785 	lcall	__gptrget
      0008F3 75 F0 3C         [24] 1786 	mov	b,#0x3C
      0008F6 A4               [48] 1787 	mul	ab
      0008F7 FD               [12] 1788 	mov	r5,a
      0008F8 AF F0            [24] 1789 	mov	r7,b
      0008FA 90r00r5A         [24] 1790 	mov	dptr,#_mktime_seconds_1_43
      0008FD E0               [24] 1791 	movx	a,@dptr
      0008FE FA               [12] 1792 	mov	r2,a
      0008FF A3               [24] 1793 	inc	dptr
      000900 E0               [24] 1794 	movx	a,@dptr
      000901 FB               [12] 1795 	mov	r3,a
      000902 A3               [24] 1796 	inc	dptr
      000903 E0               [24] 1797 	movx	a,@dptr
      000904 FC               [12] 1798 	mov	r4,a
      000905 A3               [24] 1799 	inc	dptr
      000906 E0               [24] 1800 	movx	a,@dptr
      000907 FE               [12] 1801 	mov	r6,a
      000908 8D 00            [24] 1802 	mov	ar0,r5
      00090A EF               [12] 1803 	mov	a,r7
      00090B F9               [12] 1804 	mov	r1,a
      00090C 33               [12] 1805 	rlc	a
      00090D 95 E0            [12] 1806 	subb	a,acc
      00090F FD               [12] 1807 	mov	r5,a
      000910 FF               [12] 1808 	mov	r7,a
      000911 90r00r5A         [24] 1809 	mov	dptr,#_mktime_seconds_1_43
      000914 E8               [12] 1810 	mov	a,r0
      000915 2A               [12] 1811 	add	a,r2
      000916 F0               [24] 1812 	movx	@dptr,a
      000917 E9               [12] 1813 	mov	a,r1
      000918 3B               [12] 1814 	addc	a,r3
      000919 A3               [24] 1815 	inc	dptr
      00091A F0               [24] 1816 	movx	@dptr,a
      00091B ED               [12] 1817 	mov	a,r5
      00091C 3C               [12] 1818 	addc	a,r4
      00091D A3               [24] 1819 	inc	dptr
      00091E F0               [24] 1820 	movx	@dptr,a
      00091F EF               [12] 1821 	mov	a,r7
      000920 3E               [12] 1822 	addc	a,r6
      000921 A3               [24] 1823 	inc	dptr
      000922 F0               [24] 1824 	movx	@dptr,a
                                   1825 ;	time.c:207: seconds+= timeptr->tm_sec;
      000923 85*1A 82         [24] 1826 	mov	dpl,_mktime_sloc2_1_0
      000926 85*1B 83         [24] 1827 	mov	dph,(_mktime_sloc2_1_0 + 1)
      000929 85*1C F0         [24] 1828 	mov	b,(_mktime_sloc2_1_0 + 2)
      00092C 12r00r00         [24] 1829 	lcall	__gptrget
      00092F FF               [12] 1830 	mov	r7,a
      000930 7E 00            [12] 1831 	mov	r6,#0x00
      000932 90r00r5A         [24] 1832 	mov	dptr,#_mktime_seconds_1_43
      000935 E0               [24] 1833 	movx	a,@dptr
      000936 FA               [12] 1834 	mov	r2,a
      000937 A3               [24] 1835 	inc	dptr
      000938 E0               [24] 1836 	movx	a,@dptr
      000939 FB               [12] 1837 	mov	r3,a
      00093A A3               [24] 1838 	inc	dptr
      00093B E0               [24] 1839 	movx	a,@dptr
      00093C FC               [12] 1840 	mov	r4,a
      00093D A3               [24] 1841 	inc	dptr
      00093E E0               [24] 1842 	movx	a,@dptr
      00093F FD               [12] 1843 	mov	r5,a
      000940 8F 00            [24] 1844 	mov	ar0,r7
      000942 EE               [12] 1845 	mov	a,r6
      000943 F9               [12] 1846 	mov	r1,a
      000944 33               [12] 1847 	rlc	a
      000945 95 E0            [12] 1848 	subb	a,acc
      000947 FE               [12] 1849 	mov	r6,a
      000948 FF               [12] 1850 	mov	r7,a
      000949 90r00r5A         [24] 1851 	mov	dptr,#_mktime_seconds_1_43
      00094C E8               [12] 1852 	mov	a,r0
      00094D 2A               [12] 1853 	add	a,r2
      00094E F0               [24] 1854 	movx	@dptr,a
      00094F E9               [12] 1855 	mov	a,r1
      000950 3B               [12] 1856 	addc	a,r3
      000951 A3               [24] 1857 	inc	dptr
      000952 F0               [24] 1858 	movx	@dptr,a
      000953 EE               [12] 1859 	mov	a,r6
      000954 3C               [12] 1860 	addc	a,r4
      000955 A3               [24] 1861 	inc	dptr
      000956 F0               [24] 1862 	movx	@dptr,a
      000957 EF               [12] 1863 	mov	a,r7
      000958 3D               [12] 1864 	addc	a,r5
      000959 A3               [24] 1865 	inc	dptr
      00095A F0               [24] 1866 	movx	@dptr,a
                                   1867 ;	time.c:208: return seconds;
      00095B 90r00r5A         [24] 1868 	mov	dptr,#_mktime_seconds_1_43
      00095E E0               [24] 1869 	movx	a,@dptr
      00095F FC               [12] 1870 	mov	r4,a
      000960 A3               [24] 1871 	inc	dptr
      000961 E0               [24] 1872 	movx	a,@dptr
      000962 FD               [12] 1873 	mov	r5,a
      000963 A3               [24] 1874 	inc	dptr
      000964 E0               [24] 1875 	movx	a,@dptr
      000965 FE               [12] 1876 	mov	r6,a
      000966 A3               [24] 1877 	inc	dptr
      000967 E0               [24] 1878 	movx	a,@dptr
      000968 8C 82            [24] 1879 	mov	dpl,r4
      00096A 8D 83            [24] 1880 	mov	dph,r5
      00096C 8E F0            [24] 1881 	mov	b,r6
      00096E 22               [24] 1882 	ret
                                   1883 	.area CSEG    (CODE)
                                   1884 	.area CONST   (CODE)
      000000                       1885 _monthDays:
      000000 1F                    1886 	.db #0x1F	;  31
      000001 1C                    1887 	.db #0x1C	;  28
      000002 1F                    1888 	.db #0x1F	;  31
      000003 1E                    1889 	.db #0x1E	;  30
      000004 1F                    1890 	.db #0x1F	;  31
      000005 1E                    1891 	.db #0x1E	;  30
      000006 1F                    1892 	.db #0x1F	;  31
      000007 1F                    1893 	.db #0x1F	;  31
      000008 1E                    1894 	.db #0x1E	;  30
      000009 1F                    1895 	.db #0x1F	;  31
      00000A 1E                    1896 	.db #0x1E	;  30
      00000B 1F                    1897 	.db #0x1F	;  31
      00000C                       1898 ___month:
      00000Cr51s00                 1899 	.byte _str_1,(_str_1 >> 8)
      00000Er55s00                 1900 	.byte _str_2,(_str_2 >> 8)
      000010r59s00                 1901 	.byte _str_3,(_str_3 >> 8)
      000012r5Ds00                 1902 	.byte _str_4,(_str_4 >> 8)
      000014r61s00                 1903 	.byte _str_5,(_str_5 >> 8)
      000016r65s00                 1904 	.byte _str_6,(_str_6 >> 8)
      000018r69s00                 1905 	.byte _str_7,(_str_7 >> 8)
      00001Ar6Ds00                 1906 	.byte _str_8,(_str_8 >> 8)
      00001Cr71s00                 1907 	.byte _str_9,(_str_9 >> 8)
      00001Er75s00                 1908 	.byte _str_10,(_str_10 >> 8)
      000020r79s00                 1909 	.byte _str_11,(_str_11 >> 8)
      000022r7Ds00                 1910 	.byte _str_12,(_str_12 >> 8)
      000024                       1911 ___day:
      000024r81s00                 1912 	.byte _str_13,(_str_13 >> 8)
      000026r85s00                 1913 	.byte _str_14,(_str_14 >> 8)
      000028r89s00                 1914 	.byte _str_15,(_str_15 >> 8)
      00002Ar8Ds00                 1915 	.byte _str_16,(_str_16 >> 8)
      00002Cr91s00                 1916 	.byte _str_17,(_str_17 >> 8)
      00002Er95s00                 1917 	.byte _str_18,(_str_18 >> 8)
      000030r99s00                 1918 	.byte _str_19,(_str_19 >> 8)
      000032                       1919 __str_0:
      000032 25 73 20 25 73 20 25  1920 	.ascii "%s %s %2d %02d:%02d:%02d %04d"
             32 64 20 25 30 32 64
             3A 25 30 32 64 3A 25
             30 32 64 20 25 30 34
             64
      00004F 0A                    1921 	.db 0x0A
      000050 00                    1922 	.db 0x00
      000051                       1923 _str_1:
      000051 4A 61 6E              1924 	.ascii "Jan"
      000054 00                    1925 	.db 0x00
      000055                       1926 _str_2:
      000055 46 65 62              1927 	.ascii "Feb"
      000058 00                    1928 	.db 0x00
      000059                       1929 _str_3:
      000059 4D 61 72              1930 	.ascii "Mar"
      00005C 00                    1931 	.db 0x00
      00005D                       1932 _str_4:
      00005D 41 70 72              1933 	.ascii "Apr"
      000060 00                    1934 	.db 0x00
      000061                       1935 _str_5:
      000061 4D 61 79              1936 	.ascii "May"
      000064 00                    1937 	.db 0x00
      000065                       1938 _str_6:
      000065 4A 75 6E              1939 	.ascii "Jun"
      000068 00                    1940 	.db 0x00
      000069                       1941 _str_7:
      000069 4A 75 6C              1942 	.ascii "Jul"
      00006C 00                    1943 	.db 0x00
      00006D                       1944 _str_8:
      00006D 41 75 67              1945 	.ascii "Aug"
      000070 00                    1946 	.db 0x00
      000071                       1947 _str_9:
      000071 53 65 70              1948 	.ascii "Sep"
      000074 00                    1949 	.db 0x00
      000075                       1950 _str_10:
      000075 4F 63 74              1951 	.ascii "Oct"
      000078 00                    1952 	.db 0x00
      000079                       1953 _str_11:
      000079 4E 6F 76              1954 	.ascii "Nov"
      00007C 00                    1955 	.db 0x00
      00007D                       1956 _str_12:
      00007D 44 65 63              1957 	.ascii "Dec"
      000080 00                    1958 	.db 0x00
      000081                       1959 _str_13:
      000081 53 75 6E              1960 	.ascii "Sun"
      000084 00                    1961 	.db 0x00
      000085                       1962 _str_14:
      000085 4D 6F 6E              1963 	.ascii "Mon"
      000088 00                    1964 	.db 0x00
      000089                       1965 _str_15:
      000089 54 75 65              1966 	.ascii "Tue"
      00008C 00                    1967 	.db 0x00
      00008D                       1968 _str_16:
      00008D 57 65 64              1969 	.ascii "Wed"
      000090 00                    1970 	.db 0x00
      000091                       1971 _str_17:
      000091 54 68 75              1972 	.ascii "Thu"
      000094 00                    1973 	.db 0x00
      000095                       1974 _str_18:
      000095 46 72 69              1975 	.ascii "Fri"
      000098 00                    1976 	.db 0x00
      000099                       1977 _str_19:
      000099 53 61 74              1978 	.ascii "Sat"
      00009C 00                    1979 	.db 0x00
                                   1980 	.area XINIT   (CODE)
                                   1981 	.area CABS    (ABS,CODE)
