                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:27:56 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module atanf
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _fabsf
                                     13 	.globl _atanf
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram 
                                     35 ;--------------------------------------------------------
                                     36 ;--------------------------------------------------------
                                     37 ; indirectly addressable internal ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area ISEG    (DATA)
                                     40 ;--------------------------------------------------------
                                     41 ; absolute internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area IABS    (ABS,DATA)
                                     44 	.area IABS    (ABS,DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; bit data
                                     47 ;--------------------------------------------------------
                                     48 	.area BSEG    (BIT)
                                     49 ;--------------------------------------------------------
                                     50 ; paged external ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area PSEG    (PAG,XDATA)
                                     53 ;--------------------------------------------------------
                                     54 ; external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area XSEG    (XDATA)
                                     57 ;--------------------------------------------------------
                                     58 ; absolute external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XABS    (ABS,XDATA)
                                     61 ;--------------------------------------------------------
                                     62 ; external initialized ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XISEG   (XDATA)
                                     65 	.area HOME    (CODE)
                                     66 	.area GSINIT0 (CODE)
                                     67 	.area GSINIT1 (CODE)
                                     68 	.area GSINIT2 (CODE)
                                     69 	.area GSINIT3 (CODE)
                                     70 	.area GSINIT4 (CODE)
                                     71 	.area GSINIT5 (CODE)
                                     72 	.area GSINIT  (CODE)
                                     73 	.area GSFINAL (CODE)
                                     74 	.area CSEG    (CODE)
                                     75 ;--------------------------------------------------------
                                     76 ; global & static initialisations
                                     77 ;--------------------------------------------------------
                                     78 	.area HOME    (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 	.area GSFINAL (CODE)
                                     81 	.area GSINIT  (CODE)
                                     82 ;--------------------------------------------------------
                                     83 ; Home
                                     84 ;--------------------------------------------------------
                                     85 	.area HOME    (CODE)
                                     86 	.area HOME    (CODE)
                                     87 ;--------------------------------------------------------
                                     88 ; code
                                     89 ;--------------------------------------------------------
                                     90 	.area CSEG    (CODE)
                                     91 ;------------------------------------------------------------
                                     92 ;Allocation info for local variables in function 'atanf'
                                     93 ;------------------------------------------------------------
                                     94 ;x                         Allocated to stack - _bp +1
                                     95 ;f                         Allocated to stack - _bp +9
                                     96 ;r                         Allocated to stack - _bp +13
                                     97 ;g                         Allocated to registers r7 r6 r5 r4 
                                     98 ;n                         Allocated to stack - _bp +17
                                     99 ;sloc0                     Allocated to stack - _bp +5
                                    100 ;sloc1                     Allocated to stack - _bp +23
                                    101 ;------------------------------------------------------------
                                    102 ;	atanf.c:55: float atanf(const float x) _FLOAT_FUNC_REENTRANT
                                    103 ;	-----------------------------------------
                                    104 ;	 function atanf
                                    105 ;	-----------------------------------------
      000000                        106 _atanf:
                           000007   107 	ar7 = 0x07
                           000006   108 	ar6 = 0x06
                           000005   109 	ar5 = 0x05
                           000004   110 	ar4 = 0x04
                           000003   111 	ar3 = 0x03
                           000002   112 	ar2 = 0x02
                           000001   113 	ar1 = 0x01
                           000000   114 	ar0 = 0x00
      000000 C0*00            [24]  115 	push	_bp
      000002 85 81*00         [24]  116 	mov	_bp,sp
      000005 C0 82            [24]  117 	push	dpl
      000007 C0 83            [24]  118 	push	dph
      000009 C0 F0            [24]  119 	push	b
      00000B C0 E0            [24]  120 	push	acc
      00000D E5 81            [12]  121 	mov	a,sp
      00000F 24 0E            [12]  122 	add	a,#0x0E
      000011 F5 81            [12]  123 	mov	sp,a
                                    124 ;	atanf.c:58: int n=0;
      000013 E5*00            [12]  125 	mov	a,_bp
      000015 24 11            [12]  126 	add	a,#0x11
      000017 F8               [12]  127 	mov	r0,a
      000018 E4               [12]  128 	clr	a
      000019 F6               [12]  129 	mov	@r0,a
      00001A 08               [12]  130 	inc	r0
      00001B F6               [12]  131 	mov	@r0,a
                                    132 ;	atanf.c:61: f=fabsf(x);
      00001C A8*00            [24]  133 	mov	r0,_bp
      00001E 08               [12]  134 	inc	r0
      00001F 86 82            [24]  135 	mov	dpl,@r0
      000021 08               [12]  136 	inc	r0
      000022 86 83            [24]  137 	mov	dph,@r0
      000024 08               [12]  138 	inc	r0
      000025 86 F0            [24]  139 	mov	b,@r0
      000027 08               [12]  140 	inc	r0
      000028 E6               [12]  141 	mov	a,@r0
      000029 12r00r00         [24]  142 	lcall	_fabsf
      00002C AF 82            [24]  143 	mov	r7,dpl
      00002E AE 83            [24]  144 	mov	r6,dph
      000030 AD F0            [24]  145 	mov	r5,b
      000032 FC               [12]  146 	mov	r4,a
      000033 E5*00            [12]  147 	mov	a,_bp
      000035 24 09            [12]  148 	add	a,#0x09
      000037 F8               [12]  149 	mov	r0,a
      000038 A6 07            [24]  150 	mov	@r0,ar7
      00003A 08               [12]  151 	inc	r0
      00003B A6 06            [24]  152 	mov	@r0,ar6
      00003D 08               [12]  153 	inc	r0
      00003E A6 05            [24]  154 	mov	@r0,ar5
      000040 08               [12]  155 	inc	r0
      000041 A6 04            [24]  156 	mov	@r0,ar4
                                    157 ;	atanf.c:62: if(f>1.0)
      000043 E4               [12]  158 	clr	a
      000044 C0 E0            [24]  159 	push	acc
      000046 C0 E0            [24]  160 	push	acc
      000048 74 80            [12]  161 	mov	a,#0x80
      00004A C0 E0            [24]  162 	push	acc
      00004C 74 3F            [12]  163 	mov	a,#0x3F
      00004E C0 E0            [24]  164 	push	acc
      000050 E5*00            [12]  165 	mov	a,_bp
      000052 24 09            [12]  166 	add	a,#0x09
      000054 F8               [12]  167 	mov	r0,a
      000055 86 82            [24]  168 	mov	dpl,@r0
      000057 08               [12]  169 	inc	r0
      000058 86 83            [24]  170 	mov	dph,@r0
      00005A 08               [12]  171 	inc	r0
      00005B 86 F0            [24]  172 	mov	b,@r0
      00005D 08               [12]  173 	inc	r0
      00005E E6               [12]  174 	mov	a,@r0
      00005F 12r00r00         [24]  175 	lcall	___fsgt
      000062 AB 82            [24]  176 	mov	r3,dpl
      000064 E5 81            [12]  177 	mov	a,sp
      000066 24 FC            [12]  178 	add	a,#0xfc
      000068 F5 81            [12]  179 	mov	sp,a
      00006A EB               [12]  180 	mov	a,r3
      00006B 60 46            [24]  181 	jz	00102$
                                    182 ;	atanf.c:64: f=1.0/f;
      00006D E5*00            [12]  183 	mov	a,_bp
      00006F 24 09            [12]  184 	add	a,#0x09
      000071 F8               [12]  185 	mov	r0,a
      000072 E6               [12]  186 	mov	a,@r0
      000073 C0 E0            [24]  187 	push	acc
      000075 08               [12]  188 	inc	r0
      000076 E6               [12]  189 	mov	a,@r0
      000077 C0 E0            [24]  190 	push	acc
      000079 08               [12]  191 	inc	r0
      00007A E6               [12]  192 	mov	a,@r0
      00007B C0 E0            [24]  193 	push	acc
      00007D 08               [12]  194 	inc	r0
      00007E E6               [12]  195 	mov	a,@r0
      00007F C0 E0            [24]  196 	push	acc
      000081 90 00 00         [24]  197 	mov	dptr,#0x0000
      000084 75 F0 80         [24]  198 	mov	b,#0x80
      000087 74 3F            [12]  199 	mov	a,#0x3F
      000089 12r00r00         [24]  200 	lcall	___fsdiv
      00008C AF 82            [24]  201 	mov	r7,dpl
      00008E AE 83            [24]  202 	mov	r6,dph
      000090 AD F0            [24]  203 	mov	r5,b
      000092 FC               [12]  204 	mov	r4,a
      000093 E5 81            [12]  205 	mov	a,sp
      000095 24 FC            [12]  206 	add	a,#0xfc
      000097 F5 81            [12]  207 	mov	sp,a
      000099 E5*00            [12]  208 	mov	a,_bp
      00009B 24 09            [12]  209 	add	a,#0x09
      00009D F8               [12]  210 	mov	r0,a
      00009E A6 07            [24]  211 	mov	@r0,ar7
      0000A0 08               [12]  212 	inc	r0
      0000A1 A6 06            [24]  213 	mov	@r0,ar6
      0000A3 08               [12]  214 	inc	r0
      0000A4 A6 05            [24]  215 	mov	@r0,ar5
      0000A6 08               [12]  216 	inc	r0
      0000A7 A6 04            [24]  217 	mov	@r0,ar4
                                    218 ;	atanf.c:65: n=2;
      0000A9 E5*00            [12]  219 	mov	a,_bp
      0000AB 24 11            [12]  220 	add	a,#0x11
      0000AD F8               [12]  221 	mov	r0,a
      0000AE 76 02            [12]  222 	mov	@r0,#0x02
      0000B0 08               [12]  223 	inc	r0
      0000B1 76 00            [12]  224 	mov	@r0,#0x00
      0000B3                        225 00102$:
                                    226 ;	atanf.c:67: if(f>K1)
      0000B3 74 A3            [12]  227 	mov	a,#0xA3
      0000B5 C0 E0            [24]  228 	push	acc
      0000B7 74 30            [12]  229 	mov	a,#0x30
      0000B9 C0 E0            [24]  230 	push	acc
      0000BB 74 89            [12]  231 	mov	a,#0x89
      0000BD C0 E0            [24]  232 	push	acc
      0000BF 74 3E            [12]  233 	mov	a,#0x3E
      0000C1 C0 E0            [24]  234 	push	acc
      0000C3 E5*00            [12]  235 	mov	a,_bp
      0000C5 24 09            [12]  236 	add	a,#0x09
      0000C7 F8               [12]  237 	mov	r0,a
      0000C8 86 82            [24]  238 	mov	dpl,@r0
      0000CA 08               [12]  239 	inc	r0
      0000CB 86 83            [24]  240 	mov	dph,@r0
      0000CD 08               [12]  241 	inc	r0
      0000CE 86 F0            [24]  242 	mov	b,@r0
      0000D0 08               [12]  243 	inc	r0
      0000D1 E6               [12]  244 	mov	a,@r0
      0000D2 12r00r00         [24]  245 	lcall	___fsgt
      0000D5 AB 82            [24]  246 	mov	r3,dpl
      0000D7 E5 81            [12]  247 	mov	a,sp
      0000D9 24 FC            [12]  248 	add	a,#0xfc
      0000DB F5 81            [12]  249 	mov	sp,a
      0000DD EB               [12]  250 	mov	a,r3
      0000DE 70 03            [24]  251 	jnz	00130$
      0000E0 02r01rD8         [24]  252 	ljmp	00104$
      0000E3                        253 00130$:
                                    254 ;	atanf.c:69: f=((K2*f-1.0)+f)/(K3+f);
      0000E3 E5*00            [12]  255 	mov	a,_bp
      0000E5 24 09            [12]  256 	add	a,#0x09
      0000E7 F8               [12]  257 	mov	r0,a
      0000E8 E6               [12]  258 	mov	a,@r0
      0000E9 C0 E0            [24]  259 	push	acc
      0000EB 08               [12]  260 	inc	r0
      0000EC E6               [12]  261 	mov	a,@r0
      0000ED C0 E0            [24]  262 	push	acc
      0000EF 08               [12]  263 	inc	r0
      0000F0 E6               [12]  264 	mov	a,@r0
      0000F1 C0 E0            [24]  265 	push	acc
      0000F3 08               [12]  266 	inc	r0
      0000F4 E6               [12]  267 	mov	a,@r0
      0000F5 C0 E0            [24]  268 	push	acc
      0000F7 90 67 AF         [24]  269 	mov	dptr,#0x67AF
      0000FA 75 F0 3B         [24]  270 	mov	b,#0x3B
      0000FD 74 3F            [12]  271 	mov	a,#0x3F
      0000FF 12r00r00         [24]  272 	lcall	___fsmul
      000102 AA 82            [24]  273 	mov	r2,dpl
      000104 AB 83            [24]  274 	mov	r3,dph
      000106 AE F0            [24]  275 	mov	r6,b
      000108 FF               [12]  276 	mov	r7,a
      000109 E5 81            [12]  277 	mov	a,sp
      00010B 24 FC            [12]  278 	add	a,#0xfc
      00010D F5 81            [12]  279 	mov	sp,a
      00010F E4               [12]  280 	clr	a
      000110 C0 E0            [24]  281 	push	acc
      000112 C0 E0            [24]  282 	push	acc
      000114 74 80            [12]  283 	mov	a,#0x80
      000116 C0 E0            [24]  284 	push	acc
      000118 74 3F            [12]  285 	mov	a,#0x3F
      00011A C0 E0            [24]  286 	push	acc
      00011C 8A 82            [24]  287 	mov	dpl,r2
      00011E 8B 83            [24]  288 	mov	dph,r3
      000120 8E F0            [24]  289 	mov	b,r6
      000122 EF               [12]  290 	mov	a,r7
      000123 12r00r00         [24]  291 	lcall	___fssub
      000126 AC 82            [24]  292 	mov	r4,dpl
      000128 AD 83            [24]  293 	mov	r5,dph
      00012A AE F0            [24]  294 	mov	r6,b
      00012C FF               [12]  295 	mov	r7,a
      00012D E5 81            [12]  296 	mov	a,sp
      00012F 24 FC            [12]  297 	add	a,#0xfc
      000131 F5 81            [12]  298 	mov	sp,a
      000133 E5*00            [12]  299 	mov	a,_bp
      000135 24 09            [12]  300 	add	a,#0x09
      000137 F8               [12]  301 	mov	r0,a
      000138 E6               [12]  302 	mov	a,@r0
      000139 C0 E0            [24]  303 	push	acc
      00013B 08               [12]  304 	inc	r0
      00013C E6               [12]  305 	mov	a,@r0
      00013D C0 E0            [24]  306 	push	acc
      00013F 08               [12]  307 	inc	r0
      000140 E6               [12]  308 	mov	a,@r0
      000141 C0 E0            [24]  309 	push	acc
      000143 08               [12]  310 	inc	r0
      000144 E6               [12]  311 	mov	a,@r0
      000145 C0 E0            [24]  312 	push	acc
      000147 8C 82            [24]  313 	mov	dpl,r4
      000149 8D 83            [24]  314 	mov	dph,r5
      00014B 8E F0            [24]  315 	mov	b,r6
      00014D EF               [12]  316 	mov	a,r7
      00014E 12r00r00         [24]  317 	lcall	___fsadd
      000151 C8               [12]  318 	xch	a,r0
      000152 E5*00            [12]  319 	mov	a,_bp
      000154 24 05            [12]  320 	add	a,#0x05
      000156 C8               [12]  321 	xch	a,r0
      000157 A6 82            [24]  322 	mov	@r0,dpl
      000159 08               [12]  323 	inc	r0
      00015A A6 83            [24]  324 	mov	@r0,dph
      00015C 08               [12]  325 	inc	r0
      00015D A6 F0            [24]  326 	mov	@r0,b
      00015F 08               [12]  327 	inc	r0
      000160 F6               [12]  328 	mov	@r0,a
      000161 E5 81            [12]  329 	mov	a,sp
      000163 24 FC            [12]  330 	add	a,#0xfc
      000165 F5 81            [12]  331 	mov	sp,a
      000167 74 D7            [12]  332 	mov	a,#0xD7
      000169 C0 E0            [24]  333 	push	acc
      00016B 74 B3            [12]  334 	mov	a,#0xB3
      00016D C0 E0            [24]  335 	push	acc
      00016F 74 DD            [12]  336 	mov	a,#0xDD
      000171 C0 E0            [24]  337 	push	acc
      000173 74 3F            [12]  338 	mov	a,#0x3F
      000175 C0 E0            [24]  339 	push	acc
      000177 E5*00            [12]  340 	mov	a,_bp
      000179 24 09            [12]  341 	add	a,#0x09
      00017B F8               [12]  342 	mov	r0,a
      00017C 86 82            [24]  343 	mov	dpl,@r0
      00017E 08               [12]  344 	inc	r0
      00017F 86 83            [24]  345 	mov	dph,@r0
      000181 08               [12]  346 	inc	r0
      000182 86 F0            [24]  347 	mov	b,@r0
      000184 08               [12]  348 	inc	r0
      000185 E6               [12]  349 	mov	a,@r0
      000186 12r00r00         [24]  350 	lcall	___fsadd
      000189 AA 82            [24]  351 	mov	r2,dpl
      00018B AB 83            [24]  352 	mov	r3,dph
      00018D AE F0            [24]  353 	mov	r6,b
      00018F FF               [12]  354 	mov	r7,a
      000190 E5 81            [12]  355 	mov	a,sp
      000192 24 FC            [12]  356 	add	a,#0xfc
      000194 F5 81            [12]  357 	mov	sp,a
      000196 C0 02            [24]  358 	push	ar2
      000198 C0 03            [24]  359 	push	ar3
      00019A C0 06            [24]  360 	push	ar6
      00019C C0 07            [24]  361 	push	ar7
      00019E E5*00            [12]  362 	mov	a,_bp
      0001A0 24 05            [12]  363 	add	a,#0x05
      0001A2 F8               [12]  364 	mov	r0,a
      0001A3 86 82            [24]  365 	mov	dpl,@r0
      0001A5 08               [12]  366 	inc	r0
      0001A6 86 83            [24]  367 	mov	dph,@r0
      0001A8 08               [12]  368 	inc	r0
      0001A9 86 F0            [24]  369 	mov	b,@r0
      0001AB 08               [12]  370 	inc	r0
      0001AC E6               [12]  371 	mov	a,@r0
      0001AD 12r00r00         [24]  372 	lcall	___fsdiv
      0001B0 AC 82            [24]  373 	mov	r4,dpl
      0001B2 AD 83            [24]  374 	mov	r5,dph
      0001B4 AE F0            [24]  375 	mov	r6,b
      0001B6 FF               [12]  376 	mov	r7,a
      0001B7 E5 81            [12]  377 	mov	a,sp
      0001B9 24 FC            [12]  378 	add	a,#0xfc
      0001BB F5 81            [12]  379 	mov	sp,a
      0001BD E5*00            [12]  380 	mov	a,_bp
      0001BF 24 09            [12]  381 	add	a,#0x09
      0001C1 F8               [12]  382 	mov	r0,a
      0001C2 A6 04            [24]  383 	mov	@r0,ar4
      0001C4 08               [12]  384 	inc	r0
      0001C5 A6 05            [24]  385 	mov	@r0,ar5
      0001C7 08               [12]  386 	inc	r0
      0001C8 A6 06            [24]  387 	mov	@r0,ar6
      0001CA 08               [12]  388 	inc	r0
      0001CB A6 07            [24]  389 	mov	@r0,ar7
                                    390 ;	atanf.c:73: n++;
      0001CD E5*00            [12]  391 	mov	a,_bp
      0001CF 24 11            [12]  392 	add	a,#0x11
      0001D1 F8               [12]  393 	mov	r0,a
      0001D2 06               [12]  394 	inc	@r0
      0001D3 B6 00 02         [24]  395 	cjne	@r0,#0x00,00131$
      0001D6 08               [12]  396 	inc	r0
      0001D7 06               [12]  397 	inc	@r0
      0001D8                        398 00131$:
      0001D8                        399 00104$:
                                    400 ;	atanf.c:75: if(fabsf(f)<EPS) r=f;
      0001D8 E5*00            [12]  401 	mov	a,_bp
      0001DA 24 09            [12]  402 	add	a,#0x09
      0001DC F8               [12]  403 	mov	r0,a
      0001DD 86 82            [24]  404 	mov	dpl,@r0
      0001DF 08               [12]  405 	inc	r0
      0001E0 86 83            [24]  406 	mov	dph,@r0
      0001E2 08               [12]  407 	inc	r0
      0001E3 86 F0            [24]  408 	mov	b,@r0
      0001E5 08               [12]  409 	inc	r0
      0001E6 E6               [12]  410 	mov	a,@r0
      0001E7 12r00r00         [24]  411 	lcall	_fabsf
      0001EA AC 82            [24]  412 	mov	r4,dpl
      0001EC AD 83            [24]  413 	mov	r5,dph
      0001EE AE F0            [24]  414 	mov	r6,b
      0001F0 FF               [12]  415 	mov	r7,a
      0001F1 E4               [12]  416 	clr	a
      0001F2 C0 E0            [24]  417 	push	acc
      0001F4 C0 E0            [24]  418 	push	acc
      0001F6 74 80            [12]  419 	mov	a,#0x80
      0001F8 C0 E0            [24]  420 	push	acc
      0001FA 74 39            [12]  421 	mov	a,#0x39
      0001FC C0 E0            [24]  422 	push	acc
      0001FE 8C 82            [24]  423 	mov	dpl,r4
      000200 8D 83            [24]  424 	mov	dph,r5
      000202 8E F0            [24]  425 	mov	b,r6
      000204 EF               [12]  426 	mov	a,r7
      000205 12r00r00         [24]  427 	lcall	___fslt
      000208 AF 82            [24]  428 	mov	r7,dpl
      00020A E5 81            [12]  429 	mov	a,sp
      00020C 24 FC            [12]  430 	add	a,#0xfc
      00020E F5 81            [12]  431 	mov	sp,a
      000210 EF               [12]  432 	mov	a,r7
      000211 60 1B            [24]  433 	jz	00106$
      000213 E5*00            [12]  434 	mov	a,_bp
      000215 24 09            [12]  435 	add	a,#0x09
      000217 F8               [12]  436 	mov	r0,a
      000218 E5*00            [12]  437 	mov	a,_bp
      00021A 24 0D            [12]  438 	add	a,#0x0d
      00021C F9               [12]  439 	mov	r1,a
      00021D E6               [12]  440 	mov	a,@r0
      00021E F7               [12]  441 	mov	@r1,a
      00021F 08               [12]  442 	inc	r0
      000220 09               [12]  443 	inc	r1
      000221 E6               [12]  444 	mov	a,@r0
      000222 F7               [12]  445 	mov	@r1,a
      000223 08               [12]  446 	inc	r0
      000224 09               [12]  447 	inc	r1
      000225 E6               [12]  448 	mov	a,@r0
      000226 F7               [12]  449 	mov	@r1,a
      000227 08               [12]  450 	inc	r0
      000228 09               [12]  451 	inc	r1
      000229 E6               [12]  452 	mov	a,@r0
      00022A F7               [12]  453 	mov	@r1,a
      00022B 02r03rD3         [24]  454 	ljmp	00107$
      00022E                        455 00106$:
                                    456 ;	atanf.c:78: g=f*f;
      00022E E5*00            [12]  457 	mov	a,_bp
      000230 24 09            [12]  458 	add	a,#0x09
      000232 F8               [12]  459 	mov	r0,a
      000233 E6               [12]  460 	mov	a,@r0
      000234 C0 E0            [24]  461 	push	acc
      000236 08               [12]  462 	inc	r0
      000237 E6               [12]  463 	mov	a,@r0
      000238 C0 E0            [24]  464 	push	acc
      00023A 08               [12]  465 	inc	r0
      00023B E6               [12]  466 	mov	a,@r0
      00023C C0 E0            [24]  467 	push	acc
      00023E 08               [12]  468 	inc	r0
      00023F E6               [12]  469 	mov	a,@r0
      000240 C0 E0            [24]  470 	push	acc
      000242 E5*00            [12]  471 	mov	a,_bp
      000244 24 09            [12]  472 	add	a,#0x09
      000246 F8               [12]  473 	mov	r0,a
      000247 86 82            [24]  474 	mov	dpl,@r0
      000249 08               [12]  475 	inc	r0
      00024A 86 83            [24]  476 	mov	dph,@r0
      00024C 08               [12]  477 	inc	r0
      00024D 86 F0            [24]  478 	mov	b,@r0
      00024F 08               [12]  479 	inc	r0
      000250 E6               [12]  480 	mov	a,@r0
      000251 12r00r00         [24]  481 	lcall	___fsmul
      000254 AF 82            [24]  482 	mov	r7,dpl
      000256 AE 83            [24]  483 	mov	r6,dph
      000258 AD F0            [24]  484 	mov	r5,b
      00025A FC               [12]  485 	mov	r4,a
      00025B E5 81            [12]  486 	mov	a,sp
      00025D 24 FC            [12]  487 	add	a,#0xfc
      00025F F5 81            [12]  488 	mov	sp,a
                                    489 ;	atanf.c:79: r=f+P(g,f)/Q(g);
      000261 C0 07            [24]  490 	push	ar7
      000263 C0 06            [24]  491 	push	ar6
      000265 C0 05            [24]  492 	push	ar5
      000267 C0 04            [24]  493 	push	ar4
      000269 C0 07            [24]  494 	push	ar7
      00026B C0 06            [24]  495 	push	ar6
      00026D C0 05            [24]  496 	push	ar5
      00026F C0 04            [24]  497 	push	ar4
      000271 90 86 91         [24]  498 	mov	dptr,#0x8691
      000274 75 F0 50         [24]  499 	mov	b,#0x50
      000277 74 BD            [12]  500 	mov	a,#0xBD
      000279 12r00r00         [24]  501 	lcall	___fsmul
      00027C C8               [12]  502 	xch	a,r0
      00027D E5*00            [12]  503 	mov	a,_bp
      00027F 24 05            [12]  504 	add	a,#0x05
      000281 C8               [12]  505 	xch	a,r0
      000282 A6 82            [24]  506 	mov	@r0,dpl
      000284 08               [12]  507 	inc	r0
      000285 A6 83            [24]  508 	mov	@r0,dph
      000287 08               [12]  509 	inc	r0
      000288 A6 F0            [24]  510 	mov	@r0,b
      00028A 08               [12]  511 	inc	r0
      00028B F6               [12]  512 	mov	@r0,a
      00028C E5 81            [12]  513 	mov	a,sp
      00028E 24 FC            [12]  514 	add	a,#0xfc
      000290 F5 81            [12]  515 	mov	sp,a
      000292 74 F6            [12]  516 	mov	a,#0xF6
      000294 C0 E0            [24]  517 	push	acc
      000296 74 10            [12]  518 	mov	a,#0x10
      000298 C0 E0            [24]  519 	push	acc
      00029A 74 F1            [12]  520 	mov	a,#0xF1
      00029C C0 E0            [24]  521 	push	acc
      00029E 74 BE            [12]  522 	mov	a,#0xBE
      0002A0 C0 E0            [24]  523 	push	acc
      0002A2 E5*00            [12]  524 	mov	a,_bp
      0002A4 24 05            [12]  525 	add	a,#0x05
      0002A6 F8               [12]  526 	mov	r0,a
      0002A7 86 82            [24]  527 	mov	dpl,@r0
      0002A9 08               [12]  528 	inc	r0
      0002AA 86 83            [24]  529 	mov	dph,@r0
      0002AC 08               [12]  530 	inc	r0
      0002AD 86 F0            [24]  531 	mov	b,@r0
      0002AF 08               [12]  532 	inc	r0
      0002B0 E6               [12]  533 	mov	a,@r0
      0002B1 12r00r00         [24]  534 	lcall	___fsadd
      0002B4 C8               [12]  535 	xch	a,r0
      0002B5 E5*00            [12]  536 	mov	a,_bp
      0002B7 24 05            [12]  537 	add	a,#0x05
      0002B9 C8               [12]  538 	xch	a,r0
      0002BA A6 82            [24]  539 	mov	@r0,dpl
      0002BC 08               [12]  540 	inc	r0
      0002BD A6 83            [24]  541 	mov	@r0,dph
      0002BF 08               [12]  542 	inc	r0
      0002C0 A6 F0            [24]  543 	mov	@r0,b
      0002C2 08               [12]  544 	inc	r0
      0002C3 F6               [12]  545 	mov	@r0,a
      0002C4 E5 81            [12]  546 	mov	a,sp
      0002C6 24 FC            [12]  547 	add	a,#0xfc
      0002C8 F5 81            [12]  548 	mov	sp,a
      0002CA D0 04            [24]  549 	pop	ar4
      0002CC D0 05            [24]  550 	pop	ar5
      0002CE D0 06            [24]  551 	pop	ar6
      0002D0 D0 07            [24]  552 	pop	ar7
      0002D2 C0 07            [24]  553 	push	ar7
      0002D4 C0 06            [24]  554 	push	ar6
      0002D6 C0 05            [24]  555 	push	ar5
      0002D8 C0 04            [24]  556 	push	ar4
      0002DA C0 07            [24]  557 	push	ar7
      0002DC C0 06            [24]  558 	push	ar6
      0002DE C0 05            [24]  559 	push	ar5
      0002E0 C0 04            [24]  560 	push	ar4
      0002E2 E5*00            [12]  561 	mov	a,_bp
      0002E4 24 05            [12]  562 	add	a,#0x05
      0002E6 F8               [12]  563 	mov	r0,a
      0002E7 86 82            [24]  564 	mov	dpl,@r0
      0002E9 08               [12]  565 	inc	r0
      0002EA 86 83            [24]  566 	mov	dph,@r0
      0002EC 08               [12]  567 	inc	r0
      0002ED 86 F0            [24]  568 	mov	b,@r0
      0002EF 08               [12]  569 	inc	r0
      0002F0 E6               [12]  570 	mov	a,@r0
      0002F1 12r00r00         [24]  571 	lcall	___fsmul
      0002F4 C8               [12]  572 	xch	a,r0
      0002F5 E5*00            [12]  573 	mov	a,_bp
      0002F7 24 05            [12]  574 	add	a,#0x05
      0002F9 C8               [12]  575 	xch	a,r0
      0002FA A6 82            [24]  576 	mov	@r0,dpl
      0002FC 08               [12]  577 	inc	r0
      0002FD A6 83            [24]  578 	mov	@r0,dph
      0002FF 08               [12]  579 	inc	r0
      000300 A6 F0            [24]  580 	mov	@r0,b
      000302 08               [12]  581 	inc	r0
      000303 F6               [12]  582 	mov	@r0,a
      000304 E5 81            [12]  583 	mov	a,sp
      000306 24 FC            [12]  584 	add	a,#0xfc
      000308 F5 81            [12]  585 	mov	sp,a
      00030A E5*00            [12]  586 	mov	a,_bp
      00030C 24 09            [12]  587 	add	a,#0x09
      00030E F8               [12]  588 	mov	r0,a
      00030F E6               [12]  589 	mov	a,@r0
      000310 C0 E0            [24]  590 	push	acc
      000312 08               [12]  591 	inc	r0
      000313 E6               [12]  592 	mov	a,@r0
      000314 C0 E0            [24]  593 	push	acc
      000316 08               [12]  594 	inc	r0
      000317 E6               [12]  595 	mov	a,@r0
      000318 C0 E0            [24]  596 	push	acc
      00031A 08               [12]  597 	inc	r0
      00031B E6               [12]  598 	mov	a,@r0
      00031C C0 E0            [24]  599 	push	acc
      00031E E5*00            [12]  600 	mov	a,_bp
      000320 24 05            [12]  601 	add	a,#0x05
      000322 F8               [12]  602 	mov	r0,a
      000323 86 82            [24]  603 	mov	dpl,@r0
      000325 08               [12]  604 	inc	r0
      000326 86 83            [24]  605 	mov	dph,@r0
      000328 08               [12]  606 	inc	r0
      000329 86 F0            [24]  607 	mov	b,@r0
      00032B 08               [12]  608 	inc	r0
      00032C E6               [12]  609 	mov	a,@r0
      00032D 12r00r00         [24]  610 	lcall	___fsmul
      000330 C8               [12]  611 	xch	a,r0
      000331 E5*00            [12]  612 	mov	a,_bp
      000333 24 05            [12]  613 	add	a,#0x05
      000335 C8               [12]  614 	xch	a,r0
      000336 A6 82            [24]  615 	mov	@r0,dpl
      000338 08               [12]  616 	inc	r0
      000339 A6 83            [24]  617 	mov	@r0,dph
      00033B 08               [12]  618 	inc	r0
      00033C A6 F0            [24]  619 	mov	@r0,b
      00033E 08               [12]  620 	inc	r0
      00033F F6               [12]  621 	mov	@r0,a
      000340 E5 81            [12]  622 	mov	a,sp
      000342 24 FC            [12]  623 	add	a,#0xfc
      000344 F5 81            [12]  624 	mov	sp,a
      000346 D0 04            [24]  625 	pop	ar4
      000348 D0 05            [24]  626 	pop	ar5
      00034A D0 06            [24]  627 	pop	ar6
      00034C D0 07            [24]  628 	pop	ar7
      00034E 74 D3            [12]  629 	mov	a,#0xD3
      000350 C0 E0            [24]  630 	push	acc
      000352 74 CC            [12]  631 	mov	a,#0xCC
      000354 C0 E0            [24]  632 	push	acc
      000356 74 B4            [12]  633 	mov	a,#0xB4
      000358 C0 E0            [24]  634 	push	acc
      00035A 74 3F            [12]  635 	mov	a,#0x3F
      00035C C0 E0            [24]  636 	push	acc
      00035E 8F 82            [24]  637 	mov	dpl,r7
      000360 8E 83            [24]  638 	mov	dph,r6
      000362 8D F0            [24]  639 	mov	b,r5
      000364 EC               [12]  640 	mov	a,r4
      000365 12r00r00         [24]  641 	lcall	___fsadd
      000368 AF 82            [24]  642 	mov	r7,dpl
      00036A AE 83            [24]  643 	mov	r6,dph
      00036C AD F0            [24]  644 	mov	r5,b
      00036E FC               [12]  645 	mov	r4,a
      00036F E5 81            [12]  646 	mov	a,sp
      000371 24 FC            [12]  647 	add	a,#0xfc
      000373 F5 81            [12]  648 	mov	sp,a
      000375 C0 07            [24]  649 	push	ar7
      000377 C0 06            [24]  650 	push	ar6
      000379 C0 05            [24]  651 	push	ar5
      00037B C0 04            [24]  652 	push	ar4
      00037D E5*00            [12]  653 	mov	a,_bp
      00037F 24 05            [12]  654 	add	a,#0x05
      000381 F8               [12]  655 	mov	r0,a
      000382 86 82            [24]  656 	mov	dpl,@r0
      000384 08               [12]  657 	inc	r0
      000385 86 83            [24]  658 	mov	dph,@r0
      000387 08               [12]  659 	inc	r0
      000388 86 F0            [24]  660 	mov	b,@r0
      00038A 08               [12]  661 	inc	r0
      00038B E6               [12]  662 	mov	a,@r0
      00038C 12r00r00         [24]  663 	lcall	___fsdiv
      00038F AF 82            [24]  664 	mov	r7,dpl
      000391 AE 83            [24]  665 	mov	r6,dph
      000393 AD F0            [24]  666 	mov	r5,b
      000395 FC               [12]  667 	mov	r4,a
      000396 E5 81            [12]  668 	mov	a,sp
      000398 24 FC            [12]  669 	add	a,#0xfc
      00039A F5 81            [12]  670 	mov	sp,a
      00039C C0 07            [24]  671 	push	ar7
      00039E C0 06            [24]  672 	push	ar6
      0003A0 C0 05            [24]  673 	push	ar5
      0003A2 C0 04            [24]  674 	push	ar4
      0003A4 E5*00            [12]  675 	mov	a,_bp
      0003A6 24 09            [12]  676 	add	a,#0x09
      0003A8 F8               [12]  677 	mov	r0,a
      0003A9 86 82            [24]  678 	mov	dpl,@r0
      0003AB 08               [12]  679 	inc	r0
      0003AC 86 83            [24]  680 	mov	dph,@r0
      0003AE 08               [12]  681 	inc	r0
      0003AF 86 F0            [24]  682 	mov	b,@r0
      0003B1 08               [12]  683 	inc	r0
      0003B2 E6               [12]  684 	mov	a,@r0
      0003B3 12r00r00         [24]  685 	lcall	___fsadd
      0003B6 AF 82            [24]  686 	mov	r7,dpl
      0003B8 AE 83            [24]  687 	mov	r6,dph
      0003BA AD F0            [24]  688 	mov	r5,b
      0003BC FC               [12]  689 	mov	r4,a
      0003BD E5 81            [12]  690 	mov	a,sp
      0003BF 24 FC            [12]  691 	add	a,#0xfc
      0003C1 F5 81            [12]  692 	mov	sp,a
      0003C3 E5*00            [12]  693 	mov	a,_bp
      0003C5 24 0D            [12]  694 	add	a,#0x0d
      0003C7 F8               [12]  695 	mov	r0,a
      0003C8 A6 07            [24]  696 	mov	@r0,ar7
      0003CA 08               [12]  697 	inc	r0
      0003CB A6 06            [24]  698 	mov	@r0,ar6
      0003CD 08               [12]  699 	inc	r0
      0003CE A6 05            [24]  700 	mov	@r0,ar5
      0003D0 08               [12]  701 	inc	r0
      0003D1 A6 04            [24]  702 	mov	@r0,ar4
      0003D3                        703 00107$:
                                    704 ;	atanf.c:81: if(n>1) r=-r;
      0003D3 E5*00            [12]  705 	mov	a,_bp
      0003D5 24 11            [12]  706 	add	a,#0x11
      0003D7 F8               [12]  707 	mov	r0,a
      0003D8 C3               [12]  708 	clr	c
      0003D9 74 01            [12]  709 	mov	a,#0x01
      0003DB 96               [12]  710 	subb	a,@r0
      0003DC 74 80            [12]  711 	mov	a,#(0x00 ^ 0x80)
      0003DE 08               [12]  712 	inc	r0
      0003DF 86 F0            [24]  713 	mov	b,@r0
      0003E1 63 F0 80         [24]  714 	xrl	b,#0x80
      0003E4 95 F0            [12]  715 	subb	a,b
      0003E6 50 12            [24]  716 	jnc	00109$
      0003E8 E5*00            [12]  717 	mov	a,_bp
      0003EA 24 0D            [12]  718 	add	a,#0x0d
      0003EC F8               [12]  719 	mov	r0,a
      0003ED E6               [12]  720 	mov	a,@r0
      0003EE F6               [12]  721 	mov	@r0,a
      0003EF 08               [12]  722 	inc	r0
      0003F0 E6               [12]  723 	mov	a,@r0
      0003F1 F6               [12]  724 	mov	@r0,a
      0003F2 08               [12]  725 	inc	r0
      0003F3 E6               [12]  726 	mov	a,@r0
      0003F4 F6               [12]  727 	mov	@r0,a
      0003F5 08               [12]  728 	inc	r0
      0003F6 E6               [12]  729 	mov	a,@r0
      0003F7 B2 E7            [12]  730 	cpl	acc.7
      0003F9 F6               [12]  731 	mov	@r0,a
      0003FA                        732 00109$:
                                    733 ;	atanf.c:82: r+=a[n];
      0003FA E5*00            [12]  734 	mov	a,_bp
      0003FC 24 11            [12]  735 	add	a,#0x11
      0003FE F8               [12]  736 	mov	r0,a
      0003FF 86 02            [24]  737 	mov	ar2,@r0
      000401 08               [12]  738 	inc	r0
      000402 E6               [12]  739 	mov	a,@r0
      000403 CA               [12]  740 	xch	a,r2
      000404 25 E0            [12]  741 	add	a,acc
      000406 CA               [12]  742 	xch	a,r2
      000407 33               [12]  743 	rlc	a
      000408 CA               [12]  744 	xch	a,r2
      000409 25 E0            [12]  745 	add	a,acc
      00040B CA               [12]  746 	xch	a,r2
      00040C 33               [12]  747 	rlc	a
      00040D FB               [12]  748 	mov	r3,a
      00040E EA               [12]  749 	mov	a,r2
      00040F 24r00            [12]  750 	add	a,#_atanf_a_1_24
      000411 F5 82            [12]  751 	mov	dpl,a
      000413 EB               [12]  752 	mov	a,r3
      000414 34s00            [12]  753 	addc	a,#(_atanf_a_1_24 >> 8)
      000416 F5 83            [12]  754 	mov	dph,a
      000418 E4               [12]  755 	clr	a
      000419 93               [24]  756 	movc	a,@a+dptr
      00041A FA               [12]  757 	mov	r2,a
      00041B A3               [24]  758 	inc	dptr
      00041C E4               [12]  759 	clr	a
      00041D 93               [24]  760 	movc	a,@a+dptr
      00041E FB               [12]  761 	mov	r3,a
      00041F A3               [24]  762 	inc	dptr
      000420 E4               [12]  763 	clr	a
      000421 93               [24]  764 	movc	a,@a+dptr
      000422 FE               [12]  765 	mov	r6,a
      000423 A3               [24]  766 	inc	dptr
      000424 E4               [12]  767 	clr	a
      000425 93               [24]  768 	movc	a,@a+dptr
      000426 FF               [12]  769 	mov	r7,a
      000427 C0 02            [24]  770 	push	ar2
      000429 C0 03            [24]  771 	push	ar3
      00042B C0 06            [24]  772 	push	ar6
      00042D C0 07            [24]  773 	push	ar7
      00042F E5*00            [12]  774 	mov	a,_bp
      000431 24 0D            [12]  775 	add	a,#0x0d
      000433 F8               [12]  776 	mov	r0,a
      000434 86 82            [24]  777 	mov	dpl,@r0
      000436 08               [12]  778 	inc	r0
      000437 86 83            [24]  779 	mov	dph,@r0
      000439 08               [12]  780 	inc	r0
      00043A 86 F0            [24]  781 	mov	b,@r0
      00043C 08               [12]  782 	inc	r0
      00043D E6               [12]  783 	mov	a,@r0
      00043E 12r00r00         [24]  784 	lcall	___fsadd
      000441 AC 82            [24]  785 	mov	r4,dpl
      000443 AD 83            [24]  786 	mov	r5,dph
      000445 AE F0            [24]  787 	mov	r6,b
      000447 FF               [12]  788 	mov	r7,a
      000448 E5 81            [12]  789 	mov	a,sp
      00044A 24 FC            [12]  790 	add	a,#0xfc
      00044C F5 81            [12]  791 	mov	sp,a
      00044E E5*00            [12]  792 	mov	a,_bp
      000450 24 0D            [12]  793 	add	a,#0x0d
      000452 F8               [12]  794 	mov	r0,a
      000453 A6 04            [24]  795 	mov	@r0,ar4
      000455 08               [12]  796 	inc	r0
      000456 A6 05            [24]  797 	mov	@r0,ar5
      000458 08               [12]  798 	inc	r0
      000459 A6 06            [24]  799 	mov	@r0,ar6
      00045B 08               [12]  800 	inc	r0
      00045C A6 07            [24]  801 	mov	@r0,ar7
                                    802 ;	atanf.c:83: if(x<0.0) r=-r;
      00045E E4               [12]  803 	clr	a
      00045F C0 E0            [24]  804 	push	acc
      000461 C0 E0            [24]  805 	push	acc
      000463 C0 E0            [24]  806 	push	acc
      000465 C0 E0            [24]  807 	push	acc
      000467 A8*00            [24]  808 	mov	r0,_bp
      000469 08               [12]  809 	inc	r0
      00046A 86 82            [24]  810 	mov	dpl,@r0
      00046C 08               [12]  811 	inc	r0
      00046D 86 83            [24]  812 	mov	dph,@r0
      00046F 08               [12]  813 	inc	r0
      000470 86 F0            [24]  814 	mov	b,@r0
      000472 08               [12]  815 	inc	r0
      000473 E6               [12]  816 	mov	a,@r0
      000474 12r00r00         [24]  817 	lcall	___fslt
      000477 AF 82            [24]  818 	mov	r7,dpl
      000479 E5 81            [12]  819 	mov	a,sp
      00047B 24 FC            [12]  820 	add	a,#0xfc
      00047D F5 81            [12]  821 	mov	sp,a
      00047F EF               [12]  822 	mov	a,r7
      000480 60 12            [24]  823 	jz	00111$
      000482 E5*00            [12]  824 	mov	a,_bp
      000484 24 0D            [12]  825 	add	a,#0x0d
      000486 F8               [12]  826 	mov	r0,a
      000487 E6               [12]  827 	mov	a,@r0
      000488 F6               [12]  828 	mov	@r0,a
      000489 08               [12]  829 	inc	r0
      00048A E6               [12]  830 	mov	a,@r0
      00048B F6               [12]  831 	mov	@r0,a
      00048C 08               [12]  832 	inc	r0
      00048D E6               [12]  833 	mov	a,@r0
      00048E F6               [12]  834 	mov	@r0,a
      00048F 08               [12]  835 	inc	r0
      000490 E6               [12]  836 	mov	a,@r0
      000491 B2 E7            [12]  837 	cpl	acc.7
      000493 F6               [12]  838 	mov	@r0,a
      000494                        839 00111$:
                                    840 ;	atanf.c:84: return r;
      000494 E5*00            [12]  841 	mov	a,_bp
      000496 24 0D            [12]  842 	add	a,#0x0d
      000498 F8               [12]  843 	mov	r0,a
      000499 86 82            [24]  844 	mov	dpl,@r0
      00049B 08               [12]  845 	inc	r0
      00049C 86 83            [24]  846 	mov	dph,@r0
      00049E 08               [12]  847 	inc	r0
      00049F 86 F0            [24]  848 	mov	b,@r0
      0004A1 08               [12]  849 	inc	r0
      0004A2 E6               [12]  850 	mov	a,@r0
      0004A3 85*00 81         [24]  851 	mov	sp,_bp
      0004A6 D0*00            [24]  852 	pop	_bp
      0004A8 22               [24]  853 	ret
                                    854 	.area CSEG    (CODE)
                                    855 	.area CONST   (CODE)
      000000                        856 _atanf_a_1_24:
      000000 00 00 00 00            857 	.byte #0x00,#0x00,#0x00,#0x00	;  0.000000e+00
      000004 92 0A 06 3F            858 	.byte #0x92,#0x0A,#0x06,#0x3F	;  5.235988e-01
      000008 DB 0F C9 3F            859 	.byte #0xDB,#0x0F,#0xC9,#0x3F	;  1.570796e+00
      00000C 92 0A 86 3F            860 	.byte #0x92,#0x0A,#0x86,#0x3F	;  1.047198e+00
                                    861 	.area XINIT   (CODE)
                                    862 	.area CABS    (ABS,CODE)
