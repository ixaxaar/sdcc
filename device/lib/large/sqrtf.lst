                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:27:55 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module sqrtf
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _ldexpf
                                     13 	.globl _frexpf
                                     14 	.globl _sqrtf
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram 
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; indirectly addressable internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area ISEG    (DATA)
                                     41 ;--------------------------------------------------------
                                     42 ; absolute internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area IABS    (ABS,DATA)
                                     45 	.area IABS    (ABS,DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; bit data
                                     48 ;--------------------------------------------------------
                                     49 	.area BSEG    (BIT)
                                     50 ;--------------------------------------------------------
                                     51 ; paged external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area PSEG    (PAG,XDATA)
                                     54 ;--------------------------------------------------------
                                     55 ; external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XSEG    (XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; absolute external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XABS    (ABS,XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; external initialized ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XISEG   (XDATA)
                                     66 	.area HOME    (CODE)
                                     67 	.area GSINIT0 (CODE)
                                     68 	.area GSINIT1 (CODE)
                                     69 	.area GSINIT2 (CODE)
                                     70 	.area GSINIT3 (CODE)
                                     71 	.area GSINIT4 (CODE)
                                     72 	.area GSINIT5 (CODE)
                                     73 	.area GSINIT  (CODE)
                                     74 	.area GSFINAL (CODE)
                                     75 	.area CSEG    (CODE)
                                     76 ;--------------------------------------------------------
                                     77 ; global & static initialisations
                                     78 ;--------------------------------------------------------
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 	.area GSFINAL (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 ;--------------------------------------------------------
                                     84 ; Home
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area HOME    (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; code
                                     90 ;--------------------------------------------------------
                                     91 	.area CSEG    (CODE)
                                     92 ;------------------------------------------------------------
                                     93 ;Allocation info for local variables in function 'sqrtf'
                                     94 ;------------------------------------------------------------
                                     95 ;x                         Allocated to registers r4 r5 r6 r7 
                                     96 ;f                         Allocated to stack - _bp +5
                                     97 ;y                         Allocated to stack - _bp +9
                                     98 ;n                         Allocated to stack - _bp +13
                                     99 ;sloc0                     Allocated to stack - _bp +1
                                    100 ;------------------------------------------------------------
                                    101 ;	sqrtf.c:37: float sqrtf(const float x) _FLOAT_FUNC_REENTRANT
                                    102 ;	-----------------------------------------
                                    103 ;	 function sqrtf
                                    104 ;	-----------------------------------------
      000000                        105 _sqrtf:
                           000007   106 	ar7 = 0x07
                           000006   107 	ar6 = 0x06
                           000005   108 	ar5 = 0x05
                           000004   109 	ar4 = 0x04
                           000003   110 	ar3 = 0x03
                           000002   111 	ar2 = 0x02
                           000001   112 	ar1 = 0x01
                           000000   113 	ar0 = 0x00
      000000 C0*00            [24]  114 	push	_bp
      000002 85 81*00         [24]  115 	mov	_bp,sp
      000005 AC 82            [24]  116 	mov	r4,dpl
      000007 AD 83            [24]  117 	mov	r5,dph
      000009 AE F0            [24]  118 	mov	r6,b
      00000B FF               [12]  119 	mov	r7,a
      00000C E5 81            [12]  120 	mov	a,sp
      00000E 24 0E            [12]  121 	add	a,#0x0E
      000010 F5 81            [12]  122 	mov	sp,a
                                    123 ;	sqrtf.c:42: if (x==0.0) return x;
      000012 8C F0            [24]  124 	mov	b,r4
      000014 ED               [12]  125 	mov	a,r5
      000015 42 F0            [12]  126 	orl	b,a
      000017 EE               [12]  127 	mov	a,r6
      000018 42 F0            [12]  128 	orl	b,a
      00001A EF               [12]  129 	mov	a,r7
      00001B 54 7F            [12]  130 	anl	a,#0x7F
      00001D 45 F0            [12]  131 	orl	a,b
      00001F 70 0A            [24]  132 	jnz	00107$
      000021 8C 82            [24]  133 	mov	dpl,r4
      000023 8D 83            [24]  134 	mov	dph,r5
      000025 8E F0            [24]  135 	mov	b,r6
      000027 EF               [12]  136 	mov	a,r7
      000028 02r02rBF         [24]  137 	ljmp	00111$
      00002B                        138 00107$:
                                    139 ;	sqrtf.c:43: else if (x==1.0) return 1.0;
      00002B C0 07            [24]  140 	push	ar7
      00002D C0 06            [24]  141 	push	ar6
      00002F C0 05            [24]  142 	push	ar5
      000031 C0 04            [24]  143 	push	ar4
      000033 E4               [12]  144 	clr	a
      000034 C0 E0            [24]  145 	push	acc
      000036 C0 E0            [24]  146 	push	acc
      000038 74 80            [12]  147 	mov	a,#0x80
      00003A C0 E0            [24]  148 	push	acc
      00003C 74 3F            [12]  149 	mov	a,#0x3F
      00003E C0 E0            [24]  150 	push	acc
      000040 8C 82            [24]  151 	mov	dpl,r4
      000042 8D 83            [24]  152 	mov	dph,r5
      000044 8E F0            [24]  153 	mov	b,r6
      000046 EF               [12]  154 	mov	a,r7
      000047 12r00r00         [24]  155 	lcall	___fseq
      00004A AB 82            [24]  156 	mov	r3,dpl
      00004C E5 81            [12]  157 	mov	a,sp
      00004E 24 FC            [12]  158 	add	a,#0xfc
      000050 F5 81            [12]  159 	mov	sp,a
      000052 D0 04            [24]  160 	pop	ar4
      000054 D0 05            [24]  161 	pop	ar5
      000056 D0 06            [24]  162 	pop	ar6
      000058 D0 07            [24]  163 	pop	ar7
      00005A EB               [12]  164 	mov	a,r3
      00005B 60 0B            [24]  165 	jz	00104$
      00005D 90 00 00         [24]  166 	mov	dptr,#0x0000
      000060 75 F0 80         [24]  167 	mov	b,#0x80
      000063 74 3F            [12]  168 	mov	a,#0x3F
      000065 02r02rBF         [24]  169 	ljmp	00111$
      000068                        170 00104$:
                                    171 ;	sqrtf.c:44: else if (x<0.0)
      000068 C0 07            [24]  172 	push	ar7
      00006A C0 06            [24]  173 	push	ar6
      00006C C0 05            [24]  174 	push	ar5
      00006E C0 04            [24]  175 	push	ar4
      000070 E4               [12]  176 	clr	a
      000071 C0 E0            [24]  177 	push	acc
      000073 C0 E0            [24]  178 	push	acc
      000075 C0 E0            [24]  179 	push	acc
      000077 C0 E0            [24]  180 	push	acc
      000079 8C 82            [24]  181 	mov	dpl,r4
      00007B 8D 83            [24]  182 	mov	dph,r5
      00007D 8E F0            [24]  183 	mov	b,r6
      00007F EF               [12]  184 	mov	a,r7
      000080 12r00r00         [24]  185 	lcall	___fslt
      000083 AB 82            [24]  186 	mov	r3,dpl
      000085 E5 81            [12]  187 	mov	a,sp
      000087 24 FC            [12]  188 	add	a,#0xfc
      000089 F5 81            [12]  189 	mov	sp,a
      00008B D0 04            [24]  190 	pop	ar4
      00008D D0 05            [24]  191 	pop	ar5
      00008F D0 06            [24]  192 	pop	ar6
      000091 D0 07            [24]  193 	pop	ar7
      000093 EB               [12]  194 	mov	a,r3
      000094 60 12            [24]  195 	jz	00108$
                                    196 ;	sqrtf.c:46: errno=EDOM;
      000096 90r00r00         [24]  197 	mov	dptr,#_errno
      000099 74 21            [12]  198 	mov	a,#0x21
      00009B F0               [24]  199 	movx	@dptr,a
      00009C E4               [12]  200 	clr	a
      00009D A3               [24]  201 	inc	dptr
      00009E F0               [24]  202 	movx	@dptr,a
                                    203 ;	sqrtf.c:47: return 0.0;
      00009F 90 00 00         [24]  204 	mov	dptr,#(0x00&0x00ff)
      0000A2 E4               [12]  205 	clr	a
      0000A3 F5 F0            [12]  206 	mov	b,a
      0000A5 02r02rBF         [24]  207 	ljmp	00111$
      0000A8                        208 00108$:
                                    209 ;	sqrtf.c:49: f=frexpf(x, &n);
      0000A8 E5*00            [12]  210 	mov	a,_bp
      0000AA 24 0D            [12]  211 	add	a,#0x0D
      0000AC 90r00r00         [24]  212 	mov	dptr,#_frexpf_PARM_2
      0000AF F0               [24]  213 	movx	@dptr,a
      0000B0 E4               [12]  214 	clr	a
      0000B1 A3               [24]  215 	inc	dptr
      0000B2 F0               [24]  216 	movx	@dptr,a
      0000B3 74 40            [12]  217 	mov	a,#0x40
      0000B5 A3               [24]  218 	inc	dptr
      0000B6 F0               [24]  219 	movx	@dptr,a
      0000B7 8C 82            [24]  220 	mov	dpl,r4
      0000B9 8D 83            [24]  221 	mov	dph,r5
      0000BB 8E F0            [24]  222 	mov	b,r6
      0000BD EF               [12]  223 	mov	a,r7
      0000BE 12r00r00         [24]  224 	lcall	_frexpf
      0000C1 AC 82            [24]  225 	mov	r4,dpl
      0000C3 AD 83            [24]  226 	mov	r5,dph
      0000C5 AE F0            [24]  227 	mov	r6,b
      0000C7 FF               [12]  228 	mov	r7,a
      0000C8 E5*00            [12]  229 	mov	a,_bp
      0000CA 24 05            [12]  230 	add	a,#0x05
      0000CC F8               [12]  231 	mov	r0,a
      0000CD A6 04            [24]  232 	mov	@r0,ar4
      0000CF 08               [12]  233 	inc	r0
      0000D0 A6 05            [24]  234 	mov	@r0,ar5
      0000D2 08               [12]  235 	inc	r0
      0000D3 A6 06            [24]  236 	mov	@r0,ar6
      0000D5 08               [12]  237 	inc	r0
      0000D6 A6 07            [24]  238 	mov	@r0,ar7
                                    239 ;	sqrtf.c:50: y=0.41731+0.59016*f; /*Educated guess*/
      0000D8 E5*00            [12]  240 	mov	a,_bp
      0000DA 24 05            [12]  241 	add	a,#0x05
      0000DC F8               [12]  242 	mov	r0,a
      0000DD E6               [12]  243 	mov	a,@r0
      0000DE C0 E0            [24]  244 	push	acc
      0000E0 08               [12]  245 	inc	r0
      0000E1 E6               [12]  246 	mov	a,@r0
      0000E2 C0 E0            [24]  247 	push	acc
      0000E4 08               [12]  248 	inc	r0
      0000E5 E6               [12]  249 	mov	a,@r0
      0000E6 C0 E0            [24]  250 	push	acc
      0000E8 08               [12]  251 	inc	r0
      0000E9 E6               [12]  252 	mov	a,@r0
      0000EA C0 E0            [24]  253 	push	acc
      0000EC 90 14 BA         [24]  254 	mov	dptr,#0x14BA
      0000EF 75 F0 17         [24]  255 	mov	b,#0x17
      0000F2 74 3F            [12]  256 	mov	a,#0x3F
      0000F4 12r00r00         [24]  257 	lcall	___fsmul
      0000F7 AA 82            [24]  258 	mov	r2,dpl
      0000F9 AB 83            [24]  259 	mov	r3,dph
      0000FB AE F0            [24]  260 	mov	r6,b
      0000FD FF               [12]  261 	mov	r7,a
      0000FE E5 81            [12]  262 	mov	a,sp
      000100 24 FC            [12]  263 	add	a,#0xfc
      000102 F5 81            [12]  264 	mov	sp,a
      000104 74 A8            [12]  265 	mov	a,#0xA8
      000106 C0 E0            [24]  266 	push	acc
      000108 04               [12]  267 	inc	a
      000109 C0 E0            [24]  268 	push	acc
      00010B 74 D5            [12]  269 	mov	a,#0xD5
      00010D C0 E0            [24]  270 	push	acc
      00010F 74 3E            [12]  271 	mov	a,#0x3E
      000111 C0 E0            [24]  272 	push	acc
      000113 8A 82            [24]  273 	mov	dpl,r2
      000115 8B 83            [24]  274 	mov	dph,r3
      000117 8E F0            [24]  275 	mov	b,r6
      000119 EF               [12]  276 	mov	a,r7
      00011A 12r00r00         [24]  277 	lcall	___fsadd
      00011D AC 82            [24]  278 	mov	r4,dpl
      00011F AD 83            [24]  279 	mov	r5,dph
      000121 AE F0            [24]  280 	mov	r6,b
      000123 FF               [12]  281 	mov	r7,a
      000124 E5 81            [12]  282 	mov	a,sp
      000126 24 FC            [12]  283 	add	a,#0xfc
      000128 F5 81            [12]  284 	mov	sp,a
      00012A E5*00            [12]  285 	mov	a,_bp
      00012C 24 09            [12]  286 	add	a,#0x09
      00012E F8               [12]  287 	mov	r0,a
      00012F A6 04            [24]  288 	mov	@r0,ar4
      000131 08               [12]  289 	inc	r0
      000132 A6 05            [24]  290 	mov	@r0,ar5
      000134 08               [12]  291 	inc	r0
      000135 A6 06            [24]  292 	mov	@r0,ar6
      000137 08               [12]  293 	inc	r0
      000138 A6 07            [24]  294 	mov	@r0,ar7
                                    295 ;	sqrtf.c:52: y+=f/y;
      00013A E5*00            [12]  296 	mov	a,_bp
      00013C 24 09            [12]  297 	add	a,#0x09
      00013E F8               [12]  298 	mov	r0,a
      00013F E6               [12]  299 	mov	a,@r0
      000140 C0 E0            [24]  300 	push	acc
      000142 08               [12]  301 	inc	r0
      000143 E6               [12]  302 	mov	a,@r0
      000144 C0 E0            [24]  303 	push	acc
      000146 08               [12]  304 	inc	r0
      000147 E6               [12]  305 	mov	a,@r0
      000148 C0 E0            [24]  306 	push	acc
      00014A 08               [12]  307 	inc	r0
      00014B E6               [12]  308 	mov	a,@r0
      00014C C0 E0            [24]  309 	push	acc
      00014E E5*00            [12]  310 	mov	a,_bp
      000150 24 05            [12]  311 	add	a,#0x05
      000152 F8               [12]  312 	mov	r0,a
      000153 86 82            [24]  313 	mov	dpl,@r0
      000155 08               [12]  314 	inc	r0
      000156 86 83            [24]  315 	mov	dph,@r0
      000158 08               [12]  316 	inc	r0
      000159 86 F0            [24]  317 	mov	b,@r0
      00015B 08               [12]  318 	inc	r0
      00015C E6               [12]  319 	mov	a,@r0
      00015D 12r00r00         [24]  320 	lcall	___fsdiv
      000160 AA 82            [24]  321 	mov	r2,dpl
      000162 AB 83            [24]  322 	mov	r3,dph
      000164 AE F0            [24]  323 	mov	r6,b
      000166 FF               [12]  324 	mov	r7,a
      000167 E5 81            [12]  325 	mov	a,sp
      000169 24 FC            [12]  326 	add	a,#0xfc
      00016B F5 81            [12]  327 	mov	sp,a
      00016D C0 02            [24]  328 	push	ar2
      00016F C0 03            [24]  329 	push	ar3
      000171 C0 06            [24]  330 	push	ar6
      000173 C0 07            [24]  331 	push	ar7
      000175 E5*00            [12]  332 	mov	a,_bp
      000177 24 09            [12]  333 	add	a,#0x09
      000179 F8               [12]  334 	mov	r0,a
      00017A 86 82            [24]  335 	mov	dpl,@r0
      00017C 08               [12]  336 	inc	r0
      00017D 86 83            [24]  337 	mov	dph,@r0
      00017F 08               [12]  338 	inc	r0
      000180 86 F0            [24]  339 	mov	b,@r0
      000182 08               [12]  340 	inc	r0
      000183 E6               [12]  341 	mov	a,@r0
      000184 12r00r00         [24]  342 	lcall	___fsadd
      000187 AC 82            [24]  343 	mov	r4,dpl
      000189 AD 83            [24]  344 	mov	r5,dph
      00018B AE F0            [24]  345 	mov	r6,b
      00018D FF               [12]  346 	mov	r7,a
      00018E E5 81            [12]  347 	mov	a,sp
      000190 24 FC            [12]  348 	add	a,#0xfc
      000192 F5 81            [12]  349 	mov	sp,a
      000194 E5*00            [12]  350 	mov	a,_bp
      000196 24 09            [12]  351 	add	a,#0x09
      000198 F8               [12]  352 	mov	r0,a
      000199 A6 04            [24]  353 	mov	@r0,ar4
      00019B 08               [12]  354 	inc	r0
      00019C A6 05            [24]  355 	mov	@r0,ar5
      00019E 08               [12]  356 	inc	r0
      00019F A6 06            [24]  357 	mov	@r0,ar6
      0001A1 08               [12]  358 	inc	r0
      0001A2 A6 07            [24]  359 	mov	@r0,ar7
                                    360 ;	sqrtf.c:53: y=ldexpf(y, -2) + f/y; /*Faster version of 0.25 * y + f/y*/
      0001A4 90r00r00         [24]  361 	mov	dptr,#_ldexpf_PARM_2
      0001A7 74 FE            [12]  362 	mov	a,#0xFE
      0001A9 F0               [24]  363 	movx	@dptr,a
      0001AA 04               [12]  364 	inc	a
      0001AB A3               [24]  365 	inc	dptr
      0001AC F0               [24]  366 	movx	@dptr,a
      0001AD E5*00            [12]  367 	mov	a,_bp
      0001AF 24 09            [12]  368 	add	a,#0x09
      0001B1 F8               [12]  369 	mov	r0,a
      0001B2 86 82            [24]  370 	mov	dpl,@r0
      0001B4 08               [12]  371 	inc	r0
      0001B5 86 83            [24]  372 	mov	dph,@r0
      0001B7 08               [12]  373 	inc	r0
      0001B8 86 F0            [24]  374 	mov	b,@r0
      0001BA 08               [12]  375 	inc	r0
      0001BB E6               [12]  376 	mov	a,@r0
      0001BC 12r00r00         [24]  377 	lcall	_ldexpf
      0001BF A8*00            [24]  378 	mov	r0,_bp
      0001C1 08               [12]  379 	inc	r0
      0001C2 A6 82            [24]  380 	mov	@r0,dpl
      0001C4 08               [12]  381 	inc	r0
      0001C5 A6 83            [24]  382 	mov	@r0,dph
      0001C7 08               [12]  383 	inc	r0
      0001C8 A6 F0            [24]  384 	mov	@r0,b
      0001CA 08               [12]  385 	inc	r0
      0001CB F6               [12]  386 	mov	@r0,a
      0001CC E5*00            [12]  387 	mov	a,_bp
      0001CE 24 09            [12]  388 	add	a,#0x09
      0001D0 F8               [12]  389 	mov	r0,a
      0001D1 E6               [12]  390 	mov	a,@r0
      0001D2 C0 E0            [24]  391 	push	acc
      0001D4 08               [12]  392 	inc	r0
      0001D5 E6               [12]  393 	mov	a,@r0
      0001D6 C0 E0            [24]  394 	push	acc
      0001D8 08               [12]  395 	inc	r0
      0001D9 E6               [12]  396 	mov	a,@r0
      0001DA C0 E0            [24]  397 	push	acc
      0001DC 08               [12]  398 	inc	r0
      0001DD E6               [12]  399 	mov	a,@r0
      0001DE C0 E0            [24]  400 	push	acc
      0001E0 E5*00            [12]  401 	mov	a,_bp
      0001E2 24 05            [12]  402 	add	a,#0x05
      0001E4 F8               [12]  403 	mov	r0,a
      0001E5 86 82            [24]  404 	mov	dpl,@r0
      0001E7 08               [12]  405 	inc	r0
      0001E8 86 83            [24]  406 	mov	dph,@r0
      0001EA 08               [12]  407 	inc	r0
      0001EB 86 F0            [24]  408 	mov	b,@r0
      0001ED 08               [12]  409 	inc	r0
      0001EE E6               [12]  410 	mov	a,@r0
      0001EF 12r00r00         [24]  411 	lcall	___fsdiv
      0001F2 AA 82            [24]  412 	mov	r2,dpl
      0001F4 AB 83            [24]  413 	mov	r3,dph
      0001F6 AE F0            [24]  414 	mov	r6,b
      0001F8 FF               [12]  415 	mov	r7,a
      0001F9 E5 81            [12]  416 	mov	a,sp
      0001FB 24 FC            [12]  417 	add	a,#0xfc
      0001FD F5 81            [12]  418 	mov	sp,a
      0001FF C0 02            [24]  419 	push	ar2
      000201 C0 03            [24]  420 	push	ar3
      000203 C0 06            [24]  421 	push	ar6
      000205 C0 07            [24]  422 	push	ar7
      000207 A8*00            [24]  423 	mov	r0,_bp
      000209 08               [12]  424 	inc	r0
      00020A 86 82            [24]  425 	mov	dpl,@r0
      00020C 08               [12]  426 	inc	r0
      00020D 86 83            [24]  427 	mov	dph,@r0
      00020F 08               [12]  428 	inc	r0
      000210 86 F0            [24]  429 	mov	b,@r0
      000212 08               [12]  430 	inc	r0
      000213 E6               [12]  431 	mov	a,@r0
      000214 12r00r00         [24]  432 	lcall	___fsadd
      000217 AC 82            [24]  433 	mov	r4,dpl
      000219 AD 83            [24]  434 	mov	r5,dph
      00021B AE F0            [24]  435 	mov	r6,b
      00021D FF               [12]  436 	mov	r7,a
      00021E E5 81            [12]  437 	mov	a,sp
      000220 24 FC            [12]  438 	add	a,#0xfc
      000222 F5 81            [12]  439 	mov	sp,a
      000224 E5*00            [12]  440 	mov	a,_bp
      000226 24 09            [12]  441 	add	a,#0x09
      000228 F8               [12]  442 	mov	r0,a
      000229 A6 04            [24]  443 	mov	@r0,ar4
      00022B 08               [12]  444 	inc	r0
      00022C A6 05            [24]  445 	mov	@r0,ar5
      00022E 08               [12]  446 	inc	r0
      00022F A6 06            [24]  447 	mov	@r0,ar6
      000231 08               [12]  448 	inc	r0
      000232 A6 07            [24]  449 	mov	@r0,ar7
                                    450 ;	sqrtf.c:55: if (n&1)
      000234 E5*00            [12]  451 	mov	a,_bp
      000236 24 0D            [12]  452 	add	a,#0x0d
      000238 F8               [12]  453 	mov	r0,a
      000239 E6               [12]  454 	mov	a,@r0
      00023A 30 E0 47         [24]  455 	jnb	acc.0,00110$
                                    456 ;	sqrtf.c:57: y*=0.7071067812;
      00023D E5*00            [12]  457 	mov	a,_bp
      00023F 24 09            [12]  458 	add	a,#0x09
      000241 F8               [12]  459 	mov	r0,a
      000242 E6               [12]  460 	mov	a,@r0
      000243 C0 E0            [24]  461 	push	acc
      000245 08               [12]  462 	inc	r0
      000246 E6               [12]  463 	mov	a,@r0
      000247 C0 E0            [24]  464 	push	acc
      000249 08               [12]  465 	inc	r0
      00024A E6               [12]  466 	mov	a,@r0
      00024B C0 E0            [24]  467 	push	acc
      00024D 08               [12]  468 	inc	r0
      00024E E6               [12]  469 	mov	a,@r0
      00024F C0 E0            [24]  470 	push	acc
      000251 90 04 F3         [24]  471 	mov	dptr,#0x04F3
      000254 75 F0 35         [24]  472 	mov	b,#0x35
      000257 74 3F            [12]  473 	mov	a,#0x3F
      000259 12r00r00         [24]  474 	lcall	___fsmul
      00025C AC 82            [24]  475 	mov	r4,dpl
      00025E AD 83            [24]  476 	mov	r5,dph
      000260 AE F0            [24]  477 	mov	r6,b
      000262 FF               [12]  478 	mov	r7,a
      000263 E5 81            [12]  479 	mov	a,sp
      000265 24 FC            [12]  480 	add	a,#0xfc
      000267 F5 81            [12]  481 	mov	sp,a
      000269 E5*00            [12]  482 	mov	a,_bp
      00026B 24 09            [12]  483 	add	a,#0x09
      00026D F8               [12]  484 	mov	r0,a
      00026E A6 04            [24]  485 	mov	@r0,ar4
      000270 08               [12]  486 	inc	r0
      000271 A6 05            [24]  487 	mov	@r0,ar5
      000273 08               [12]  488 	inc	r0
      000274 A6 06            [24]  489 	mov	@r0,ar6
      000276 08               [12]  490 	inc	r0
      000277 A6 07            [24]  491 	mov	@r0,ar7
                                    492 ;	sqrtf.c:58: ++n;
      000279 E5*00            [12]  493 	mov	a,_bp
      00027B 24 0D            [12]  494 	add	a,#0x0d
      00027D F8               [12]  495 	mov	r0,a
      00027E 06               [12]  496 	inc	@r0
      00027F B6 00 02         [24]  497 	cjne	@r0,#0x00,00129$
      000282 08               [12]  498 	inc	r0
      000283 06               [12]  499 	inc	@r0
      000284                        500 00129$:
      000284                        501 00110$:
                                    502 ;	sqrtf.c:60: return ldexpf(y, n/2);
      000284 90r00r00         [24]  503 	mov	dptr,#__divsint_PARM_2
      000287 74 02            [12]  504 	mov	a,#0x02
      000289 F0               [24]  505 	movx	@dptr,a
      00028A E4               [12]  506 	clr	a
      00028B A3               [24]  507 	inc	dptr
      00028C F0               [24]  508 	movx	@dptr,a
      00028D E5*00            [12]  509 	mov	a,_bp
      00028F 24 0D            [12]  510 	add	a,#0x0d
      000291 F8               [12]  511 	mov	r0,a
      000292 86 82            [24]  512 	mov	dpl,@r0
      000294 08               [12]  513 	inc	r0
      000295 86 83            [24]  514 	mov	dph,@r0
      000297 12r00r00         [24]  515 	lcall	__divsint
      00029A AE 82            [24]  516 	mov	r6,dpl
      00029C AF 83            [24]  517 	mov	r7,dph
      00029E 90r00r00         [24]  518 	mov	dptr,#_ldexpf_PARM_2
      0002A1 EE               [12]  519 	mov	a,r6
      0002A2 F0               [24]  520 	movx	@dptr,a
      0002A3 EF               [12]  521 	mov	a,r7
      0002A4 A3               [24]  522 	inc	dptr
      0002A5 F0               [24]  523 	movx	@dptr,a
      0002A6 E5*00            [12]  524 	mov	a,_bp
      0002A8 24 09            [12]  525 	add	a,#0x09
      0002AA F8               [12]  526 	mov	r0,a
      0002AB 86 82            [24]  527 	mov	dpl,@r0
      0002AD 08               [12]  528 	inc	r0
      0002AE 86 83            [24]  529 	mov	dph,@r0
      0002B0 08               [12]  530 	inc	r0
      0002B1 86 F0            [24]  531 	mov	b,@r0
      0002B3 08               [12]  532 	inc	r0
      0002B4 E6               [12]  533 	mov	a,@r0
      0002B5 12r00r00         [24]  534 	lcall	_ldexpf
      0002B8 AC 82            [24]  535 	mov	r4,dpl
      0002BA AD 83            [24]  536 	mov	r5,dph
      0002BC AE F0            [24]  537 	mov	r6,b
      0002BE FF               [12]  538 	mov	r7,a
      0002BF                        539 00111$:
      0002BF 85*00 81         [24]  540 	mov	sp,_bp
      0002C2 D0*00            [24]  541 	pop	_bp
      0002C4 22               [24]  542 	ret
                                    543 	.area CSEG    (CODE)
                                    544 	.area CONST   (CODE)
                                    545 	.area XINIT   (CODE)
                                    546 	.area CABS    (ABS,CODE)
