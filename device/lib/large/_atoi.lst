                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:27:56 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _atoi
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _atoi
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
      000000                         32 _atoi_sloc0_1_0:
      000000                         33 	.ds 2
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram 
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; indirectly addressable internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area ISEG    (DATA)
                                     41 ;--------------------------------------------------------
                                     42 ; absolute internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area IABS    (ABS,DATA)
                                     45 	.area IABS    (ABS,DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; bit data
                                     48 ;--------------------------------------------------------
                                     49 	.area BSEG    (BIT)
                                     50 ;--------------------------------------------------------
                                     51 ; paged external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area PSEG    (PAG,XDATA)
                                     54 ;--------------------------------------------------------
                                     55 ; external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XSEG    (XDATA)
      000000                         58 _atoi_s_1_1:
      000000                         59 	.ds 3
                                     60 ;--------------------------------------------------------
                                     61 ; absolute external ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XABS    (ABS,XDATA)
                                     64 ;--------------------------------------------------------
                                     65 ; external initialized ram data
                                     66 ;--------------------------------------------------------
                                     67 	.area XISEG   (XDATA)
                                     68 	.area HOME    (CODE)
                                     69 	.area GSINIT0 (CODE)
                                     70 	.area GSINIT1 (CODE)
                                     71 	.area GSINIT2 (CODE)
                                     72 	.area GSINIT3 (CODE)
                                     73 	.area GSINIT4 (CODE)
                                     74 	.area GSINIT5 (CODE)
                                     75 	.area GSINIT  (CODE)
                                     76 	.area GSFINAL (CODE)
                                     77 	.area CSEG    (CODE)
                                     78 ;--------------------------------------------------------
                                     79 ; global & static initialisations
                                     80 ;--------------------------------------------------------
                                     81 	.area HOME    (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 	.area GSFINAL (CODE)
                                     84 	.area GSINIT  (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; Home
                                     87 ;--------------------------------------------------------
                                     88 	.area HOME    (CODE)
                                     89 	.area HOME    (CODE)
                                     90 ;--------------------------------------------------------
                                     91 ; code
                                     92 ;--------------------------------------------------------
                                     93 	.area CSEG    (CODE)
                                     94 ;------------------------------------------------------------
                                     95 ;Allocation info for local variables in function 'atoi'
                                     96 ;------------------------------------------------------------
                                     97 ;rv                        Allocated to registers r6 r7 
                                     98 ;sign                      Allocated to registers r3 
                                     99 ;sloc0                     Allocated with name '_atoi_sloc0_1_0'
                                    100 ;s                         Allocated with name '_atoi_s_1_1'
                                    101 ;------------------------------------------------------------
                                    102 ;	_atoi.c:29: int atoi(const char * s)
                                    103 ;	-----------------------------------------
                                    104 ;	 function atoi
                                    105 ;	-----------------------------------------
      000000                        106 _atoi:
                           000007   107 	ar7 = 0x07
                           000006   108 	ar6 = 0x06
                           000005   109 	ar5 = 0x05
                           000004   110 	ar4 = 0x04
                           000003   111 	ar3 = 0x03
                           000002   112 	ar2 = 0x02
                           000001   113 	ar1 = 0x01
                           000000   114 	ar0 = 0x00
      000000 AF F0            [24]  115 	mov	r7,b
      000002 AE 83            [24]  116 	mov	r6,dph
      000004 E5 82            [12]  117 	mov	a,dpl
      000006 90r00r00         [24]  118 	mov	dptr,#_atoi_s_1_1
      000009 F0               [24]  119 	movx	@dptr,a
      00000A EE               [12]  120 	mov	a,r6
      00000B A3               [24]  121 	inc	dptr
      00000C F0               [24]  122 	movx	@dptr,a
      00000D EF               [12]  123 	mov	a,r7
      00000E A3               [24]  124 	inc	dptr
      00000F F0               [24]  125 	movx	@dptr,a
                                    126 ;	_atoi.c:31: register int rv=0; 
      000010 7E 00            [12]  127 	mov	r6,#0x00
      000012 7F 00            [12]  128 	mov	r7,#0x00
                                    129 ;	_atoi.c:35: while (*s) {
      000014 90r00r00         [24]  130 	mov	dptr,#_atoi_s_1_1
      000017 E0               [24]  131 	movx	a,@dptr
      000018 FB               [12]  132 	mov	r3,a
      000019 A3               [24]  133 	inc	dptr
      00001A E0               [24]  134 	movx	a,@dptr
      00001B FC               [12]  135 	mov	r4,a
      00001C A3               [24]  136 	inc	dptr
      00001D E0               [24]  137 	movx	a,@dptr
      00001E FD               [12]  138 	mov	r5,a
      00001F                        139 00107$:
      00001F 8B 82            [24]  140 	mov	dpl,r3
      000021 8C 83            [24]  141 	mov	dph,r4
      000023 8D F0            [24]  142 	mov	b,r5
      000025 12r00r00         [24]  143 	lcall	__gptrget
      000028 FA               [12]  144 	mov	r2,a
      000029 60 39            [24]  145 	jz	00133$
                                    146 ;	_atoi.c:36: if (*s <= '9' && *s >= '0')
      00002B C3               [12]  147 	clr	c
      00002C 74 B9            [12]  148 	mov	a,#(0x39 ^ 0x80)
      00002E 8A F0            [24]  149 	mov	b,r2
      000030 63 F0 80         [24]  150 	xrl	b,#0x80
      000033 95 F0            [12]  151 	subb	a,b
      000035 40 07            [24]  152 	jc	00102$
      000037 EA               [12]  153 	mov	a,r2
      000038 64 80            [12]  154 	xrl	a,#0x80
      00003A 94 B0            [12]  155 	subb	a,#0xb0
      00003C 50 26            [24]  156 	jnc	00133$
                                    157 ;	_atoi.c:37: break;
      00003E                        158 00102$:
                                    159 ;	_atoi.c:38: if (*s == '-' || *s == '+') 
      00003E 8B 82            [24]  160 	mov	dpl,r3
      000040 8C 83            [24]  161 	mov	dph,r4
      000042 8D F0            [24]  162 	mov	b,r5
      000044 12r00r00         [24]  163 	lcall	__gptrget
      000047 FA               [12]  164 	mov	r2,a
      000048 BA 2D 02         [24]  165 	cjne	r2,#0x2D,00160$
      00004B 80 17            [24]  166 	sjmp	00133$
      00004D                        167 00160$:
      00004D BA 2B 02         [24]  168 	cjne	r2,#0x2B,00161$
      000050 80 12            [24]  169 	sjmp	00133$
      000052                        170 00161$:
                                    171 ;	_atoi.c:40: s++;
      000052 0B               [12]  172 	inc	r3
      000053 BB 00 01         [24]  173 	cjne	r3,#0x00,00162$
      000056 0C               [12]  174 	inc	r4
      000057                        175 00162$:
      000057 90r00r00         [24]  176 	mov	dptr,#_atoi_s_1_1
      00005A EB               [12]  177 	mov	a,r3
      00005B F0               [24]  178 	movx	@dptr,a
      00005C EC               [12]  179 	mov	a,r4
      00005D A3               [24]  180 	inc	dptr
      00005E F0               [24]  181 	movx	@dptr,a
      00005F ED               [12]  182 	mov	a,r5
      000060 A3               [24]  183 	inc	dptr
      000061 F0               [24]  184 	movx	@dptr,a
      000062 80 BB            [24]  185 	sjmp	00107$
      000064                        186 00133$:
      000064 90r00r00         [24]  187 	mov	dptr,#_atoi_s_1_1
      000067 EB               [12]  188 	mov	a,r3
      000068 F0               [24]  189 	movx	@dptr,a
      000069 EC               [12]  190 	mov	a,r4
      00006A A3               [24]  191 	inc	dptr
      00006B F0               [24]  192 	movx	@dptr,a
      00006C ED               [12]  193 	mov	a,r5
      00006D A3               [24]  194 	inc	dptr
      00006E F0               [24]  195 	movx	@dptr,a
                                    196 ;	_atoi.c:43: sign = (*s == '-');
      00006F 8B 00            [24]  197 	mov	ar0,r3
      000071 8C 01            [24]  198 	mov	ar1,r4
      000073 8D 02            [24]  199 	mov	ar2,r5
      000075 8B 82            [24]  200 	mov	dpl,r3
      000077 8C 83            [24]  201 	mov	dph,r4
      000079 8D F0            [24]  202 	mov	b,r5
      00007B 12r00r00         [24]  203 	lcall	__gptrget
      00007E FD               [12]  204 	mov	r5,a
      00007F E4               [12]  205 	clr	a
      000080 BD 2D 01         [24]  206 	cjne	r5,#0x2D,00163$
      000083 04               [12]  207 	inc	a
      000084                        208 00163$:
                                    209 ;	_atoi.c:44: if (*s == '-' || *s == '+') s++;
      000084 FC               [12]  210 	mov	r4,a
      000085 FB               [12]  211 	mov	r3,a
      000086 70 03            [24]  212 	jnz	00110$
      000088 BD 2B 0E         [24]  213 	cjne	r5,#0x2B,00131$
      00008B                        214 00110$:
      00008B 90r00r00         [24]  215 	mov	dptr,#_atoi_s_1_1
      00008E 74 01            [12]  216 	mov	a,#0x01
      000090 28               [12]  217 	add	a,r0
      000091 F0               [24]  218 	movx	@dptr,a
      000092 E4               [12]  219 	clr	a
      000093 39               [12]  220 	addc	a,r1
      000094 A3               [24]  221 	inc	dptr
      000095 F0               [24]  222 	movx	@dptr,a
      000096 EA               [12]  223 	mov	a,r2
      000097 A3               [24]  224 	inc	dptr
      000098 F0               [24]  225 	movx	@dptr,a
                                    226 ;	_atoi.c:46: while (*s && *s >= '0' && *s <= '9') {
      000099                        227 00131$:
      000099 90r00r00         [24]  228 	mov	dptr,#_atoi_s_1_1
      00009C E0               [24]  229 	movx	a,@dptr
      00009D FA               [12]  230 	mov	r2,a
      00009E A3               [24]  231 	inc	dptr
      00009F E0               [24]  232 	movx	a,@dptr
      0000A0 FC               [12]  233 	mov	r4,a
      0000A1 A3               [24]  234 	inc	dptr
      0000A2 E0               [24]  235 	movx	a,@dptr
      0000A3 FD               [12]  236 	mov	r5,a
      0000A4                        237 00115$:
      0000A4 8A 82            [24]  238 	mov	dpl,r2
      0000A6 8C 83            [24]  239 	mov	dph,r4
      0000A8 8D F0            [24]  240 	mov	b,r5
      0000AA 12r00r00         [24]  241 	lcall	__gptrget
      0000AD F9               [12]  242 	mov	r1,a
      0000AE 60 66            [24]  243 	jz	00134$
      0000B0 C3               [12]  244 	clr	c
      0000B1 E9               [12]  245 	mov	a,r1
      0000B2 64 80            [12]  246 	xrl	a,#0x80
      0000B4 94 B0            [12]  247 	subb	a,#0xb0
      0000B6 40 5E            [24]  248 	jc	00134$
      0000B8 74 B9            [12]  249 	mov	a,#(0x39 ^ 0x80)
      0000BA 89 F0            [24]  250 	mov	b,r1
      0000BC 63 F0 80         [24]  251 	xrl	b,#0x80
      0000BF 95 F0            [12]  252 	subb	a,b
      0000C1 40 53            [24]  253 	jc	00134$
                                    254 ;	_atoi.c:47: rv = (rv * 10) + (*s - '0');
      0000C3 C0 03            [24]  255 	push	ar3
      0000C5 90r00r00         [24]  256 	mov	dptr,#__mulint_PARM_2
      0000C8 EE               [12]  257 	mov	a,r6
      0000C9 F0               [24]  258 	movx	@dptr,a
      0000CA EF               [12]  259 	mov	a,r7
      0000CB A3               [24]  260 	inc	dptr
      0000CC F0               [24]  261 	movx	@dptr,a
      0000CD 90 00 0A         [24]  262 	mov	dptr,#0x000A
      0000D0 C0 05            [24]  263 	push	ar5
      0000D2 C0 04            [24]  264 	push	ar4
      0000D4 C0 03            [24]  265 	push	ar3
      0000D6 C0 02            [24]  266 	push	ar2
      0000D8 C0 01            [24]  267 	push	ar1
      0000DA 12r00r00         [24]  268 	lcall	__mulint
      0000DD 85 82*00         [24]  269 	mov	_atoi_sloc0_1_0,dpl
      0000E0 85 83*01         [24]  270 	mov	(_atoi_sloc0_1_0 + 1),dph
      0000E3 D0 01            [24]  271 	pop	ar1
      0000E5 D0 02            [24]  272 	pop	ar2
      0000E7 D0 03            [24]  273 	pop	ar3
      0000E9 D0 04            [24]  274 	pop	ar4
      0000EB D0 05            [24]  275 	pop	ar5
      0000ED E9               [12]  276 	mov	a,r1
      0000EE 33               [12]  277 	rlc	a
      0000EF 95 E0            [12]  278 	subb	a,acc
      0000F1 FB               [12]  279 	mov	r3,a
      0000F2 E9               [12]  280 	mov	a,r1
      0000F3 24 D0            [12]  281 	add	a,#0xD0
      0000F5 F9               [12]  282 	mov	r1,a
      0000F6 EB               [12]  283 	mov	a,r3
      0000F7 34 FF            [12]  284 	addc	a,#0xFF
      0000F9 FB               [12]  285 	mov	r3,a
      0000FA E9               [12]  286 	mov	a,r1
      0000FB 25*00            [12]  287 	add	a,_atoi_sloc0_1_0
      0000FD FE               [12]  288 	mov	r6,a
      0000FE EB               [12]  289 	mov	a,r3
      0000FF 35*01            [12]  290 	addc	a,(_atoi_sloc0_1_0 + 1)
      000101 FF               [12]  291 	mov	r7,a
                                    292 ;	_atoi.c:48: s++;
      000102 0A               [12]  293 	inc	r2
      000103 BA 00 01         [24]  294 	cjne	r2,#0x00,00171$
      000106 0C               [12]  295 	inc	r4
      000107                        296 00171$:
      000107 90r00r00         [24]  297 	mov	dptr,#_atoi_s_1_1
      00010A EA               [12]  298 	mov	a,r2
      00010B F0               [24]  299 	movx	@dptr,a
      00010C EC               [12]  300 	mov	a,r4
      00010D A3               [24]  301 	inc	dptr
      00010E F0               [24]  302 	movx	@dptr,a
      00010F ED               [12]  303 	mov	a,r5
      000110 A3               [24]  304 	inc	dptr
      000111 F0               [24]  305 	movx	@dptr,a
      000112 D0 03            [24]  306 	pop	ar3
      000114 80 8E            [24]  307 	sjmp	00115$
      000116                        308 00134$:
      000116 90r00r00         [24]  309 	mov	dptr,#_atoi_s_1_1
      000119 EA               [12]  310 	mov	a,r2
      00011A F0               [24]  311 	movx	@dptr,a
      00011B EC               [12]  312 	mov	a,r4
      00011C A3               [24]  313 	inc	dptr
      00011D F0               [24]  314 	movx	@dptr,a
      00011E ED               [12]  315 	mov	a,r5
      00011F A3               [24]  316 	inc	dptr
      000120 F0               [24]  317 	movx	@dptr,a
                                    318 ;	_atoi.c:51: return (sign ? -rv : rv);
      000121 EB               [12]  319 	mov	a,r3
      000122 60 09            [24]  320 	jz	00120$
      000124 C3               [12]  321 	clr	c
      000125 E4               [12]  322 	clr	a
      000126 9E               [12]  323 	subb	a,r6
      000127 FC               [12]  324 	mov	r4,a
      000128 E4               [12]  325 	clr	a
      000129 9F               [12]  326 	subb	a,r7
      00012A FD               [12]  327 	mov	r5,a
      00012B 80 04            [24]  328 	sjmp	00121$
      00012D                        329 00120$:
      00012D 8E 04            [24]  330 	mov	ar4,r6
      00012F 8F 05            [24]  331 	mov	ar5,r7
      000131                        332 00121$:
      000131 8C 82            [24]  333 	mov	dpl,r4
      000133 8D 83            [24]  334 	mov	dph,r5
      000135 22               [24]  335 	ret
                                    336 	.area CSEG    (CODE)
                                    337 	.area CONST   (CODE)
                                    338 	.area XINIT   (CODE)
                                    339 	.area CABS    (ABS,CODE)
