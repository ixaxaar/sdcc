                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:51 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _strpbrk
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _strchr
                                     12 	.globl _strpbrk
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 ;--------------------------------------------------------
                                     26 ; global & static initialisations
                                     27 ;--------------------------------------------------------
                                     28 	.area HOME
                                     29 	.area GSINIT
                                     30 	.area GSFINAL
                                     31 	.area GSINIT
                                     32 ;--------------------------------------------------------
                                     33 ; Home
                                     34 ;--------------------------------------------------------
                                     35 	.area HOME
                                     36 	.area HOME
                                     37 ;--------------------------------------------------------
                                     38 ; code
                                     39 ;--------------------------------------------------------
                                     40 	.area CODE
                                     41 ;	../_strpbrk.c: 31: char * strpbrk (
                                     42 ;	-----------------------------------------
                                     43 ;	 function strpbrk
                                     44 ;	-----------------------------------------
      000000                         45 _strpbrk:
      000000 52 04            [ 2]   46 	sub	sp, #4
                                     47 ;	../_strpbrk.c: 36: char *ret = NULL;
      000002 5F               [ 1]   48 	clrw	x
      000003 1F 01            [ 2]   49 	ldw	(0x01, sp), x
                                     50 ;	../_strpbrk.c: 39: while (ch = *control) {
      000005 16 09            [ 2]   51 	ldw	y, (0x09, sp)
      000007 17 03            [ 2]   52 	ldw	(0x03, sp), y
      000009                         53 00105$:
      000009 1E 03            [ 2]   54 	ldw	x, (0x03, sp)
      00000B F6               [ 1]   55 	ld	a, (x)
      00000C 97               [ 1]   56 	ld	xl, a
      00000D 4D               [ 1]   57 	tnz	a
      00000E 27 23            [ 1]   58 	jreq	00107$
                                     59 ;	../_strpbrk.c: 40: char * p = strchr(string, ch);
      000010 9F               [ 1]   60 	ld	a, xl
      000011 49               [ 1]   61 	rlc	a
      000012 4F               [ 1]   62 	clr	a
      000013 A2 00            [ 1]   63 	sbc	a, #0x00
      000015 95               [ 1]   64 	ld	xh, a
      000016 89               [ 2]   65 	pushw	x
      000017 1E 09            [ 2]   66 	ldw	x, (0x09, sp)
      000019 89               [ 2]   67 	pushw	x
      00001A CDr00r00         [ 4]   68 	call	_strchr
      00001D 5B 04            [ 2]   69 	addw	sp, #4
                                     70 ;	../_strpbrk.c: 41: if (p != NULL && (ret == NULL || p < ret)) {
      00001F 5D               [ 2]   71 	tnzw	x
      000020 27 0A            [ 1]   72 	jreq	00102$
      000022 16 01            [ 2]   73 	ldw	y, (0x01, sp)
      000024 27 04            [ 1]   74 	jreq	00101$
      000026 13 01            [ 2]   75 	cpw	x, (0x01, sp)
      000028 24 02            [ 1]   76 	jrnc	00102$
      00002A                         77 00101$:
                                     78 ;	../_strpbrk.c: 42: ret = p;
      00002A 1F 01            [ 2]   79 	ldw	(0x01, sp), x
      00002C                         80 00102$:
                                     81 ;	../_strpbrk.c: 44: control++;
      00002C 1E 03            [ 2]   82 	ldw	x, (0x03, sp)
      00002E 5C               [ 2]   83 	incw	x
      00002F 1F 03            [ 2]   84 	ldw	(0x03, sp), x
      000031 20 D6            [ 2]   85 	jra	00105$
      000033                         86 00107$:
                                     87 ;	../_strpbrk.c: 47: return (ret);
      000033 1E 01            [ 2]   88 	ldw	x, (0x01, sp)
      000035 5B 04            [ 2]   89 	addw	sp, #4
      000037 81               [ 4]   90 	ret
                                     91 	.area CODE
                                     92 	.area INITIALIZER
                                     93 	.area CABS (ABS)
