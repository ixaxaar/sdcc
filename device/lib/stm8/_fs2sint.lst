                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:32 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _fs2sint
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl ___fs2slong
                                     12 	.globl ___fs2sint
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 ;--------------------------------------------------------
                                     26 ; global & static initialisations
                                     27 ;--------------------------------------------------------
                                     28 	.area HOME
                                     29 	.area GSINIT
                                     30 	.area GSFINAL
                                     31 	.area GSINIT
                                     32 ;--------------------------------------------------------
                                     33 ; Home
                                     34 ;--------------------------------------------------------
                                     35 	.area HOME
                                     36 	.area HOME
                                     37 ;--------------------------------------------------------
                                     38 ; code
                                     39 ;--------------------------------------------------------
                                     40 	.area CODE
                                     41 ;	../_fs2sint.c: 81: signed int __fs2sint (float f)
                                     42 ;	-----------------------------------------
                                     43 ;	 function __fs2sint
                                     44 ;	-----------------------------------------
      000000                         45 ___fs2sint:
      000000 52 04            [ 2]   46 	sub	sp, #4
                                     47 ;	../_fs2sint.c: 83: signed long sl=__fs2slong(f);
      000002 1E 09            [ 2]   48 	ldw	x, (0x09, sp)
      000004 89               [ 2]   49 	pushw	x
      000005 1E 09            [ 2]   50 	ldw	x, (0x09, sp)
      000007 89               [ 2]   51 	pushw	x
      000008 CDr00r00         [ 4]   52 	call	___fs2slong
      00000B 5B 04            [ 2]   53 	addw	sp, #4
      00000D 1F 03            [ 2]   54 	ldw	(0x03, sp), x
      00000F 17 01            [ 2]   55 	ldw	(0x01, sp), y
                                     56 ;	../_fs2sint.c: 84: if (sl>=INT_MAX)
      000011 1E 03            [ 2]   57 	ldw	x, (0x03, sp)
      000013 A3 7F FF         [ 2]   58 	cpw	x, #0x7fff
      000016 7B 02            [ 1]   59 	ld	a, (0x02, sp)
      000018 A2 00            [ 1]   60 	sbc	a, #0x00
      00001A 7B 01            [ 1]   61 	ld	a, (0x01, sp)
      00001C A2 00            [ 1]   62 	sbc	a, #0x00
      00001E 2F 05            [ 1]   63 	jrslt	00102$
                                     64 ;	../_fs2sint.c: 85: return INT_MAX;
      000020 AE 7F FF         [ 2]   65 	ldw	x, #0x7fff
      000023 20 16            [ 2]   66 	jra	00105$
      000025                         67 00102$:
                                     68 ;	../_fs2sint.c: 86: if (sl<=INT_MIN)
      000025 AE 80 00         [ 2]   69 	ldw	x, #0x8000
      000028 13 03            [ 2]   70 	cpw	x, (0x03, sp)
      00002A A6 FF            [ 1]   71 	ld	a, #0xff
      00002C 12 02            [ 1]   72 	sbc	a, (0x02, sp)
      00002E A6 FF            [ 1]   73 	ld	a, #0xff
      000030 12 01            [ 1]   74 	sbc	a, (0x01, sp)
      000032 2F 05            [ 1]   75 	jrslt	00104$
                                     76 ;	../_fs2sint.c: 87: return -INT_MIN;
      000034 AE 80 00         [ 2]   77 	ldw	x, #0x8000
      000037 20 02            [ 2]   78 	jra	00105$
      000039                         79 00104$:
                                     80 ;	../_fs2sint.c: 88: return sl;
      000039 1E 03            [ 2]   81 	ldw	x, (0x03, sp)
      00003B                         82 00105$:
      00003B 5B 04            [ 2]   83 	addw	sp, #4
      00003D 81               [ 4]   84 	ret
                                     85 	.area CODE
                                     86 	.area INITIALIZER
                                     87 	.area CABS (ABS)
