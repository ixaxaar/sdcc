                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:52 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _strtok
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _strchr
                                     12 	.globl _strtok
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
      000000                         17 _strtok_s_1_22:
      000000                         18 	.ds 2
                                     19 ;--------------------------------------------------------
                                     20 ; ram data
                                     21 ;--------------------------------------------------------
                                     22 	.area INITIALIZED
                                     23 ;--------------------------------------------------------
                                     24 ; absolute external ram data
                                     25 ;--------------------------------------------------------
                                     26 	.area DABS (ABS)
                                     27 ;--------------------------------------------------------
                                     28 ; global & static initialisations
                                     29 ;--------------------------------------------------------
                                     30 	.area HOME
                                     31 	.area GSINIT
                                     32 	.area GSFINAL
                                     33 	.area GSINIT
                                     34 ;--------------------------------------------------------
                                     35 ; Home
                                     36 ;--------------------------------------------------------
                                     37 	.area HOME
                                     38 	.area HOME
                                     39 ;--------------------------------------------------------
                                     40 ; code
                                     41 ;--------------------------------------------------------
                                     42 	.area CODE
                                     43 ;	../_strtok.c: 36: char * strtok (
                                     44 ;	-----------------------------------------
                                     45 ;	 function strtok
                                     46 ;	-----------------------------------------
      000000                         47 _strtok:
                                     48 ;	../_strtok.c: 43: if ( str )
      000000 1E 03            [ 2]   49 	ldw	x, (0x03, sp)
      000002 27 05            [ 1]   50 	jreq	00102$
                                     51 ;	../_strtok.c: 44: s = str ;
      000004 1E 03            [ 2]   52 	ldw	x, (0x03, sp)
      000006 CFu00u00         [ 2]   53 	ldw	_strtok_s_1_22+0, x
      000009                         54 00102$:
                                     55 ;	../_strtok.c: 45: if ( !s )
      000009 CEu00u00         [ 2]   56 	ldw	x, _strtok_s_1_22+0
      00000C 26 04            [ 1]   57 	jrne	00108$
                                     58 ;	../_strtok.c: 46: return NULL;
      00000E 5F               [ 1]   59 	clrw	x
      00000F CCr00r7F         [ 2]   60 	jp	00119$
                                     61 ;	../_strtok.c: 48: while (*s) {
      000012                         62 00108$:
      000012 CEu00u00         [ 2]   63 	ldw	x, _strtok_s_1_22+0
      000015 F6               [ 1]   64 	ld	a, (x)
      000016 4D               [ 1]   65 	tnz	a
      000017 27 1C            [ 1]   66 	jreq	00110$
                                     67 ;	../_strtok.c: 49: if (strchr(control,*s))
      000019 97               [ 1]   68 	ld	xl, a
      00001A 9F               [ 1]   69 	ld	a, xl
      00001B 49               [ 1]   70 	rlc	a
      00001C 4F               [ 1]   71 	clr	a
      00001D A2 00            [ 1]   72 	sbc	a, #0x00
      00001F 95               [ 1]   73 	ld	xh, a
      000020 89               [ 2]   74 	pushw	x
      000021 1E 07            [ 2]   75 	ldw	x, (0x07, sp)
      000023 89               [ 2]   76 	pushw	x
      000024 CDr00r00         [ 4]   77 	call	_strchr
      000027 5B 04            [ 2]   78 	addw	sp, #4
      000029 5D               [ 2]   79 	tnzw	x
      00002A 27 09            [ 1]   80 	jreq	00110$
                                     81 ;	../_strtok.c: 50: s++;
      00002C CEu00u00         [ 2]   82 	ldw	x, _strtok_s_1_22+0
      00002F 5C               [ 2]   83 	incw	x
      000030 CFu00u00         [ 2]   84 	ldw	_strtok_s_1_22+0, x
      000033 20 DD            [ 2]   85 	jra	00108$
                                     86 ;	../_strtok.c: 52: break;
      000035                         87 00110$:
                                     88 ;	../_strtok.c: 55: s1 = s ;
      000035 90 CEu00u00      [ 2]   89 	ldw	y, _strtok_s_1_22+0
                                     90 ;	../_strtok.c: 57: while (*s) {
      000039                         91 00113$:
                                     92 ;	../_strtok.c: 48: while (*s) {
      000039 CEu00u00         [ 2]   93 	ldw	x, _strtok_s_1_22+0
      00003C F6               [ 1]   94 	ld	a, (x)
                                     95 ;	../_strtok.c: 57: while (*s) {
      00003D 4D               [ 1]   96 	tnz	a
      00003E 27 2E            [ 1]   97 	jreq	00115$
                                     98 ;	../_strtok.c: 58: if (strchr(control,*s)) {
      000040 97               [ 1]   99 	ld	xl, a
      000041 9F               [ 1]  100 	ld	a, xl
      000042 49               [ 1]  101 	rlc	a
      000043 4F               [ 1]  102 	clr	a
      000044 A2 00            [ 1]  103 	sbc	a, #0x00
      000046 95               [ 1]  104 	ld	xh, a
      000047 90 89            [ 2]  105 	pushw	y
      000049 89               [ 2]  106 	pushw	x
      00004A 1E 09            [ 2]  107 	ldw	x, (0x09, sp)
      00004C 89               [ 2]  108 	pushw	x
      00004D CDr00r00         [ 4]  109 	call	_strchr
      000050 5B 04            [ 2]  110 	addw	sp, #4
      000052 90 85            [ 2]  111 	popw	y
      000054 5D               [ 2]  112 	tnzw	x
      000055 27 0E            [ 1]  113 	jreq	00112$
                                    114 ;	../_strtok.c: 59: *s++ = '\0';
      000057 CEu00u00         [ 2]  115 	ldw	x, _strtok_s_1_22+0
      00005A 7F               [ 1]  116 	clr	(x)
      00005B CEu00u00         [ 2]  117 	ldw	x, _strtok_s_1_22+0
      00005E 5C               [ 2]  118 	incw	x
      00005F CFu00u00         [ 2]  119 	ldw	_strtok_s_1_22+0, x
                                    120 ;	../_strtok.c: 60: return s1 ;
      000062 93               [ 1]  121 	ldw	x, y
      000063 20 1A            [ 2]  122 	jra	00119$
      000065                        123 00112$:
                                    124 ;	../_strtok.c: 62: s++ ;
      000065 CEu00u00         [ 2]  125 	ldw	x, _strtok_s_1_22+0
      000068 5C               [ 2]  126 	incw	x
      000069 CFu00u00         [ 2]  127 	ldw	_strtok_s_1_22+0, x
      00006C 20 CB            [ 2]  128 	jra	00113$
      00006E                        129 00115$:
                                    130 ;	../_strtok.c: 65: s = NULL;
      00006E 72 5Fu00u01      [ 1]  131 	clr	_strtok_s_1_22+1
      000072 72 5Fu00u00      [ 1]  132 	clr	_strtok_s_1_22+0
                                    133 ;	../_strtok.c: 67: if (*s1)
      000076 90 F6            [ 1]  134 	ld	a, (y)
      000078 4D               [ 1]  135 	tnz	a
      000079 27 03            [ 1]  136 	jreq	00117$
                                    137 ;	../_strtok.c: 68: return s1;
      00007B 93               [ 1]  138 	ldw	x, y
      00007C 20 01            [ 2]  139 	jra	00119$
      00007E                        140 00117$:
                                    141 ;	../_strtok.c: 70: return NULL;
      00007E 5F               [ 1]  142 	clrw	x
      00007F                        143 00119$:
      00007F 81               [ 4]  144 	ret
                                    145 	.area CODE
                                    146 	.area INITIALIZER
                                    147 	.area CABS (ABS)
