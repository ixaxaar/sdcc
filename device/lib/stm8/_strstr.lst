                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:52 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _strstr
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _strstr
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; absolute external ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area DABS (ABS)
                                     24 ;--------------------------------------------------------
                                     25 ; global & static initialisations
                                     26 ;--------------------------------------------------------
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area GSINIT
                                     31 ;--------------------------------------------------------
                                     32 ; Home
                                     33 ;--------------------------------------------------------
                                     34 	.area HOME
                                     35 	.area HOME
                                     36 ;--------------------------------------------------------
                                     37 ; code
                                     38 ;--------------------------------------------------------
                                     39 	.area CODE
                                     40 ;	../_strstr.c: 31: char * strstr (
                                     41 ;	-----------------------------------------
                                     42 ;	 function strstr
                                     43 ;	-----------------------------------------
      000000                         44 _strstr:
      000000 52 0F            [ 2]   45 	sub	sp, #15
                                     46 ;	../_strstr.c: 36: const char * cp = str1;
      000002 16 12            [ 2]   47 	ldw	y, (0x12, sp)
      000004 17 05            [ 2]   48 	ldw	(0x05, sp), y
                                     49 ;	../_strstr.c: 40: if ( !*str2 )
      000006 16 14            [ 2]   50 	ldw	y, (0x14, sp)
      000008 17 01            [ 2]   51 	ldw	(0x01, sp), y
      00000A 1E 01            [ 2]   52 	ldw	x, (0x01, sp)
      00000C F6               [ 1]   53 	ld	a, (x)
      00000D 4D               [ 1]   54 	tnz	a
      00000E 26 05            [ 1]   55 	jrne	00122$
                                     56 ;	../_strstr.c: 41: return str1;
      000010 1E 05            [ 2]   57 	ldw	x, (0x05, sp)
      000012 CCr00r7C         [ 2]   58 	jp	00113$
                                     59 ;	../_strstr.c: 43: while (*cp)
      000015                         60 00122$:
      000015 16 05            [ 2]   61 	ldw	y, (0x05, sp)
      000017 17 03            [ 2]   62 	ldw	(0x03, sp), y
      000019                         63 00110$:
      000019 1E 03            [ 2]   64 	ldw	x, (0x03, sp)
      00001B F6               [ 1]   65 	ld	a, (x)
      00001C 4D               [ 1]   66 	tnz	a
      00001D 27 5C            [ 1]   67 	jreq	00112$
                                     68 ;	../_strstr.c: 46: s2 = str2;
      00001F 7B 01            [ 1]   69 	ld	a, (0x01, sp)
      000021 88               [ 1]   70 	push	a
      000022 7B 03            [ 1]   71 	ld	a, (0x03, sp)
      000024 6B 10            [ 1]   72 	ld	(0x10, sp), a
      000026 84               [ 1]   73 	pop	a
                                     74 ;	../_strstr.c: 48: while ( *s1 && *s2 && !(*s1-*s2) )
      000027 16 03            [ 2]   75 	ldw	y, (0x03, sp)
      000029 17 0A            [ 2]   76 	ldw	(0x0a, sp), y
      00002B 6B 07            [ 1]   77 	ld	(0x07, sp), a
      00002D 7B 0F            [ 1]   78 	ld	a, (0x0f, sp)
      00002F 6B 08            [ 1]   79 	ld	(0x08, sp), a
      000031                         80 00105$:
      000031 1E 0A            [ 2]   81 	ldw	x, (0x0a, sp)
      000033 F6               [ 1]   82 	ld	a, (x)
      000034 1E 07            [ 2]   83 	ldw	x, (0x07, sp)
      000036 88               [ 1]   84 	push	a
      000037 F6               [ 1]   85 	ld	a, (x)
      000038 6B 0A            [ 1]   86 	ld	(0x0a, sp), a
      00003A 84               [ 1]   87 	pop	a
      00003B 4D               [ 1]   88 	tnz	a
      00003C 27 29            [ 1]   89 	jreq	00107$
      00003E 0D 09            [ 1]   90 	tnz	(0x09, sp)
      000040 27 25            [ 1]   91 	jreq	00107$
      000042 97               [ 1]   92 	ld	xl, a
      000043 9F               [ 1]   93 	ld	a, xl
      000044 49               [ 1]   94 	rlc	a
      000045 4F               [ 1]   95 	clr	a
      000046 A2 00            [ 1]   96 	sbc	a, #0x00
      000048 95               [ 1]   97 	ld	xh, a
      000049 7B 09            [ 1]   98 	ld	a, (0x09, sp)
      00004B 6B 0D            [ 1]   99 	ld	(0x0d, sp), a
      00004D 7B 0D            [ 1]  100 	ld	a, (0x0d, sp)
      00004F 49               [ 1]  101 	rlc	a
      000050 4F               [ 1]  102 	clr	a
      000051 A2 00            [ 1]  103 	sbc	a, #0x00
      000053 6B 0C            [ 1]  104 	ld	(0x0c, sp), a
      000055 72 F0 0C         [ 2]  105 	subw	x, (0x0c, sp)
      000058 5D               [ 2]  106 	tnzw	x
      000059 26 0C            [ 1]  107 	jrne	00107$
                                    108 ;	../_strstr.c: 49: s1++, s2++;
      00005B 1E 0A            [ 2]  109 	ldw	x, (0x0a, sp)
      00005D 5C               [ 2]  110 	incw	x
      00005E 1F 0A            [ 2]  111 	ldw	(0x0a, sp), x
      000060 1E 07            [ 2]  112 	ldw	x, (0x07, sp)
      000062 5C               [ 2]  113 	incw	x
      000063 1F 07            [ 2]  114 	ldw	(0x07, sp), x
      000065 20 CA            [ 2]  115 	jra	00105$
      000067                        116 00107$:
                                    117 ;	../_strstr.c: 51: if (!*s2)
      000067 0D 09            [ 1]  118 	tnz	(0x09, sp)
      000069 26 04            [ 1]  119 	jrne	00109$
                                    120 ;	../_strstr.c: 52: return( (char*)cp );
      00006B 1E 05            [ 2]  121 	ldw	x, (0x05, sp)
      00006D 20 0D            [ 2]  122 	jra	00113$
      00006F                        123 00109$:
                                    124 ;	../_strstr.c: 54: cp++;
      00006F 1E 03            [ 2]  125 	ldw	x, (0x03, sp)
      000071 5C               [ 2]  126 	incw	x
      000072 1F 03            [ 2]  127 	ldw	(0x03, sp), x
      000074 16 03            [ 2]  128 	ldw	y, (0x03, sp)
      000076 17 05            [ 2]  129 	ldw	(0x05, sp), y
      000078 CCr00r19         [ 2]  130 	jp	00110$
      00007B                        131 00112$:
                                    132 ;	../_strstr.c: 57: return (NULL) ;
      00007B 5F               [ 1]  133 	clrw	x
      00007C                        134 00113$:
      00007C 5B 0F            [ 2]  135 	addw	sp, #15
      00007E 81               [ 4]  136 	ret
                                    137 	.area CODE
                                    138 	.area INITIALIZER
                                    139 	.area CABS (ABS)
