                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:47 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _moduint
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl __moduint
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; absolute external ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area DABS (ABS)
                                     24 ;--------------------------------------------------------
                                     25 ; global & static initialisations
                                     26 ;--------------------------------------------------------
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area GSINIT
                                     31 ;--------------------------------------------------------
                                     32 ; Home
                                     33 ;--------------------------------------------------------
                                     34 	.area HOME
                                     35 	.area HOME
                                     36 ;--------------------------------------------------------
                                     37 ; code
                                     38 ;--------------------------------------------------------
                                     39 	.area CODE
                                     40 ;	../_moduint.c: 173: _moduint (unsigned int a, unsigned int b)
                                     41 ;	-----------------------------------------
                                     42 ;	 function _moduint
                                     43 ;	-----------------------------------------
      000000                         44 __moduint:
      000000 52 04            [ 2]   45 	sub	sp, #4
                                     46 ;	../_moduint.c: 175: unsigned char count = 0;
      000002 0F 04            [ 1]   47 	clr	(0x04, sp)
                                     48 ;	../_moduint.c: 178: while (!MSB_SET(b))
      000004 0F 01            [ 1]   49 	clr	(0x01, sp)
      000006                         50 00103$:
      000006 7B 09            [ 1]   51 	ld	a, (0x09, sp)
      000008 48               [ 1]   52 	sll	a
      000009 4F               [ 1]   53 	clr	a
      00000A 49               [ 1]   54 	rlc	a
      00000B 4D               [ 1]   55 	tnz	a
      00000C 26 1A            [ 1]   56 	jrne	00117$
                                     57 ;	../_moduint.c: 180: b <<= 1;
      00000E 1E 09            [ 2]   58 	ldw	x, (0x09, sp)
      000010 58               [ 2]   59 	sllw	x
      000011 1F 09            [ 2]   60 	ldw	(0x09, sp), x
                                     61 ;	../_moduint.c: 181: if (b > a)
      000013 1E 09            [ 2]   62 	ldw	x, (0x09, sp)
      000015 13 07            [ 2]   63 	cpw	x, (0x07, sp)
      000017 23 07            [ 2]   64 	jrule	00102$
                                     65 ;	../_moduint.c: 183: b >>=1;
      000019 1E 09            [ 2]   66 	ldw	x, (0x09, sp)
      00001B 54               [ 2]   67 	srlw	x
      00001C 1F 09            [ 2]   68 	ldw	(0x09, sp), x
                                     69 ;	../_moduint.c: 184: break;
      00001E 20 08            [ 2]   70 	jra	00117$
      000020                         71 00102$:
                                     72 ;	../_moduint.c: 186: count++;
      000020 0C 01            [ 1]   73 	inc	(0x01, sp)
      000022 7B 01            [ 1]   74 	ld	a, (0x01, sp)
      000024 6B 04            [ 1]   75 	ld	(0x04, sp), a
      000026 20 DE            [ 2]   76 	jra	00103$
                                     77 ;	../_moduint.c: 188: do
      000028                         78 00117$:
      000028 7B 04            [ 1]   79 	ld	a, (0x04, sp)
      00002A 6B 02            [ 1]   80 	ld	(0x02, sp), a
      00002C                         81 00108$:
                                     82 ;	../_moduint.c: 190: if (a >= b)
      00002C 1E 07            [ 2]   83 	ldw	x, (0x07, sp)
      00002E 13 09            [ 2]   84 	cpw	x, (0x09, sp)
      000030 25 07            [ 1]   85 	jrc	00107$
                                     86 ;	../_moduint.c: 191: a -= b;
      000032 16 07            [ 2]   87 	ldw	y, (0x07, sp)
      000034 72 F2 09         [ 2]   88 	subw	y, (0x09, sp)
      000037 17 07            [ 2]   89 	ldw	(0x07, sp), y
      000039                         90 00107$:
                                     91 ;	../_moduint.c: 192: b >>= 1;
      000039 1E 09            [ 2]   92 	ldw	x, (0x09, sp)
      00003B 54               [ 2]   93 	srlw	x
      00003C 1F 09            [ 2]   94 	ldw	(0x09, sp), x
                                     95 ;	../_moduint.c: 194: while (count--);
      00003E 7B 02            [ 1]   96 	ld	a, (0x02, sp)
      000040 6B 03            [ 1]   97 	ld	(0x03, sp), a
      000042 0A 02            [ 1]   98 	dec	(0x02, sp)
      000044 0D 03            [ 1]   99 	tnz	(0x03, sp)
      000046 26 E4            [ 1]  100 	jrne	00108$
                                    101 ;	../_moduint.c: 195: return a;
      000048 1E 07            [ 2]  102 	ldw	x, (0x07, sp)
      00004A 5B 04            [ 2]  103 	addw	sp, #4
      00004C 81               [ 4]  104 	ret
                                    105 	.area CODE
                                    106 	.area INITIALIZER
                                    107 	.area CABS (ABS)
