                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:44 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module acosf
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _asincosf
                                     12 	.globl _acosf
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 ;--------------------------------------------------------
                                     26 ; global & static initialisations
                                     27 ;--------------------------------------------------------
                                     28 	.area HOME
                                     29 	.area GSINIT
                                     30 	.area GSFINAL
                                     31 	.area GSINIT
                                     32 ;--------------------------------------------------------
                                     33 ; Home
                                     34 ;--------------------------------------------------------
                                     35 	.area HOME
                                     36 	.area HOME
                                     37 ;--------------------------------------------------------
                                     38 ; code
                                     39 ;--------------------------------------------------------
                                     40 	.area CODE
                                     41 ;	../acosf.c: 36: float acosf(const float x) _FLOAT_FUNC_REENTRANT
                                     42 ;	-----------------------------------------
                                     43 ;	 function acosf
                                     44 ;	-----------------------------------------
      000000                         45 _acosf:
                                     46 ;	../acosf.c: 38: if (x == 1.0) return 0.0;
      000000 5F               [ 1]   47 	clrw	x
      000001 89               [ 2]   48 	pushw	x
      000002 4B 80            [ 1]   49 	push	#0x80
      000004 4B 3F            [ 1]   50 	push	#0x3f
      000006 1E 09            [ 2]   51 	ldw	x, (0x09, sp)
      000008 89               [ 2]   52 	pushw	x
      000009 1E 09            [ 2]   53 	ldw	x, (0x09, sp)
      00000B 89               [ 2]   54 	pushw	x
      00000C CDr00r00         [ 4]   55 	call	___fseq
      00000F 5B 08            [ 2]   56 	addw	sp, #8
      000011 4D               [ 1]   57 	tnz	a
      000012 27 05            [ 1]   58 	jreq	00108$
      000014 5F               [ 1]   59 	clrw	x
      000015 90 5F            [ 1]   60 	clrw	y
      000017 20 3B            [ 2]   61 	jra	00110$
      000019                         62 00108$:
                                     63 ;	../acosf.c: 39: else if (x ==-1.0) return PI;
      000019 5F               [ 1]   64 	clrw	x
      00001A 89               [ 2]   65 	pushw	x
      00001B 4B 80            [ 1]   66 	push	#0x80
      00001D 4B BF            [ 1]   67 	push	#0xbf
      00001F 1E 09            [ 2]   68 	ldw	x, (0x09, sp)
      000021 89               [ 2]   69 	pushw	x
      000022 1E 09            [ 2]   70 	ldw	x, (0x09, sp)
      000024 89               [ 2]   71 	pushw	x
      000025 CDr00r00         [ 4]   72 	call	___fseq
      000028 5B 08            [ 2]   73 	addw	sp, #8
      00002A 4D               [ 1]   74 	tnz	a
      00002B 27 09            [ 1]   75 	jreq	00105$
      00002D AE 0F DB         [ 2]   76 	ldw	x, #0x0fdb
      000030 90 AE 40 49      [ 2]   77 	ldw	y, #0x4049
      000034 20 1E            [ 2]   78 	jra	00110$
      000036                         79 00105$:
                                     80 ;	../acosf.c: 40: else if (x == 0.0) return HALF_PI;
      000036 1E 05            [ 2]   81 	ldw	x, (0x05, sp)
      000038 26 0D            [ 1]   82 	jrne	00102$
      00003A 1E 03            [ 2]   83 	ldw	x, (0x03, sp)
      00003C 26 09            [ 1]   84 	jrne	00102$
      00003E AE 0F DB         [ 2]   85 	ldw	x, #0x0fdb
      000041 90 AE 3F C9      [ 2]   86 	ldw	y, #0x3fc9
      000045 20 0D            [ 2]   87 	jra	00110$
      000047                         88 00102$:
                                     89 ;	../acosf.c: 41: else               return asincosf(x, true);
      000047 4B 01            [ 1]   90 	push	#0x01
      000049 1E 06            [ 2]   91 	ldw	x, (0x06, sp)
      00004B 89               [ 2]   92 	pushw	x
      00004C 1E 06            [ 2]   93 	ldw	x, (0x06, sp)
      00004E 89               [ 2]   94 	pushw	x
      00004F CDr00r00         [ 4]   95 	call	_asincosf
      000052 5B 05            [ 2]   96 	addw	sp, #5
      000054                         97 00110$:
      000054 81               [ 4]   98 	ret
                                     99 	.area CODE
                                    100 	.area INITIALIZER
                                    101 	.area CABS (ABS)
