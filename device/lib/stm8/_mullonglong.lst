                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:49 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _mullonglong
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl __mullonglong
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; absolute external ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area DABS (ABS)
                                     24 ;--------------------------------------------------------
                                     25 ; global & static initialisations
                                     26 ;--------------------------------------------------------
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area GSINIT
                                     31 ;--------------------------------------------------------
                                     32 ; Home
                                     33 ;--------------------------------------------------------
                                     34 	.area HOME
                                     35 	.area HOME
                                     36 ;--------------------------------------------------------
                                     37 ; code
                                     38 ;--------------------------------------------------------
                                     39 	.area CODE
                                     40 ;	../_mullonglong.c: 35: long long _mullonglong(long long ll, long long lr)
                                     41 ;	-----------------------------------------
                                     42 ;	 function _mullonglong
                                     43 ;	-----------------------------------------
      000000                         44 __mullonglong:
      000000 52 24            [ 2]   45 	sub	sp, #36
                                     46 ;	../_mullonglong.c: 37: unsigned long long ret = 0ull;
      000002 5F               [ 1]   47 	clrw	x
      000003 1F 0C            [ 2]   48 	ldw	(0x0c, sp), x
      000005 1F 0A            [ 2]   49 	ldw	(0x0a, sp), x
      000007 1F 08            [ 2]   50 	ldw	(0x08, sp), x
      000009 1F 06            [ 2]   51 	ldw	(0x06, sp), x
                                     52 ;	../_mullonglong.c: 38: unsigned char *l = (unsigned char *)(&ll);
      00000B 96               [ 1]   53 	ldw	x, sp
      00000C 1C 00 27         [ 2]   54 	addw	x, #39
      00000F 1F 04            [ 2]   55 	ldw	(0x04, sp), x
                                     56 ;	../_mullonglong.c: 39: unsigned char *r = (unsigned char *)(&lr);
      000011 96               [ 1]   57 	ldw	x, sp
      000012 1C 00 2F         [ 2]   58 	addw	x, #47
      000015 1F 02            [ 2]   59 	ldw	(0x02, sp), x
                                     60 ;	../_mullonglong.c: 42: for (i = 0; i < sizeof (long long); i++)
      000017 0F 01            [ 1]   61 	clr	(0x01, sp)
                                     62 ;	../_mullonglong.c: 44: for(j = 0; (i + j) < sizeof (long long); j++)
      000019                         63 00111$:
      000019 5F               [ 1]   64 	clrw	x
      00001A 7B 01            [ 1]   65 	ld	a, (0x01, sp)
      00001C 97               [ 1]   66 	ld	xl, a
      00001D 72 FB 04         [ 2]   67 	addw	x, (0x04, sp)
      000020 1F 0E            [ 2]   68 	ldw	(0x0e, sp), x
      000022 4F               [ 1]   69 	clr	a
      000023                         70 00104$:
      000023 88               [ 1]   71 	push	a
      000024 7B 02            [ 1]   72 	ld	a, (0x02, sp)
      000026 6B 25            [ 1]   73 	ld	(0x25, sp), a
      000028 84               [ 1]   74 	pop	a
      000029 02               [ 1]   75 	rlwa	x
      00002A 4F               [ 1]   76 	clr	a
      00002B 01               [ 1]   77 	rrwa	x
      00002C 97               [ 1]   78 	ld	xl, a
      00002D 0F 21            [ 1]   79 	clr	(0x21, sp)
      00002F 88               [ 1]   80 	push	a
      000030 9F               [ 1]   81 	ld	a, xl
      000031 1B 25            [ 1]   82 	add	a, (0x25, sp)
      000033 97               [ 1]   83 	ld	xl, a
      000034 9E               [ 1]   84 	ld	a, xh
      000035 19 22            [ 1]   85 	adc	a, (0x22, sp)
      000037 95               [ 1]   86 	ld	xh, a
      000038 84               [ 1]   87 	pop	a
      000039 A3 00 08         [ 2]   88 	cpw	x, #0x0008
      00003C 2F 03            [ 1]   89 	jrslt	00128$
      00003E CCr00rA6         [ 2]   90 	jp	00107$
      000041                         91 00128$:
                                     92 ;	../_mullonglong.c: 45: ret += ((unsigned short)(l[i] * r [j])) << ((i + j) * 8);
      000041 16 0E            [ 2]   93 	ldw	y, (0x0e, sp)
      000043 88               [ 1]   94 	push	a
      000044 90 F6            [ 1]   95 	ld	a, (y)
      000046 6B 11            [ 1]   96 	ld	(0x11, sp), a
      000048 84               [ 1]   97 	pop	a
      000049 90 5F            [ 1]   98 	clrw	y
      00004B 90 97            [ 1]   99 	ld	yl, a
      00004D 72 F9 02         [ 2]  100 	addw	y, (0x02, sp)
      000050 88               [ 1]  101 	push	a
      000051 90 F6            [ 1]  102 	ld	a, (y)
      000053 90 97            [ 1]  103 	ld	yl, a
      000055 7B 11            [ 1]  104 	ld	a, (0x11, sp)
      000057 90 42            [ 4]  105 	mul	y, a
      000059 84               [ 1]  106 	pop	a
      00005A 58               [ 2]  107 	sllw	x
      00005B 58               [ 2]  108 	sllw	x
      00005C 58               [ 2]  109 	sllw	x
      00005D 88               [ 1]  110 	push	a
      00005E 9F               [ 1]  111 	ld	a, xl
      00005F 4D               [ 1]  112 	tnz	a
      000060 27 05            [ 1]  113 	jreq	00130$
      000062                        114 00129$:
      000062 90 58            [ 2]  115 	sllw	y
      000064 4A               [ 1]  116 	dec	a
      000065 26 FB            [ 1]  117 	jrne	00129$
      000067                        118 00130$:
      000067 84               [ 1]  119 	pop	a
      000068 0F 1E            [ 1]  120 	clr	(0x1e, sp)
      00006A 0F 1D            [ 1]  121 	clr	(0x1d, sp)
      00006C 5F               [ 1]  122 	clrw	x
      00006D 0F 1A            [ 1]  123 	clr	(0x1a, sp)
      00006F 0F 19            [ 1]  124 	clr	(0x19, sp)
      000071 72 F9 0C         [ 2]  125 	addw	y, (0x0c, sp)
      000074 88               [ 1]  126 	push	a
      000075 7B 1F            [ 1]  127 	ld	a, (0x1f, sp)
      000077 19 0C            [ 1]  128 	adc	a, (0x0c, sp)
      000079 6B 17            [ 1]  129 	ld	(0x17, sp), a
      00007B 7B 1E            [ 1]  130 	ld	a, (0x1e, sp)
      00007D 19 0B            [ 1]  131 	adc	a, (0x0b, sp)
      00007F 6B 16            [ 1]  132 	ld	(0x16, sp), a
      000081 9F               [ 1]  133 	ld	a, xl
      000082 19 0A            [ 1]  134 	adc	a, (0x0a, sp)
      000084 97               [ 1]  135 	ld	xl, a
      000085 9E               [ 1]  136 	ld	a, xh
      000086 19 09            [ 1]  137 	adc	a, (0x09, sp)
      000088 95               [ 1]  138 	ld	xh, a
      000089 7B 1B            [ 1]  139 	ld	a, (0x1b, sp)
      00008B 19 08            [ 1]  140 	adc	a, (0x08, sp)
      00008D 6B 13            [ 1]  141 	ld	(0x13, sp), a
      00008F 7B 1A            [ 1]  142 	ld	a, (0x1a, sp)
      000091 19 07            [ 1]  143 	adc	a, (0x07, sp)
      000093 6B 12            [ 1]  144 	ld	(0x12, sp), a
      000095 84               [ 1]  145 	pop	a
      000096 17 0C            [ 2]  146 	ldw	(0x0c, sp), y
      000098 1F 08            [ 2]  147 	ldw	(0x08, sp), x
      00009A 16 15            [ 2]  148 	ldw	y, (0x15, sp)
      00009C 17 0A            [ 2]  149 	ldw	(0x0a, sp), y
      00009E 16 11            [ 2]  150 	ldw	y, (0x11, sp)
      0000A0 17 06            [ 2]  151 	ldw	(0x06, sp), y
                                    152 ;	../_mullonglong.c: 44: for(j = 0; (i + j) < sizeof (long long); j++)
      0000A2 4C               [ 1]  153 	inc	a
      0000A3 CCr00r23         [ 2]  154 	jp	00104$
      0000A6                        155 00107$:
                                    156 ;	../_mullonglong.c: 42: for (i = 0; i < sizeof (long long); i++)
      0000A6 0C 01            [ 1]  157 	inc	(0x01, sp)
      0000A8 7B 01            [ 1]  158 	ld	a, (0x01, sp)
      0000AA A1 08            [ 1]  159 	cp	a, #0x08
      0000AC 24 03            [ 1]  160 	jrnc	00131$
      0000AE CCr00r19         [ 2]  161 	jp	00111$
      0000B1                        162 00131$:
                                    163 ;	../_mullonglong.c: 48: return(ret);
      0000B1 1E 27            [ 2]  164 	ldw	x, (0x27, sp)
      0000B3 16 0C            [ 2]  165 	ldw	y, (0x0c, sp)
      0000B5 EF 06            [ 2]  166 	ldw	(#6, x), y
      0000B7 16 0A            [ 2]  167 	ldw	y, (0x0a, sp)
      0000B9 EF 04            [ 2]  168 	ldw	(#4, x), y
      0000BB 16 08            [ 2]  169 	ldw	y, (0x08, sp)
      0000BD EF 02            [ 2]  170 	ldw	(#2, x), y
      0000BF 16 06            [ 2]  171 	ldw	y, (0x06, sp)
      0000C1 FF               [ 2]  172 	ldw	(x), y
      0000C2 5B 24            [ 2]  173 	addw	sp, #36
      0000C4 81               [ 4]  174 	ret
                                    175 	.area CODE
                                    176 	.area INITIALIZER
                                    177 	.area CABS (ABS)
