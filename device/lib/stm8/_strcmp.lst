                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:51 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _strcmp
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _strcmp
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; absolute external ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area DABS (ABS)
                                     24 ;--------------------------------------------------------
                                     25 ; global & static initialisations
                                     26 ;--------------------------------------------------------
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area GSINIT
                                     31 ;--------------------------------------------------------
                                     32 ; Home
                                     33 ;--------------------------------------------------------
                                     34 	.area HOME
                                     35 	.area HOME
                                     36 ;--------------------------------------------------------
                                     37 ; code
                                     38 ;--------------------------------------------------------
                                     39 	.area CODE
                                     40 ;	../_strcmp.c: 34: int strcmp (
                                     41 ;	-----------------------------------------
                                     42 ;	 function strcmp
                                     43 ;	-----------------------------------------
      000000                         44 _strcmp:
      000000 52 0B            [ 2]   45 	sub	sp, #11
                                     46 ;	../_strcmp.c: 43: const char * src = asrc;
      000002 16 0E            [ 2]   47 	ldw	y, (0x0e, sp)
      000004 17 03            [ 2]   48 	ldw	(0x03, sp), y
                                     49 ;	../_strcmp.c: 44: const char * dst = adst;
      000006 16 10            [ 2]   50 	ldw	y, (0x10, sp)
      000008 17 01            [ 2]   51 	ldw	(0x01, sp), y
                                     52 ;	../_strcmp.c: 46: while( ! (*src - *dst) && *dst)
      00000A                         53 00102$:
      00000A 1E 03            [ 2]   54 	ldw	x, (0x03, sp)
      00000C F6               [ 1]   55 	ld	a, (x)
      00000D 97               [ 1]   56 	ld	xl, a
      00000E 9F               [ 1]   57 	ld	a, xl
      00000F 49               [ 1]   58 	rlc	a
      000010 4F               [ 1]   59 	clr	a
      000011 A2 00            [ 1]   60 	sbc	a, #0x00
      000013 95               [ 1]   61 	ld	xh, a
      000014 16 01            [ 2]   62 	ldw	y, (0x01, sp)
      000016 90 F6            [ 1]   63 	ld	a, (y)
      000018 6B 0B            [ 1]   64 	ld	(0x0b, sp), a
      00001A 7B 0B            [ 1]   65 	ld	a, (0x0b, sp)
      00001C 6B 08            [ 1]   66 	ld	(0x08, sp), a
      00001E 7B 08            [ 1]   67 	ld	a, (0x08, sp)
      000020 49               [ 1]   68 	rlc	a
      000021 4F               [ 1]   69 	clr	a
      000022 A2 00            [ 1]   70 	sbc	a, #0x00
      000024 6B 07            [ 1]   71 	ld	(0x07, sp), a
      000026 72 F0 07         [ 2]   72 	subw	x, (0x07, sp)
      000029 1F 05            [ 2]   73 	ldw	(0x05, sp), x
      00002B 1E 05            [ 2]   74 	ldw	x, (0x05, sp)
      00002D 26 14            [ 1]   75 	jrne	00104$
      00002F 0D 0B            [ 1]   76 	tnz	(0x0b, sp)
      000031 27 10            [ 1]   77 	jreq	00104$
                                     78 ;	../_strcmp.c: 47: ++src, ++dst;
      000033 1E 03            [ 2]   79 	ldw	x, (0x03, sp)
      000035 5C               [ 2]   80 	incw	x
      000036 1F 09            [ 2]   81 	ldw	(0x09, sp), x
      000038 16 09            [ 2]   82 	ldw	y, (0x09, sp)
      00003A 17 03            [ 2]   83 	ldw	(0x03, sp), y
      00003C 1E 01            [ 2]   84 	ldw	x, (0x01, sp)
      00003E 5C               [ 2]   85 	incw	x
      00003F 1F 01            [ 2]   86 	ldw	(0x01, sp), x
      000041 20 C7            [ 2]   87 	jra	00102$
      000043                         88 00104$:
                                     89 ;	../_strcmp.c: 49: return *src - *dst;
      000043 1E 05            [ 2]   90 	ldw	x, (0x05, sp)
      000045 5B 0B            [ 2]   91 	addw	sp, #11
      000047 81               [ 4]   92 	ret
                                     93 	.area CODE
                                     94 	.area INITIALIZER
                                     95 	.area CABS (ABS)
