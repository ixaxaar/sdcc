                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:50 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _strchr
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _strchr
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; absolute external ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area DABS (ABS)
                                     24 ;--------------------------------------------------------
                                     25 ; global & static initialisations
                                     26 ;--------------------------------------------------------
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area GSINIT
                                     31 ;--------------------------------------------------------
                                     32 ; Home
                                     33 ;--------------------------------------------------------
                                     34 	.area HOME
                                     35 	.area HOME
                                     36 ;--------------------------------------------------------
                                     37 ; code
                                     38 ;--------------------------------------------------------
                                     39 	.area CODE
                                     40 ;	../_strchr.c: 39: char * strchr (
                                     41 ;	-----------------------------------------
                                     42 ;	 function strchr
                                     43 ;	-----------------------------------------
      000000                         44 _strchr:
      000000 52 03            [ 2]   45 	sub	sp, #3
                                     46 ;	../_strchr.c: 45: while (*string && *string != ch)
      000002 1E 06            [ 2]   47 	ldw	x, (0x06, sp)
      000004                         48 00102$:
      000004 F6               [ 1]   49 	ld	a, (x)
      000005 6B 03            [ 1]   50 	ld	(0x03, sp), a
      000007 7B 03            [ 1]   51 	ld	a, (0x03, sp)
      000009 6B 02            [ 1]   52 	ld	(0x02, sp), a
      00000B 7B 02            [ 1]   53 	ld	a, (0x02, sp)
      00000D 49               [ 1]   54 	rlc	a
      00000E 4F               [ 1]   55 	clr	a
      00000F A2 00            [ 1]   56 	sbc	a, #0x00
      000011 6B 01            [ 1]   57 	ld	(0x01, sp), a
      000013 89               [ 2]   58 	pushw	x
      000014 1E 03            [ 2]   59 	ldw	x, (0x03, sp)
      000016 13 0A            [ 2]   60 	cpw	x, (0x0a, sp)
      000018 85               [ 2]   61 	popw	x
      000019 26 04            [ 1]   62 	jrne	00127$
      00001B A6 01            [ 1]   63 	ld	a, #0x01
      00001D 20 01            [ 2]   64 	jra	00128$
      00001F                         65 00127$:
      00001F 4F               [ 1]   66 	clr	a
      000020                         67 00128$:
      000020 0D 03            [ 1]   68 	tnz	(0x03, sp)
      000022 27 06            [ 1]   69 	jreq	00104$
      000024 4D               [ 1]   70 	tnz	a
      000025 26 03            [ 1]   71 	jrne	00104$
                                     72 ;	../_strchr.c: 46: string++;
      000027 5C               [ 2]   73 	incw	x
      000028 20 DA            [ 2]   74 	jra	00102$
      00002A                         75 00104$:
                                     76 ;	../_strchr.c: 48: if (*string == ch)
      00002A 4D               [ 1]   77 	tnz	a
                                     78 ;	../_strchr.c: 49: return(string);
      00002B 26 01            [ 1]   79 	jrne	00107$
                                     80 ;	../_strchr.c: 50: return ( NULL );
      00002D 5F               [ 1]   81 	clrw	x
      00002E                         82 00107$:
      00002E 5B 03            [ 2]   83 	addw	sp, #3
      000030 81               [ 4]   84 	ret
                                     85 	.area CODE
                                     86 	.area INITIALIZER
                                     87 	.area CABS (ABS)
