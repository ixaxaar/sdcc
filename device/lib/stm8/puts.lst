                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:58 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module puts
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _puts
                                     12 	.globl _putchar
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 ;--------------------------------------------------------
                                     26 ; global & static initialisations
                                     27 ;--------------------------------------------------------
                                     28 	.area HOME
                                     29 	.area GSINIT
                                     30 	.area GSFINAL
                                     31 	.area GSINIT
                                     32 ;--------------------------------------------------------
                                     33 ; Home
                                     34 ;--------------------------------------------------------
                                     35 	.area HOME
                                     36 	.area HOME
                                     37 ;--------------------------------------------------------
                                     38 ; code
                                     39 ;--------------------------------------------------------
                                     40 	.area CODE
                                     41 ;	../puts.c: 31: int puts (char *s)
                                     42 ;	-----------------------------------------
                                     43 ;	 function puts
                                     44 ;	-----------------------------------------
      000000                         45 _puts:
      000000 52 04            [ 2]   46 	sub	sp, #4
                                     47 ;	../puts.c: 34: while (*s){
      000002 16 07            [ 2]   48 	ldw	y, (0x07, sp)
      000004 17 03            [ 2]   49 	ldw	(0x03, sp), y
      000006 5F               [ 1]   50 	clrw	x
      000007                         51 00101$:
      000007 16 03            [ 2]   52 	ldw	y, (0x03, sp)
      000009 90 F6            [ 1]   53 	ld	a, (y)
                                     54 ;	../puts.c: 36: i++;
      00000B 5C               [ 2]   55 	incw	x
      00000C 1F 01            [ 2]   56 	ldw	(0x01, sp), x
                                     57 ;	../puts.c: 34: while (*s){
      00000E 4D               [ 1]   58 	tnz	a
      00000F 27 0E            [ 1]   59 	jreq	00103$
                                     60 ;	../puts.c: 35: putchar(*s++);
      000011 1E 03            [ 2]   61 	ldw	x, (0x03, sp)
      000013 5C               [ 2]   62 	incw	x
      000014 1F 03            [ 2]   63 	ldw	(0x03, sp), x
      000016 88               [ 1]   64 	push	a
      000017 CDr00r00         [ 4]   65 	call	_putchar
      00001A 84               [ 1]   66 	pop	a
                                     67 ;	../puts.c: 36: i++;
      00001B 1E 01            [ 2]   68 	ldw	x, (0x01, sp)
      00001D 20 E8            [ 2]   69 	jra	00101$
      00001F                         70 00103$:
                                     71 ;	../puts.c: 38: putchar('\n');
      00001F 4B 0A            [ 1]   72 	push	#0x0a
      000021 CDr00r00         [ 4]   73 	call	_putchar
      000024 84               [ 1]   74 	pop	a
                                     75 ;	../puts.c: 39: return i+1;
      000025 1E 01            [ 2]   76 	ldw	x, (0x01, sp)
      000027 5B 04            [ 2]   77 	addw	sp, #4
      000029 81               [ 4]   78 	ret
                                     79 	.area CODE
                                     80 	.area INITIALIZER
                                     81 	.area CABS (ABS)
