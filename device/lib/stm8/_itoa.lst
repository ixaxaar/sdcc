                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:29:00 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _itoa
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl __itoa
                                     12 	.globl __uitoa
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 ;--------------------------------------------------------
                                     26 ; global & static initialisations
                                     27 ;--------------------------------------------------------
                                     28 	.area HOME
                                     29 	.area GSINIT
                                     30 	.area GSFINAL
                                     31 	.area GSINIT
                                     32 ;--------------------------------------------------------
                                     33 ; Home
                                     34 ;--------------------------------------------------------
                                     35 	.area HOME
                                     36 	.area HOME
                                     37 ;--------------------------------------------------------
                                     38 ; code
                                     39 ;--------------------------------------------------------
                                     40 	.area CODE
                                     41 ;	../_itoa.c: 40: void _uitoa(unsigned int value, char* string, unsigned char radix)
                                     42 ;	-----------------------------------------
                                     43 ;	 function _uitoa
                                     44 ;	-----------------------------------------
      000000                         45 __uitoa:
      000000 52 08            [ 2]   46 	sub	sp, #8
                                     47 ;	../_itoa.c: 45: do {
      000002 0F 03            [ 1]   48 	clr	(0x03, sp)
      000004                         49 00103$:
                                     50 ;	../_itoa.c: 46: string[index] = '0' + (value % radix);
      000004 5F               [ 1]   51 	clrw	x
      000005 7B 03            [ 1]   52 	ld	a, (0x03, sp)
      000007 97               [ 1]   53 	ld	xl, a
      000008 72 FB 0D         [ 2]   54 	addw	x, (0x0d, sp)
      00000B 7B 0F            [ 1]   55 	ld	a, (0x0f, sp)
      00000D 6B 08            [ 1]   56 	ld	(0x08, sp), a
      00000F 0F 07            [ 1]   57 	clr	(0x07, sp)
      000011 89               [ 2]   58 	pushw	x
      000012 1E 0D            [ 2]   59 	ldw	x, (0x0d, sp)
      000014 16 09            [ 2]   60 	ldw	y, (0x09, sp)
      000016 65               [ 2]   61 	divw	x, y
      000017 85               [ 2]   62 	popw	x
      000018 90 9F            [ 1]   63 	ld	a, yl
      00001A AB 30            [ 1]   64 	add	a, #0x30
      00001C F7               [ 1]   65 	ld	(x), a
                                     66 ;	../_itoa.c: 47: if (string[index] > '9')
      00001D A1 39            [ 1]   67 	cp	a, #0x39
      00001F 2D 04            [ 1]   68 	jrsle	00102$
                                     69 ;	../_itoa.c: 48: string[index] += 'A' - '9' - 1;
      000021 F6               [ 1]   70 	ld	a, (x)
      000022 AB 07            [ 1]   71 	add	a, #0x07
      000024 F7               [ 1]   72 	ld	(x), a
      000025                         73 00102$:
                                     74 ;	../_itoa.c: 49: value /= radix;
      000025 1E 0B            [ 2]   75 	ldw	x, (0x0b, sp)
      000027 16 07            [ 2]   76 	ldw	y, (0x07, sp)
      000029 65               [ 2]   77 	divw	x, y
      00002A 1F 0B            [ 2]   78 	ldw	(0x0b, sp), x
                                     79 ;	../_itoa.c: 50: ++index;
      00002C 0C 03            [ 1]   80 	inc	(0x03, sp)
                                     81 ;	../_itoa.c: 51: } while (value != 0);
      00002E 1E 0B            [ 2]   82 	ldw	x, (0x0b, sp)
      000030 26 D2            [ 1]   83 	jrne	00103$
                                     84 ;	../_itoa.c: 54: string[index--] = '\0';
      000032 7B 03            [ 1]   85 	ld	a, (0x03, sp)
      000034 4A               [ 1]   86 	dec	a
      000035 6B 05            [ 1]   87 	ld	(0x05, sp), a
      000037 7B 05            [ 1]   88 	ld	a, (0x05, sp)
      000039 6B 04            [ 1]   89 	ld	(0x04, sp), a
      00003B 5F               [ 1]   90 	clrw	x
      00003C 7B 03            [ 1]   91 	ld	a, (0x03, sp)
      00003E 97               [ 1]   92 	ld	xl, a
      00003F 72 FB 0D         [ 2]   93 	addw	x, (0x0d, sp)
      000042 7F               [ 1]   94 	clr	(x)
                                     95 ;	../_itoa.c: 57: while (index > i) {
      000043 0F 02            [ 1]   96 	clr	(0x02, sp)
      000045 7B 04            [ 1]   97 	ld	a, (0x04, sp)
      000047 6B 06            [ 1]   98 	ld	(0x06, sp), a
      000049                         99 00106$:
      000049 7B 06            [ 1]  100 	ld	a, (0x06, sp)
      00004B 11 02            [ 1]  101 	cp	a, (0x02, sp)
      00004D 2D 20            [ 1]  102 	jrsle	00109$
                                    103 ;	../_itoa.c: 58: char tmp = string[i];
      00004F 5F               [ 1]  104 	clrw	x
      000050 7B 02            [ 1]  105 	ld	a, (0x02, sp)
      000052 97               [ 1]  106 	ld	xl, a
      000053 72 FB 0D         [ 2]  107 	addw	x, (0x0d, sp)
      000056 F6               [ 1]  108 	ld	a, (x)
      000057 6B 01            [ 1]  109 	ld	(0x01, sp), a
                                    110 ;	../_itoa.c: 59: string[i] = string[index];
      000059 90 5F            [ 1]  111 	clrw	y
      00005B 7B 06            [ 1]  112 	ld	a, (0x06, sp)
      00005D 90 97            [ 1]  113 	ld	yl, a
      00005F 72 F9 0D         [ 2]  114 	addw	y, (0x0d, sp)
      000062 90 F6            [ 1]  115 	ld	a, (y)
      000064 F7               [ 1]  116 	ld	(x), a
                                    117 ;	../_itoa.c: 60: string[index] = tmp;
      000065 7B 01            [ 1]  118 	ld	a, (0x01, sp)
      000067 90 F7            [ 1]  119 	ld	(y), a
                                    120 ;	../_itoa.c: 61: ++i;
      000069 0C 02            [ 1]  121 	inc	(0x02, sp)
                                    122 ;	../_itoa.c: 62: --index;
      00006B 0A 06            [ 1]  123 	dec	(0x06, sp)
      00006D 20 DA            [ 2]  124 	jra	00106$
      00006F                        125 00109$:
      00006F 5B 08            [ 2]  126 	addw	sp, #8
      000071 81               [ 4]  127 	ret
                                    128 ;	../_itoa.c: 66: void _itoa(int value, char* string, unsigned char radix)
                                    129 ;	-----------------------------------------
                                    130 ;	 function _itoa
                                    131 ;	-----------------------------------------
      000072                        132 __itoa:
                                    133 ;	../_itoa.c: 68: if (value < 0 && radix == 10) {
      000072 1E 03            [ 2]  134 	ldw	x, (0x03, sp)
      000074 A3 00 00         [ 2]  135 	cpw	x, #0x0000
      000077 2E 13            [ 1]  136 	jrsge	00102$
      000079 7B 07            [ 1]  137 	ld	a, (0x07, sp)
      00007B A1 0A            [ 1]  138 	cp	a, #0x0a
      00007D 26 0D            [ 1]  139 	jrne	00102$
                                    140 ;	../_itoa.c: 69: *string++ = '-';
      00007F 1E 05            [ 2]  141 	ldw	x, (0x05, sp)
      000081 A6 2D            [ 1]  142 	ld	a, #0x2d
      000083 F7               [ 1]  143 	ld	(x), a
      000084 5C               [ 2]  144 	incw	x
      000085 1F 05            [ 2]  145 	ldw	(0x05, sp), x
                                    146 ;	../_itoa.c: 70: value = -value;
      000087 1E 03            [ 2]  147 	ldw	x, (0x03, sp)
      000089 50               [ 2]  148 	negw	x
      00008A 1F 03            [ 2]  149 	ldw	(0x03, sp), x
      00008C                        150 00102$:
                                    151 ;	../_itoa.c: 72: _uitoa(value, string, radix);
      00008C 7B 07            [ 1]  152 	ld	a, (0x07, sp)
      00008E 88               [ 1]  153 	push	a
      00008F 1E 06            [ 2]  154 	ldw	x, (0x06, sp)
      000091 89               [ 2]  155 	pushw	x
      000092 1E 06            [ 2]  156 	ldw	x, (0x06, sp)
      000094 89               [ 2]  157 	pushw	x
      000095 CDr00r00         [ 4]  158 	call	__uitoa
      000098 5B 05            [ 2]  159 	addw	sp, #5
      00009A 81               [ 4]  160 	ret
                                    161 	.area CODE
                                    162 	.area INITIALIZER
                                    163 	.area CABS (ABS)
