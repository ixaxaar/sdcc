                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:47 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module ceilf
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _ceilf
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; absolute external ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area DABS (ABS)
                                     24 ;--------------------------------------------------------
                                     25 ; global & static initialisations
                                     26 ;--------------------------------------------------------
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area GSINIT
                                     31 ;--------------------------------------------------------
                                     32 ; Home
                                     33 ;--------------------------------------------------------
                                     34 	.area HOME
                                     35 	.area HOME
                                     36 ;--------------------------------------------------------
                                     37 ; code
                                     38 ;--------------------------------------------------------
                                     39 	.area CODE
                                     40 ;	../ceilf.c: 33: float ceilf(float x) _FLOAT_FUNC_REENTRANT
                                     41 ;	-----------------------------------------
                                     42 ;	 function ceilf
                                     43 ;	-----------------------------------------
      000000                         44 _ceilf:
      000000 52 0C            [ 2]   45 	sub	sp, #12
                                     46 ;	../ceilf.c: 36: r=x;
      000002 1E 11            [ 2]   47 	ldw	x, (0x11, sp)
      000004 89               [ 2]   48 	pushw	x
      000005 1E 11            [ 2]   49 	ldw	x, (0x11, sp)
      000007 89               [ 2]   50 	pushw	x
      000008 CDr00r00         [ 4]   51 	call	___fs2slong
      00000B 5B 04            [ 2]   52 	addw	sp, #4
      00000D 1F 03            [ 2]   53 	ldw	(0x03, sp), x
      00000F 17 01            [ 2]   54 	ldw	(0x01, sp), y
                                     55 ;	../ceilf.c: 38: return r;
      000011 1E 03            [ 2]   56 	ldw	x, (0x03, sp)
      000013 89               [ 2]   57 	pushw	x
      000014 1E 03            [ 2]   58 	ldw	x, (0x03, sp)
      000016 89               [ 2]   59 	pushw	x
      000017 CDr00r00         [ 4]   60 	call	___slong2fs
      00001A 5B 04            [ 2]   61 	addw	sp, #4
      00001C 1F 07            [ 2]   62 	ldw	(0x07, sp), x
      00001E 17 05            [ 2]   63 	ldw	(0x05, sp), y
                                     64 ;	../ceilf.c: 37: if (r<0)
      000020 1E 03            [ 2]   65 	ldw	x, (0x03, sp)
      000022 A3 00 00         [ 2]   66 	cpw	x, #0x0000
      000025 7B 02            [ 1]   67 	ld	a, (0x02, sp)
      000027 A2 00            [ 1]   68 	sbc	a, #0x00
      000029 7B 01            [ 1]   69 	ld	a, (0x01, sp)
      00002B A2 00            [ 1]   70 	sbc	a, #0x00
      00002D 2E 06            [ 1]   71 	jrsge	00102$
                                     72 ;	../ceilf.c: 38: return r;
      00002F 1E 07            [ 2]   73 	ldw	x, (0x07, sp)
      000031 16 05            [ 2]   74 	ldw	y, (0x05, sp)
      000033 20 3A            [ 2]   75 	jra	00104$
      000035                         76 00102$:
                                     77 ;	../ceilf.c: 40: return (r+((r<x)?1:0));
      000035 1E 11            [ 2]   78 	ldw	x, (0x11, sp)
      000037 89               [ 2]   79 	pushw	x
      000038 1E 11            [ 2]   80 	ldw	x, (0x11, sp)
      00003A 89               [ 2]   81 	pushw	x
      00003B 1E 0B            [ 2]   82 	ldw	x, (0x0b, sp)
      00003D 89               [ 2]   83 	pushw	x
      00003E 1E 0B            [ 2]   84 	ldw	x, (0x0b, sp)
      000040 89               [ 2]   85 	pushw	x
      000041 CDr00r00         [ 4]   86 	call	___fslt
      000044 5B 08            [ 2]   87 	addw	sp, #8
      000046 4D               [ 1]   88 	tnz	a
      000047 27 04            [ 1]   89 	jreq	00106$
      000049 A6 01            [ 1]   90 	ld	a, #0x01
      00004B 20 01            [ 2]   91 	jra	00107$
      00004D                         92 00106$:
      00004D 4F               [ 1]   93 	clr	a
      00004E                         94 00107$:
      00004E 90 97            [ 1]   95 	ld	yl, a
      000050 4F               [ 1]   96 	clr	a
      000051 5F               [ 1]   97 	clrw	x
      000052 4D               [ 1]   98 	tnz	a
      000053 2A 01            [ 1]   99 	jrpl	00118$
      000055 5A               [ 2]  100 	decw	x
      000056                        101 00118$:
      000056 90 95            [ 1]  102 	ld	yh, a
      000058 72 F9 03         [ 2]  103 	addw	y, (0x03, sp)
      00005B 9F               [ 1]  104 	ld	a, xl
      00005C 19 02            [ 1]  105 	adc	a, (0x02, sp)
      00005E 97               [ 1]  106 	ld	xl, a
      00005F 9E               [ 1]  107 	ld	a, xh
      000060 19 01            [ 1]  108 	adc	a, (0x01, sp)
      000062 95               [ 1]  109 	ld	xh, a
      000063 90 89            [ 2]  110 	pushw	y
      000065 89               [ 2]  111 	pushw	x
      000066 CDr00r00         [ 4]  112 	call	___slong2fs
      000069 5B 04            [ 2]  113 	addw	sp, #4
      00006B 1F 0B            [ 2]  114 	ldw	(0x0b, sp), x
      00006D 1E 0B            [ 2]  115 	ldw	x, (0x0b, sp)
      00006F                        116 00104$:
      00006F 5B 0C            [ 2]  117 	addw	sp, #12
      000071 81               [ 4]  118 	ret
                                    119 	.area CODE
                                    120 	.area INITIALIZER
                                    121 	.area CABS (ABS)
