                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:51 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _strrchr
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _strrchr
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; absolute external ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area DABS (ABS)
                                     24 ;--------------------------------------------------------
                                     25 ; global & static initialisations
                                     26 ;--------------------------------------------------------
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area GSINIT
                                     31 ;--------------------------------------------------------
                                     32 ; Home
                                     33 ;--------------------------------------------------------
                                     34 	.area HOME
                                     35 	.area HOME
                                     36 ;--------------------------------------------------------
                                     37 ; code
                                     38 ;--------------------------------------------------------
                                     39 	.area CODE
                                     40 ;	../_strrchr.c: 37: char * strrchr (
                                     41 ;	-----------------------------------------
                                     42 ;	 function strrchr
                                     43 ;	-----------------------------------------
      000000                         44 _strrchr:
      000000 52 04            [ 2]   45 	sub	sp, #4
                                     46 ;	../_strrchr.c: 43: const char * start = string;
      000002 16 07            [ 2]   47 	ldw	y, (0x07, sp)
      000004 17 01            [ 2]   48 	ldw	(0x01, sp), y
                                     49 ;	../_strrchr.c: 45: while (*string++)                       /* find end of string */
      000006 1E 01            [ 2]   50 	ldw	x, (0x01, sp)
      000008                         51 00101$:
      000008 F6               [ 1]   52 	ld	a, (x)
      000009 5C               [ 2]   53 	incw	x
      00000A 4D               [ 1]   54 	tnz	a
      00000B 26 FB            [ 1]   55 	jrne	00101$
                                     56 ;	../_strrchr.c: 48: while (--string != start && *string != ch)
      00000D 1F 03            [ 2]   57 	ldw	(0x03, sp), x
      00000F                         58 00105$:
      00000F 1E 03            [ 2]   59 	ldw	x, (0x03, sp)
      000011 5A               [ 2]   60 	decw	x
      000012 1F 03            [ 2]   61 	ldw	(0x03, sp), x
      000014 1E 03            [ 2]   62 	ldw	x, (0x03, sp)
      000016 F6               [ 1]   63 	ld	a, (x)
      000017 97               [ 1]   64 	ld	xl, a
      000018 9F               [ 1]   65 	ld	a, xl
      000019 49               [ 1]   66 	rlc	a
      00001A 4F               [ 1]   67 	clr	a
      00001B A2 00            [ 1]   68 	sbc	a, #0x00
      00001D 95               [ 1]   69 	ld	xh, a
      00001E 13 09            [ 2]   70 	cpw	x, (0x09, sp)
      000020 26 04            [ 1]   71 	jrne	00135$
      000022 A6 01            [ 1]   72 	ld	a, #0x01
      000024 20 01            [ 2]   73 	jra	00136$
      000026                         74 00135$:
      000026 4F               [ 1]   75 	clr	a
      000027                         76 00136$:
      000027 1E 03            [ 2]   77 	ldw	x, (0x03, sp)
      000029 13 01            [ 2]   78 	cpw	x, (0x01, sp)
      00002B 27 03            [ 1]   79 	jreq	00107$
      00002D 4D               [ 1]   80 	tnz	a
      00002E 27 DF            [ 1]   81 	jreq	00105$
      000030                         82 00107$:
                                     83 ;	../_strrchr.c: 51: if (*string == ch)                /* char found ? */
      000030 4D               [ 1]   84 	tnz	a
      000031 27 04            [ 1]   85 	jreq	00109$
                                     86 ;	../_strrchr.c: 52: return( (char *)string );
      000033 1E 03            [ 2]   87 	ldw	x, (0x03, sp)
      000035 20 01            [ 2]   88 	jra	00110$
      000037                         89 00109$:
                                     90 ;	../_strrchr.c: 54: return (NULL) ;
      000037 5F               [ 1]   91 	clrw	x
      000038                         92 00110$:
      000038 5B 04            [ 2]   93 	addw	sp, #4
      00003A 81               [ 4]   94 	ret
                                     95 	.area CODE
                                     96 	.area INITIALIZER
                                     97 	.area CABS (ABS)
