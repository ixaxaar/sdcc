                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:42 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module cotf
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _tancotf
                                     12 	.globl _fabsf
                                     13 	.globl _cotf
                                     14 ;--------------------------------------------------------
                                     15 ; ram data
                                     16 ;--------------------------------------------------------
                                     17 	.area DATA
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area INITIALIZED
                                     22 ;--------------------------------------------------------
                                     23 ; absolute external ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area DABS (ABS)
                                     26 ;--------------------------------------------------------
                                     27 ; global & static initialisations
                                     28 ;--------------------------------------------------------
                                     29 	.area HOME
                                     30 	.area GSINIT
                                     31 	.area GSFINAL
                                     32 	.area GSINIT
                                     33 ;--------------------------------------------------------
                                     34 ; Home
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area HOME
                                     38 ;--------------------------------------------------------
                                     39 ; code
                                     40 ;--------------------------------------------------------
                                     41 	.area CODE
                                     42 ;	../cotf.c: 37: float cotf(const float x) _FLOAT_FUNC_REENTRANT
                                     43 ;	-----------------------------------------
                                     44 ;	 function cotf
                                     45 ;	-----------------------------------------
      000000                         46 _cotf:
                                     47 ;	../cotf.c: 41: y=fabsf(x);
      000000 1E 05            [ 2]   48 	ldw	x, (0x05, sp)
      000002 89               [ 2]   49 	pushw	x
      000003 1E 05            [ 2]   50 	ldw	x, (0x05, sp)
      000005 89               [ 2]   51 	pushw	x
      000006 CDr00r00         [ 4]   52 	call	_fabsf
      000009 5B 04            [ 2]   53 	addw	sp, #4
                                     54 ;	../cotf.c: 42: if (y<1.0E-30) //This one requires more thinking...
      00000B 4B 60            [ 1]   55 	push	#0x60
      00000D 4B 42            [ 1]   56 	push	#0x42
      00000F 4B A2            [ 1]   57 	push	#0xa2
      000011 4B 0D            [ 1]   58 	push	#0x0d
      000013 89               [ 2]   59 	pushw	x
      000014 90 89            [ 2]   60 	pushw	y
      000016 CDr00r00         [ 4]   61 	call	___fslt
      000019 5B 08            [ 2]   62 	addw	sp, #8
      00001B 4D               [ 1]   63 	tnz	a
      00001C 27 2C            [ 1]   64 	jreq	00105$
                                     65 ;	../cotf.c: 44: errno = ERANGE;
      00001E 35 22u00u01      [ 1]   66 	mov	_errno+1, #0x22
      000022 72 5Fu00u00      [ 1]   67 	clr	_errno+0
                                     68 ;	../cotf.c: 45: if (x<0.0)
      000026 5F               [ 1]   69 	clrw	x
      000027 89               [ 2]   70 	pushw	x
      000028 5F               [ 1]   71 	clrw	x
      000029 89               [ 2]   72 	pushw	x
      00002A 1E 09            [ 2]   73 	ldw	x, (0x09, sp)
      00002C 89               [ 2]   74 	pushw	x
      00002D 1E 09            [ 2]   75 	ldw	x, (0x09, sp)
      00002F 89               [ 2]   76 	pushw	x
      000030 CDr00r00         [ 4]   77 	call	___fslt
      000033 5B 08            [ 2]   78 	addw	sp, #8
      000035 4D               [ 1]   79 	tnz	a
      000036 27 09            [ 1]   80 	jreq	00102$
                                     81 ;	../cotf.c: 46: return -HUGE_VALF;
      000038 AE FF FF         [ 2]   82 	ldw	x, #0xffff
      00003B 90 AE FF 7F      [ 2]   83 	ldw	y, #0xff7f
      00003F 20 16            [ 2]   84 	jra	00106$
      000041                         85 00102$:
                                     86 ;	../cotf.c: 48: return +HUGE_VALF;
      000041 AE FF FF         [ 2]   87 	ldw	x, #0xffff
      000044 90 AE 7F 7F      [ 2]   88 	ldw	y, #0x7f7f
      000048 20 0D            [ 2]   89 	jra	00106$
      00004A                         90 00105$:
                                     91 ;	../cotf.c: 50: return tancotf(x, 1);
      00004A 4B 01            [ 1]   92 	push	#0x01
      00004C 1E 06            [ 2]   93 	ldw	x, (0x06, sp)
      00004E 89               [ 2]   94 	pushw	x
      00004F 1E 06            [ 2]   95 	ldw	x, (0x06, sp)
      000051 89               [ 2]   96 	pushw	x
      000052 CDr00r00         [ 4]   97 	call	_tancotf
      000055 5B 05            [ 2]   98 	addw	sp, #5
      000057                         99 00106$:
      000057 81               [ 4]  100 	ret
                                    101 	.area CODE
                                    102 	.area INITIALIZER
                                    103 	.area CABS (ABS)
