                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:38 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _fsneq
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl ___fsneq
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; absolute external ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area DABS (ABS)
                                     24 ;--------------------------------------------------------
                                     25 ; global & static initialisations
                                     26 ;--------------------------------------------------------
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area GSINIT
                                     31 ;--------------------------------------------------------
                                     32 ; Home
                                     33 ;--------------------------------------------------------
                                     34 	.area HOME
                                     35 	.area HOME
                                     36 ;--------------------------------------------------------
                                     37 ; code
                                     38 ;--------------------------------------------------------
                                     39 	.area CODE
                                     40 ;	../_fsneq.c: 80: char __fsneq (float a1, float a2)
                                     41 ;	-----------------------------------------
                                     42 ;	 function __fsneq
                                     43 ;	-----------------------------------------
      000000                         44 ___fsneq:
      000000 52 18            [ 2]   45 	sub	sp, #24
                                     46 ;	../_fsneq.c: 84: fl1.f = a1;
      000002 96               [ 1]   47 	ldw	x, sp
      000003 1C 00 05         [ 2]   48 	addw	x, #5
      000006 16 1D            [ 2]   49 	ldw	y, (0x1d, sp)
      000008 EF 02            [ 2]   50 	ldw	(0x2, x), y
      00000A 16 1B            [ 2]   51 	ldw	y, (0x1b, sp)
      00000C FF               [ 2]   52 	ldw	(x), y
                                     53 ;	../_fsneq.c: 85: fl2.f = a2;
      00000D 96               [ 1]   54 	ldw	x, sp
      00000E 5C               [ 2]   55 	incw	x
      00000F 16 21            [ 2]   56 	ldw	y, (0x21, sp)
      000011 EF 02            [ 2]   57 	ldw	(0x2, x), y
      000013 16 1F            [ 2]   58 	ldw	y, (0x1f, sp)
      000015 FF               [ 2]   59 	ldw	(x), y
                                     60 ;	../_fsneq.c: 87: if (fl1.l == fl2.l)
      000016 96               [ 1]   61 	ldw	x, sp
      000017 1C 00 05         [ 2]   62 	addw	x, #5
      00001A E6 03            [ 1]   63 	ld	a, (0x3, x)
      00001C 6B 18            [ 1]   64 	ld	(0x18, sp), a
      00001E E6 02            [ 1]   65 	ld	a, (0x2, x)
      000020 6B 17            [ 1]   66 	ld	(0x17, sp), a
      000022 FE               [ 2]   67 	ldw	x, (x)
      000023 90 93            [ 1]   68 	ldw	y, x
      000025 96               [ 1]   69 	ldw	x, sp
      000026 5C               [ 2]   70 	incw	x
      000027 E6 03            [ 1]   71 	ld	a, (0x3, x)
      000029 6B 0C            [ 1]   72 	ld	(0x0c, sp), a
      00002B E6 02            [ 1]   73 	ld	a, (0x2, x)
      00002D 6B 0B            [ 1]   74 	ld	(0x0b, sp), a
      00002F FE               [ 2]   75 	ldw	x, (x)
      000030 1F 09            [ 2]   76 	ldw	(0x09, sp), x
      000032 1E 17            [ 2]   77 	ldw	x, (0x17, sp)
      000034 13 0B            [ 2]   78 	cpw	x, (0x0b, sp)
      000036 26 08            [ 1]   79 	jrne	00102$
      000038 93               [ 1]   80 	ldw	x, y
      000039 13 09            [ 2]   81 	cpw	x, (0x09, sp)
      00003B 26 03            [ 1]   82 	jrne	00102$
                                     83 ;	../_fsneq.c: 88: return (0);
      00003D 4F               [ 1]   84 	clr	a
      00003E 20 3C            [ 2]   85 	jra	00105$
      000040                         86 00102$:
                                     87 ;	../_fsneq.c: 89: if (((fl1.l | fl2.l) & 0x7FFFFFFF) == 0)
      000040 96               [ 1]   88 	ldw	x, sp
      000041 1C 00 05         [ 2]   89 	addw	x, #5
      000044 E6 03            [ 1]   90 	ld	a, (0x3, x)
      000046 90 97            [ 1]   91 	ld	yl, a
      000048 E6 02            [ 1]   92 	ld	a, (0x2, x)
      00004A 6B 0F            [ 1]   93 	ld	(0x0f, sp), a
      00004C FE               [ 2]   94 	ldw	x, (x)
      00004D 1F 0D            [ 2]   95 	ldw	(0x0d, sp), x
      00004F 96               [ 1]   96 	ldw	x, sp
      000050 5C               [ 2]   97 	incw	x
      000051 E6 03            [ 1]   98 	ld	a, (0x3, x)
      000053 6B 14            [ 1]   99 	ld	(0x14, sp), a
      000055 E6 02            [ 1]  100 	ld	a, (0x2, x)
      000057 FE               [ 2]  101 	ldw	x, (x)
      000058 1F 11            [ 2]  102 	ldw	(0x11, sp), x
      00005A 1A 0F            [ 1]  103 	or	a, (0x0f, sp)
      00005C 95               [ 1]  104 	ld	xh, a
      00005D 90 9F            [ 1]  105 	ld	a, yl
      00005F 1A 14            [ 1]  106 	or	a, (0x14, sp)
      000061 97               [ 1]  107 	ld	xl, a
      000062 7B 0E            [ 1]  108 	ld	a, (0x0e, sp)
      000064 1A 12            [ 1]  109 	or	a, (0x12, sp)
      000066 90 97            [ 1]  110 	ld	yl, a
      000068 7B 0D            [ 1]  111 	ld	a, (0x0d, sp)
      00006A 1A 11            [ 1]  112 	or	a, (0x11, sp)
      00006C A4 7F            [ 1]  113 	and	a, #0x7f
      00006E 90 95            [ 1]  114 	ld	yh, a
      000070 5D               [ 2]  115 	tnzw	x
      000071 26 07            [ 1]  116 	jrne	00104$
      000073 90 5D            [ 2]  117 	tnzw	y
      000075 26 03            [ 1]  118 	jrne	00104$
                                    119 ;	../_fsneq.c: 90: return (0);
      000077 4F               [ 1]  120 	clr	a
      000078 20 02            [ 2]  121 	jra	00105$
      00007A                        122 00104$:
                                    123 ;	../_fsneq.c: 91: return (1);
      00007A A6 01            [ 1]  124 	ld	a, #0x01
      00007C                        125 00105$:
      00007C 5B 18            [ 2]  126 	addw	sp, #24
      00007E 81               [ 4]  127 	ret
                                    128 	.area CODE
                                    129 	.area INITIALIZER
                                    130 	.area CABS (ABS)
