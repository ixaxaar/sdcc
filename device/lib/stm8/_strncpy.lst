                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:51 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _strncpy
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _strncpy
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; absolute external ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area DABS (ABS)
                                     24 ;--------------------------------------------------------
                                     25 ; global & static initialisations
                                     26 ;--------------------------------------------------------
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area GSINIT
                                     31 ;--------------------------------------------------------
                                     32 ; Home
                                     33 ;--------------------------------------------------------
                                     34 	.area HOME
                                     35 	.area HOME
                                     36 ;--------------------------------------------------------
                                     37 ; code
                                     38 ;--------------------------------------------------------
                                     39 	.area CODE
                                     40 ;	../_strncpy.c: 33: char *strncpy (
                                     41 ;	-----------------------------------------
                                     42 ;	 function strncpy
                                     43 ;	-----------------------------------------
      000000                         44 _strncpy:
      000000 52 0A            [ 2]   45 	sub	sp, #10
                                     46 ;	../_strncpy.c: 38: register char * d1 =  d;
      000002 16 0D            [ 2]   47 	ldw	y, (0x0d, sp)
      000004 17 01            [ 2]   48 	ldw	(0x01, sp), y
                                     49 ;	../_strncpy.c: 40: while ( n && *s )
      000006 16 11            [ 2]   50 	ldw	y, (0x11, sp)
      000008 17 05            [ 2]   51 	ldw	(0x05, sp), y
      00000A 16 0F            [ 2]   52 	ldw	y, (0x0f, sp)
      00000C 17 07            [ 2]   53 	ldw	(0x07, sp), y
      00000E 1E 01            [ 2]   54 	ldw	x, (0x01, sp)
      000010                         55 00102$:
      000010 16 05            [ 2]   56 	ldw	y, (0x05, sp)
      000012 27 17            [ 1]   57 	jreq	00114$
      000014 16 07            [ 2]   58 	ldw	y, (0x07, sp)
      000016 90 F6            [ 1]   59 	ld	a, (y)
      000018 4D               [ 1]   60 	tnz	a
      000019 27 10            [ 1]   61 	jreq	00114$
                                     62 ;	../_strncpy.c: 42: n-- ;
      00001B 16 05            [ 2]   63 	ldw	y, (0x05, sp)
      00001D 90 5A            [ 2]   64 	decw	y
      00001F 17 05            [ 2]   65 	ldw	(0x05, sp), y
                                     66 ;	../_strncpy.c: 43: *d++ = *s++ ;
      000021 16 07            [ 2]   67 	ldw	y, (0x07, sp)
      000023 90 5C            [ 2]   68 	incw	y
      000025 17 07            [ 2]   69 	ldw	(0x07, sp), y
      000027 F7               [ 1]   70 	ld	(x), a
      000028 5C               [ 2]   71 	incw	x
      000029 20 E5            [ 2]   72 	jra	00102$
                                     73 ;	../_strncpy.c: 45: while ( n-- )
      00002B                         74 00114$:
      00002B 16 05            [ 2]   75 	ldw	y, (0x05, sp)
      00002D 17 09            [ 2]   76 	ldw	(0x09, sp), y
      00002F                         77 00105$:
      00002F 16 09            [ 2]   78 	ldw	y, (0x09, sp)
      000031 17 03            [ 2]   79 	ldw	(0x03, sp), y
      000033 16 09            [ 2]   80 	ldw	y, (0x09, sp)
      000035 90 5A            [ 2]   81 	decw	y
      000037 17 09            [ 2]   82 	ldw	(0x09, sp), y
      000039 16 03            [ 2]   83 	ldw	y, (0x03, sp)
      00003B 27 04            [ 1]   84 	jreq	00107$
                                     85 ;	../_strncpy.c: 47: *d++ = '\0' ;
      00003D 7F               [ 1]   86 	clr	(x)
      00003E 5C               [ 2]   87 	incw	x
      00003F 20 EE            [ 2]   88 	jra	00105$
      000041                         89 00107$:
                                     90 ;	../_strncpy.c: 49: return d1;
      000041 1E 01            [ 2]   91 	ldw	x, (0x01, sp)
      000043 5B 0A            [ 2]   92 	addw	sp, #10
      000045 81               [ 4]   93 	ret
                                     94 	.area CODE
                                     95 	.area INITIALIZER
                                     96 	.area CABS (ABS)
