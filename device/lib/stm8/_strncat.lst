                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:51 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _strncat
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _strncat
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; absolute external ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area DABS (ABS)
                                     24 ;--------------------------------------------------------
                                     25 ; global & static initialisations
                                     26 ;--------------------------------------------------------
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area GSINIT
                                     31 ;--------------------------------------------------------
                                     32 ; Home
                                     33 ;--------------------------------------------------------
                                     34 	.area HOME
                                     35 	.area HOME
                                     36 ;--------------------------------------------------------
                                     37 ; code
                                     38 ;--------------------------------------------------------
                                     39 	.area CODE
                                     40 ;	../_strncat.c: 31: char * strncat (
                                     41 ;	-----------------------------------------
                                     42 ;	 function strncat
                                     43 ;	-----------------------------------------
      000000                         44 _strncat:
      000000 52 08            [ 2]   45 	sub	sp, #8
                                     46 ;	../_strncat.c: 37: char *start = front;
      000002 16 0B            [ 2]   47 	ldw	y, (0x0b, sp)
      000004 17 01            [ 2]   48 	ldw	(0x01, sp), y
                                     49 ;	../_strncat.c: 39: while (*front++);
      000006 1E 01            [ 2]   50 	ldw	x, (0x01, sp)
      000008                         51 00101$:
      000008 F6               [ 1]   52 	ld	a, (x)
      000009 5C               [ 2]   53 	incw	x
      00000A 4D               [ 1]   54 	tnz	a
      00000B 26 FB            [ 1]   55 	jrne	00101$
                                     56 ;	../_strncat.c: 41: front--;
      00000D 5A               [ 2]   57 	decw	x
      00000E 1F 0B            [ 2]   58 	ldw	(0x0b, sp), x
                                     59 ;	../_strncat.c: 43: while (count--)
      000010 16 0D            [ 2]   60 	ldw	y, (0x0d, sp)
      000012 17 03            [ 2]   61 	ldw	(0x03, sp), y
      000014 16 0B            [ 2]   62 	ldw	y, (0x0b, sp)
      000016 17 07            [ 2]   63 	ldw	(0x07, sp), y
      000018 16 0F            [ 2]   64 	ldw	y, (0x0f, sp)
      00001A 17 05            [ 2]   65 	ldw	(0x05, sp), y
      00001C                         66 00106$:
      00001C 16 05            [ 2]   67 	ldw	y, (0x05, sp)
      00001E 1E 05            [ 2]   68 	ldw	x, (0x05, sp)
      000020 5A               [ 2]   69 	decw	x
      000021 1F 05            [ 2]   70 	ldw	(0x05, sp), x
      000023 90 5D            [ 2]   71 	tnzw	y
      000025 27 1B            [ 1]   72 	jreq	00108$
                                     73 ;	../_strncat.c: 44: if (!(*front++ = *back++))
      000027 1E 03            [ 2]   74 	ldw	x, (0x03, sp)
      000029 F6               [ 1]   75 	ld	a, (x)
      00002A 1E 03            [ 2]   76 	ldw	x, (0x03, sp)
      00002C 5C               [ 2]   77 	incw	x
      00002D 1F 03            [ 2]   78 	ldw	(0x03, sp), x
      00002F 1E 07            [ 2]   79 	ldw	x, (0x07, sp)
      000031 F7               [ 1]   80 	ld	(x), a
      000032 1E 07            [ 2]   81 	ldw	x, (0x07, sp)
      000034 5C               [ 2]   82 	incw	x
      000035 1F 07            [ 2]   83 	ldw	(0x07, sp), x
      000037 16 07            [ 2]   84 	ldw	y, (0x07, sp)
      000039 17 0B            [ 2]   85 	ldw	(0x0b, sp), y
      00003B 4D               [ 1]   86 	tnz	a
      00003C 26 DE            [ 1]   87 	jrne	00106$
                                     88 ;	../_strncat.c: 45: return(start);
      00003E 1E 01            [ 2]   89 	ldw	x, (0x01, sp)
      000040 20 05            [ 2]   90 	jra	00109$
      000042                         91 00108$:
                                     92 ;	../_strncat.c: 47: *front = '\0';
      000042 1E 0B            [ 2]   93 	ldw	x, (0x0b, sp)
      000044 7F               [ 1]   94 	clr	(x)
                                     95 ;	../_strncat.c: 48: return(start);
      000045 1E 01            [ 2]   96 	ldw	x, (0x01, sp)
      000047                         97 00109$:
      000047 5B 08            [ 2]   98 	addw	sp, #8
      000049 81               [ 4]   99 	ret
                                    100 	.area CODE
                                    101 	.area INITIALIZER
                                    102 	.area CABS (ABS)
