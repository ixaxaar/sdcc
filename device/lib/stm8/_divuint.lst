                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:30 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _divuint
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl __divuint
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; absolute external ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area DABS (ABS)
                                     24 ;--------------------------------------------------------
                                     25 ; global & static initialisations
                                     26 ;--------------------------------------------------------
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area GSINIT
                                     31 ;--------------------------------------------------------
                                     32 ; Home
                                     33 ;--------------------------------------------------------
                                     34 	.area HOME
                                     35 	.area HOME
                                     36 ;--------------------------------------------------------
                                     37 ; code
                                     38 ;--------------------------------------------------------
                                     39 	.area CODE
                                     40 ;	../_divuint.c: 155: _divuint (unsigned int x, unsigned int y)
                                     41 ;	-----------------------------------------
                                     42 ;	 function _divuint
                                     43 ;	-----------------------------------------
      000000                         44 __divuint:
      000000 52 05            [ 2]   45 	sub	sp, #5
                                     46 ;	../_divuint.c: 157: unsigned int reste = 0;
      000002 5F               [ 1]   47 	clrw	x
      000003 1F 02            [ 2]   48 	ldw	(0x02, sp), x
                                     49 ;	../_divuint.c: 161: do
      000005 A6 10            [ 1]   50 	ld	a, #0x10
      000007 6B 01            [ 1]   51 	ld	(0x01, sp), a
      000009                         52 00105$:
                                     53 ;	../_divuint.c: 164: c = MSB_SET(x);
      000009 7B 08            [ 1]   54 	ld	a, (0x08, sp)
      00000B 48               [ 1]   55 	sll	a
      00000C 4F               [ 1]   56 	clr	a
      00000D 49               [ 1]   57 	rlc	a
                                     58 ;	../_divuint.c: 165: x <<= 1;
      00000E 1E 08            [ 2]   59 	ldw	x, (0x08, sp)
      000010 58               [ 2]   60 	sllw	x
      000011 1F 08            [ 2]   61 	ldw	(0x08, sp), x
                                     62 ;	../_divuint.c: 166: reste <<= 1;
      000013 1E 02            [ 2]   63 	ldw	x, (0x02, sp)
      000015 58               [ 2]   64 	sllw	x
      000016 1F 02            [ 2]   65 	ldw	(0x02, sp), x
                                     66 ;	../_divuint.c: 167: if (c)
      000018 4D               [ 1]   67 	tnz	a
      000019 27 0E            [ 1]   68 	jreq	00102$
                                     69 ;	../_divuint.c: 168: reste |= 1;
      00001B 7B 03            [ 1]   70 	ld	a, (0x03, sp)
      00001D AA 01            [ 1]   71 	or	a, #0x01
      00001F 6B 05            [ 1]   72 	ld	(0x05, sp), a
      000021 7B 02            [ 1]   73 	ld	a, (0x02, sp)
      000023 6B 02            [ 1]   74 	ld	(0x02, sp), a
      000025 7B 05            [ 1]   75 	ld	a, (0x05, sp)
      000027 6B 03            [ 1]   76 	ld	(0x03, sp), a
      000029                         77 00102$:
                                     78 ;	../_divuint.c: 170: if (reste >= y)
      000029 1E 02            [ 2]   79 	ldw	x, (0x02, sp)
      00002B 13 0A            [ 2]   80 	cpw	x, (0x0a, sp)
      00002D 25 11            [ 1]   81 	jrc	00106$
                                     82 ;	../_divuint.c: 172: reste -= y;
      00002F 16 02            [ 2]   83 	ldw	y, (0x02, sp)
      000031 72 F2 0A         [ 2]   84 	subw	y, (0x0a, sp)
      000034 17 02            [ 2]   85 	ldw	(0x02, sp), y
                                     86 ;	../_divuint.c: 174: x |= 1;
      000036 7B 09            [ 1]   87 	ld	a, (0x09, sp)
      000038 AA 01            [ 1]   88 	or	a, #0x01
      00003A 97               [ 1]   89 	ld	xl, a
      00003B 7B 08            [ 1]   90 	ld	a, (0x08, sp)
      00003D 95               [ 1]   91 	ld	xh, a
      00003E 1F 08            [ 2]   92 	ldw	(0x08, sp), x
      000040                         93 00106$:
                                     94 ;	../_divuint.c: 177: while (--count);
      000040 0A 01            [ 1]   95 	dec	(0x01, sp)
      000042 0D 01            [ 1]   96 	tnz	(0x01, sp)
      000044 26 C3            [ 1]   97 	jrne	00105$
                                     98 ;	../_divuint.c: 178: return x;
      000046 1E 08            [ 2]   99 	ldw	x, (0x08, sp)
      000048 5B 05            [ 2]  100 	addw	sp, #5
      00004A 81               [ 4]  101 	ret
                                    102 	.area CODE
                                    103 	.area INITIALIZER
                                    104 	.area CABS (ABS)
