                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:52 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _memchr
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _memchr
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; absolute external ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area DABS (ABS)
                                     24 ;--------------------------------------------------------
                                     25 ; global & static initialisations
                                     26 ;--------------------------------------------------------
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area GSINIT
                                     31 ;--------------------------------------------------------
                                     32 ; Home
                                     33 ;--------------------------------------------------------
                                     34 	.area HOME
                                     35 	.area HOME
                                     36 ;--------------------------------------------------------
                                     37 ; code
                                     38 ;--------------------------------------------------------
                                     39 	.area CODE
                                     40 ;	../_memchr.c: 31: void *memchr(const void *s, int c, size_t n)
                                     41 ;	-----------------------------------------
                                     42 ;	 function memchr
                                     43 ;	-----------------------------------------
      000000                         44 _memchr:
      000000 52 04            [ 2]   45 	sub	sp, #4
                                     46 ;	../_memchr.c: 33: unsigned char *p = (unsigned char *)s;
      000002 16 07            [ 2]   47 	ldw	y, (0x07, sp)
                                     48 ;	../_memchr.c: 34: unsigned char *end = p + n;
      000004 93               [ 1]   49 	ldw	x, y
      000005 72 FB 0B         [ 2]   50 	addw	x, (0x0b, sp)
      000008 1F 01            [ 2]   51 	ldw	(0x01, sp), x
                                     52 ;	../_memchr.c: 38: return(0);
      00000A 93               [ 1]   53 	ldw	x, y
      00000B                         54 00105$:
                                     55 ;	../_memchr.c: 35: for(; p != end; p++)
      00000B 13 01            [ 2]   56 	cpw	x, (0x01, sp)
      00000D 27 15            [ 1]   57 	jreq	00103$
                                     58 ;	../_memchr.c: 36: if(*p == c)
      00000F F6               [ 1]   59 	ld	a, (x)
      000010 0F 03            [ 1]   60 	clr	(0x03, sp)
      000012 89               [ 2]   61 	pushw	x
      000013 97               [ 1]   62 	ld	xl, a
      000014 7B 05            [ 1]   63 	ld	a, (0x05, sp)
      000016 95               [ 1]   64 	ld	xh, a
      000017 13 0B            [ 2]   65 	cpw	x, (0x0b, sp)
      000019 85               [ 2]   66 	popw	x
      00001A 26 03            [ 1]   67 	jrne	00106$
                                     68 ;	../_memchr.c: 37: return((void *)p);
      00001C 93               [ 1]   69 	ldw	x, y
      00001D 20 06            [ 2]   70 	jra	00107$
      00001F                         71 00106$:
                                     72 ;	../_memchr.c: 35: for(; p != end; p++)
      00001F 5C               [ 2]   73 	incw	x
      000020 90 93            [ 1]   74 	ldw	y, x
      000022 20 E7            [ 2]   75 	jra	00105$
      000024                         76 00103$:
                                     77 ;	../_memchr.c: 38: return(0);
      000024 5F               [ 1]   78 	clrw	x
      000025                         79 00107$:
      000025 5B 04            [ 2]   80 	addw	sp, #4
      000027 81               [ 4]   81 	ret
                                     82 	.area CODE
                                     83 	.area INITIALIZER
                                     84 	.area CABS (ABS)
