                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:46 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module tanhf
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _fabsf
                                     12 	.globl _expf
                                     13 	.globl _tanhf
                                     14 ;--------------------------------------------------------
                                     15 ; ram data
                                     16 ;--------------------------------------------------------
                                     17 	.area DATA
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area INITIALIZED
                                     22 ;--------------------------------------------------------
                                     23 ; absolute external ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area DABS (ABS)
                                     26 ;--------------------------------------------------------
                                     27 ; global & static initialisations
                                     28 ;--------------------------------------------------------
                                     29 	.area HOME
                                     30 	.area GSINIT
                                     31 	.area GSFINAL
                                     32 	.area GSINIT
                                     33 ;--------------------------------------------------------
                                     34 ; Home
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area HOME
                                     38 ;--------------------------------------------------------
                                     39 ; code
                                     40 ;--------------------------------------------------------
                                     41 	.area CODE
                                     42 ;	../tanhf.c: 50: float tanhf(const float x) _FLOAT_FUNC_REENTRANT
                                     43 ;	-----------------------------------------
                                     44 ;	 function tanhf
                                     45 ;	-----------------------------------------
      000000                         46 _tanhf:
      000000 52 35            [ 2]   47 	sub	sp, #53
                                     48 ;	../tanhf.c: 54: f=fabsf(x);
      000002 1E 3A            [ 2]   49 	ldw	x, (0x3a, sp)
      000004 89               [ 2]   50 	pushw	x
      000005 1E 3A            [ 2]   51 	ldw	x, (0x3a, sp)
      000007 89               [ 2]   52 	pushw	x
      000008 CDr00r00         [ 4]   53 	call	_fabsf
      00000B 5B 04            [ 2]   54 	addw	sp, #4
      00000D 1F 0B            [ 2]   55 	ldw	(0x0b, sp), x
      00000F 17 09            [ 2]   56 	ldw	(0x09, sp), y
                                     57 ;	../tanhf.c: 55: if(f>SBIG) r=1.0;
      000011 4B B0            [ 1]   58 	push	#0xb0
      000013 4B 2C            [ 1]   59 	push	#0x2c
      000015 4B 10            [ 1]   60 	push	#0x10
      000017 4B 41            [ 1]   61 	push	#0x41
      000019 1E 0F            [ 2]   62 	ldw	x, (0x0f, sp)
      00001B 89               [ 2]   63 	pushw	x
      00001C 1E 0F            [ 2]   64 	ldw	x, (0x0f, sp)
      00001E 89               [ 2]   65 	pushw	x
      00001F CDr00r00         [ 4]   66 	call	___fsgt
      000022 5B 08            [ 2]   67 	addw	sp, #8
      000024 6B 35            [ 1]   68 	ld	(0x35, sp), a
      000026 0D 35            [ 1]   69 	tnz	(0x35, sp)
      000028 27 0B            [ 1]   70 	jreq	00108$
      00002A 5F               [ 1]   71 	clrw	x
      00002B 1F 33            [ 2]   72 	ldw	(0x33, sp), x
      00002D AE 3F 80         [ 2]   73 	ldw	x, #0x3f80
      000030 1F 31            [ 2]   74 	ldw	(0x31, sp), x
      000032 CCr01r87         [ 2]   75 	jp	00109$
      000035                         76 00108$:
                                     77 ;	../tanhf.c: 56: else if(f>K1)
      000035 4B 54            [ 1]   78 	push	#0x54
      000037 4B 9F            [ 1]   79 	push	#0x9f
      000039 4B 0C            [ 1]   80 	push	#0x0c
      00003B 4B 3F            [ 1]   81 	push	#0x3f
      00003D 1E 0F            [ 2]   82 	ldw	x, (0x0f, sp)
      00003F 89               [ 2]   83 	pushw	x
      000040 1E 0F            [ 2]   84 	ldw	x, (0x0f, sp)
      000042 89               [ 2]   85 	pushw	x
      000043 CDr00r00         [ 4]   86 	call	___fsgt
      000046 5B 08            [ 2]   87 	addw	sp, #8
      000048 4D               [ 1]   88 	tnz	a
      000049 26 03            [ 1]   89 	jrne	00131$
      00004B CCr00rD9         [ 2]   90 	jp	00105$
      00004E                         91 00131$:
                                     92 ;	../tanhf.c: 58: r=0.5-1.0/(expf(f+f)+1.0);
      00004E 1E 0B            [ 2]   93 	ldw	x, (0x0b, sp)
      000050 89               [ 2]   94 	pushw	x
      000051 1E 0B            [ 2]   95 	ldw	x, (0x0b, sp)
      000053 89               [ 2]   96 	pushw	x
      000054 1E 0F            [ 2]   97 	ldw	x, (0x0f, sp)
      000056 89               [ 2]   98 	pushw	x
      000057 1E 0F            [ 2]   99 	ldw	x, (0x0f, sp)
      000059 89               [ 2]  100 	pushw	x
      00005A CDr00r00         [ 4]  101 	call	___fsadd
      00005D 5B 08            [ 2]  102 	addw	sp, #8
      00005F 1F 2F            [ 2]  103 	ldw	(0x2f, sp), x
      000061 17 2D            [ 2]  104 	ldw	(0x2d, sp), y
      000063 1E 2F            [ 2]  105 	ldw	x, (0x2f, sp)
      000065 89               [ 2]  106 	pushw	x
      000066 1E 2F            [ 2]  107 	ldw	x, (0x2f, sp)
      000068 89               [ 2]  108 	pushw	x
      000069 CDr00r00         [ 4]  109 	call	_expf
      00006C 5B 04            [ 2]  110 	addw	sp, #4
      00006E 1F 2B            [ 2]  111 	ldw	(0x2b, sp), x
      000070 17 29            [ 2]  112 	ldw	(0x29, sp), y
      000072 5F               [ 1]  113 	clrw	x
      000073 89               [ 2]  114 	pushw	x
      000074 4B 80            [ 1]  115 	push	#0x80
      000076 4B 3F            [ 1]  116 	push	#0x3f
      000078 1E 2F            [ 2]  117 	ldw	x, (0x2f, sp)
      00007A 89               [ 2]  118 	pushw	x
      00007B 1E 2F            [ 2]  119 	ldw	x, (0x2f, sp)
      00007D 89               [ 2]  120 	pushw	x
      00007E CDr00r00         [ 4]  121 	call	___fsadd
      000081 5B 08            [ 2]  122 	addw	sp, #8
      000083 1F 27            [ 2]  123 	ldw	(0x27, sp), x
      000085 17 25            [ 2]  124 	ldw	(0x25, sp), y
      000087 1E 27            [ 2]  125 	ldw	x, (0x27, sp)
      000089 89               [ 2]  126 	pushw	x
      00008A 1E 27            [ 2]  127 	ldw	x, (0x27, sp)
      00008C 89               [ 2]  128 	pushw	x
      00008D 5F               [ 1]  129 	clrw	x
      00008E 89               [ 2]  130 	pushw	x
      00008F 4B 80            [ 1]  131 	push	#0x80
      000091 4B 3F            [ 1]  132 	push	#0x3f
      000093 CDr00r00         [ 4]  133 	call	___fsdiv
      000096 5B 08            [ 2]  134 	addw	sp, #8
      000098 1F 23            [ 2]  135 	ldw	(0x23, sp), x
      00009A 17 21            [ 2]  136 	ldw	(0x21, sp), y
      00009C 1E 23            [ 2]  137 	ldw	x, (0x23, sp)
      00009E 89               [ 2]  138 	pushw	x
      00009F 1E 23            [ 2]  139 	ldw	x, (0x23, sp)
      0000A1 89               [ 2]  140 	pushw	x
      0000A2 5F               [ 1]  141 	clrw	x
      0000A3 89               [ 2]  142 	pushw	x
      0000A4 4B 00            [ 1]  143 	push	#0x00
      0000A6 4B 3F            [ 1]  144 	push	#0x3f
      0000A8 CDr00r00         [ 4]  145 	call	___fssub
      0000AB 5B 08            [ 2]  146 	addw	sp, #8
      0000AD 1F 1F            [ 2]  147 	ldw	(0x1f, sp), x
      0000AF 17 1D            [ 2]  148 	ldw	(0x1d, sp), y
      0000B1 16 1F            [ 2]  149 	ldw	y, (0x1f, sp)
      0000B3 17 03            [ 2]  150 	ldw	(0x03, sp), y
      0000B5 16 1D            [ 2]  151 	ldw	y, (0x1d, sp)
      0000B7 17 01            [ 2]  152 	ldw	(0x01, sp), y
                                    153 ;	../tanhf.c: 59: r+=r;
      0000B9 1E 03            [ 2]  154 	ldw	x, (0x03, sp)
      0000BB 89               [ 2]  155 	pushw	x
      0000BC 1E 03            [ 2]  156 	ldw	x, (0x03, sp)
      0000BE 89               [ 2]  157 	pushw	x
      0000BF 1E 07            [ 2]  158 	ldw	x, (0x07, sp)
      0000C1 89               [ 2]  159 	pushw	x
      0000C2 1E 07            [ 2]  160 	ldw	x, (0x07, sp)
      0000C4 89               [ 2]  161 	pushw	x
      0000C5 CDr00r00         [ 4]  162 	call	___fsadd
      0000C8 5B 08            [ 2]  163 	addw	sp, #8
      0000CA 1F 1B            [ 2]  164 	ldw	(0x1b, sp), x
      0000CC 17 19            [ 2]  165 	ldw	(0x19, sp), y
      0000CE 16 1B            [ 2]  166 	ldw	y, (0x1b, sp)
      0000D0 17 33            [ 2]  167 	ldw	(0x33, sp), y
      0000D2 16 19            [ 2]  168 	ldw	y, (0x19, sp)
      0000D4 17 31            [ 2]  169 	ldw	(0x31, sp), y
      0000D6 CCr01r87         [ 2]  170 	jp	00109$
      0000D9                        171 00105$:
                                    172 ;	../tanhf.c: 61: else if(f<EPS) r=f;
      0000D9 5F               [ 1]  173 	clrw	x
      0000DA 89               [ 2]  174 	pushw	x
      0000DB 4B 80            [ 1]  175 	push	#0x80
      0000DD 4B 39            [ 1]  176 	push	#0x39
      0000DF 1E 0F            [ 2]  177 	ldw	x, (0x0f, sp)
      0000E1 89               [ 2]  178 	pushw	x
      0000E2 1E 0F            [ 2]  179 	ldw	x, (0x0f, sp)
      0000E4 89               [ 2]  180 	pushw	x
      0000E5 CDr00r00         [ 4]  181 	call	___fslt
      0000E8 5B 08            [ 2]  182 	addw	sp, #8
      0000EA 4D               [ 1]  183 	tnz	a
      0000EB 27 0B            [ 1]  184 	jreq	00102$
      0000ED 16 0B            [ 2]  185 	ldw	y, (0x0b, sp)
      0000EF 17 33            [ 2]  186 	ldw	(0x33, sp), y
      0000F1 16 09            [ 2]  187 	ldw	y, (0x09, sp)
      0000F3 17 31            [ 2]  188 	ldw	(0x31, sp), y
      0000F5 CCr01r87         [ 2]  189 	jp	00109$
      0000F8                        190 00102$:
                                    191 ;	../tanhf.c: 64: g=f*f;
      0000F8 1E 0B            [ 2]  192 	ldw	x, (0x0b, sp)
      0000FA 89               [ 2]  193 	pushw	x
      0000FB 1E 0B            [ 2]  194 	ldw	x, (0x0b, sp)
      0000FD 89               [ 2]  195 	pushw	x
      0000FE 1E 0F            [ 2]  196 	ldw	x, (0x0f, sp)
      000100 89               [ 2]  197 	pushw	x
      000101 1E 0F            [ 2]  198 	ldw	x, (0x0f, sp)
      000103 89               [ 2]  199 	pushw	x
      000104 CDr00r00         [ 4]  200 	call	___fsmul
      000107 5B 08            [ 2]  201 	addw	sp, #8
      000109 1F 07            [ 2]  202 	ldw	(0x07, sp), x
      00010B 17 05            [ 2]  203 	ldw	(0x05, sp), y
                                    204 ;	../tanhf.c: 65: r=f+f*(P(g)/Q(g));
      00010D 1E 07            [ 2]  205 	ldw	x, (0x07, sp)
      00010F 89               [ 2]  206 	pushw	x
      000110 1E 07            [ 2]  207 	ldw	x, (0x07, sp)
      000112 89               [ 2]  208 	pushw	x
      000113 4B B2            [ 1]  209 	push	#0xb2
      000115 4B 11            [ 1]  210 	push	#0x11
      000117 4B 7B            [ 1]  211 	push	#0x7b
      000119 4B BB            [ 1]  212 	push	#0xbb
      00011B CDr00r00         [ 4]  213 	call	___fsmul
      00011E 5B 08            [ 2]  214 	addw	sp, #8
      000120 4B C6            [ 1]  215 	push	#0xc6
      000122 4B E2            [ 1]  216 	push	#0xe2
      000124 4B 52            [ 1]  217 	push	#0x52
      000126 4B BF            [ 1]  218 	push	#0xbf
      000128 89               [ 2]  219 	pushw	x
      000129 90 89            [ 2]  220 	pushw	y
      00012B CDr00r00         [ 4]  221 	call	___fsadd
      00012E 5B 08            [ 2]  222 	addw	sp, #8
      000130 1F 17            [ 2]  223 	ldw	(0x17, sp), x
      000132 1E 07            [ 2]  224 	ldw	x, (0x07, sp)
      000134 89               [ 2]  225 	pushw	x
      000135 1E 07            [ 2]  226 	ldw	x, (0x07, sp)
      000137 89               [ 2]  227 	pushw	x
      000138 1E 1B            [ 2]  228 	ldw	x, (0x1b, sp)
      00013A 89               [ 2]  229 	pushw	x
      00013B 90 89            [ 2]  230 	pushw	y
      00013D CDr00r00         [ 4]  231 	call	___fsmul
      000140 5B 08            [ 2]  232 	addw	sp, #8
      000142 1F 13            [ 2]  233 	ldw	(0x13, sp), x
      000144 17 11            [ 2]  234 	ldw	(0x11, sp), y
      000146 4B 1A            [ 1]  235 	push	#0x1a
      000148 4B 2A            [ 1]  236 	push	#0x2a
      00014A 4B 1E            [ 1]  237 	push	#0x1e
      00014C 4B 40            [ 1]  238 	push	#0x40
      00014E 1E 0B            [ 2]  239 	ldw	x, (0x0b, sp)
      000150 89               [ 2]  240 	pushw	x
      000151 1E 0B            [ 2]  241 	ldw	x, (0x0b, sp)
      000153 89               [ 2]  242 	pushw	x
      000154 CDr00r00         [ 4]  243 	call	___fsadd
      000157 5B 08            [ 2]  244 	addw	sp, #8
      000159 89               [ 2]  245 	pushw	x
      00015A 90 89            [ 2]  246 	pushw	y
      00015C 1E 17            [ 2]  247 	ldw	x, (0x17, sp)
      00015E 89               [ 2]  248 	pushw	x
      00015F 1E 17            [ 2]  249 	ldw	x, (0x17, sp)
      000161 89               [ 2]  250 	pushw	x
      000162 CDr00r00         [ 4]  251 	call	___fsdiv
      000165 5B 08            [ 2]  252 	addw	sp, #8
      000167 89               [ 2]  253 	pushw	x
      000168 90 89            [ 2]  254 	pushw	y
      00016A 1E 0F            [ 2]  255 	ldw	x, (0x0f, sp)
      00016C 89               [ 2]  256 	pushw	x
      00016D 1E 0F            [ 2]  257 	ldw	x, (0x0f, sp)
      00016F 89               [ 2]  258 	pushw	x
      000170 CDr00r00         [ 4]  259 	call	___fsmul
      000173 5B 08            [ 2]  260 	addw	sp, #8
      000175 89               [ 2]  261 	pushw	x
      000176 90 89            [ 2]  262 	pushw	y
      000178 1E 0F            [ 2]  263 	ldw	x, (0x0f, sp)
      00017A 89               [ 2]  264 	pushw	x
      00017B 1E 0F            [ 2]  265 	ldw	x, (0x0f, sp)
      00017D 89               [ 2]  266 	pushw	x
      00017E CDr00r00         [ 4]  267 	call	___fsadd
      000181 5B 08            [ 2]  268 	addw	sp, #8
      000183 1F 33            [ 2]  269 	ldw	(0x33, sp), x
      000185 17 31            [ 2]  270 	ldw	(0x31, sp), y
      000187                        271 00109$:
                                    272 ;	../tanhf.c: 67: if(x<0.0) r=-r;
      000187 5F               [ 1]  273 	clrw	x
      000188 89               [ 2]  274 	pushw	x
      000189 5F               [ 1]  275 	clrw	x
      00018A 89               [ 2]  276 	pushw	x
      00018B 1E 3E            [ 2]  277 	ldw	x, (0x3e, sp)
      00018D 89               [ 2]  278 	pushw	x
      00018E 1E 3E            [ 2]  279 	ldw	x, (0x3e, sp)
      000190 89               [ 2]  280 	pushw	x
      000191 CDr00r00         [ 4]  281 	call	___fslt
      000194 5B 08            [ 2]  282 	addw	sp, #8
      000196 4D               [ 1]  283 	tnz	a
      000197 27 14            [ 1]  284 	jreq	00111$
      000199 16 32            [ 2]  285 	ldw	y, (0x32, sp)
      00019B 88               [ 1]  286 	push	a
      00019C 7B 35            [ 1]  287 	ld	a, (0x35, sp)
      00019E 6B 11            [ 1]  288 	ld	(0x11, sp), a
      0001A0 84               [ 1]  289 	pop	a
      0001A1 7B 31            [ 1]  290 	ld	a, (0x31, sp)
      0001A3 A8 80            [ 1]  291 	xor	a, #0x80
      0001A5 17 32            [ 2]  292 	ldw	(0x32, sp), y
      0001A7 6B 31            [ 1]  293 	ld	(0x31, sp), a
      0001A9 7B 10            [ 1]  294 	ld	a, (0x10, sp)
      0001AB 6B 34            [ 1]  295 	ld	(0x34, sp), a
      0001AD                        296 00111$:
                                    297 ;	../tanhf.c: 68: return r;
      0001AD 1E 33            [ 2]  298 	ldw	x, (0x33, sp)
      0001AF 16 31            [ 2]  299 	ldw	y, (0x31, sp)
      0001B1 5B 35            [ 2]  300 	addw	sp, #53
      0001B3 81               [ 4]  301 	ret
                                    302 	.area CODE
                                    303 	.area INITIALIZER
                                    304 	.area CABS (ABS)
