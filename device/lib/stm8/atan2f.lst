                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:45 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module atan2f
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _fabsf
                                     12 	.globl _atanf
                                     13 	.globl _atan2f
                                     14 ;--------------------------------------------------------
                                     15 ; ram data
                                     16 ;--------------------------------------------------------
                                     17 	.area DATA
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area INITIALIZED
                                     22 ;--------------------------------------------------------
                                     23 ; absolute external ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area DABS (ABS)
                                     26 ;--------------------------------------------------------
                                     27 ; global & static initialisations
                                     28 ;--------------------------------------------------------
                                     29 	.area HOME
                                     30 	.area GSINIT
                                     31 	.area GSFINAL
                                     32 	.area GSINIT
                                     33 ;--------------------------------------------------------
                                     34 ; Home
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area HOME
                                     38 ;--------------------------------------------------------
                                     39 ; code
                                     40 ;--------------------------------------------------------
                                     41 	.area CODE
                                     42 ;	../atan2f.c: 34: float atan2f(const float x, const float y)
                                     43 ;	-----------------------------------------
                                     44 ;	 function atan2f
                                     45 ;	-----------------------------------------
      000000                         46 _atan2f:
      000000 52 1E            [ 2]   47 	sub	sp, #30
                                     48 ;	../atan2f.c: 38: if ((x==0.0) && (y==0.0))
      000002 1E 23            [ 2]   49 	ldw	x, (0x23, sp)
      000004 26 1A            [ 1]   50 	jrne	00102$
      000006 1E 21            [ 2]   51 	ldw	x, (0x21, sp)
      000008 26 16            [ 1]   52 	jrne	00102$
      00000A 1E 27            [ 2]   53 	ldw	x, (0x27, sp)
      00000C 26 12            [ 1]   54 	jrne	00102$
      00000E 1E 25            [ 2]   55 	ldw	x, (0x25, sp)
      000010 26 0E            [ 1]   56 	jrne	00102$
                                     57 ;	../atan2f.c: 40: errno=EDOM;
      000012 35 21u00u01      [ 1]   58 	mov	_errno+1, #0x21
      000016 72 5Fu00u00      [ 1]   59 	clr	_errno+0
                                     60 ;	../atan2f.c: 41: return 0.0;
      00001A 5F               [ 1]   61 	clrw	x
      00001B 90 5F            [ 1]   62 	clrw	y
      00001D CCr01r2C         [ 2]   63 	jp	00109$
      000020                         64 00102$:
                                     65 ;	../atan2f.c: 44: if(fabsf(y)>=fabsf(x))
      000020 1E 27            [ 2]   66 	ldw	x, (0x27, sp)
      000022 89               [ 2]   67 	pushw	x
      000023 1E 27            [ 2]   68 	ldw	x, (0x27, sp)
      000025 89               [ 2]   69 	pushw	x
      000026 CDr00r00         [ 4]   70 	call	_fabsf
      000029 5B 04            [ 2]   71 	addw	sp, #4
      00002B 1F 15            [ 2]   72 	ldw	(0x15, sp), x
      00002D 17 13            [ 2]   73 	ldw	(0x13, sp), y
      00002F 1E 23            [ 2]   74 	ldw	x, (0x23, sp)
      000031 89               [ 2]   75 	pushw	x
      000032 1E 23            [ 2]   76 	ldw	x, (0x23, sp)
      000034 89               [ 2]   77 	pushw	x
      000035 CDr00r00         [ 4]   78 	call	_fabsf
      000038 5B 04            [ 2]   79 	addw	sp, #4
      00003A 1F 11            [ 2]   80 	ldw	(0x11, sp), x
      00003C 17 0F            [ 2]   81 	ldw	(0x0f, sp), y
                                     82 ;	../atan2f.c: 47: if(y<0.0) r+=(x>=0?PI:-PI);
      00003E 5F               [ 1]   83 	clrw	x
      00003F 89               [ 2]   84 	pushw	x
      000040 5F               [ 1]   85 	clrw	x
      000041 89               [ 2]   86 	pushw	x
      000042 1E 27            [ 2]   87 	ldw	x, (0x27, sp)
      000044 89               [ 2]   88 	pushw	x
      000045 1E 27            [ 2]   89 	ldw	x, (0x27, sp)
      000047 89               [ 2]   90 	pushw	x
                                     91 ;	../atan2f.c: 44: if(fabsf(y)>=fabsf(x))
      000048 CDr00r00         [ 4]   92 	call	___fslt
      00004B 5B 08            [ 2]   93 	addw	sp, #8
      00004D 6B 06            [ 1]   94 	ld	(0x06, sp), a
      00004F 1E 11            [ 2]   95 	ldw	x, (0x11, sp)
      000051 89               [ 2]   96 	pushw	x
      000052 1E 11            [ 2]   97 	ldw	x, (0x11, sp)
      000054 89               [ 2]   98 	pushw	x
      000055 1E 19            [ 2]   99 	ldw	x, (0x19, sp)
      000057 89               [ 2]  100 	pushw	x
      000058 1E 19            [ 2]  101 	ldw	x, (0x19, sp)
      00005A 89               [ 2]  102 	pushw	x
      00005B CDr00r00         [ 4]  103 	call	___fslt
      00005E 5B 08            [ 2]  104 	addw	sp, #8
      000060 6B 05            [ 1]  105 	ld	(0x05, sp), a
      000062 0D 05            [ 1]  106 	tnz	(0x05, sp)
      000064 27 03            [ 1]  107 	jreq	00143$
      000066 CCr00rD1         [ 2]  108 	jp	00107$
      000069                        109 00143$:
                                    110 ;	../atan2f.c: 46: r=atanf(x/y);
      000069 1E 27            [ 2]  111 	ldw	x, (0x27, sp)
      00006B 89               [ 2]  112 	pushw	x
      00006C 1E 27            [ 2]  113 	ldw	x, (0x27, sp)
      00006E 89               [ 2]  114 	pushw	x
      00006F 1E 27            [ 2]  115 	ldw	x, (0x27, sp)
      000071 89               [ 2]  116 	pushw	x
      000072 1E 27            [ 2]  117 	ldw	x, (0x27, sp)
      000074 89               [ 2]  118 	pushw	x
      000075 CDr00r00         [ 4]  119 	call	___fsdiv
      000078 5B 08            [ 2]  120 	addw	sp, #8
      00007A 89               [ 2]  121 	pushw	x
      00007B 90 89            [ 2]  122 	pushw	y
      00007D CDr00r00         [ 4]  123 	call	_atanf
      000080 5B 04            [ 2]  124 	addw	sp, #4
      000082 1F 1D            [ 2]  125 	ldw	(0x1d, sp), x
      000084 17 1B            [ 2]  126 	ldw	(0x1b, sp), y
                                    127 ;	../atan2f.c: 47: if(y<0.0) r+=(x>=0?PI:-PI);
      000086 5F               [ 1]  128 	clrw	x
      000087 89               [ 2]  129 	pushw	x
      000088 5F               [ 1]  130 	clrw	x
      000089 89               [ 2]  131 	pushw	x
      00008A 1E 2B            [ 2]  132 	ldw	x, (0x2b, sp)
      00008C 89               [ 2]  133 	pushw	x
      00008D 1E 2B            [ 2]  134 	ldw	x, (0x2b, sp)
      00008F 89               [ 2]  135 	pushw	x
      000090 CDr00r00         [ 4]  136 	call	___fslt
      000093 5B 08            [ 2]  137 	addw	sp, #8
      000095 4D               [ 1]  138 	tnz	a
      000096 26 03            [ 1]  139 	jrne	00144$
      000098 CCr01r28         [ 2]  140 	jp	00108$
      00009B                        141 00144$:
      00009B 7B 06            [ 1]  142 	ld	a, (0x06, sp)
      00009D A0 01            [ 1]  143 	sub	a, #0x01
      00009F 4F               [ 1]  144 	clr	a
      0000A0 49               [ 1]  145 	rlc	a
      0000A1 4D               [ 1]  146 	tnz	a
      0000A2 27 0C            [ 1]  147 	jreq	00111$
      0000A4 AE 0F DB         [ 2]  148 	ldw	x, #0x0fdb
      0000A7 1F 19            [ 2]  149 	ldw	(0x19, sp), x
      0000A9 AE 40 49         [ 2]  150 	ldw	x, #0x4049
      0000AC 1F 17            [ 2]  151 	ldw	(0x17, sp), x
      0000AE 20 0A            [ 2]  152 	jra	00112$
      0000B0                        153 00111$:
      0000B0 AE 0F DB         [ 2]  154 	ldw	x, #0x0fdb
      0000B3 1F 19            [ 2]  155 	ldw	(0x19, sp), x
      0000B5 AE C0 49         [ 2]  156 	ldw	x, #0xc049
      0000B8 1F 17            [ 2]  157 	ldw	(0x17, sp), x
      0000BA                        158 00112$:
      0000BA 1E 19            [ 2]  159 	ldw	x, (0x19, sp)
      0000BC 89               [ 2]  160 	pushw	x
      0000BD 1E 19            [ 2]  161 	ldw	x, (0x19, sp)
      0000BF 89               [ 2]  162 	pushw	x
      0000C0 1E 21            [ 2]  163 	ldw	x, (0x21, sp)
      0000C2 89               [ 2]  164 	pushw	x
      0000C3 1E 21            [ 2]  165 	ldw	x, (0x21, sp)
      0000C5 89               [ 2]  166 	pushw	x
      0000C6 CDr00r00         [ 4]  167 	call	___fsadd
      0000C9 5B 08            [ 2]  168 	addw	sp, #8
      0000CB 1F 1D            [ 2]  169 	ldw	(0x1d, sp), x
      0000CD 17 1B            [ 2]  170 	ldw	(0x1b, sp), y
      0000CF 20 57            [ 2]  171 	jra	00108$
      0000D1                        172 00107$:
                                    173 ;	../atan2f.c: 51: r=-atanf(y/x);
      0000D1 1E 23            [ 2]  174 	ldw	x, (0x23, sp)
      0000D3 89               [ 2]  175 	pushw	x
      0000D4 1E 23            [ 2]  176 	ldw	x, (0x23, sp)
      0000D6 89               [ 2]  177 	pushw	x
      0000D7 1E 2B            [ 2]  178 	ldw	x, (0x2b, sp)
      0000D9 89               [ 2]  179 	pushw	x
      0000DA 1E 2B            [ 2]  180 	ldw	x, (0x2b, sp)
      0000DC 89               [ 2]  181 	pushw	x
      0000DD CDr00r00         [ 4]  182 	call	___fsdiv
      0000E0 5B 08            [ 2]  183 	addw	sp, #8
      0000E2 89               [ 2]  184 	pushw	x
      0000E3 90 89            [ 2]  185 	pushw	y
      0000E5 CDr00r00         [ 4]  186 	call	_atanf
      0000E8 5B 04            [ 2]  187 	addw	sp, #4
      0000EA 51               [ 1]  188 	exgw	x, y
      0000EB 88               [ 1]  189 	push	a
      0000EC 9E               [ 1]  190 	ld	a, xh
      0000ED A8 80            [ 1]  191 	xor	a, #0x80
      0000EF 95               [ 1]  192 	ld	xh, a
      0000F0 84               [ 1]  193 	pop	a
      0000F1 17 03            [ 2]  194 	ldw	(0x03, sp), y
      0000F3 1F 01            [ 2]  195 	ldw	(0x01, sp), x
                                    196 ;	../atan2f.c: 52: r+=(x<0.0?-HALF_PI:HALF_PI);
      0000F5 0D 06            [ 1]  197 	tnz	(0x06, sp)
      0000F7 27 0C            [ 1]  198 	jreq	00113$
      0000F9 AE 0F DB         [ 2]  199 	ldw	x, #0x0fdb
      0000FC 1F 0D            [ 2]  200 	ldw	(0x0d, sp), x
      0000FE AE BF C9         [ 2]  201 	ldw	x, #0xbfc9
      000101 1F 0B            [ 2]  202 	ldw	(0x0b, sp), x
      000103 20 0A            [ 2]  203 	jra	00114$
      000105                        204 00113$:
      000105 AE 0F DB         [ 2]  205 	ldw	x, #0x0fdb
      000108 1F 0D            [ 2]  206 	ldw	(0x0d, sp), x
      00010A AE 3F C9         [ 2]  207 	ldw	x, #0x3fc9
      00010D 1F 0B            [ 2]  208 	ldw	(0x0b, sp), x
      00010F                        209 00114$:
      00010F 1E 0D            [ 2]  210 	ldw	x, (0x0d, sp)
      000111 89               [ 2]  211 	pushw	x
      000112 1E 0D            [ 2]  212 	ldw	x, (0x0d, sp)
      000114 89               [ 2]  213 	pushw	x
      000115 1E 07            [ 2]  214 	ldw	x, (0x07, sp)
      000117 89               [ 2]  215 	pushw	x
      000118 1E 07            [ 2]  216 	ldw	x, (0x07, sp)
      00011A 89               [ 2]  217 	pushw	x
      00011B CDr00r00         [ 4]  218 	call	___fsadd
      00011E 5B 08            [ 2]  219 	addw	sp, #8
      000120 1F 09            [ 2]  220 	ldw	(0x09, sp), x
      000122 17 1B            [ 2]  221 	ldw	(0x1b, sp), y
      000124 16 09            [ 2]  222 	ldw	y, (0x09, sp)
      000126 17 1D            [ 2]  223 	ldw	(0x1d, sp), y
      000128                        224 00108$:
                                    225 ;	../atan2f.c: 54: return r;
      000128 1E 1D            [ 2]  226 	ldw	x, (0x1d, sp)
      00012A 16 1B            [ 2]  227 	ldw	y, (0x1b, sp)
      00012C                        228 00109$:
      00012C 5B 1E            [ 2]  229 	addw	sp, #30
      00012E 81               [ 4]  230 	ret
                                    231 	.area CODE
                                    232 	.area INITIALIZER
                                    233 	.area CABS (ABS)
