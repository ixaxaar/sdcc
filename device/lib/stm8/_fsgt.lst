                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8898 (Nov 27 2013) (Linux)
                                      4 ; This file was generated Wed Nov 27 12:28:37 2013
                                      5 ;--------------------------------------------------------
                                      6 	.module _fsgt
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl ___fsgt
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; absolute external ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area DABS (ABS)
                                     24 ;--------------------------------------------------------
                                     25 ; global & static initialisations
                                     26 ;--------------------------------------------------------
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area GSINIT
                                     31 ;--------------------------------------------------------
                                     32 ; Home
                                     33 ;--------------------------------------------------------
                                     34 	.area HOME
                                     35 	.area HOME
                                     36 ;--------------------------------------------------------
                                     37 ; code
                                     38 ;--------------------------------------------------------
                                     39 	.area CODE
                                     40 ;	../_fsgt.c: 108: char __fsgt (float a1, float a2)
                                     41 ;	-----------------------------------------
                                     42 ;	 function __fsgt
                                     43 ;	-----------------------------------------
      000000                         44 ___fsgt:
      000000 52 38            [ 2]   45 	sub	sp, #56
                                     46 ;	../_fsgt.c: 112: fl1.f = a1;
      000002 96               [ 1]   47 	ldw	x, sp
      000003 1C 00 05         [ 2]   48 	addw	x, #5
      000006 16 3D            [ 2]   49 	ldw	y, (0x3d, sp)
      000008 EF 02            [ 2]   50 	ldw	(0x2, x), y
      00000A 16 3B            [ 2]   51 	ldw	y, (0x3b, sp)
      00000C FF               [ 2]   52 	ldw	(x), y
                                     53 ;	../_fsgt.c: 113: fl2.f = a2;
      00000D 96               [ 1]   54 	ldw	x, sp
      00000E 5C               [ 2]   55 	incw	x
      00000F 16 41            [ 2]   56 	ldw	y, (0x41, sp)
      000011 EF 02            [ 2]   57 	ldw	(0x2, x), y
      000013 16 3F            [ 2]   58 	ldw	y, (0x3f, sp)
      000015 FF               [ 2]   59 	ldw	(x), y
                                     60 ;	../_fsgt.c: 115: if (((fl1.l | fl2.l) & 0x7FFFFFFF) == 0)
      000016 96               [ 1]   61 	ldw	x, sp
      000017 1C 00 05         [ 2]   62 	addw	x, #5
      00001A E6 03            [ 1]   63 	ld	a, (0x3, x)
      00001C 6B 38            [ 1]   64 	ld	(0x38, sp), a
      00001E E6 02            [ 1]   65 	ld	a, (0x2, x)
      000020 6B 37            [ 1]   66 	ld	(0x37, sp), a
      000022 FE               [ 2]   67 	ldw	x, (x)
      000023 1F 35            [ 2]   68 	ldw	(0x35, sp), x
      000025 96               [ 1]   69 	ldw	x, sp
      000026 5C               [ 2]   70 	incw	x
      000027 E6 03            [ 1]   71 	ld	a, (0x3, x)
      000029 88               [ 1]   72 	push	a
      00002A E6 02            [ 1]   73 	ld	a, (0x2, x)
      00002C 6B 34            [ 1]   74 	ld	(0x34, sp), a
      00002E FE               [ 2]   75 	ldw	x, (x)
      00002F 84               [ 1]   76 	pop	a
      000030 1A 38            [ 1]   77 	or	a, (0x38, sp)
      000032 6B 30            [ 1]   78 	ld	(0x30, sp), a
      000034 7B 33            [ 1]   79 	ld	a, (0x33, sp)
      000036 1A 37            [ 1]   80 	or	a, (0x37, sp)
      000038 6B 2F            [ 1]   81 	ld	(0x2f, sp), a
      00003A 9F               [ 1]   82 	ld	a, xl
      00003B 1A 36            [ 1]   83 	or	a, (0x36, sp)
      00003D 97               [ 1]   84 	ld	xl, a
      00003E 9E               [ 1]   85 	ld	a, xh
      00003F 1A 35            [ 1]   86 	or	a, (0x35, sp)
      000041 A4 7F            [ 1]   87 	and	a, #0x7f
      000043 6B 29            [ 1]   88 	ld	(0x29, sp), a
      000045 7B 30            [ 1]   89 	ld	a, (0x30, sp)
      000047 6B 2C            [ 1]   90 	ld	(0x2c, sp), a
      000049 7B 2F            [ 1]   91 	ld	a, (0x2f, sp)
      00004B 6B 2B            [ 1]   92 	ld	(0x2b, sp), a
      00004D 9F               [ 1]   93 	ld	a, xl
      00004E 6B 2A            [ 1]   94 	ld	(0x2a, sp), a
      000050 1E 2B            [ 2]   95 	ldw	x, (0x2b, sp)
      000052 26 08            [ 1]   96 	jrne	00102$
      000054 1E 29            [ 2]   97 	ldw	x, (0x29, sp)
      000056 26 04            [ 1]   98 	jrne	00102$
                                     99 ;	../_fsgt.c: 116: return (0);
      000058 4F               [ 1]  100 	clr	a
      000059 CCr01r04         [ 2]  101 	jp	00110$
      00005C                        102 00102$:
                                    103 ;	../_fsgt.c: 118: if (fl1.l<0 && fl2.l<0) {
      00005C 96               [ 1]  104 	ldw	x, sp
      00005D 1C 00 05         [ 2]  105 	addw	x, #5
      000060 1F 27            [ 2]  106 	ldw	(0x27, sp), x
      000062 1E 27            [ 2]  107 	ldw	x, (0x27, sp)
      000064 E6 03            [ 1]  108 	ld	a, (0x3, x)
      000066 6B 26            [ 1]  109 	ld	(0x26, sp), a
      000068 E6 02            [ 1]  110 	ld	a, (0x2, x)
      00006A 6B 25            [ 1]  111 	ld	(0x25, sp), a
      00006C FE               [ 2]  112 	ldw	x, (x)
      00006D 1F 23            [ 2]  113 	ldw	(0x23, sp), x
      00006F 1E 25            [ 2]  114 	ldw	x, (0x25, sp)
      000071 A3 00 00         [ 2]  115 	cpw	x, #0x0000
      000074 7B 24            [ 1]  116 	ld	a, (0x24, sp)
      000076 A2 00            [ 1]  117 	sbc	a, #0x00
      000078 7B 23            [ 1]  118 	ld	a, (0x23, sp)
      00007A A2 00            [ 1]  119 	sbc	a, #0x00
      00007C 2E 59            [ 1]  120 	jrsge	00106$
      00007E 96               [ 1]  121 	ldw	x, sp
      00007F 5C               [ 2]  122 	incw	x
      000080 1F 21            [ 2]  123 	ldw	(0x21, sp), x
      000082 1E 21            [ 2]  124 	ldw	x, (0x21, sp)
      000084 E6 03            [ 1]  125 	ld	a, (0x3, x)
      000086 6B 20            [ 1]  126 	ld	(0x20, sp), a
      000088 E6 02            [ 1]  127 	ld	a, (0x2, x)
      00008A 6B 1F            [ 1]  128 	ld	(0x1f, sp), a
      00008C FE               [ 2]  129 	ldw	x, (x)
      00008D 1F 1D            [ 2]  130 	ldw	(0x1d, sp), x
      00008F 1E 1F            [ 2]  131 	ldw	x, (0x1f, sp)
      000091 A3 00 00         [ 2]  132 	cpw	x, #0x0000
      000094 7B 1E            [ 1]  133 	ld	a, (0x1e, sp)
      000096 A2 00            [ 1]  134 	sbc	a, #0x00
      000098 7B 1D            [ 1]  135 	ld	a, (0x1d, sp)
      00009A A2 00            [ 1]  136 	sbc	a, #0x00
      00009C 2E 39            [ 1]  137 	jrsge	00106$
                                    138 ;	../_fsgt.c: 119: if (fl2.l > fl1.l)
      00009E 96               [ 1]  139 	ldw	x, sp
      00009F 5C               [ 2]  140 	incw	x
      0000A0 1F 1B            [ 2]  141 	ldw	(0x1b, sp), x
      0000A2 1E 1B            [ 2]  142 	ldw	x, (0x1b, sp)
      0000A4 E6 03            [ 1]  143 	ld	a, (0x3, x)
      0000A6 6B 1A            [ 1]  144 	ld	(0x1a, sp), a
      0000A8 E6 02            [ 1]  145 	ld	a, (0x2, x)
      0000AA 6B 19            [ 1]  146 	ld	(0x19, sp), a
      0000AC FE               [ 2]  147 	ldw	x, (x)
      0000AD 1F 17            [ 2]  148 	ldw	(0x17, sp), x
      0000AF 96               [ 1]  149 	ldw	x, sp
      0000B0 1C 00 05         [ 2]  150 	addw	x, #5
      0000B3 1F 15            [ 2]  151 	ldw	(0x15, sp), x
      0000B5 1E 15            [ 2]  152 	ldw	x, (0x15, sp)
      0000B7 E6 03            [ 1]  153 	ld	a, (0x3, x)
      0000B9 6B 14            [ 1]  154 	ld	(0x14, sp), a
      0000BB E6 02            [ 1]  155 	ld	a, (0x2, x)
      0000BD 6B 13            [ 1]  156 	ld	(0x13, sp), a
      0000BF FE               [ 2]  157 	ldw	x, (x)
      0000C0 1F 11            [ 2]  158 	ldw	(0x11, sp), x
      0000C2 1E 13            [ 2]  159 	ldw	x, (0x13, sp)
      0000C4 13 19            [ 2]  160 	cpw	x, (0x19, sp)
      0000C6 7B 12            [ 1]  161 	ld	a, (0x12, sp)
      0000C8 12 18            [ 1]  162 	sbc	a, (0x18, sp)
      0000CA 7B 11            [ 1]  163 	ld	a, (0x11, sp)
      0000CC 12 17            [ 1]  164 	sbc	a, (0x17, sp)
      0000CE 2E 04            [ 1]  165 	jrsge	00104$
                                    166 ;	../_fsgt.c: 120: return (1);
      0000D0 A6 01            [ 1]  167 	ld	a, #0x01
      0000D2 20 30            [ 2]  168 	jra	00110$
      0000D4                        169 00104$:
                                    170 ;	../_fsgt.c: 121: return (0);
      0000D4 4F               [ 1]  171 	clr	a
      0000D5 20 2D            [ 2]  172 	jra	00110$
      0000D7                        173 00106$:
                                    174 ;	../_fsgt.c: 124: if (fl1.l > fl2.l)
      0000D7 96               [ 1]  175 	ldw	x, sp
      0000D8 1C 00 05         [ 2]  176 	addw	x, #5
      0000DB E6 03            [ 1]  177 	ld	a, (0x3, x)
      0000DD 6B 10            [ 1]  178 	ld	(0x10, sp), a
      0000DF E6 02            [ 1]  179 	ld	a, (0x2, x)
      0000E1 6B 0F            [ 1]  180 	ld	(0x0f, sp), a
      0000E3 FE               [ 2]  181 	ldw	x, (x)
      0000E4 1F 0D            [ 2]  182 	ldw	(0x0d, sp), x
      0000E6 96               [ 1]  183 	ldw	x, sp
      0000E7 5C               [ 2]  184 	incw	x
      0000E8 E6 03            [ 1]  185 	ld	a, (0x3, x)
      0000EA 6B 0C            [ 1]  186 	ld	(0x0c, sp), a
      0000EC E6 02            [ 1]  187 	ld	a, (0x2, x)
      0000EE FE               [ 2]  188 	ldw	x, (x)
      0000EF 88               [ 1]  189 	push	a
      0000F0 7B 0D            [ 1]  190 	ld	a, (0x0d, sp)
      0000F2 11 11            [ 1]  191 	cp	a, (0x11, sp)
      0000F4 84               [ 1]  192 	pop	a
      0000F5 12 0F            [ 1]  193 	sbc	a, (0x0f, sp)
      0000F7 9F               [ 1]  194 	ld	a, xl
      0000F8 12 0E            [ 1]  195 	sbc	a, (0x0e, sp)
      0000FA 9E               [ 1]  196 	ld	a, xh
      0000FB 12 0D            [ 1]  197 	sbc	a, (0x0d, sp)
      0000FD 2E 04            [ 1]  198 	jrsge	00109$
                                    199 ;	../_fsgt.c: 125: return (1);
      0000FF A6 01            [ 1]  200 	ld	a, #0x01
      000101 20 01            [ 2]  201 	jra	00110$
      000103                        202 00109$:
                                    203 ;	../_fsgt.c: 126: return (0);
      000103 4F               [ 1]  204 	clr	a
      000104                        205 00110$:
      000104 5B 38            [ 2]  206 	addw	sp, #56
      000106 81               [ 4]  207 	ret
                                    208 	.area CODE
                                    209 	.area INITIALIZER
                                    210 	.area CABS (ABS)
